<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.12.4 on win32)" generated="20240910 18:13:20.639" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="C:\RobotFramework\sap_testing\Tests">
<kw name="Setup highest level suite" type="SETUP">
<kw name="Set Variable" library="BuiltIn">
<var>${d.test_server}</var>
<arg>${test_server}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240910 18:13:22.003" level="INFO">${d.test_server} = Dev</msg>
<status status="PASS" starttime="20240910 18:13:22.003" endtime="20240910 18:13:22.003"/>
</kw>
<kw name="Reset screenshot count variable" library="Support">
<kw name="Set Variable" library="BuiltIn">
<var>${screenshotCount}</var>
<arg>${PABOTQUEUEINDEX}_1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240910 18:13:22.008" level="INFO">${screenshotCount} = 0_1</msg>
<status status="PASS" starttime="20240910 18:13:22.008" endtime="20240910 18:13:22.008"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${screenshotCount}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240910 18:13:22.008" level="INFO">${screenshotCount} = 0_1</msg>
<status status="PASS" starttime="20240910 18:13:22.008" endtime="20240910 18:13:22.008"/>
</kw>
<kw name="Set up screenshot directory" library="Support">
<kw name="Create Directory" library="OperatingSystem">
<arg>${OUTPUTDIR}${/}${wvar('screenshot_dir')}</arg>
<doc>Creates the specified directory.</doc>
<msg timestamp="20240910 18:13:22.008" level="INFO">Web.Dev.screenshot_dir: Screenshot</msg>
<msg timestamp="20240910 18:13:22.008" level="INFO" html="true">Created directory '&lt;a href="file://C:\RobotFramework\sap_testing\Output\f29a0985-1375-45a4-9038-1bfee7c9654d\pabot_results\0\Screenshot"&gt;C:\RobotFramework\sap_testing\Output\f29a0985-1375-45a4-9038-1bfee7c9654d\pabot_results\0\Screenshot&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20240910 18:13:22.008" endtime="20240910 18:13:22.008"/>
</kw>
<status status="PASS" starttime="20240910 18:13:22.008" endtime="20240910 18:13:22.008"/>
</kw>
<status status="PASS" starttime="20240910 18:13:22.003" endtime="20240910 18:13:22.008"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${screenshot_taking}</arg>
<arg>${True}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240910 18:13:22.008" level="INFO">${screenshot_taking} = True</msg>
<status status="PASS" starttime="20240910 18:13:22.008" endtime="20240910 18:13:22.008"/>
</kw>
<kw name="Setup linux execution" library="Support">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${web_test_check}</var>
<arg>Variable Should Exist</arg>
<arg>${web_test}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Variable Should Exist" library="BuiltIn">
<arg>${web_test}</arg>
<doc>Fails unless the given variable exists within the current scope.</doc>
<status status="PASS" starttime="20240910 18:13:22.008" endtime="20240910 18:13:22.008"/>
</kw>
<msg timestamp="20240910 18:13:22.008" level="INFO">${web_test_check} = True</msg>
<status status="PASS" starttime="20240910 18:13:22.008" endtime="20240910 18:13:22.008"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${web_test_check}</arg>
<arg>Setup Docker Execution Options</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup Docker Execution Options" library="Support_Web">
<kw name="Setup Suite Metadata" library="Support_Web">
<arg>${browser}</arg>
<kw name="Get Browser Metadata" library="BrowserSupport">
<var>&amp;{browser_information}</var>
<arg>browser=${browser}</arg>
<doc>Fetches browser metadata information
:param browser: Name of the browser for which information is fetched
:param reload: Re-read the metadata based on the browser
:return: Browser metadata information, dict of format
            {"browser_version": browser version value,
             "driver_version": driver version value}</doc>
<msg timestamp="20240910 18:13:26.074" level="INFO">&amp;{browser_information} = { browser_version=128.0.6613.120 | driver_version=128.0.6613.84  }</msg>
<status status="PASS" starttime="20240910 18:13:22.008" endtime="20240910 18:13:26.074"/>
</kw>
<kw name="Set Suite Metadata" library="BuiltIn">
<arg>test_browser_name</arg>
<arg>${browser}</arg>
<doc>Sets metadata for the current test suite.</doc>
<msg timestamp="20240910 18:13:26.074" level="INFO">Set suite metadata 'test_browser_name' to value 'chrome'.</msg>
<status status="PASS" starttime="20240910 18:13:26.074" endtime="20240910 18:13:26.074"/>
</kw>
<kw name="Set Suite Metadata" library="BuiltIn">
<arg>test_browser_version</arg>
<arg>${browser_information.browser_version}</arg>
<doc>Sets metadata for the current test suite.</doc>
<msg timestamp="20240910 18:13:26.074" level="INFO">Set suite metadata 'test_browser_version' to value '128.0.6613.120'.</msg>
<status status="PASS" starttime="20240910 18:13:26.074" endtime="20240910 18:13:26.074"/>
</kw>
<kw name="Set Suite Metadata" library="BuiltIn">
<arg>test_driver_version</arg>
<arg>${browser_information.driver_version}</arg>
<doc>Sets metadata for the current test suite.</doc>
<msg timestamp="20240910 18:13:26.074" level="INFO">Set suite metadata 'test_driver_version' to value '128.0.6613.84 '.</msg>
<status status="PASS" starttime="20240910 18:13:26.074" endtime="20240910 18:13:26.074"/>
</kw>
<status status="PASS" starttime="20240910 18:13:22.008" endtime="20240910 18:13:26.074"/>
</kw>
<kw name="Setup Global Docker Execution Options" library="Support_Web">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${global_browser_options}</arg>
<arg>None</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240910 18:13:26.074" level="INFO">${global_browser_options} = None</msg>
<status status="PASS" starttime="20240910 18:13:26.074" endtime="20240910 18:13:26.074"/>
</kw>
<kw name="Get Environment Variable" library="OperatingSystem">
<var>${docker_check}</var>
<arg>EXECUTION_ENVIRONMENT</arg>
<arg>not_found</arg>
<doc>Returns the value of an environment variable with the given name.</doc>
<msg timestamp="20240910 18:13:26.074" level="INFO">${docker_check} = not_found</msg>
<status status="PASS" starttime="20240910 18:13:26.074" endtime="20240910 18:13:26.074"/>
</kw>
<kw name="Run Keyword And Return If" library="BuiltIn">
<arg>"${docker_check}"!="docker"</arg>
<arg>Log</arg>
<arg>Not executing on Docker</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Log" library="BuiltIn">
<arg>Not executing on Docker</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:13:26.083" level="INFO">Not executing on Docker</msg>
<status status="PASS" starttime="20240910 18:13:26.083" endtime="20240910 18:13:26.083"/>
</kw>
<msg timestamp="20240910 18:13:26.083" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:13:26.074" endtime="20240910 18:13:26.083"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{options}</var>
<arg>--headless</arg>
<arg>--no-sandbox</arg>
<arg>--disable-dev-shm-usage</arg>
<doc>Returns a list containing given items.</doc>
<status status="NOT RUN" starttime="20240910 18:13:26.083" endtime="20240910 18:13:26.083"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>@{docker_options}</arg>
<arg>@{options}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20240910 18:13:26.083" endtime="20240910 18:13:26.083"/>
</kw>
<status status="PASS" starttime="20240910 18:13:26.074" endtime="20240910 18:13:26.083"/>
</kw>
<kw name="Create Webdriver for chrome preferences" library="Support_Web">
<kw name="Update Docker Execution Options" library="Support_Web">
<var>${list_prefs}</var>
<arg>${list_prefs}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${docker_check}</var>
<arg>Variable Should Exist</arg>
<arg>${docker_options}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Variable Should Exist" library="BuiltIn">
<arg>${docker_options}</arg>
<doc>Fails unless the given variable exists within the current scope.</doc>
<msg timestamp="20240910 18:13:26.083" level="FAIL">Variable '${docker_options}' does not exist.</msg>
<status status="FAIL" starttime="20240910 18:13:26.083" endtime="20240910 18:13:26.083"/>
</kw>
<msg timestamp="20240910 18:13:26.083" level="INFO">${docker_check} = False</msg>
<status status="PASS" starttime="20240910 18:13:26.083" endtime="20240910 18:13:26.083"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${list_prefs_length}</var>
<arg>${list_prefs}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240910 18:13:26.083" level="INFO">Length is 1</msg>
<msg timestamp="20240910 18:13:26.090" level="INFO">${list_prefs_length} = 1</msg>
<status status="PASS" starttime="20240910 18:13:26.083" endtime="20240910 18:13:26.090"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${list_prefs}</var>
<arg>${docker_check} and ${list_prefs_length}&gt;0 and ${list_prefs}[0] != []</arg>
<arg>Combine Lists</arg>
<arg>${list_prefs}</arg>
<arg>${docker_options}</arg>
<arg>ELSE IF</arg>
<arg>${docker_check}</arg>
<arg>Set Variable</arg>
<arg>${docker_options}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${list_prefs}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${list_prefs}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20240910 18:13:26.090" endtime="20240910 18:13:26.090"/>
</kw>
<msg timestamp="20240910 18:13:26.090" level="INFO">${list_prefs} = [[]]</msg>
<status status="PASS" starttime="20240910 18:13:26.090" endtime="20240910 18:13:26.090"/>
</kw>
<msg timestamp="20240910 18:13:26.090" level="INFO">${list_prefs} = [[]]</msg>
<status status="PASS" starttime="20240910 18:13:26.083" endtime="20240910 18:13:26.090"/>
</kw>
<kw name="Create Chrome Options for download preferences" library="Support_Web">
<var>${chrome_options}</var>
<kw name="Evaluate" library="BuiltIn">
<var>${chrome_options}</var>
<arg>sys.modules['selenium.webdriver'].ChromeOptions()</arg>
<arg>sys</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240910 18:13:26.090" level="INFO">${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x000001CB3C07ABA0&gt;</msg>
<status status="PASS" starttime="20240910 18:13:26.090" endtime="20240910 18:13:26.090"/>
</kw>
<msg timestamp="20240910 18:13:26.093" level="INFO">${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x000001CB3C07ABA0&gt;</msg>
<status status="PASS" starttime="20240910 18:13:26.090" endtime="20240910 18:13:26.093"/>
</kw>
<kw name="Update Preferences List" library="Support_Web">
<arg>${chrome_options}</arg>
<arg>@{list_prefs}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${string_prefs}</var>
<arg>${list_prefs}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240910 18:13:26.094" level="INFO">${string_prefs} = [[]]</msg>
<status status="PASS" starttime="20240910 18:13:26.093" endtime="20240910 18:13:26.094"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${string_prefs} == [[]]</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20240910 18:13:26.094" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:13:26.094" endtime="20240910 18:13:26.094"/>
</kw>
<for flavor="IN">
<var>${preference}</var>
<value>@{list_prefs}</value>
<iter>
<var name="${preference}"/>
<kw name="Call Method" library="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>${preference}</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="NOT RUN" starttime="20240910 18:13:26.094" endtime="20240910 18:13:26.094"/>
</kw>
<status status="NOT RUN" starttime="20240910 18:13:26.094" endtime="20240910 18:13:26.094"/>
</iter>
<status status="NOT RUN" starttime="20240910 18:13:26.094" endtime="20240910 18:13:26.094"/>
</for>
<status status="PASS" starttime="20240910 18:13:26.093" endtime="20240910 18:13:26.094"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_experimental_option</arg>
<arg>prefs</arg>
<arg>${kw_prefs}</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240910 18:13:26.094" endtime="20240910 18:13:26.094"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${global_browser_options}</arg>
<arg>${chrome options}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240910 18:13:26.094" level="INFO">${global_browser_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x000001CB3C07ABA0&gt;</msg>
<status status="PASS" starttime="20240910 18:13:26.094" endtime="20240910 18:13:26.094"/>
</kw>
<status status="PASS" starttime="20240910 18:13:26.083" endtime="20240910 18:13:26.094"/>
</kw>
<status status="PASS" starttime="20240910 18:13:22.008" endtime="20240910 18:13:26.094"/>
</kw>
<status status="PASS" starttime="20240910 18:13:22.008" endtime="20240910 18:13:26.094"/>
</kw>
<status status="PASS" starttime="20240910 18:13:22.008" endtime="20240910 18:13:26.094"/>
</kw>
<kw name="Set Suite Metadata" library="BuiltIn">
<arg>environment</arg>
<arg>${test_server}</arg>
<doc>Sets metadata for the current test suite.</doc>
<msg timestamp="20240910 18:13:26.094" level="INFO">Set suite metadata 'environment' to value 'Dev'.</msg>
<status status="PASS" starttime="20240910 18:13:26.094" endtime="20240910 18:13:26.094"/>
</kw>
<status status="PASS" starttime="20240910 18:13:22.003" endtime="20240910 18:13:26.094"/>
</kw>
<suite id="s1-s1" name="Test Get Latest ST PI Version" source="C:\RobotFramework\sap_testing\Tests\Test_Get_Latest_ST_PI_Version.robot">
<kw name="login page" library="Get_Latest_ST_PI_Version" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${url}</arg>
<arg>${browser}</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20240910 18:13:26.106" level="INFO">Opening browser 'chrome' to base url 'https://support.sap.com'.</msg>
<status status="PASS" starttime="20240910 18:13:26.106" endtime="20240910 18:13:34.247"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20240910 18:13:34.247" endtime="20240910 18:13:34.363"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>20</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240910 18:13:54.363" level="INFO">Slept 20 seconds</msg>
<status status="PASS" starttime="20240910 18:13:34.363" endtime="20240910 18:13:54.363"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${element_present}</var>
<arg>element should be visible</arg>
<arg>xpath://span[normalize-space(text())='Software Downloads']</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Element Should Be Visible" library="SeleniumLibrary">
<arg>xpath://span[normalize-space(text())='Software Downloads']</arg>
<doc>Verifies that the element identified by ``locator`` is visible.</doc>
<msg timestamp="20240910 18:13:54.382" level="INFO">Element 'xpath://span[normalize-space(text())='Software Downloads']' is displayed.</msg>
<status status="PASS" starttime="20240910 18:13:54.363" endtime="20240910 18:13:54.382"/>
</kw>
<msg timestamp="20240910 18:13:54.382" level="INFO">${element_present} = True</msg>
<status status="PASS" starttime="20240910 18:13:54.363" endtime="20240910 18:13:54.382"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240910 18:13:59.382" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20240910 18:13:54.382" endtime="20240910 18:13:59.382"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${element_present}' == 'False'</arg>
<arg>Reload Page</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20240910 18:13:59.382" endtime="20240910 18:13:59.382"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240910 18:14:04.383" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20240910 18:13:59.382" endtime="20240910 18:14:04.383"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath://span[normalize-space(text())='Software Downloads']</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20240910 18:14:04.383" level="INFO">Clicking element 'xpath://span[normalize-space(text())='Software Downloads']'.</msg>
<status status="PASS" starttime="20240910 18:14:04.383" endtime="20240910 18:14:04.525"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240910 18:14:09.527" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20240910 18:14:04.525" endtime="20240910 18:14:09.527"/>
</kw>
<kw name="Switch Window" library="SeleniumLibrary">
<arg>NEW</arg>
<doc>Switches to browser window matching ``locator``.</doc>
<status status="PASS" starttime="20240910 18:14:09.527" endtime="20240910 18:14:09.533"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240910 18:14:11.534" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20240910 18:14:09.533" endtime="20240910 18:14:11.534"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:j_username</arg>
<arg>${symvar('S_Username')}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20240910 18:14:11.535" level="INFO">Sym.Dev.S_Username: S0023459113</msg>
<msg timestamp="20240910 18:14:11.536" level="INFO">Typing text 'S0023459113' into text field 'id:j_username'.</msg>
<status status="PASS" starttime="20240910 18:14:11.534" endtime="20240910 18:14:11.698"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240910 18:14:13.699" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20240910 18:14:11.698" endtime="20240910 18:14:13.699"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath://div[text()='Continue']</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20240910 18:14:13.700" level="INFO">Clicking element 'xpath://div[text()='Continue']'.</msg>
<status status="PASS" starttime="20240910 18:14:13.699" endtime="20240910 18:14:13.893"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>15</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240910 18:14:28.895" level="INFO">Slept 15 seconds</msg>
<status status="PASS" starttime="20240910 18:14:13.894" endtime="20240910 18:14:28.895"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>%{S_Password}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20240910 18:14:28.896" level="INFO">Typing text 'Whitetiger@2024' into text field 'id:password'.</msg>
<status status="PASS" starttime="20240910 18:14:28.895" endtime="20240910 18:14:28.999"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240910 18:14:34.000" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20240910 18:14:28.999" endtime="20240910 18:14:34.000"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>xpath://button[text()='Sign in']</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20240910 18:14:34.000" level="INFO">Clicking element 'xpath://button[text()='Sign in']'.</msg>
<status status="PASS" starttime="20240910 18:14:34.000" endtime="20240910 18:14:34.055"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>30</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240910 18:15:04.056" level="INFO">Slept 30 seconds</msg>
<status status="PASS" starttime="20240910 18:14:34.055" endtime="20240910 18:15:04.056"/>
</kw>
<status status="PASS" starttime="20240910 18:13:26.106" endtime="20240910 18:15:04.056"/>
</kw>
<test id="s1-s1-t1" name="Get the latest version of ST-PI support package" line="8">
<kw name="Software Download" library="Get_Latest_ST_PI_Version">
<kw name="Select Frame" library="SeleniumLibrary">
<arg>id:shell-component---application420660846--frame</arg>
<doc>Sets frame identified by ``locator`` as the current frame.</doc>
<msg timestamp="20240910 18:15:04.058" level="INFO">Selecting frame 'id:shell-component---application420660846--frame'.</msg>
<status status="PASS" starttime="20240910 18:15:04.057" endtime="20240910 18:15:04.086"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240910 18:15:05.088" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20240910 18:15:04.086" endtime="20240910 18:15:05.088"/>
</kw>
<kw name="Wait Until Element Is Visible" library="SeleniumLibrary">
<arg>id:__filter1-text</arg>
<arg>120s</arg>
<doc>Waits until the element ``locator`` is visible.</doc>
<status status="PASS" starttime="20240910 18:15:05.088" endtime="20240910 18:15:05.113"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>id:__filter1-text</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20240910 18:15:05.114" level="INFO">Clicking element 'id:__filter1-text'.</msg>
<status status="PASS" starttime="20240910 18:15:05.114" endtime="20240910 18:15:05.330"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240910 18:15:10.331" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20240910 18:15:05.331" endtime="20240910 18:15:10.331"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:__field0-I</arg>
<arg>ST-PI 740</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20240910 18:15:10.332" level="INFO">Typing text 'ST-PI 740' into text field 'id:__field0-I'.</msg>
<status status="PASS" starttime="20240910 18:15:10.331" endtime="20240910 18:15:10.517"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>4</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240910 18:15:14.518" level="INFO">Slept 4 seconds</msg>
<status status="PASS" starttime="20240910 18:15:10.517" endtime="20240910 18:15:14.518"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>id:__field0-search</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20240910 18:15:14.518" level="INFO">Clicking element 'id:__field0-search'.</msg>
<status status="PASS" starttime="20240910 18:15:14.518" endtime="20240910 18:15:15.165"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>10</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240910 18:15:25.166" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20240910 18:15:15.165" endtime="20240910 18:15:25.166"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>id:__item29-__clone73</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20240910 18:15:25.167" level="INFO">Clicking element 'id:__item29-__clone73'.</msg>
<status status="PASS" starttime="20240910 18:15:25.166" endtime="20240910 18:15:25.544"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240910 18:15:27.546" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20240910 18:15:25.544" endtime="20240910 18:15:27.546"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>id:__xmlview3--idProductHierarchyList</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20240910 18:15:27.546" level="INFO">Clicking element 'id:__xmlview3--idProductHierarchyList'.</msg>
<status status="PASS" starttime="20240910 18:15:27.546" endtime="20240910 18:15:27.640"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240910 18:15:32.641" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20240910 18:15:27.640" endtime="20240910 18:15:32.641"/>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<var>${Current_Version}</var>
<arg>id:__identifier1-__xmlview3--idProductDownloadList-0-link</arg>
<doc>Returns the text value of the element identified by ``locator``.</doc>
<msg timestamp="20240910 18:15:32.666" level="INFO">${Current_Version} = SAPK-74027INSTPI</msg>
<status status="PASS" starttime="20240910 18:15:32.641" endtime="20240910 18:15:32.667"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>**gbStart**Current_Version**splitKeyValue**${Current_Version}**gbEnd**</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20240910 18:15:32.667" endtime="20240910 18:15:32.667"/>
</kw>
<status status="PASS" starttime="20240910 18:15:04.057" endtime="20240910 18:15:32.667"/>
</kw>
<tag>GetVersion</tag>
<status status="PASS" starttime="20240910 18:15:04.056" endtime="20240910 18:15:32.667"/>
</test>
<status status="PASS" starttime="20240910 18:13:26.094" endtime="20240910 18:15:32.669"/>
</suite>
<doc>Testing functionality through Robot Framework</doc>
<meta name="environment">Dev</meta>
<meta name="test_browser_name">chrome</meta>
<meta name="test_browser_version">128.0.6613.120</meta>
<meta name="test_driver_version">128.0.6613.84 </meta>
<meta name="test_environment">Dev</meta>
<meta name="test_freeze_dependencies">astroid==3.2.3,attrs==23.2.0,beautifulsoup4==4.12.3,bs4==0.0.2,certifi==2024.7.4,cffi==1.16.0,chardet==5.2.0,charset-normalizer==3.3.2,click==8.1.7,colorama==0.4.6,cryptography==42.0.8,defusedxml==0.7.1,dill==0.3.8,docutils==0.21.2,et-xmlfile==1.1.0,exceptiongroup==1.2.2,gitdb==4.0.11,GitPython==3.1.43,h11==0.14.0,idna==3.7,isort==5.13.2,Jinja2==3.1.4,jira==3.8.0,jsonpath-ng==1.6.1,jsonschema==4.23.0,jsonschema-specifications==2023.12.1,lazy-object-proxy==1.10.0,lxml==5.2.2,markdown-it-py==3.0.0,MarkupSafe==2.1.5,mccabe==0.7.0,mdurl==0.1.2,natsort==8.4.0,numpy==2.0.0,oauthlib==3.2.2,openpyxl==3.1.5,outcome==1.3.0.post0,packaging==24.1,pandas==2.2.2,pathspec==0.11.2,pillow==10.4.0,pip==24.2,platformdirs==4.2.2,ply==3.11,pycparser==2.22,Pygments==2.18.0,pylint==3.2.5,PyPDF2==3.0.1,PySocks==1.7.1,python-dateutil==2.9.0.post0,pytz==2024.1,pywin32==306,PyYAML==6.0.1,referencing==0.35.1,reportlab==4.2.2,requests==2.32.3,requests-oauthlib==2.0.0,requests-toolbelt==1.0.0,rich==13.7.1,rich-click==1.6.1,robotframework==6.0.2,robotframework-datadriver==1.9.0,robotframework-excellib==2.0.1,robotframework-jsonlibrary==0.5,robotframework-pabot==2.16.0,robotframework-pythonlibcore==4.2.0,robotframework-requests==0.9.2,robotframework-sapguilibrary==1.1,robotframework-seleniumlibrary==5.1.3,robotframework-stacktrace==0.4.1,robotframework-tidy==4.5.0,rpds-py==0.19.0,selenium==4.9.1,setuptools==71.0.1,six==1.16.0,smmap==5.0.1,sniffio==1.3.1,sortedcontainers==2.4.0,soupsieve==2.5,tomli==2.0.1,tomlkit==0.13.0,trio==0.26.0,trio-websocket==0.11.1,typing_extensions==4.12.2,tzdata==2024.1,urllib3==2.2.2,wheel==0.43.0,wrapt==1.16.0,wsproto==1.2.0</meta>
<status status="PASS" starttime="20240910 18:13:21.562" endtime="20240910 18:15:32.726"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">GetVersion</stat>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Test Get Latest ST PI Version">Tests.Test Get Latest ST PI Version</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
