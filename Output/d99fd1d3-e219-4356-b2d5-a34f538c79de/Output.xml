<?xml version="1.0" encoding="utf-8"?>
<robot generated="20240529 13:23:47.995" generator="Rebot 6.0.2 (Python 3.12.3 on win32)" rpa="false" schemaversion="3">
 <suite id="s1" name="Tests" source="D:\RobotFramework\SAPtesting\Tests">
  <kw name="Setup highest level suite" type="SETUP">
   <kw library="BuiltIn" name="Set Variable">
    <var>
     ${d.test_server}
    </var>
    <arg>
     ${test_server}
    </arg>
    <doc>
     Returns the given values which can then be assigned to a variables.
    </doc>
    <msg level="INFO" timestamp="20240529 13:14:22.913">
     ${d.test_server} = Dev
    </msg>
    <status endtime="20240529 13:14:22.913" starttime="20240529 13:14:22.913" status="PASS"/>
   </kw>
   <kw library="Support" name="Reset screenshot count variable">
    <kw library="BuiltIn" name="Set Variable">
     <var>
      ${screenshotCount}
     </var>
     <arg>
      ${PABOTQUEUEINDEX}_1
     </arg>
     <doc>
      Returns the given values which can then be assigned to a variables.
     </doc>
     <msg level="INFO" timestamp="20240529 13:14:22.913">
      ${screenshotCount} = 0_1
     </msg>
     <status endtime="20240529 13:14:22.913" starttime="20240529 13:14:22.913" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Set Global Variable">
     <arg>
      ${screenshotCount}
     </arg>
     <doc>
      Makes a variable available globally in all tests and suites.
     </doc>
     <msg level="INFO" timestamp="20240529 13:14:22.913">
      ${screenshotCount} = 0_1
     </msg>
     <status endtime="20240529 13:14:22.913" starttime="20240529 13:14:22.913" status="PASS"/>
    </kw>
    <kw library="Support" name="Set up screenshot directory">
     <kw library="OperatingSystem" name="Create Directory">
      <arg>
       ${OUTPUTDIR}${/}${wvar('screenshot_dir')}
      </arg>
      <doc>
       Creates the specified directory.
      </doc>
      <msg level="INFO" timestamp="20240529 13:14:22.913">
       Web.Dev.screenshot_dir: Screenshot
      </msg>
      <msg html="true" level="INFO" timestamp="20240529 13:14:22.913">
       Created directory '&lt;a href="file://D:\RobotFramework\SAPtesting\Output\d99fd1d3-e219-4356-b2d5-a34f538c79de\pabot_results\0\Screenshot"&gt;D:\RobotFramework\SAPtesting\Output\d99fd1d3-e219-4356-b2d5-a34f538c79de\pabot_results\0\Screenshot&lt;/a&gt;'.
      </msg>
      <status endtime="20240529 13:14:22.913" starttime="20240529 13:14:22.913" status="PASS"/>
     </kw>
     <status endtime="20240529 13:14:22.913" starttime="20240529 13:14:22.913" status="PASS"/>
    </kw>
    <status endtime="20240529 13:14:22.913" starttime="20240529 13:14:22.913" status="PASS"/>
   </kw>
   <kw library="BuiltIn" name="Set Global Variable">
    <arg>
     ${screenshot_taking}
    </arg>
    <arg>
     ${True}
    </arg>
    <doc>
     Makes a variable available globally in all tests and suites.
    </doc>
    <msg level="INFO" timestamp="20240529 13:14:22.913">
     ${screenshot_taking} = True
    </msg>
    <status endtime="20240529 13:14:22.913" starttime="20240529 13:14:22.913" status="PASS"/>
   </kw>
   <kw library="Support" name="Setup linux execution">
    <kw library="BuiltIn" name="Run Keyword And Return Status">
     <var>
      ${web_test_check}
     </var>
     <arg>
      Variable Should Exist
     </arg>
     <arg>
      ${web_test}
     </arg>
     <doc>
      Runs the given keyword with given arguments and returns the status as a Boolean value.
     </doc>
     <kw library="BuiltIn" name="Variable Should Exist">
      <arg>
       ${web_test}
      </arg>
      <doc>
       Fails unless the given variable exists within the current scope.
      </doc>
      <status endtime="20240529 13:14:22.913" starttime="20240529 13:14:22.913" status="PASS"/>
     </kw>
     <msg level="INFO" timestamp="20240529 13:14:22.913">
      ${web_test_check} = True
     </msg>
     <status endtime="20240529 13:14:22.913" starttime="20240529 13:14:22.913" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Run Keyword If">
     <arg>
      ${web_test_check}
     </arg>
     <arg>
      Setup Docker Execution Options
     </arg>
     <doc>
      Runs the given keyword with the given arguments, if ``condition`` is true.
     </doc>
     <kw library="Support_Web" name="Setup Docker Execution Options">
      <kw library="Support_Web" name="Setup Suite Metadata">
       <arg>
        ${browser}
       </arg>
       <kw library="BrowserSupport" name="Get Browser Metadata">
        <var>
         &amp;{browser_information}
        </var>
        <arg>
         browser=${browser}
        </arg>
        <doc>
         Fetches browser metadata information
:param browser: Name of the browser for which information is fetched
:param reload: Re-read the metadata based on the browser
:return: Browser metadata information, dict of format
            {"browser_version": browser version value,
             "driver_version": driver version value}
        </doc>
        <msg level="INFO" timestamp="20240529 13:14:27.006">
         &amp;{browser_information} = { browser_version=125.0.6422.77 | driver_version=124.0.6367.207  }
        </msg>
        <status endtime="20240529 13:14:27.006" starttime="20240529 13:14:22.913" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Suite Metadata">
        <arg>
         test_browser_name
        </arg>
        <arg>
         ${browser}
        </arg>
        <doc>
         Sets metadata for the current test suite.
        </doc>
        <msg level="INFO" timestamp="20240529 13:14:27.006">
         Set suite metadata 'test_browser_name' to value 'chrome'.
        </msg>
        <status endtime="20240529 13:14:27.006" starttime="20240529 13:14:27.006" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Suite Metadata">
        <arg>
         test_browser_version
        </arg>
        <arg>
         ${browser_information.browser_version}
        </arg>
        <doc>
         Sets metadata for the current test suite.
        </doc>
        <msg level="INFO" timestamp="20240529 13:14:27.006">
         Set suite metadata 'test_browser_version' to value '125.0.6422.77'.
        </msg>
        <status endtime="20240529 13:14:27.006" starttime="20240529 13:14:27.006" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Suite Metadata">
        <arg>
         test_driver_version
        </arg>
        <arg>
         ${browser_information.driver_version}
        </arg>
        <doc>
         Sets metadata for the current test suite.
        </doc>
        <msg level="INFO" timestamp="20240529 13:14:27.006">
         Set suite metadata 'test_driver_version' to value '124.0.6367.207 '.
        </msg>
        <status endtime="20240529 13:14:27.006" starttime="20240529 13:14:27.006" status="PASS"/>
       </kw>
       <status endtime="20240529 13:14:27.006" starttime="20240529 13:14:22.913" status="PASS"/>
      </kw>
      <kw library="Support_Web" name="Setup Global Docker Execution Options">
       <kw library="BuiltIn" name="Set Global Variable">
        <arg>
         ${global_browser_options}
        </arg>
        <arg>
         None
        </arg>
        <doc>
         Makes a variable available globally in all tests and suites.
        </doc>
        <msg level="INFO" timestamp="20240529 13:14:27.006">
         ${global_browser_options} = None
        </msg>
        <status endtime="20240529 13:14:27.006" starttime="20240529 13:14:27.006" status="PASS"/>
       </kw>
       <kw library="OperatingSystem" name="Get Environment Variable">
        <var>
         ${docker_check}
        </var>
        <arg>
         EXECUTION_ENVIRONMENT
        </arg>
        <arg>
         not_found
        </arg>
        <doc>
         Returns the value of an environment variable with the given name.
        </doc>
        <msg level="INFO" timestamp="20240529 13:14:27.006">
         ${docker_check} = not_found
        </msg>
        <status endtime="20240529 13:14:27.006" starttime="20240529 13:14:27.006" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Run Keyword And Return If">
        <arg>
         "${docker_check}"!="docker"
        </arg>
        <arg>
         Log
        </arg>
        <arg>
         Not executing on Docker
        </arg>
        <doc>
         Runs the specified keyword and returns from the enclosing user keyword.
        </doc>
        <kw library="BuiltIn" name="Log">
         <arg>
          Not executing on Docker
         </arg>
         <doc>
          Logs the given message with the given level.
         </doc>
         <msg level="INFO" timestamp="20240529 13:14:27.006">
          Not executing on Docker
         </msg>
         <status endtime="20240529 13:14:27.006" starttime="20240529 13:14:27.006" status="PASS"/>
        </kw>
        <msg level="INFO" timestamp="20240529 13:14:27.006">
         Returning from the enclosing user keyword.
        </msg>
        <status endtime="20240529 13:14:27.006" starttime="20240529 13:14:27.006" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Create List">
        <var>
         @{options}
        </var>
        <arg>
         --headless
        </arg>
        <arg>
         --no-sandbox
        </arg>
        <arg>
         --disable-dev-shm-usage
        </arg>
        <doc>
         Returns a list containing given items.
        </doc>
        <status endtime="20240529 13:14:27.006" starttime="20240529 13:14:27.006" status="NOT RUN"/>
       </kw>
       <kw library="BuiltIn" name="Set Global Variable">
        <arg>
         @{docker_options}
        </arg>
        <arg>
         @{options}
        </arg>
        <doc>
         Makes a variable available globally in all tests and suites.
        </doc>
        <status endtime="20240529 13:14:27.006" starttime="20240529 13:14:27.006" status="NOT RUN"/>
       </kw>
       <status endtime="20240529 13:14:27.006" starttime="20240529 13:14:27.006" status="PASS"/>
      </kw>
      <kw library="Support_Web" name="Create Webdriver for chrome preferences">
       <kw library="Support_Web" name="Update Docker Execution Options">
        <var>
         ${list_prefs}
        </var>
        <arg>
         ${list_prefs}
        </arg>
        <kw library="BuiltIn" name="Run Keyword And Return Status">
         <var>
          ${docker_check}
         </var>
         <arg>
          Variable Should Exist
         </arg>
         <arg>
          ${docker_options}
         </arg>
         <doc>
          Runs the given keyword with given arguments and returns the status as a Boolean value.
         </doc>
         <kw library="BuiltIn" name="Variable Should Exist">
          <arg>
           ${docker_options}
          </arg>
          <doc>
           Fails unless the given variable exists within the current scope.
          </doc>
          <msg level="FAIL" timestamp="20240529 13:14:27.006">
           Variable '${docker_options}' does not exist.
          </msg>
          <status endtime="20240529 13:14:27.006" starttime="20240529 13:14:27.006" status="FAIL"/>
         </kw>
         <msg level="INFO" timestamp="20240529 13:14:27.006">
          ${docker_check} = False
         </msg>
         <status endtime="20240529 13:14:27.006" starttime="20240529 13:14:27.006" status="PASS"/>
        </kw>
        <kw library="BuiltIn" name="Get Length">
         <var>
          ${list_prefs_length}
         </var>
         <arg>
          ${list_prefs}
         </arg>
         <doc>
          Returns and logs the length of the given item as an integer.
         </doc>
         <msg level="INFO" timestamp="20240529 13:14:27.006">
          Length is 1
         </msg>
         <msg level="INFO" timestamp="20240529 13:14:27.006">
          ${list_prefs_length} = 1
         </msg>
         <status endtime="20240529 13:14:27.006" starttime="20240529 13:14:27.006" status="PASS"/>
        </kw>
        <kw library="BuiltIn" name="Run Keyword If">
         <var>
          ${list_prefs}
         </var>
         <arg>
          ${docker_check} and ${list_prefs_length}&gt;0 and ${list_prefs}[0] != []
         </arg>
         <arg>
          Combine Lists
         </arg>
         <arg>
          ${list_prefs}
         </arg>
         <arg>
          ${docker_options}
         </arg>
         <arg>
          ELSE IF
         </arg>
         <arg>
          ${docker_check}
         </arg>
         <arg>
          Set Variable
         </arg>
         <arg>
          ${docker_options}
         </arg>
         <arg>
          ELSE
         </arg>
         <arg>
          Set Variable
         </arg>
         <arg>
          ${list_prefs}
         </arg>
         <doc>
          Runs the given keyword with the given arguments, if ``condition`` is true.
         </doc>
         <kw library="BuiltIn" name="Set Variable">
          <arg>
           ${list_prefs}
          </arg>
          <doc>
           Returns the given values which can then be assigned to a variables.
          </doc>
          <status endtime="20240529 13:14:27.022" starttime="20240529 13:14:27.022" status="PASS"/>
         </kw>
         <msg level="INFO" timestamp="20240529 13:14:27.022">
          ${list_prefs} = [[]]
         </msg>
         <status endtime="20240529 13:14:27.022" starttime="20240529 13:14:27.022" status="PASS"/>
        </kw>
        <msg level="INFO" timestamp="20240529 13:14:27.022">
         ${list_prefs} = [[]]
        </msg>
        <status endtime="20240529 13:14:27.022" starttime="20240529 13:14:27.006" status="PASS"/>
       </kw>
       <kw library="Support_Web" name="Create Chrome Options for download preferences">
        <var>
         ${chrome_options}
        </var>
        <kw library="BuiltIn" name="Evaluate">
         <var>
          ${chrome_options}
         </var>
         <arg>
          sys.modules['selenium.webdriver'].ChromeOptions()
         </arg>
         <arg>
          sys
         </arg>
         <doc>
          Evaluates the given expression in Python and returns the result.
         </doc>
         <msg level="INFO" timestamp="20240529 13:14:27.022">
          ${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x00000173F5B7F980&gt;
         </msg>
         <status endtime="20240529 13:14:27.022" starttime="20240529 13:14:27.022" status="PASS"/>
        </kw>
        <msg level="INFO" timestamp="20240529 13:14:27.022">
         ${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x00000173F5B7F980&gt;
        </msg>
        <status endtime="20240529 13:14:27.022" starttime="20240529 13:14:27.022" status="PASS"/>
       </kw>
       <kw library="Support_Web" name="Update Preferences List">
        <arg>
         ${chrome_options}
        </arg>
        <arg>
         @{list_prefs}
        </arg>
        <kw library="BuiltIn" name="Convert To String">
         <var>
          ${string_prefs}
         </var>
         <arg>
          ${list_prefs}
         </arg>
         <doc>
          Converts the given item to a Unicode string.
         </doc>
         <msg level="INFO" timestamp="20240529 13:14:27.022">
          ${string_prefs} = [[]]
         </msg>
         <status endtime="20240529 13:14:27.022" starttime="20240529 13:14:27.022" status="PASS"/>
        </kw>
        <kw library="BuiltIn" name="Return From Keyword If">
         <arg>
          ${string_prefs} == [[]]
         </arg>
         <doc>
          Returns from the enclosing user keyword if ``condition`` is true.
         </doc>
         <msg level="INFO" timestamp="20240529 13:14:27.022">
          Returning from the enclosing user keyword.
         </msg>
         <status endtime="20240529 13:14:27.022" starttime="20240529 13:14:27.022" status="PASS"/>
        </kw>
        <for flavor="IN">
         <var>
          ${preference}
         </var>
         <value>
          @{list_prefs}
         </value>
         <iter>
          <var name="${preference}"/>
          <kw library="BuiltIn" name="Call Method">
           <arg>
            ${chrome_options}
           </arg>
           <arg>
            add_argument
           </arg>
           <arg>
            ${preference}
           </arg>
           <doc>
            Calls the named method of the given object with the provided arguments.
           </doc>
           <status endtime="20240529 13:14:27.022" starttime="20240529 13:14:27.022" status="NOT RUN"/>
          </kw>
          <status endtime="20240529 13:14:27.022" starttime="20240529 13:14:27.022" status="NOT RUN"/>
         </iter>
         <status endtime="20240529 13:14:27.022" starttime="20240529 13:14:27.022" status="NOT RUN"/>
        </for>
        <status endtime="20240529 13:14:27.022" starttime="20240529 13:14:27.022" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Call Method">
        <arg>
         ${chrome_options}
        </arg>
        <arg>
         add_experimental_option
        </arg>
        <arg>
         prefs
        </arg>
        <arg>
         ${kw_prefs}
        </arg>
        <doc>
         Calls the named method of the given object with the provided arguments.
        </doc>
        <status endtime="20240529 13:14:27.022" starttime="20240529 13:14:27.022" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Global Variable">
        <arg>
         ${global_browser_options}
        </arg>
        <arg>
         ${chrome options}
        </arg>
        <doc>
         Makes a variable available globally in all tests and suites.
        </doc>
        <msg level="INFO" timestamp="20240529 13:14:27.022">
         ${global_browser_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x00000173F5B7F980&gt;
        </msg>
        <status endtime="20240529 13:14:27.022" starttime="20240529 13:14:27.022" status="PASS"/>
       </kw>
       <status endtime="20240529 13:14:27.022" starttime="20240529 13:14:27.006" status="PASS"/>
      </kw>
      <status endtime="20240529 13:14:27.022" starttime="20240529 13:14:22.913" status="PASS"/>
     </kw>
     <status endtime="20240529 13:14:27.022" starttime="20240529 13:14:22.913" status="PASS"/>
    </kw>
    <status endtime="20240529 13:14:27.022" starttime="20240529 13:14:22.913" status="PASS"/>
   </kw>
   <kw library="BuiltIn" name="Set Suite Metadata">
    <arg>
     environment
    </arg>
    <arg>
     ${test_server}
    </arg>
    <doc>
     Sets metadata for the current test suite.
    </doc>
    <msg level="INFO" timestamp="20240529 13:14:27.022">
     Set suite metadata 'environment' to value 'Dev'.
    </msg>
    <status endtime="20240529 13:14:27.022" starttime="20240529 13:14:27.022" status="PASS"/>
   </kw>
   <status endtime="20240529 13:14:27.022" starttime="20240529 13:14:22.913" status="PASS"/>
  </kw>
  <suite id="s1-s1" name="Test Powerconnect" source="D:\RobotFramework\SAPtesting\Tests\Test_Powerconnect.robot">
   <kw library="powerconnect" name="System Logon" type="SETUP">
    <kw library="Process" name="Start Process">
     <arg>
      ${symvar('Nike_SAP')}
     </arg>
     <doc>
      Starts a new process on background.
     </doc>
     <msg level="INFO" timestamp="20240529 13:14:27.131">
      Sym.Dev.Nike_SAP: C:\Program Files\SAP\FrontEnd\SAPGUI\saplogon.exe
     </msg>
     <msg level="INFO" timestamp="20240529 13:14:27.131">
      Starting process:
"C:\Program Files\SAP\FrontEnd\SAPGUI\saplogon.exe"
     </msg>
     <status endtime="20240529 13:14:27.131" starttime="20240529 13:14:27.116" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      5
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240529 13:14:32.146">
      Slept 5 seconds
     </msg>
     <status endtime="20240529 13:14:32.146" starttime="20240529 13:14:27.131" status="PASS"/>
    </kw>
    <kw library="CustomSapGuiLibrary" name="Connect To Session">
     <doc>
      Connects to an open session SAP.
     </doc>
     <status endtime="20240529 13:14:32.162" starttime="20240529 13:14:32.146" status="PASS"/>
    </kw>
    <kw library="CustomSapGuiLibrary" name="Open Connection">
     <arg>
      ${symvar('Nike_connection')}
     </arg>
     <doc>
      Opens a connection to the given connection name. Be sure to provide the full connection name, including the bracket part.
     </doc>
     <msg level="INFO" timestamp="20240529 13:14:32.162">
      Sym.Dev.Nike_connection: CFG
     </msg>
     <status endtime="20240529 13:14:32.859" starttime="20240529 13:14:32.162" status="PASS"/>
    </kw>
    <kw library="CustomSapGuiLibrary" name="Input Text">
     <arg>
      wnd[0]/usr/txtRSYST-MANDT
     </arg>
     <arg>
      ${symvar('CFG_CLIENT')}
     </arg>
     <doc>
      Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.
     </doc>
     <msg level="INFO" timestamp="20240529 13:14:32.859">
      Sym.Dev.CFG_CLIENT: 000
     </msg>
     <msg level="INFO" timestamp="20240529 13:14:32.922">
      Typing text '000' into text field 'wnd[0]/usr/txtRSYST-MANDT'.
     </msg>
     <status endtime="20240529 13:14:32.922" starttime="20240529 13:14:32.859" status="PASS"/>
    </kw>
    <kw library="CustomSapGuiLibrary" name="Input Text">
     <arg>
      wnd[0]/usr/txtRSYST-BNAME
     </arg>
     <arg>
      ${symvar('CFG_USER')}
     </arg>
     <doc>
      Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.
     </doc>
     <msg level="INFO" timestamp="20240529 13:14:32.922">
      Sym.Dev.CFG_USER: basisadmin
     </msg>
     <msg level="INFO" timestamp="20240529 13:14:32.937">
      Typing text 'basisadmin' into text field 'wnd[0]/usr/txtRSYST-BNAME'.
     </msg>
     <status endtime="20240529 13:14:32.937" starttime="20240529 13:14:32.922" status="PASS"/>
    </kw>
    <kw library="CustomSapGuiLibrary" name="Input Password">
     <arg>
      wnd[0]/usr/pwdRSYST-BCODE
     </arg>
     <arg>
      %{CFG_PASS}
     </arg>
     <doc>
      Inserts the given password into the text field identified by locator.
The password is not recorded in the log.
     </doc>
     <msg level="INFO" timestamp="20240529 13:14:32.953">
      Typing password into text field 'wnd[0]/usr/pwdRSYST-BCODE'.
     </msg>
     <status endtime="20240529 13:14:32.953" starttime="20240529 13:14:32.937" status="PASS"/>
    </kw>
    <kw library="CustomSapGuiLibrary" name="Send Vkey">
     <arg>
      0
     </arg>
     <doc>
      Sends a SAP virtual key combination to the window, not into an element.
If you want to send a value to a text field, use `input text` instead.
     </doc>
     <status endtime="20240529 13:14:33.719" starttime="20240529 13:14:32.953" status="PASS"/>
    </kw>
    <kw library="CustomSapGuiLibrary" name="Multiple Logon Handling">
     <arg>
      wnd[1]
     </arg>
     <arg>
      wnd[1]/usr/radMULTI_LOGON_OPT2
     </arg>
     <arg>
      wnd[1]/tbar[0]/btn[0]
     </arg>
     <status endtime="20240529 13:14:33.719" starttime="20240529 13:14:33.719" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      1
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240529 13:14:34.730">
      Slept 1 second
     </msg>
     <status endtime="20240529 13:14:34.730" starttime="20240529 13:14:33.719" status="PASS"/>
    </kw>
    <status endtime="20240529 13:14:34.730" starttime="20240529 13:14:27.116" status="PASS"/>
   </kw>
   <test id="s1-s1-t1" line="9" name="Check_Saint Transation Code">
    <kw library="powerconnect" name="Saint Transation Code">
     <kw library="CustomSapGuiLibrary" name="Run Transaction">
      <arg>
       Saint
      </arg>
      <doc>
       Runs a Sap transaction. An error is given when an unknown transaction is specified.
      </doc>
      <status endtime="20240529 13:14:35.730" starttime="20240529 13:14:34.730" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240529 13:14:37.738">
       Slept 2 seconds
      </msg>
      <status endtime="20240529 13:14:37.738" starttime="20240529 13:14:35.730" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       001_saintfrontpage.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240529 13:14:37.816">
       &lt;a href="pabot_results%5C0%5C001_saintfrontpage.jpg"&gt;&lt;img src="pabot_results%5C0%5C001_saintfrontpage.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240529 13:14:37.816" starttime="20240529 13:14:37.738" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Get Maintenance Certificate Text">
      <arg>
       ${certificate_id}
      </arg>
      <msg level="INFO" timestamp="20240529 13:14:37.816">
       License available to proceed further
      </msg>
      <status endtime="20240529 13:14:37.816" starttime="20240529 13:14:37.816" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240529 13:14:39.830">
       Slept 2 seconds
      </msg>
      <status endtime="20240529 13:14:39.830" starttime="20240529 13:14:37.816" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       002_certificate.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240529 13:14:39.892">
       &lt;a href="pabot_results%5C0%5C002_certificate.jpg"&gt;&lt;img src="pabot_results%5C0%5C002_certificate.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240529 13:14:39.892" starttime="20240529 13:14:39.830" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Click Element">
      <arg>
       wnd[0]/mbar/menu[0]/menu[0]/menu[1]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240529 13:14:40.277" starttime="20240529 13:14:39.892" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240529 13:14:42.287">
       Slept 2 seconds
      </msg>
      <status endtime="20240529 13:14:42.287" starttime="20240529 13:14:40.277" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       003_saint_confirm_upload.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240529 13:14:42.334">
       &lt;a href="pabot_results%5C0%5C003_saint_confirm_upload.jpg"&gt;&lt;img src="pabot_results%5C0%5C003_saint_confirm_upload.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240529 13:14:42.334" starttime="20240529 13:14:42.287" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Click Element">
      <arg>
       wnd[1]/usr/btnBUTTON_1
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240529 13:14:44.556" starttime="20240529 13:14:42.334" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240529 13:14:46.556">
       Slept 2 seconds
      </msg>
      <status endtime="20240529 13:14:46.556" starttime="20240529 13:14:44.556" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       004_upl_pkg_from_file_system.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240529 13:14:46.604">
       &lt;a href="pabot_results%5C0%5C004_upl_pkg_from_file_system.jpg"&gt;&lt;img src="pabot_results%5C0%5C004_upl_pkg_from_file_system.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240529 13:14:46.604" starttime="20240529 13:14:46.556" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Click Element">
      <arg>
       wnd[0]/tbar[0]/btn[3]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240529 13:14:47.161" starttime="20240529 13:14:46.620" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240529 13:14:49.167">
       Slept 2 seconds
      </msg>
      <status endtime="20240529 13:14:49.167" starttime="20240529 13:14:47.161" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       005_installed_addons.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240529 13:14:49.229">
       &lt;a href="pabot_results%5C0%5C005_installed_addons.jpg"&gt;&lt;img src="pabot_results%5C0%5C005_installed_addons.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240529 13:14:49.229" starttime="20240529 13:14:49.167" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Click Element">
      <arg>
       wnd[0]/usr/btnBUTTON_NEXT
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240529 13:14:49.526" starttime="20240529 13:14:49.229" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240529 13:14:51.541">
       Slept 2 seconds
      </msg>
      <status endtime="20240529 13:14:51.541" starttime="20240529 13:14:49.526" status="PASS"/>
     </kw>
     <status endtime="20240529 13:14:51.541" starttime="20240529 13:14:34.730" status="PASS"/>
    </kw>
    <kw library="powerconnect" name="Get Cell Text From SAP Table">
     <kw library="CustomSapGuiLibrary" name="Search And Select Addon Rows">
      <var>
       ${foundRow}
      </var>
      <arg>
       ${symvar('addOn')}
      </arg>
      <msg level="INFO" timestamp="20240529 13:14:51.541">
       Sym.Dev.addOn: BNWVS
      </msg>
      <msg level="INFO" timestamp="20240529 13:14:51.541">
       ${foundRow} = 2
      </msg>
      <status endtime="20240529 13:14:51.541" starttime="20240529 13:14:51.541" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Log">
      <arg>
       Found text in row: ${foundRow}
      </arg>
      <doc>
       Logs the given message with the given level.
      </doc>
      <msg level="INFO" timestamp="20240529 13:14:51.541">
       Found text in row: 2
      </msg>
      <status endtime="20240529 13:14:51.541" starttime="20240529 13:14:51.541" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240529 13:14:53.548">
       Slept 2 seconds
      </msg>
      <status endtime="20240529 13:14:53.548" starttime="20240529 13:14:51.541" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Select Table Row">
      <arg>
       wnd[0]/usr/subLIST_AREA:SAPLSAINT_UI:0104/tblSAPLSAINT_UIADDON_TO_INSTALL
      </arg>
      <arg>
       ${foundRow}
      </arg>
      <doc>
       Selects an entire row of a table. This can either be a TableControl or a GridView 'table_id'
which is contained within a shell object. The row is an index to select the row, starting from 0.
      </doc>
      <status endtime="20240529 13:14:53.563" starttime="20240529 13:14:53.548" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240529 13:14:55.573">
       Slept 2 seconds
      </msg>
      <status endtime="20240529 13:14:55.573" starttime="20240529 13:14:53.563" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       008_select_addon.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240529 13:14:55.620">
       &lt;a href="pabot_results%5C0%5C008_select_addon.jpg"&gt;&lt;img src="pabot_results%5C0%5C008_select_addon.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240529 13:14:55.620" starttime="20240529 13:14:55.573" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Click Element">
      <arg>
       wnd[0]/usr/btnBUTTON_NEXT
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240529 13:14:56.907" starttime="20240529 13:14:55.620" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240529 13:14:58.918">
       Slept 2 seconds
      </msg>
      <status endtime="20240529 13:14:58.918" starttime="20240529 13:14:56.907" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       009_continue_to_start_calculation_package.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240529 13:14:58.965">
       &lt;a href="pabot_results%5C0%5C009_continue_to_start_calculation_package.jpg"&gt;&lt;img src="pabot_results%5C0%5C009_continue_to_start_calculation_package.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240529 13:14:58.965" starttime="20240529 13:14:58.918" status="PASS"/>
     </kw>
     <status endtime="20240529 13:14:58.965" starttime="20240529 13:14:51.541" status="PASS"/>
    </kw>
    <tag>
     powerconnect
    </tag>
    <tag>
     Regression
    </tag>
    <status endtime="20240529 13:14:58.980" starttime="20240529 13:14:34.730" status="PASS"/>
   </test>
   <test id="s1-s1-t2" line="13" name="Selecting the path for the Addon">
    <kw library="powerconnect" name="Patch selection for the Addon">
     <kw library="CustomSapGuiLibrary" name="Saint Select">
      <arg>
       wnd[0]/usr/subLIST_AREA:SAPLSAINT_UI:0300/tabsQUEUE_COMP/tabpQUEUE_COMP_FC2/ssubQUEUE_COMP_SCA:SAPLSAINT_UI:0303/cmbGV_01_PATCH_REQ
      </arg>
      <arg>
       ${symvar('Patch')}
      </arg>
      <msg level="INFO" timestamp="20240529 13:14:58.980">
       Sym.Dev.Patch: SAPK-70001INBNWVS
      </msg>
      <status endtime="20240529 13:14:59.105" starttime="20240529 13:14:58.980" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240529 13:15:01.114">
       Slept 2 seconds
      </msg>
      <status endtime="20240529 13:15:01.114" starttime="20240529 13:14:59.105" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       010_select_support_Package.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240529 13:15:01.176">
       &lt;a href="pabot_results%5C0%5C010_select_support_Package.jpg"&gt;&lt;img src="pabot_results%5C0%5C010_select_support_Package.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240529 13:15:01.176" starttime="20240529 13:15:01.114" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Click Element">
      <arg>
       wnd[0]/usr/btnBUTTON_NEXT
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240529 13:15:01.551" starttime="20240529 13:15:01.176" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240529 13:15:03.557">
       Slept 2 seconds
      </msg>
      <status endtime="20240529 13:15:03.557" starttime="20240529 13:15:01.551" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       011_continue to add modification adjustment transport.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240529 13:15:03.620">
       &lt;a href="pabot_results%5C0%5C011_continue%20to%20add%20modification%20adjustment%20transport.jpg"&gt;&lt;img src="pabot_results%5C0%5C011_continue%20to%20add%20modification%20adjustment%20transport.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240529 13:15:03.620" starttime="20240529 13:15:03.557" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Click Element">
      <arg>
       wnd[0]/usr/btnBUTTON_NEXT
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240529 13:15:04.401" starttime="20240529 13:15:03.620" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240529 13:15:06.412">
       Slept 2 seconds
      </msg>
      <status endtime="20240529 13:15:06.412" starttime="20240529 13:15:04.401" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       012_Add modification adjustment transport and continue.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240529 13:15:06.490">
       &lt;a href="pabot_results%5C0%5C012_Add%20modification%20adjustment%20transport%20and%20continue.jpg"&gt;&lt;img src="pabot_results%5C0%5C012_Add%20modification%20adjustment%20transport%20and%20continue.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240529 13:15:06.490" starttime="20240529 13:15:06.412" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Click Element">
      <arg>
       wnd[1]/usr/btnBUTTON_2
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240529 13:15:07.136" starttime="20240529 13:15:06.490" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240529 13:15:09.148">
       Slept 2 seconds
      </msg>
      <status endtime="20240529 13:15:09.148" starttime="20240529 13:15:07.136" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       013_start options.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240529 13:15:09.195">
       &lt;a href="pabot_results%5C0%5C013_start%20options.jpg"&gt;&lt;img src="pabot_results%5C0%5C013_start%20options.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240529 13:15:09.195" starttime="20240529 13:15:09.148" status="PASS"/>
     </kw>
     <status endtime="20240529 13:15:09.195" starttime="20240529 13:14:58.980" status="PASS"/>
    </kw>
    <kw library="powerconnect" name="Important SAP note handling">
     <kw library="CustomSapGuiLibrary" name="Is Imp Notes Existing">
      <var>
       ${content}
      </var>
      <arg>
       wnd[1]
      </arg>
      <arg>
       wnd[1]/tbar[0]/btn[0]
      </arg>
      <msg level="INFO" timestamp="20240529 13:15:09.210">
       Modal window does not exist.
      </msg>
      <msg level="INFO" timestamp="20240529 13:15:09.210">
       ${content} = None
      </msg>
      <status endtime="20240529 13:15:09.210" starttime="20240529 13:15:09.195" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Log">
      <arg>
       The window name is: ${content}
      </arg>
      <doc>
       Logs the given message with the given level.
      </doc>
      <msg level="INFO" timestamp="20240529 13:15:09.210">
       The window name is: None
      </msg>
      <status endtime="20240529 13:15:09.210" starttime="20240529 13:15:09.210" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240529 13:15:11.219">
       Slept 2 seconds
      </msg>
      <status endtime="20240529 13:15:11.219" starttime="20240529 13:15:09.210" status="PASS"/>
     </kw>
     <status endtime="20240529 13:15:11.219" starttime="20240529 13:15:09.195" status="PASS"/>
    </kw>
    <kw library="powerconnect" name="Start Options">
     <kw library="CustomSapGuiLibrary" name="Click Element">
      <arg>
       wnd[1]/tbar[0]/btn[27]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240529 13:15:11.328" starttime="20240529 13:15:11.219" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240529 13:15:13.337">
       Slept 2 seconds
      </msg>
      <status endtime="20240529 13:15:13.337" starttime="20240529 13:15:11.328" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       015_start options_prep.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240529 13:15:13.400">
       &lt;a href="pabot_results%5C0%5C015_start%20options_prep.jpg"&gt;&lt;img src="pabot_results%5C0%5C015_start%20options_prep.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240529 13:15:13.400" starttime="20240529 13:15:13.337" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Select Radio Button">
      <arg>
       wnd[1]/usr/tabsSTART_OPTIONS/tabpSTART_FC1/ssubSTART_OPTIONS_SCA:SAPLOCS_UI:0701/radLAY0700-RB1_DIA
      </arg>
      <doc>
       Sets radio button to the specified value.
      </doc>
      <status endtime="20240529 13:15:13.415" starttime="20240529 13:15:13.400" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240529 13:15:15.427">
       Slept 2 seconds
      </msg>
      <status endtime="20240529 13:15:15.427" starttime="20240529 13:15:13.415" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       016_prepration_dialog.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240529 13:15:15.474">
       &lt;a href="pabot_results%5C0%5C016_prepration_dialog.jpg"&gt;&lt;img src="pabot_results%5C0%5C016_prepration_dialog.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240529 13:15:15.474" starttime="20240529 13:15:15.427" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Click Element">
      <arg>
       wnd[1]/usr/tabsSTART_OPTIONS/tabpSTART_FC2
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240529 13:15:15.552" starttime="20240529 13:15:15.474" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240529 13:15:17.560">
       Slept 2 seconds
      </msg>
      <status endtime="20240529 13:15:17.560" starttime="20240529 13:15:15.552" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       017_select_import_1.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240529 13:15:17.638">
       &lt;a href="pabot_results%5C0%5C017_select_import_1.jpg"&gt;&lt;img src="pabot_results%5C0%5C017_select_import_1.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240529 13:15:17.638" starttime="20240529 13:15:17.560" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Select Radio Button">
      <arg>
       wnd[1]/usr/tabsSTART_OPTIONS/tabpSTART_FC2/ssubSTART_OPTIONS_SCA:SAPLOCS_UI:0702/radLAY0700-RB2_BTCHIM
      </arg>
      <doc>
       Sets radio button to the specified value.
      </doc>
      <status endtime="20240529 13:15:17.716" starttime="20240529 13:15:17.638" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240529 13:15:19.729">
       Slept 2 seconds
      </msg>
      <status endtime="20240529 13:15:19.729" starttime="20240529 13:15:17.716" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       018_import_bkgd.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240529 13:15:19.791">
       &lt;a href="pabot_results%5C0%5C018_import_bkgd.jpg"&gt;&lt;img src="pabot_results%5C0%5C018_import_bkgd.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240529 13:15:19.791" starttime="20240529 13:15:19.729" status="PASS"/>
     </kw>
     <status endtime="20240529 13:15:19.791" starttime="20240529 13:15:11.219" status="PASS"/>
    </kw>
    <kw library="powerconnect" name="Import Option">
     <kw library="CustomSapGuiLibrary" name="Click Element">
      <arg>
       wnd[1]/tbar[0]/btn[0]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240529 13:15:19.916" starttime="20240529 13:15:19.791" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240529 13:15:20.916">
       Slept 1 second
      </msg>
      <status endtime="20240529 13:15:20.916" starttime="20240529 13:15:19.916" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       019_start options selected.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240529 13:15:20.963">
       &lt;a href="pabot_results%5C0%5C019_start%20options%20selected.jpg"&gt;&lt;img src="pabot_results%5C0%5C019_start%20options%20selected.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240529 13:15:20.963" starttime="20240529 13:15:20.916" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Click Element">
      <arg>
       wnd[1]/tbar[0]/btn[25]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240529 13:15:23.032" starttime="20240529 13:15:20.963" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       3
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240529 13:15:26.063">
       Slept 3 seconds
      </msg>
      <status endtime="20240529 13:15:26.063" starttime="20240529 13:15:23.047" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Is Errors During Disassembling Existing">
      <arg>
       wnd[0]
      </arg>
      <arg>
       wnd[0]/tbar[1]/btn[20]
      </arg>
      <msg level="INFO" timestamp="20240529 13:15:26.684">
       Window exists
      </msg>
      <status endtime="20240529 13:15:26.684" starttime="20240529 13:15:26.063" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240529 13:15:28.690">
       Slept 2 seconds
      </msg>
      <status endtime="20240529 13:15:28.690" starttime="20240529 13:15:26.684" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Is Saint User Defined Existing">
      <arg>
       wnd[1]
      </arg>
      <arg>
       wnd[1]/tbar[0]/btn[0]
      </arg>
      <msg level="INFO" timestamp="20240529 13:16:23.153">
       Window exists
      </msg>
      <status endtime="20240529 13:16:23.153" starttime="20240529 13:15:28.690" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240529 13:16:25.161">
       Slept 2 seconds
      </msg>
      <status endtime="20240529 13:16:25.161" starttime="20240529 13:16:23.153" status="PASS"/>
     </kw>
     <status endtime="20240529 13:16:25.161" starttime="20240529 13:15:19.791" status="PASS"/>
    </kw>
    <tag>
     powerconnect
    </tag>
    <tag>
     Regression
    </tag>
    <status endtime="20240529 13:16:25.161" starttime="20240529 13:14:58.980" status="PASS"/>
   </test>
   <test id="s1-s1-t3" line="19" name="Process Until Finish Button Visible">
    <kw library="powerconnect" name="Process Until Finish Button Visible">
     <kw library="CustomSapGuiLibrary" name="Get Finish Cell Text">
      <var>
       ${cell_text_2}
      </var>
      <arg>
       ${finish_str}
      </arg>
      <arg>
       ${button_id}
      </arg>
      <arg>
       ${status_line}
      </arg>
      <arg>
       ${refresh_id}
      </arg>
      <msg level="INFO" timestamp="20240529 13:23:29.597">
       Installation Successful
      </msg>
      <msg level="INFO" timestamp="20240529 13:23:29.597">
       ${cell_text_2} = The Add-on was successfully imported with the displayed queue
      </msg>
      <status endtime="20240529 13:23:29.597" starttime="20240529 13:16:25.161" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Log">
      <arg>
       ${cell_text_2}
      </arg>
      <doc>
       Logs the given message with the given level.
      </doc>
      <msg level="INFO" timestamp="20240529 13:23:29.597">
       The Add-on was successfully imported with the displayed queue
      </msg>
      <status endtime="20240529 13:23:29.597" starttime="20240529 13:23:29.597" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240529 13:23:31.616">
       Slept 2 seconds
      </msg>
      <status endtime="20240529 13:23:31.616" starttime="20240529 13:23:29.613" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Click Element">
      <arg>
       wnd[1]/tbar[0]/btn[27]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240529 13:23:31.928" starttime="20240529 13:23:31.616" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       023_Addon_import2.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240529 13:23:32.006">
       &lt;a href="pabot_results%5C0%5C023_Addon_import2.jpg"&gt;&lt;img src="pabot_results%5C0%5C023_Addon_import2.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240529 13:23:32.006" starttime="20240529 13:23:31.928" status="PASS"/>
     </kw>
     <status endtime="20240529 13:23:32.006" starttime="20240529 13:16:25.161" status="PASS"/>
    </kw>
    <tag>
     powerconnect
    </tag>
    <tag>
     Regression
    </tag>
    <status endtime="20240529 13:23:32.006" starttime="20240529 13:16:25.161" status="PASS"/>
   </test>
   <kw library="powerconnect" name="System Logout" type="TEARDOWN">
    <kw library="CustomSapGuiLibrary" name="Run Transaction">
     <arg>
      /nex
     </arg>
     <doc>
      Runs a Sap transaction. An error is given when an unknown transaction is specified.
     </doc>
     <status endtime="20240529 13:23:32.069" starttime="20240529 13:23:32.006" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      2
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240529 13:23:34.071">
      Slept 2 seconds
     </msg>
     <status endtime="20240529 13:23:34.071" starttime="20240529 13:23:32.069" status="PASS"/>
    </kw>
    <kw library="PDF" name="Create Pdf">
     <arg>
      ${screenshot_directory}
     </arg>
     <arg>
      ${output_pdf}
     </arg>
     <status endtime="20240529 13:23:45.117" starttime="20240529 13:23:34.071" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      2
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240529 13:23:47.119">
      Slept 2 seconds
     </msg>
     <status endtime="20240529 13:23:47.119" starttime="20240529 13:23:45.117" status="PASS"/>
    </kw>
    <status endtime="20240529 13:23:47.119" starttime="20240529 13:23:32.006" status="PASS"/>
   </kw>
   <status endtime="20240529 13:23:47.119" starttime="20240529 13:14:27.022" status="PASS"/>
  </suite>
  <doc>
   Testing functionality through Robot Framework
  </doc>
  <meta name="environment">
   Dev
  </meta>
  <meta name="test_browser_name">
   chrome
  </meta>
  <meta name="test_browser_version">
   125.0.6422.77
  </meta>
  <meta name="test_driver_version">
   124.0.6367.207
  </meta>
  <meta name="test_environment">
   Dev
  </meta>
  <meta name="test_freeze_dependencies">
   astroid==3.1.0,attrs==23.2.0,beautifulsoup4==4.12.3,bs4==0.0.2,build==1.2.1,certifi==2024.2.2,cffi==1.16.0,chardet==5.2.0,charset-normalizer==3.3.2,click==8.1.7,cmake==3.29.3,colorama==0.4.6,comtypes==1.4.2,cryptography==42.0.5,defusedxml==0.7.1,dill==0.3.8,docutils==0.21.2,et-xmlfile==1.1.0,exceptiongroup==1.2.1,fire==0.4.0,gitdb==4.0.11,GitPython==3.1.43,h11==0.14.0,idna==3.7,isort==5.13.2,Jinja2==3.1.3,jira==3.8.0,jsonpath-ng==1.6.1,jsonschema==4.21.1,jsonschema-specifications==2023.12.1,lazy-object-proxy==1.10.0,lxml==5.2.1,markdown-it-py==3.0.0,MarkupSafe==2.1.5,mccabe==0.7.0,mdurl==0.1.2,natsort==8.4.0,oauthlib==3.2.2,openpyxl==3.1.2,outcome==1.3.0.post0,packaging==24.0,pathspec==0.11.2,pendulum==3.0.0,pillow==10.3.0,pip==24.0,platformdirs==4.2.1,ply==3.11,psutil==5.9.8,pycparser==2.22,Pygments==2.17.2,pylint==3.1.0,pynput-robocorp-fork==5.0.0,pyperclip==1.8.2,pyproject-toml==0.0.10,pyproject_hooks==1.1.0,PySocks==1.7.1,python-dateutil==2.9.0.post0,python-dotenv==1.0.1,pywin32==306,PyYAML==6.0.1,referencing==0.35.0,reportlab==4.2.0,requests==2.31.0,requests-oauthlib==2.0.0,requests-toolbelt==1.0.0,rich==13.7.1,rich-click==1.6.1,robotframework==6.0.2,robotframework-datadriver==1.9.0,robotframework-excellib==2.0.1,robotframework-jsonlibrary==0.5,robotframework-pabot==2.16.0,robotframework-pythonlibcore==4.2.0,robotframework-requests==0.9.2,robotframework-sapguilibrary==1.1,robotframework-seleniumlibrary==5.1.3,robotframework-stacktrace==0.4.1,robotframework-tidy==4.5.0,rpaframework-core==11.3.2,rpaframework-windows==7.5.1,rpds-py==0.18.0,selenium==4.9.1,setuptools==70.0.0,six==1.16.0,smmap==5.0.1,sniffio==1.3.1,sortedcontainers==2.4.0,soupsieve==2.5,termcolor==2.4.0,time-machine==2.14.1,toml==0.10.2,tomli==2.0.1,tomlkit==0.12.4,trio==0.25.0,trio-websocket==0.11.1,typing_extensions==4.11.0,tzdata==2024.1,uiautomation==2.0.18,urllib3==2.2.1,webdriver-manager==4.0.1,wheel==0.43.0,wrapt==1.16.0,wsproto==1.2.0
  </meta>
  <status endtime="20240529 13:23:47.619" starttime="20240529 13:14:22.482" status="PASS"/>
 </suite>
 <statistics>
  <total>
   <stat fail="0" pass="3" skip="0">
    All Tests
   </stat>
  </total>
  <tag>
   <stat fail="0" pass="3" skip="0">
    powerconnect
   </stat>
   <stat fail="0" pass="3" skip="0">
    Regression
   </stat>
  </tag>
  <suite>
   <stat fail="0" id="s1" name="Tests" pass="3" skip="0">
    Tests
   </stat>
   <stat fail="0" id="s1-s1" name="Test Powerconnect" pass="3" skip="0">
    Tests.Test Powerconnect
   </stat>
  </suite>
 </statistics>
 <errors>
 </errors>
</robot>
