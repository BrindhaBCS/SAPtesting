<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.12.3 on win32)" generated="20240530 16:50:32.046" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="D:\RobotFramework\SAPtesting\Tests">
<kw name="Setup highest level suite" type="SETUP">
<kw name="Set Variable" library="BuiltIn">
<var>${d.test_server}</var>
<arg>${test_server}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240530 16:50:32.892" level="INFO">${d.test_server} = Dev</msg>
<status status="PASS" starttime="20240530 16:50:32.892" endtime="20240530 16:50:32.892"/>
</kw>
<kw name="Reset screenshot count variable" library="Support">
<kw name="Set Variable" library="BuiltIn">
<var>${screenshotCount}</var>
<arg>${PABOTQUEUEINDEX}_1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240530 16:50:32.908" level="INFO">${screenshotCount} = 0_1</msg>
<status status="PASS" starttime="20240530 16:50:32.892" endtime="20240530 16:50:32.908"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${screenshotCount}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240530 16:50:32.908" level="INFO">${screenshotCount} = 0_1</msg>
<status status="PASS" starttime="20240530 16:50:32.908" endtime="20240530 16:50:32.908"/>
</kw>
<kw name="Set up screenshot directory" library="Support">
<kw name="Create Directory" library="OperatingSystem">
<arg>${OUTPUTDIR}${/}${wvar('screenshot_dir')}</arg>
<doc>Creates the specified directory.</doc>
<msg timestamp="20240530 16:50:32.908" level="INFO">Web.Dev.screenshot_dir: Screenshot</msg>
<msg timestamp="20240530 16:50:32.908" level="INFO" html="true">Created directory '&lt;a href="file://D:\RobotFramework\SAPtesting\Output\74448ed6-1ad3-4dc1-8a2b-63deb0a4a693\pabot_results\0\Screenshot"&gt;D:\RobotFramework\SAPtesting\Output\74448ed6-1ad3-4dc1-8a2b-63deb0a4a693\pabot_results\0\Screenshot&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20240530 16:50:32.908" endtime="20240530 16:50:32.908"/>
</kw>
<status status="PASS" starttime="20240530 16:50:32.908" endtime="20240530 16:50:32.908"/>
</kw>
<status status="PASS" starttime="20240530 16:50:32.892" endtime="20240530 16:50:32.908"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${screenshot_taking}</arg>
<arg>${True}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240530 16:50:32.908" level="INFO">${screenshot_taking} = True</msg>
<status status="PASS" starttime="20240530 16:50:32.908" endtime="20240530 16:50:32.908"/>
</kw>
<kw name="Setup linux execution" library="Support">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${web_test_check}</var>
<arg>Variable Should Exist</arg>
<arg>${web_test}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Variable Should Exist" library="BuiltIn">
<arg>${web_test}</arg>
<doc>Fails unless the given variable exists within the current scope.</doc>
<status status="PASS" starttime="20240530 16:50:32.908" endtime="20240530 16:50:32.908"/>
</kw>
<msg timestamp="20240530 16:50:32.908" level="INFO">${web_test_check} = True</msg>
<status status="PASS" starttime="20240530 16:50:32.908" endtime="20240530 16:50:32.908"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${web_test_check}</arg>
<arg>Setup Docker Execution Options</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup Docker Execution Options" library="Support_Web">
<kw name="Setup Suite Metadata" library="Support_Web">
<arg>${browser}</arg>
<kw name="Get Browser Metadata" library="BrowserSupport">
<var>&amp;{browser_information}</var>
<arg>browser=${browser}</arg>
<doc>Fetches browser metadata information
:param browser: Name of the browser for which information is fetched
:param reload: Re-read the metadata based on the browser
:return: Browser metadata information, dict of format
            {"browser_version": browser version value,
             "driver_version": driver version value}</doc>
<msg timestamp="20240530 16:50:36.968" level="INFO">&amp;{browser_information} = { browser_version=125.0.6422.77 | driver_version=124.0.6367.207  }</msg>
<status status="PASS" starttime="20240530 16:50:32.908" endtime="20240530 16:50:36.968"/>
</kw>
<kw name="Set Suite Metadata" library="BuiltIn">
<arg>test_browser_name</arg>
<arg>${browser}</arg>
<doc>Sets metadata for the current test suite.</doc>
<msg timestamp="20240530 16:50:36.968" level="INFO">Set suite metadata 'test_browser_name' to value 'chrome'.</msg>
<status status="PASS" starttime="20240530 16:50:36.968" endtime="20240530 16:50:36.968"/>
</kw>
<kw name="Set Suite Metadata" library="BuiltIn">
<arg>test_browser_version</arg>
<arg>${browser_information.browser_version}</arg>
<doc>Sets metadata for the current test suite.</doc>
<msg timestamp="20240530 16:50:36.968" level="INFO">Set suite metadata 'test_browser_version' to value '125.0.6422.77'.</msg>
<status status="PASS" starttime="20240530 16:50:36.968" endtime="20240530 16:50:36.968"/>
</kw>
<kw name="Set Suite Metadata" library="BuiltIn">
<arg>test_driver_version</arg>
<arg>${browser_information.driver_version}</arg>
<doc>Sets metadata for the current test suite.</doc>
<msg timestamp="20240530 16:50:36.968" level="INFO">Set suite metadata 'test_driver_version' to value '124.0.6367.207 '.</msg>
<status status="PASS" starttime="20240530 16:50:36.968" endtime="20240530 16:50:36.968"/>
</kw>
<status status="PASS" starttime="20240530 16:50:32.908" endtime="20240530 16:50:36.968"/>
</kw>
<kw name="Setup Global Docker Execution Options" library="Support_Web">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${global_browser_options}</arg>
<arg>None</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240530 16:50:36.968" level="INFO">${global_browser_options} = None</msg>
<status status="PASS" starttime="20240530 16:50:36.968" endtime="20240530 16:50:36.968"/>
</kw>
<kw name="Get Environment Variable" library="OperatingSystem">
<var>${docker_check}</var>
<arg>EXECUTION_ENVIRONMENT</arg>
<arg>not_found</arg>
<doc>Returns the value of an environment variable with the given name.</doc>
<msg timestamp="20240530 16:50:36.968" level="INFO">${docker_check} = not_found</msg>
<status status="PASS" starttime="20240530 16:50:36.968" endtime="20240530 16:50:36.968"/>
</kw>
<kw name="Run Keyword And Return If" library="BuiltIn">
<arg>"${docker_check}"!="docker"</arg>
<arg>Log</arg>
<arg>Not executing on Docker</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Log" library="BuiltIn">
<arg>Not executing on Docker</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240530 16:50:36.968" level="INFO">Not executing on Docker</msg>
<status status="PASS" starttime="20240530 16:50:36.968" endtime="20240530 16:50:36.968"/>
</kw>
<msg timestamp="20240530 16:50:36.968" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240530 16:50:36.968" endtime="20240530 16:50:36.968"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{options}</var>
<arg>--headless</arg>
<arg>--no-sandbox</arg>
<arg>--disable-dev-shm-usage</arg>
<doc>Returns a list containing given items.</doc>
<status status="NOT RUN" starttime="20240530 16:50:36.968" endtime="20240530 16:50:36.968"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>@{docker_options}</arg>
<arg>@{options}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20240530 16:50:36.968" endtime="20240530 16:50:36.968"/>
</kw>
<status status="PASS" starttime="20240530 16:50:36.968" endtime="20240530 16:50:36.968"/>
</kw>
<kw name="Create Webdriver for chrome preferences" library="Support_Web">
<kw name="Update Docker Execution Options" library="Support_Web">
<var>${list_prefs}</var>
<arg>${list_prefs}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${docker_check}</var>
<arg>Variable Should Exist</arg>
<arg>${docker_options}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Variable Should Exist" library="BuiltIn">
<arg>${docker_options}</arg>
<doc>Fails unless the given variable exists within the current scope.</doc>
<msg timestamp="20240530 16:50:36.968" level="FAIL">Variable '${docker_options}' does not exist.</msg>
<status status="FAIL" starttime="20240530 16:50:36.968" endtime="20240530 16:50:36.968"/>
</kw>
<msg timestamp="20240530 16:50:36.968" level="INFO">${docker_check} = False</msg>
<status status="PASS" starttime="20240530 16:50:36.968" endtime="20240530 16:50:36.968"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${list_prefs_length}</var>
<arg>${list_prefs}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240530 16:50:36.968" level="INFO">Length is 1</msg>
<msg timestamp="20240530 16:50:36.968" level="INFO">${list_prefs_length} = 1</msg>
<status status="PASS" starttime="20240530 16:50:36.968" endtime="20240530 16:50:36.968"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${list_prefs}</var>
<arg>${docker_check} and ${list_prefs_length}&gt;0 and ${list_prefs}[0] != []</arg>
<arg>Combine Lists</arg>
<arg>${list_prefs}</arg>
<arg>${docker_options}</arg>
<arg>ELSE IF</arg>
<arg>${docker_check}</arg>
<arg>Set Variable</arg>
<arg>${docker_options}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${list_prefs}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${list_prefs}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20240530 16:50:36.968" endtime="20240530 16:50:36.968"/>
</kw>
<msg timestamp="20240530 16:50:36.968" level="INFO">${list_prefs} = [[]]</msg>
<status status="PASS" starttime="20240530 16:50:36.968" endtime="20240530 16:50:36.968"/>
</kw>
<msg timestamp="20240530 16:50:36.968" level="INFO">${list_prefs} = [[]]</msg>
<status status="PASS" starttime="20240530 16:50:36.968" endtime="20240530 16:50:36.968"/>
</kw>
<kw name="Create Chrome Options for download preferences" library="Support_Web">
<var>${chrome_options}</var>
<kw name="Evaluate" library="BuiltIn">
<var>${chrome_options}</var>
<arg>sys.modules['selenium.webdriver'].ChromeOptions()</arg>
<arg>sys</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240530 16:50:36.984" level="INFO">${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x0000029C2AAA3E90&gt;</msg>
<status status="PASS" starttime="20240530 16:50:36.984" endtime="20240530 16:50:36.984"/>
</kw>
<msg timestamp="20240530 16:50:36.984" level="INFO">${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x0000029C2AAA3E90&gt;</msg>
<status status="PASS" starttime="20240530 16:50:36.984" endtime="20240530 16:50:36.984"/>
</kw>
<kw name="Update Preferences List" library="Support_Web">
<arg>${chrome_options}</arg>
<arg>@{list_prefs}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${string_prefs}</var>
<arg>${list_prefs}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240530 16:50:36.984" level="INFO">${string_prefs} = [[]]</msg>
<status status="PASS" starttime="20240530 16:50:36.984" endtime="20240530 16:50:36.984"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${string_prefs} == [[]]</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20240530 16:50:36.984" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240530 16:50:36.984" endtime="20240530 16:50:36.984"/>
</kw>
<for flavor="IN">
<var>${preference}</var>
<value>@{list_prefs}</value>
<iter>
<var name="${preference}"/>
<kw name="Call Method" library="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>${preference}</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="NOT RUN" starttime="20240530 16:50:36.984" endtime="20240530 16:50:36.984"/>
</kw>
<status status="NOT RUN" starttime="20240530 16:50:36.984" endtime="20240530 16:50:36.984"/>
</iter>
<status status="NOT RUN" starttime="20240530 16:50:36.984" endtime="20240530 16:50:36.984"/>
</for>
<status status="PASS" starttime="20240530 16:50:36.984" endtime="20240530 16:50:36.984"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_experimental_option</arg>
<arg>prefs</arg>
<arg>${kw_prefs}</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240530 16:50:36.984" endtime="20240530 16:50:36.984"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${global_browser_options}</arg>
<arg>${chrome options}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240530 16:50:36.984" level="INFO">${global_browser_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x0000029C2AAA3E90&gt;</msg>
<status status="PASS" starttime="20240530 16:50:36.984" endtime="20240530 16:50:36.984"/>
</kw>
<status status="PASS" starttime="20240530 16:50:36.968" endtime="20240530 16:50:36.984"/>
</kw>
<status status="PASS" starttime="20240530 16:50:32.908" endtime="20240530 16:50:36.984"/>
</kw>
<status status="PASS" starttime="20240530 16:50:32.908" endtime="20240530 16:50:36.984"/>
</kw>
<status status="PASS" starttime="20240530 16:50:32.908" endtime="20240530 16:50:36.984"/>
</kw>
<kw name="Set Suite Metadata" library="BuiltIn">
<arg>environment</arg>
<arg>${test_server}</arg>
<doc>Sets metadata for the current test suite.</doc>
<msg timestamp="20240530 16:50:36.984" level="INFO">Set suite metadata 'environment' to value 'Dev'.</msg>
<status status="PASS" starttime="20240530 16:50:36.984" endtime="20240530 16:50:36.984"/>
</kw>
<status status="PASS" starttime="20240530 16:50:32.892" endtime="20240530 16:50:36.984"/>
</kw>
<suite id="s1-s1" name="Test License" source="D:\RobotFramework\SAPtesting\Tests\Test_License.robot">
<kw name="System Logon" library="License" type="SETUP">
<kw name="Start Process" library="Process">
<arg>${symvar('Nike_SAP')}</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20240530 16:50:37.344" level="INFO">Sym.Dev.Nike_SAP: C:\Program Files\SAP\FrontEnd\SAPGUI\saplogon.exe</msg>
<msg timestamp="20240530 16:50:37.344" level="INFO">Starting process:
"C:\Program Files\SAP\FrontEnd\SAPGUI\saplogon.exe"</msg>
<status status="PASS" starttime="20240530 16:50:37.344" endtime="20240530 16:50:37.360"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240530 16:50:42.372" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20240530 16:50:37.360" endtime="20240530 16:50:42.372"/>
</kw>
<kw name="Connect To Session" library="SAP_Tcode_Library">
<doc>Connects to an open session SAP.</doc>
<status status="PASS" starttime="20240530 16:50:42.372" endtime="20240530 16:50:42.372"/>
</kw>
<kw name="Open Connection" library="SAP_Tcode_Library">
<arg>${symvar('Nike_connection')}</arg>
<doc>Opens a connection to the given connection name. Be sure to provide the full connection name, including the bracket part.</doc>
<msg timestamp="20240530 16:50:42.388" level="INFO">Sym.Dev.Nike_connection: CFG</msg>
<status status="PASS" starttime="20240530 16:50:42.372" endtime="20240530 16:50:43.075"/>
</kw>
<kw name="Input Text" library="SAP_Tcode_Library">
<arg>wnd[0]/usr/txtRSYST-MANDT</arg>
<arg>${symvar('CFG_CLIENT_license')}</arg>
<doc>Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.</doc>
<msg timestamp="20240530 16:50:43.075" level="INFO">Sym.Dev.CFG_CLIENT_license: 100</msg>
<msg timestamp="20240530 16:50:43.122" level="INFO">Typing text '100' into text field 'wnd[0]/usr/txtRSYST-MANDT'.</msg>
<status status="PASS" starttime="20240530 16:50:43.075" endtime="20240530 16:50:43.122"/>
</kw>
<kw name="Input Text" library="SAP_Tcode_Library">
<arg>wnd[0]/usr/txtRSYST-BNAME</arg>
<arg>${symvar('CFG_USER_license')}</arg>
<doc>Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.</doc>
<msg timestamp="20240530 16:50:43.138" level="INFO">Sym.Dev.CFG_USER_license: splunktest</msg>
<msg timestamp="20240530 16:50:43.138" level="INFO">Typing text 'splunktest' into text field 'wnd[0]/usr/txtRSYST-BNAME'.</msg>
<status status="PASS" starttime="20240530 16:50:43.122" endtime="20240530 16:50:43.138"/>
</kw>
<kw name="Input Password" library="SAP_Tcode_Library">
<arg>wnd[0]/usr/pwdRSYST-BCODE</arg>
<arg>%{CFG_PASS_license}</arg>
<doc>Inserts the given password into the text field identified by locator.
The password is not recorded in the log.</doc>
<msg timestamp="20240530 16:50:43.153" level="INFO">Typing password into text field 'wnd[0]/usr/pwdRSYST-BCODE'.</msg>
<status status="PASS" starttime="20240530 16:50:43.138" endtime="20240530 16:50:43.153"/>
</kw>
<kw name="Send Vkey" library="SAP_Tcode_Library">
<arg>0</arg>
<doc>Sends a SAP virtual key combination to the window, not into an element.
If you want to send a value to a text field, use `input text` instead.</doc>
<status status="PASS" starttime="20240530 16:50:43.153" endtime="20240530 16:50:43.687"/>
</kw>
<kw name="Multiple Logon Handling" library="SAP_Tcode_Library">
<arg>wnd[1]</arg>
<arg>wnd[1]/usr/radMULTI_LOGON_OPT2</arg>
<arg>wnd[1]/tbar[0]/btn[0]</arg>
<status status="PASS" starttime="20240530 16:50:43.687" endtime="20240530 16:50:43.687"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240530 16:50:44.687" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20240530 16:50:43.687" endtime="20240530 16:50:44.687"/>
</kw>
<status status="PASS" starttime="20240530 16:50:37.344" endtime="20240530 16:50:44.687"/>
</kw>
<test id="s1-s1-t1" name="License" line="10">
<kw name="License Key" library="License">
<kw name="Count Excel Rows" library="SAP_Tcode_Library">
<var>${row_count}</var>
<arg>${EXCEL_FILE}</arg>
<msg timestamp="20240530 16:50:44.703" level="INFO">15</msg>
<msg timestamp="20240530 16:50:44.703" level="INFO">${row_count} = 15</msg>
<status status="PASS" starttime="20240530 16:50:44.687" endtime="20240530 16:50:44.703"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${row_count}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20240530 16:50:44.703" endtime="20240530 16:50:44.703"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${rows}</var>
<arg>${row_count} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240530 16:50:44.703" level="INFO">${rows} = 16</msg>
<status status="PASS" starttime="20240530 16:50:44.703" endtime="20240530 16:50:44.703"/>
</kw>
<for flavor="IN RANGE">
<var>${row}</var>
<value>2</value>
<value>${rows}</value>
<iter>
<var name="${row}">2</var>
<kw name="Log" library="BuiltIn">
<arg>row value: ${row}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240530 16:50:44.703" level="INFO">row value: 2</msg>
<status status="PASS" starttime="20240530 16:50:44.703" endtime="20240530 16:50:44.703"/>
</kw>
<kw name="Read Excel" library="License">
<var>${INSTALL_NO}</var>
<arg>${EXCEL_FILE}</arg>
<arg>Sheet2</arg>
<arg>${row}</arg>
<arg>3</arg>
<kw name="Open Excel Document" library="ExcelLibrary">
<arg>${filepath}</arg>
<arg>1</arg>
<doc>Opens xlsx document file.</doc>
<status status="PASS" starttime="20240530 16:50:44.703" endtime="20240530 16:50:44.718"/>
</kw>
<kw name="Get Sheet" library="ExcelLibrary">
<arg>${sheetname}</arg>
<doc>Returns a page from the current document.</doc>
<status status="PASS" starttime="20240530 16:50:44.718" endtime="20240530 16:50:44.718"/>
</kw>
<kw name="Read Excel Cell" library="ExcelLibrary">
<var>${data}</var>
<arg>${rownum}</arg>
<arg>${colnum}</arg>
<doc>Returns content of a cell.</doc>
<msg timestamp="20240530 16:50:44.718" level="INFO">${data} = *</msg>
<status status="PASS" starttime="20240530 16:50:44.718" endtime="20240530 16:50:44.718"/>
</kw>
<kw name="Close Current Excel Document" library="ExcelLibrary">
<doc>Closes current document.</doc>
<status status="PASS" starttime="20240530 16:50:44.718" endtime="20240530 16:50:44.718"/>
</kw>
<msg timestamp="20240530 16:50:44.718" level="INFO">${INSTALL_NO} = *</msg>
<status status="PASS" starttime="20240530 16:50:44.703" endtime="20240530 16:50:44.718"/>
</kw>
<if>
<branch type="IF" condition="'${INSTALL_NO}' == '*'">
<kw name="Read Excel" library="License">
<var>${license_key}</var>
<arg>${EXCEL_FILE}</arg>
<arg>Sheet2</arg>
<arg>${row}</arg>
<arg>1</arg>
<kw name="Open Excel Document" library="ExcelLibrary">
<arg>${filepath}</arg>
<arg>1</arg>
<doc>Opens xlsx document file.</doc>
<status status="PASS" starttime="20240530 16:50:44.718" endtime="20240530 16:50:44.734"/>
</kw>
<kw name="Get Sheet" library="ExcelLibrary">
<arg>${sheetname}</arg>
<doc>Returns a page from the current document.</doc>
<status status="PASS" starttime="20240530 16:50:44.734" endtime="20240530 16:50:44.734"/>
</kw>
<kw name="Read Excel Cell" library="ExcelLibrary">
<var>${data}</var>
<arg>${rownum}</arg>
<arg>${colnum}</arg>
<doc>Returns content of a cell.</doc>
<msg timestamp="20240530 16:50:44.734" level="INFO">${data} = QQFHJY-ED7TDB-AD5WVB-HBFAB9-EQCXCR-64W4TQ-VNT8PW-F2XV3U-4F5GC1-QQQA1C-XM6DC5-YB9RC9-JCNBHQ</msg>
<status status="PASS" starttime="20240530 16:50:44.734" endtime="20240530 16:50:44.734"/>
</kw>
<kw name="Close Current Excel Document" library="ExcelLibrary">
<doc>Closes current document.</doc>
<status status="PASS" starttime="20240530 16:50:44.734" endtime="20240530 16:50:44.734"/>
</kw>
<msg timestamp="20240530 16:50:44.734" level="INFO">${license_key} = QQFHJY-ED7TDB-AD5WVB-HBFAB9-EQCXCR-64W4TQ-VNT8PW-F2XV3U-4F5GC1-QQQA1C-XM6DC5-YB9RC9-JCNBHQ</msg>
<status status="PASS" starttime="20240530 16:50:44.718" endtime="20240530 16:50:44.734"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Found license key: ${license_key}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240530 16:50:44.734" level="INFO">Found license key: QQFHJY-ED7TDB-AD5WVB-HBFAB9-EQCXCR-64W4TQ-VNT8PW-F2XV3U-4F5GC1-QQQA1C-XM6DC5-YB9RC9-JCNBHQ</msg>
<status status="PASS" starttime="20240530 16:50:44.734" endtime="20240530 16:50:44.734"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${license_key}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240530 16:50:44.734" level="INFO">${license_key} = QQFHJY-ED7TDB-AD5WVB-HBFAB9-EQCXCR-64W4TQ-VNT8PW-F2XV3U-4F5GC1-QQQA1C-XM6DC5-YB9RC9-JCNBHQ</msg>
<status status="PASS" starttime="20240530 16:50:44.734" endtime="20240530 16:50:44.734"/>
</kw>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing FOR loop.</doc>
<msg timestamp="20240530 16:50:44.734" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20240530 16:50:44.734" endtime="20240530 16:50:44.734"/>
</kw>
<status status="PASS" starttime="20240530 16:50:44.718" endtime="20240530 16:50:44.734"/>
</branch>
<status status="PASS" starttime="20240530 16:50:44.718" endtime="20240530 16:50:44.734"/>
</if>
<status status="PASS" starttime="20240530 16:50:44.703" endtime="20240530 16:50:44.734"/>
</iter>
<status status="PASS" starttime="20240530 16:50:44.703" endtime="20240530 16:50:44.734"/>
</for>
<status status="PASS" starttime="20240530 16:50:44.687" endtime="20240530 16:50:44.734"/>
</kw>
<kw name="Apply License" library="License">
<kw name="Run Transaction" library="SAP_Tcode_Library">
<arg>/n/bnwvs/main</arg>
<doc>Runs a Sap transaction. An error is given when an unknown transaction is specified.</doc>
<status status="PASS" starttime="20240530 16:50:44.734" endtime="20240530 16:50:45.250"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240530 16:50:48.254" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20240530 16:50:45.250" endtime="20240530 16:50:48.254"/>
</kw>
<kw name="Click Element" library="SAP_Tcode_Library">
<arg>wnd[1]/usr/btnBUTTON_1</arg>
<doc>Performs a single click on a given element. Used only for buttons, tabs and menu items.</doc>
<status status="PASS" starttime="20240530 16:50:48.254" endtime="20240530 16:50:48.651"/>
</kw>
<kw name="Copy To Clipboard" library="SAP_Tcode_Library">
<var>${key}</var>
<arg>${license_key}</arg>
<msg timestamp="20240530 16:50:48.651" level="INFO">${key} = QQFHJY-ED7TDB-AD5WVB-HBFAB9-EQCXCR-64W4TQ-VNT8PW-F2XV3U-4F5GC1-QQQA1C-XM6DC5-YB9RC9-JCNBHQ</msg>
<status status="PASS" starttime="20240530 16:50:48.651" endtime="20240530 16:50:48.651"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${key}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20240530 16:50:48.651" endtime="20240530 16:50:48.651"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240530 16:50:51.655" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20240530 16:50:48.651" endtime="20240530 16:50:51.655"/>
</kw>
<kw name="Click Element" library="SAP_Tcode_Library">
<arg>wnd[1]/tbar[0]/btn[13]</arg>
<doc>Performs a single click on a given element. Used only for buttons, tabs and menu items.</doc>
<status status="PASS" starttime="20240530 16:50:51.655" endtime="20240530 16:50:52.077"/>
</kw>
<kw name="Take Screenshot" library="SAP_Tcode_Library">
<arg>Import from clipboard.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240530 16:50:52.170" level="INFO" html="true">&lt;a href="Import%20from%20clipboard.jpg"&gt;&lt;img src="Import%20from%20clipboard.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240530 16:50:52.077" endtime="20240530 16:50:52.170"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240530 16:50:55.176" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20240530 16:50:52.170" endtime="20240530 16:50:55.176"/>
</kw>
<kw name="Is License Key Invalid" library="SAP_Tcode_Library">
<arg>wnd[2]</arg>
<arg>wnd[2]/tbar[0]/btn[0]</arg>
<msg timestamp="20240530 16:50:55.338" level="INFO">Window exists</msg>
<status status="PASS" starttime="20240530 16:50:55.176" endtime="20240530 16:50:55.338"/>
</kw>
<kw name="Take Screenshot" library="SAP_Tcode_Library">
<arg>Continue.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240530 16:50:55.401" level="INFO" html="true">&lt;a href="Continue.jpg"&gt;&lt;img src="Continue.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240530 16:50:55.338" endtime="20240530 16:50:55.401"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240530 16:50:58.413" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20240530 16:50:55.401" endtime="20240530 16:50:58.413"/>
</kw>
<kw name="Click Element" library="SAP_Tcode_Library">
<arg>wnd[1]/tbar[0]/btn[12]</arg>
<doc>Performs a single click on a given element. Used only for buttons, tabs and menu items.</doc>
<status status="PASS" starttime="20240530 16:50:58.413" endtime="20240530 16:50:58.799"/>
</kw>
<kw name="Take Screenshot" library="SAP_Tcode_Library">
<arg>Cancel.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240530 16:50:58.861" level="INFO" html="true">&lt;a href="Cancel.jpg"&gt;&lt;img src="Cancel.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240530 16:50:58.799" endtime="20240530 16:50:58.861"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240530 16:51:00.866" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20240530 16:50:58.861" endtime="20240530 16:51:00.866"/>
</kw>
<kw name="Click Element" library="SAP_Tcode_Library">
<arg>wnd[2]/usr/btnBUTTON_2</arg>
<doc>Performs a single click on a given element. Used only for buttons, tabs and menu items.</doc>
<status status="PASS" starttime="20240530 16:51:00.866" endtime="20240530 16:51:01.070"/>
</kw>
<kw name="Take Screenshot" library="SAP_Tcode_Library">
<arg>No to action required.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240530 16:51:01.132" level="INFO" html="true">&lt;a href="No%20to%20action%20required.jpg"&gt;&lt;img src="No%20to%20action%20required.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240530 16:51:01.070" endtime="20240530 16:51:01.132"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240530 16:51:03.145" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20240530 16:51:01.132" endtime="20240530 16:51:03.145"/>
</kw>
<kw name="Input Text" library="SAP_Tcode_Library">
<arg>wnd[1]/usr/txtGV_EMAIL_0061</arg>
<doc>Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.</doc>
<msg timestamp="20240530 16:51:03.145" level="FAIL">Keyword 'SAP_Tcode_Library.Input Text' expected 2 arguments, got 1.</msg>
<status status="FAIL" starttime="20240530 16:51:03.145" endtime="20240530 16:51:03.145"/>
</kw>
<kw name="Click Element" library="SAP_Tcode_Library">
<arg>wnd[1]/tbar[0]/btn[0]</arg>
<doc>Performs a single click on a given element. Used only for buttons, tabs and menu items.</doc>
<status status="NOT RUN" starttime="20240530 16:51:03.145" endtime="20240530 16:51:03.145"/>
</kw>
<kw name="Take Screenshot" library="SAP_Tcode_Library">
<arg>SAP.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<status status="NOT RUN" starttime="20240530 16:51:03.145" endtime="20240530 16:51:03.145"/>
</kw>
<kw name="Click Element" library="SAP_Tcode_Library">
<arg>wnd[1]/tbar[0]/btn[0]</arg>
<doc>Performs a single click on a given element. Used only for buttons, tabs and menu items.</doc>
<status status="NOT RUN" starttime="20240530 16:51:03.145" endtime="20240530 16:51:03.145"/>
</kw>
<kw name="Take Screenshot" library="SAP_Tcode_Library">
<arg>license_usage.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<status status="NOT RUN" starttime="20240530 16:51:03.145" endtime="20240530 16:51:03.145"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20240530 16:51:03.145" endtime="20240530 16:51:03.145"/>
</kw>
<status status="FAIL" starttime="20240530 16:50:44.734" endtime="20240530 16:51:03.145"/>
</kw>
<tag>License</tag>
<tag>Regression</tag>
<status status="FAIL" starttime="20240530 16:50:44.687" endtime="20240530 16:51:03.145">Keyword 'SAP_Tcode_Library.Input Text' expected 2 arguments, got 1.</status>
</test>
<kw name="System Logout" library="License" type="TEARDOWN">
<kw name="Run Transaction" library="SAP_Tcode_Library">
<arg>/nex</arg>
<doc>Runs a Sap transaction. An error is given when an unknown transaction is specified.</doc>
<status status="PASS" starttime="20240530 16:51:03.145" endtime="20240530 16:51:03.207"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240530 16:51:08.212" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20240530 16:51:03.207" endtime="20240530 16:51:08.212"/>
</kw>
<kw name="Take Screenshot" library="SAP_Tcode_Library">
<arg>logoutpage.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240530 16:51:08.275" level="INFO" html="true">&lt;a href="logoutpage.jpg"&gt;&lt;img src="logoutpage.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240530 16:51:08.212" endtime="20240530 16:51:08.275"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>10</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240530 16:51:18.278" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20240530 16:51:08.275" endtime="20240530 16:51:18.278"/>
</kw>
<status status="PASS" starttime="20240530 16:51:03.145" endtime="20240530 16:51:18.278"/>
</kw>
<status status="FAIL" starttime="20240530 16:50:36.984" endtime="20240530 16:51:18.278"/>
</suite>
<doc>Testing functionality through Robot Framework</doc>
<meta name="environment">Dev</meta>
<meta name="test_browser_name">chrome</meta>
<meta name="test_browser_version">125.0.6422.77</meta>
<meta name="test_driver_version">124.0.6367.207 </meta>
<meta name="test_environment">Dev</meta>
<meta name="test_freeze_dependencies">astroid==3.1.0,attrs==23.2.0,beautifulsoup4==4.12.3,bs4==0.0.2,build==1.2.1,certifi==2024.2.2,cffi==1.16.0,chardet==5.2.0,charset-normalizer==3.3.2,click==8.1.7,cmake==3.29.3,colorama==0.4.6,comtypes==1.4.2,cryptography==42.0.5,defusedxml==0.7.1,dill==0.3.8,docutils==0.21.2,et-xmlfile==1.1.0,exceptiongroup==1.2.1,fire==0.4.0,gitdb==4.0.11,GitPython==3.1.43,h11==0.14.0,idna==3.7,isort==5.13.2,Jinja2==3.1.3,jira==3.8.0,jsonpath-ng==1.6.1,jsonschema==4.21.1,jsonschema-specifications==2023.12.1,lazy-object-proxy==1.10.0,lxml==5.2.1,markdown-it-py==3.0.0,MarkupSafe==2.1.5,mccabe==0.7.0,mdurl==0.1.2,natsort==8.4.0,oauthlib==3.2.2,openpyxl==3.1.2,outcome==1.3.0.post0,packaging==24.0,pathspec==0.11.2,pendulum==3.0.0,pillow==10.3.0,pip==24.0,platformdirs==4.2.1,ply==3.11,psutil==5.9.8,pycparser==2.22,Pygments==2.17.2,pylint==3.1.0,pynput-robocorp-fork==5.0.0,pyperclip==1.8.2,pyproject-toml==0.0.10,pyproject_hooks==1.1.0,PySocks==1.7.1,python-dateutil==2.9.0.post0,python-dotenv==1.0.1,pywin32==306,PyYAML==6.0.1,referencing==0.35.0,reportlab==4.2.0,requests==2.31.0,requests-oauthlib==2.0.0,requests-toolbelt==1.0.0,rich==13.7.1,rich-click==1.6.1,robotframework==6.0.2,robotframework-datadriver==1.9.0,robotframework-excellib==2.0.1,robotframework-jsonlibrary==0.5,robotframework-pabot==2.16.0,robotframework-pythonlibcore==4.2.0,robotframework-requests==0.9.2,robotframework-sapguilibrary==1.1,robotframework-seleniumlibrary==5.1.3,robotframework-stacktrace==0.4.1,robotframework-tidy==4.5.0,rpaframework-core==11.3.2,rpaframework-windows==7.5.1,rpds-py==0.18.0,selenium==4.9.1,setuptools==70.0.0,six==1.16.0,smmap==5.0.1,sniffio==1.3.1,sortedcontainers==2.4.0,soupsieve==2.5,termcolor==2.4.0,time-machine==2.14.1,toml==0.10.2,tomli==2.0.1,tomlkit==0.12.4,trio==0.25.0,trio-websocket==0.11.1,typing_extensions==4.11.0,tzdata==2024.1,uiautomation==2.0.18,urllib3==2.2.1,webdriver-manager==4.0.1,wheel==0.43.0,wrapt==1.16.0,wsproto==1.2.0</meta>
<status status="FAIL" starttime="20240530 16:50:32.470" endtime="20240530 16:51:18.653"/>
</suite>
<statistics>
<total>
<stat pass="0" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="1" skip="0">License</stat>
<stat pass="0" fail="1" skip="0">Regression</stat>
</tag>
<suite>
<stat pass="0" fail="1" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="0" fail="1" skip="0" id="s1-s1" name="Test License">Tests.Test License</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
