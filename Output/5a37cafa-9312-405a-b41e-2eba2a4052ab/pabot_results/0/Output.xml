<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.12.1 on win32)" generated="20240304 16:16:24.392" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="C:\RobotFramework\sap_testing\Tests">
<kw name="Setup highest level suite" type="SETUP">
<kw name="Set Variable" library="BuiltIn">
<var>${d.test_server}</var>
<arg>${test_server}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240304 16:16:25.007" level="INFO">${d.test_server} = Dev</msg>
<status status="PASS" starttime="20240304 16:16:25.007" endtime="20240304 16:16:25.007"/>
</kw>
<kw name="Reset screenshot count variable" library="Support">
<kw name="Set Variable" library="BuiltIn">
<var>${screenshotCount}</var>
<arg>${PABOTQUEUEINDEX}_1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240304 16:16:25.007" level="INFO">${screenshotCount} = 0_1</msg>
<status status="PASS" starttime="20240304 16:16:25.007" endtime="20240304 16:16:25.007"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${screenshotCount}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240304 16:16:25.007" level="INFO">${screenshotCount} = 0_1</msg>
<status status="PASS" starttime="20240304 16:16:25.007" endtime="20240304 16:16:25.007"/>
</kw>
<kw name="Set up screenshot directory" library="Support">
<kw name="Create Directory" library="OperatingSystem">
<arg>${OUTPUTDIR}${/}${wvar('screenshot_dir')}</arg>
<doc>Creates the specified directory.</doc>
<msg timestamp="20240304 16:16:25.007" level="INFO">Web.Dev.screenshot_dir: Screenshot</msg>
<msg timestamp="20240304 16:16:25.007" level="INFO" html="true">Created directory '&lt;a href="file://C:\RobotFramework\sap_testing\Output\5a37cafa-9312-405a-b41e-2eba2a4052ab\pabot_results\0\Screenshot"&gt;C:\RobotFramework\sap_testing\Output\5a37cafa-9312-405a-b41e-2eba2a4052ab\pabot_results\0\Screenshot&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20240304 16:16:25.007" endtime="20240304 16:16:25.007"/>
</kw>
<status status="PASS" starttime="20240304 16:16:25.007" endtime="20240304 16:16:25.007"/>
</kw>
<status status="PASS" starttime="20240304 16:16:25.007" endtime="20240304 16:16:25.007"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${screenshot_taking}</arg>
<arg>${True}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240304 16:16:25.007" level="INFO">${screenshot_taking} = True</msg>
<status status="PASS" starttime="20240304 16:16:25.007" endtime="20240304 16:16:25.007"/>
</kw>
<kw name="Setup linux execution" library="Support">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${web_test_check}</var>
<arg>Variable Should Exist</arg>
<arg>${web_test}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Variable Should Exist" library="BuiltIn">
<arg>${web_test}</arg>
<doc>Fails unless the given variable exists within the current scope.</doc>
<status status="PASS" starttime="20240304 16:16:25.007" endtime="20240304 16:16:25.007"/>
</kw>
<msg timestamp="20240304 16:16:25.016" level="INFO">${web_test_check} = True</msg>
<status status="PASS" starttime="20240304 16:16:25.007" endtime="20240304 16:16:25.016"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${web_test_check}</arg>
<arg>Setup Docker Execution Options</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup Docker Execution Options" library="Support_Web">
<kw name="Setup Suite Metadata" library="Support_Web">
<arg>${browser}</arg>
<kw name="Get Browser Metadata" library="BrowserSupport">
<var>&amp;{browser_information}</var>
<arg>browser=${browser}</arg>
<doc>Fetches browser metadata information
:param browser: Name of the browser for which information is fetched
:param reload: Re-read the metadata based on the browser
:return: Browser metadata information, dict of format
            {"browser_version": browser version value,
             "driver_version": driver version value}</doc>
<msg timestamp="20240304 16:16:28.407" level="INFO">&amp;{browser_information} = { browser_version=122.0.6261.95 | driver_version=121.0.6167.85  }</msg>
<status status="PASS" starttime="20240304 16:16:25.016" endtime="20240304 16:16:28.407"/>
</kw>
<kw name="Set Suite Metadata" library="BuiltIn">
<arg>test_browser_name</arg>
<arg>${browser}</arg>
<doc>Sets metadata for the current test suite.</doc>
<msg timestamp="20240304 16:16:28.407" level="INFO">Set suite metadata 'test_browser_name' to value 'chrome'.</msg>
<status status="PASS" starttime="20240304 16:16:28.407" endtime="20240304 16:16:28.407"/>
</kw>
<kw name="Set Suite Metadata" library="BuiltIn">
<arg>test_browser_version</arg>
<arg>${browser_information.browser_version}</arg>
<doc>Sets metadata for the current test suite.</doc>
<msg timestamp="20240304 16:16:28.407" level="INFO">Set suite metadata 'test_browser_version' to value '122.0.6261.95'.</msg>
<status status="PASS" starttime="20240304 16:16:28.407" endtime="20240304 16:16:28.407"/>
</kw>
<kw name="Set Suite Metadata" library="BuiltIn">
<arg>test_driver_version</arg>
<arg>${browser_information.driver_version}</arg>
<doc>Sets metadata for the current test suite.</doc>
<msg timestamp="20240304 16:16:28.411" level="INFO">Set suite metadata 'test_driver_version' to value '121.0.6167.85 '.</msg>
<status status="PASS" starttime="20240304 16:16:28.407" endtime="20240304 16:16:28.411"/>
</kw>
<status status="PASS" starttime="20240304 16:16:25.016" endtime="20240304 16:16:28.411"/>
</kw>
<kw name="Setup Global Docker Execution Options" library="Support_Web">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${global_browser_options}</arg>
<arg>None</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240304 16:16:28.411" level="INFO">${global_browser_options} = None</msg>
<status status="PASS" starttime="20240304 16:16:28.411" endtime="20240304 16:16:28.411"/>
</kw>
<kw name="Get Environment Variable" library="OperatingSystem">
<var>${docker_check}</var>
<arg>EXECUTION_ENVIRONMENT</arg>
<arg>not_found</arg>
<doc>Returns the value of an environment variable with the given name.</doc>
<msg timestamp="20240304 16:16:28.411" level="INFO">${docker_check} = not_found</msg>
<status status="PASS" starttime="20240304 16:16:28.411" endtime="20240304 16:16:28.411"/>
</kw>
<kw name="Run Keyword And Return If" library="BuiltIn">
<arg>"${docker_check}"!="docker"</arg>
<arg>Log</arg>
<arg>Not executing on Docker</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Log" library="BuiltIn">
<arg>Not executing on Docker</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240304 16:16:28.414" level="INFO">Not executing on Docker</msg>
<status status="PASS" starttime="20240304 16:16:28.414" endtime="20240304 16:16:28.414"/>
</kw>
<msg timestamp="20240304 16:16:28.414" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240304 16:16:28.411" endtime="20240304 16:16:28.414"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{options}</var>
<arg>--headless</arg>
<arg>--no-sandbox</arg>
<arg>--disable-dev-shm-usage</arg>
<doc>Returns a list containing given items.</doc>
<status status="NOT RUN" starttime="20240304 16:16:28.414" endtime="20240304 16:16:28.414"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>@{docker_options}</arg>
<arg>@{options}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20240304 16:16:28.414" endtime="20240304 16:16:28.414"/>
</kw>
<status status="PASS" starttime="20240304 16:16:28.411" endtime="20240304 16:16:28.414"/>
</kw>
<kw name="Create Webdriver for chrome preferences" library="Support_Web">
<kw name="Update Docker Execution Options" library="Support_Web">
<var>${list_prefs}</var>
<arg>${list_prefs}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${docker_check}</var>
<arg>Variable Should Exist</arg>
<arg>${docker_options}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Variable Should Exist" library="BuiltIn">
<arg>${docker_options}</arg>
<doc>Fails unless the given variable exists within the current scope.</doc>
<msg timestamp="20240304 16:16:28.417" level="FAIL">Variable '${docker_options}' does not exist.</msg>
<status status="FAIL" starttime="20240304 16:16:28.414" endtime="20240304 16:16:28.417"/>
</kw>
<msg timestamp="20240304 16:16:28.417" level="INFO">${docker_check} = False</msg>
<status status="PASS" starttime="20240304 16:16:28.414" endtime="20240304 16:16:28.417"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${list_prefs_length}</var>
<arg>${list_prefs}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240304 16:16:28.417" level="INFO">Length is 1</msg>
<msg timestamp="20240304 16:16:28.417" level="INFO">${list_prefs_length} = 1</msg>
<status status="PASS" starttime="20240304 16:16:28.417" endtime="20240304 16:16:28.417"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${list_prefs}</var>
<arg>${docker_check} and ${list_prefs_length}&gt;0 and ${list_prefs}[0] != []</arg>
<arg>Combine Lists</arg>
<arg>${list_prefs}</arg>
<arg>${docker_options}</arg>
<arg>ELSE IF</arg>
<arg>${docker_check}</arg>
<arg>Set Variable</arg>
<arg>${docker_options}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${list_prefs}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${list_prefs}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20240304 16:16:28.417" endtime="20240304 16:16:28.417"/>
</kw>
<msg timestamp="20240304 16:16:28.417" level="INFO">${list_prefs} = [[]]</msg>
<status status="PASS" starttime="20240304 16:16:28.417" endtime="20240304 16:16:28.417"/>
</kw>
<msg timestamp="20240304 16:16:28.417" level="INFO">${list_prefs} = [[]]</msg>
<status status="PASS" starttime="20240304 16:16:28.414" endtime="20240304 16:16:28.417"/>
</kw>
<kw name="Create Chrome Options for download preferences" library="Support_Web">
<var>${chrome_options}</var>
<kw name="Evaluate" library="BuiltIn">
<var>${chrome_options}</var>
<arg>sys.modules['selenium.webdriver'].ChromeOptions()</arg>
<arg>sys</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240304 16:16:28.417" level="INFO">${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x00000201CF12E000&gt;</msg>
<status status="PASS" starttime="20240304 16:16:28.417" endtime="20240304 16:16:28.417"/>
</kw>
<msg timestamp="20240304 16:16:28.417" level="INFO">${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x00000201CF12E000&gt;</msg>
<status status="PASS" starttime="20240304 16:16:28.417" endtime="20240304 16:16:28.417"/>
</kw>
<kw name="Update Preferences List" library="Support_Web">
<arg>${chrome_options}</arg>
<arg>@{list_prefs}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${string_prefs}</var>
<arg>${list_prefs}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240304 16:16:28.417" level="INFO">${string_prefs} = [[]]</msg>
<status status="PASS" starttime="20240304 16:16:28.417" endtime="20240304 16:16:28.417"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${string_prefs} == [[]]</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20240304 16:16:28.423" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240304 16:16:28.417" endtime="20240304 16:16:28.423"/>
</kw>
<for flavor="IN">
<var>${preference}</var>
<value>@{list_prefs}</value>
<iter>
<var name="${preference}"/>
<kw name="Call Method" library="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>${preference}</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="NOT RUN" starttime="20240304 16:16:28.423" endtime="20240304 16:16:28.423"/>
</kw>
<status status="NOT RUN" starttime="20240304 16:16:28.423" endtime="20240304 16:16:28.423"/>
</iter>
<status status="NOT RUN" starttime="20240304 16:16:28.423" endtime="20240304 16:16:28.423"/>
</for>
<status status="PASS" starttime="20240304 16:16:28.417" endtime="20240304 16:16:28.423"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_experimental_option</arg>
<arg>prefs</arg>
<arg>${kw_prefs}</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240304 16:16:28.423" endtime="20240304 16:16:28.423"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${global_browser_options}</arg>
<arg>${chrome options}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240304 16:16:28.423" level="INFO">${global_browser_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x00000201CF12E000&gt;</msg>
<status status="PASS" starttime="20240304 16:16:28.423" endtime="20240304 16:16:28.423"/>
</kw>
<status status="PASS" starttime="20240304 16:16:28.414" endtime="20240304 16:16:28.423"/>
</kw>
<status status="PASS" starttime="20240304 16:16:25.016" endtime="20240304 16:16:28.423"/>
</kw>
<status status="PASS" starttime="20240304 16:16:25.016" endtime="20240304 16:16:28.423"/>
</kw>
<status status="PASS" starttime="20240304 16:16:25.007" endtime="20240304 16:16:28.423"/>
</kw>
<kw name="Set Suite Metadata" library="BuiltIn">
<arg>environment</arg>
<arg>${test_server}</arg>
<doc>Sets metadata for the current test suite.</doc>
<msg timestamp="20240304 16:16:28.423" level="INFO">Set suite metadata 'environment' to value 'Dev'.</msg>
<status status="PASS" starttime="20240304 16:16:28.423" endtime="20240304 16:16:28.423"/>
</kw>
<status status="PASS" starttime="20240304 16:16:25.007" endtime="20240304 16:16:28.423"/>
</kw>
<suite id="s1-s1" name="Test FB70" source="C:\RobotFramework\sap_testing\Tests\Test_FB70.robot">
<kw name="SAP logon" library="FB70" type="SETUP">
<kw name="Start Process" library="Process">
<arg>${symvar('SAP_SERVER')}</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20240304 16:16:28.715" level="INFO">Sym.Dev.SAP_SERVER: C:\Program Files (x86)\SAP\FrontEnd\SAPgui\saplogon.exe</msg>
<msg timestamp="20240304 16:16:28.715" level="INFO">Starting process:
"C:\Program Files (x86)\SAP\FrontEnd\SAPgui\saplogon.exe"</msg>
<status status="PASS" starttime="20240304 16:16:28.715" endtime="20240304 16:16:28.715"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>10s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240304 16:16:38.716" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20240304 16:16:28.715" endtime="20240304 16:16:38.716"/>
</kw>
<kw name="Connect To Session" library="CustomSapGuiLibrary">
<doc>Connects to an open session SAP.</doc>
<status status="PASS" starttime="20240304 16:16:38.716" endtime="20240304 16:16:38.722"/>
</kw>
<kw name="Open Connection" library="CustomSapGuiLibrary">
<arg>${symvar('connection')}</arg>
<doc>Opens a connection to the given connection name. Be sure to provide the full connection name, including the bracket part.</doc>
<msg timestamp="20240304 16:16:38.722" level="INFO">Sym.Dev.connection: BIS</msg>
<status status="PASS" starttime="20240304 16:16:38.722" endtime="20240304 16:16:39.569"/>
</kw>
<kw name="Input Text" library="CustomSapGuiLibrary">
<arg>wnd[0]/usr/txtRSYST-MANDT</arg>
<arg>${symvar('login_client')}</arg>
<doc>Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.</doc>
<msg timestamp="20240304 16:16:39.585" level="INFO">Sym.Dev.login_client: 800</msg>
<msg timestamp="20240304 16:16:39.743" level="INFO">Typing text '800' into text field 'wnd[0]/usr/txtRSYST-MANDT'.</msg>
<status status="PASS" starttime="20240304 16:16:39.569" endtime="20240304 16:16:39.743"/>
</kw>
<kw name="Input Text" library="CustomSapGuiLibrary">
<arg>wnd[0]/usr/txtRSYST-BNAME</arg>
<arg>${symvar('login_user')}</arg>
<doc>Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.</doc>
<msg timestamp="20240304 16:16:39.743" level="INFO">Sym.Dev.login_user: lokeshk</msg>
<msg timestamp="20240304 16:16:39.759" level="INFO">Typing text 'lokeshk' into text field 'wnd[0]/usr/txtRSYST-BNAME'.</msg>
<status status="PASS" starttime="20240304 16:16:39.743" endtime="20240304 16:16:39.759"/>
</kw>
<kw name="Input Password" library="CustomSapGuiLibrary">
<arg>wnd[0]/usr/pwdRSYST-BCODE</arg>
<arg>%{SAP_PASSWORD}</arg>
<doc>Inserts the given password into the text field identified by locator.
The password is not recorded in the log.</doc>
<msg timestamp="20240304 16:16:39.775" level="INFO">Typing password into text field 'wnd[0]/usr/pwdRSYST-BCODE'.</msg>
<status status="PASS" starttime="20240304 16:16:39.759" endtime="20240304 16:16:39.775"/>
</kw>
<kw name="Send Vkey" library="CustomSapGuiLibrary">
<arg>0</arg>
<doc>Sends a SAP virtual key combination to the window, not into an element.
If you want to send a value to a text field, use `input text` instead.</doc>
<status status="PASS" starttime="20240304 16:16:39.775" endtime="20240304 16:16:40.763"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240304 16:16:43.930" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20240304 16:16:40.763" endtime="20240304 16:16:43.930"/>
</kw>
<kw name="Multiple Logon Handling" library="CustomSapGuiLibrary">
<arg>wnd[1]</arg>
<arg>wnd[1]/usr/radMULTI_LOGON_OPT2</arg>
<arg>wnd[1]/tbar[0]/btn[0]</arg>
<status status="PASS" starttime="20240304 16:16:43.930" endtime="20240304 16:16:44.133"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240304 16:16:49.134" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20240304 16:16:44.133" endtime="20240304 16:16:49.134"/>
</kw>
<status status="PASS" starttime="20240304 16:16:28.713" endtime="20240304 16:16:49.134"/>
</kw>
<test id="s1-s1-t1" name="Interlinked transactions for Invoice" line="8">
<kw name="FB70 Invoice entry" library="FB70">
<kw name="Count Excel Rows" library="CustomSapGuiLibrary">
<var>${user_count}</var>
<arg>${symvar('excel_path')}</arg>
<msg timestamp="20240304 16:16:49.134" level="INFO">Sym.Dev.excel_path: C:\RobotFramework\sap_testing\Tests\Resource\invoice.xlsx</msg>
<msg timestamp="20240304 16:16:49.134" level="INFO">[Errno 2] No such file or directory: 'C:\\RobotFramework\\sap_testing\\Tests\\Resource\\invoice.xlsx'</msg>
<msg timestamp="20240304 16:16:49.134" level="INFO">${user_count} = None</msg>
<status status="PASS" starttime="20240304 16:16:49.134" endtime="20240304 16:16:49.134"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${rows}</var>
<arg>${user_count} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240304 16:16:49.134" level="FAIL">Evaluating expression 'None + 1' failed: TypeError: unsupported operand type(s) for +: 'NoneType' and 'int'</msg>
<status status="FAIL" starttime="20240304 16:16:49.134" endtime="20240304 16:16:49.134"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${rows}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20240304 16:16:49.134" endtime="20240304 16:16:49.134"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${rows}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20240304 16:16:49.134" endtime="20240304 16:16:49.134"/>
</kw>
<kw name="Run Transaction" library="CustomSapGuiLibrary">
<arg>FB70</arg>
<doc>Runs a Sap transaction. An error is given when an unknown transaction is specified.</doc>
<status status="NOT RUN" starttime="20240304 16:16:49.138" endtime="20240304 16:16:49.138"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20240304 16:16:49.138" endtime="20240304 16:16:49.138"/>
</kw>
<for flavor="IN RANGE">
<var>${row_count}</var>
<value>2</value>
<value>${rows}</value>
<iter>
<var name="${row_count}"/>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${row_count}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20240304 16:16:49.138" endtime="20240304 16:16:49.138"/>
</kw>
<kw name="Read Excel" library="FB70">
<var>${customer}</var>
<arg>${symvar('excel_path')}</arg>
<arg>${symvar('sheet_name')}</arg>
<arg>${row_count}</arg>
<arg>1</arg>
<status status="NOT RUN" starttime="20240304 16:16:49.138" endtime="20240304 16:16:49.138"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${customer}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20240304 16:16:49.138" endtime="20240304 16:16:49.138"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${customer}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20240304 16:16:49.138" endtime="20240304 16:16:49.138"/>
</kw>
<kw name="Read Excel" library="FB70">
<var>${invoice_date}</var>
<arg>${symvar('excel_path')}</arg>
<arg>${symvar('sheet_name')}</arg>
<arg>${row_count}</arg>
<arg>2</arg>
<status status="NOT RUN" starttime="20240304 16:16:49.138" endtime="20240304 16:16:49.138"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${invoice_date}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20240304 16:16:49.138" endtime="20240304 16:16:49.138"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${invoice_date}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20240304 16:16:49.138" endtime="20240304 16:16:49.138"/>
</kw>
<kw name="Read Excel" library="FB70">
<var>${amount}</var>
<arg>${symvar('excel_path')}</arg>
<arg>${symvar('sheet_name')}</arg>
<arg>${row_count}</arg>
<arg>3</arg>
<status status="NOT RUN" starttime="20240304 16:16:49.138" endtime="20240304 16:16:49.138"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${amount}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20240304 16:16:49.138" endtime="20240304 16:16:49.138"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${amount}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20240304 16:16:49.138" endtime="20240304 16:16:49.138"/>
</kw>
<kw name="Read Excel" library="FB70">
<var>${text}</var>
<arg>${symvar('excel_path')}</arg>
<arg>${symvar('sheet_name')}</arg>
<arg>${row_count}</arg>
<arg>4</arg>
<status status="NOT RUN" starttime="20240304 16:16:49.138" endtime="20240304 16:16:49.138"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${text}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20240304 16:16:49.138" endtime="20240304 16:16:49.138"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${text}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20240304 16:16:49.138" endtime="20240304 16:16:49.138"/>
</kw>
<kw name="Read Excel" library="FB70">
<var>${gl_amount}</var>
<arg>${symvar('excel_path')}</arg>
<arg>${symvar('sheet_name')}</arg>
<arg>${row_count}</arg>
<arg>5</arg>
<status status="NOT RUN" starttime="20240304 16:16:49.138" endtime="20240304 16:16:49.138"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${gl_amount}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20240304 16:16:49.138" endtime="20240304 16:16:49.138"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${gl_amount}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20240304 16:16:49.138" endtime="20240304 16:16:49.138"/>
</kw>
<kw name="Read Excel" library="FB70">
<var>${amount_cur_doc}</var>
<arg>${symvar('excel_path')}</arg>
<arg>${symvar('sheet_name')}</arg>
<arg>${row_count}</arg>
<arg>6</arg>
<status status="NOT RUN" starttime="20240304 16:16:49.138" endtime="20240304 16:16:49.138"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${amount_cur_doc}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20240304 16:16:49.138" endtime="20240304 16:16:49.138"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${amount_cur_doc}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20240304 16:16:49.138" endtime="20240304 16:16:49.138"/>
</kw>
<kw name="Read Excel" library="FB70">
<var>${cost_center}</var>
<arg>${symvar('excel_path')}</arg>
<arg>${symvar('sheet_name')}</arg>
<arg>${row_count}</arg>
<arg>7</arg>
<status status="NOT RUN" starttime="20240304 16:16:49.138" endtime="20240304 16:16:49.138"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${cost_center}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20240304 16:16:49.138" endtime="20240304 16:16:49.138"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${cost_center}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20240304 16:16:49.138" endtime="20240304 16:16:49.138"/>
</kw>
<kw name="Transaction FB70" library="FB70">
<status status="NOT RUN" starttime="20240304 16:16:49.138" endtime="20240304 16:16:49.138"/>
</kw>
<status status="NOT RUN" starttime="20240304 16:16:49.138" endtime="20240304 16:16:49.138"/>
</iter>
<status status="NOT RUN" starttime="20240304 16:16:49.138" endtime="20240304 16:16:49.138"/>
</for>
<status status="FAIL" starttime="20240304 16:16:49.134" endtime="20240304 16:16:49.138"/>
</kw>
<tag>FB70</tag>
<tag>Regression</tag>
<status status="FAIL" starttime="20240304 16:16:49.134" endtime="20240304 16:16:49.138">Evaluating expression 'None + 1' failed: TypeError: unsupported operand type(s) for +: 'NoneType' and 'int'</status>
</test>
<kw name="SAP Logout" library="FB70" type="TEARDOWN">
<kw name="Run Transaction" library="CustomSapGuiLibrary">
<arg>/nex</arg>
<doc>Runs a Sap transaction. An error is given when an unknown transaction is specified.</doc>
<status status="PASS" starttime="20240304 16:16:49.138" endtime="20240304 16:16:49.374"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240304 16:16:54.374" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20240304 16:16:49.374" endtime="20240304 16:16:54.374"/>
</kw>
<status status="PASS" starttime="20240304 16:16:49.138" endtime="20240304 16:16:54.374"/>
</kw>
<status status="FAIL" starttime="20240304 16:16:28.423" endtime="20240304 16:16:54.374"/>
</suite>
<doc>Testing functionality through Robot Framework</doc>
<meta name="environment">Dev</meta>
<meta name="test_browser_name">chrome</meta>
<meta name="test_browser_version">122.0.6261.95</meta>
<meta name="test_driver_version">121.0.6167.85 </meta>
<meta name="test_environment">Dev</meta>
<meta name="test_freeze_dependencies">astroid==3.0.3,attrs==23.2.0,beautifulsoup4==4.12.3,bs4==0.0.2,certifi==2024.2.2,cffi==1.16.0,chardet==5.2.0,charset-normalizer==3.3.2,click==8.1.7,colorama==0.4.6,cryptography==42.0.2,defusedxml==0.7.1,dill==0.3.8,docutils==0.20.1,et-xmlfile==1.1.0,exceptiongroup==1.2.0,gitdb==4.0.11,GitPython==3.1.41,h11==0.14.0,idna==3.6,isort==5.13.2,Jinja2==3.1.3,jira==3.6.0,jsonpath-ng==1.6.1,jsonschema==4.21.1,jsonschema-specifications==2023.12.1,lazy-object-proxy==1.10.0,lxml==5.1.0,markdown-it-py==3.0.0,MarkupSafe==2.1.5,mccabe==0.7.0,mdurl==0.1.2,natsort==8.4.0,oauthlib==3.2.2,openpyxl==3.1.2,outcome==1.3.0.post0,packaging==23.2,pathspec==0.11.2,pillow==10.2.0,pip==24.0,platformdirs==4.2.0,ply==3.11,pycparser==2.21,Pygments==2.17.2,pylint==3.0.3,PySocks==1.7.1,pywin32==306,PyYAML==6.0.1,referencing==0.33.0,reportlab==4.0.9,requests==2.31.0,requests-oauthlib==1.3.1,requests-toolbelt==1.0.0,rich==13.7.0,rich-click==1.6.1,robotframework==6.0.2,robotframework-datadriver==1.9.0,robotframework-excellib==2.0.1,robotframework-jsonlibrary==0.5,robotframework-pabot==2.16.0,robotframework-pythonlibcore==4.2.0,robotframework-requests==0.9.2,robotframework-sapguilibrary==1.1,robotframework-seleniumlibrary==5.1.3,robotframework-stacktrace==0.4.1,robotframework-tidy==4.5.0,rpds-py==0.17.1,selenium==4.9.1,setuptools==69.0.3,smmap==5.0.1,sniffio==1.3.0,sortedcontainers==2.4.0,soupsieve==2.5,tomli==2.0.1,tomlkit==0.12.3,trio==0.24.0,trio-websocket==0.11.1,typing_extensions==4.9.0,urllib3==2.2.0,wheel==0.42.0,wrapt==1.16.0,wsproto==1.2.0</meta>
<status status="FAIL" starttime="20240304 16:16:24.675" endtime="20240304 16:16:54.877"/>
</suite>
<statistics>
<total>
<stat pass="0" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="1" skip="0">FB70</stat>
<stat pass="0" fail="1" skip="0">Regression</stat>
</tag>
<suite>
<stat pass="0" fail="1" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="0" fail="1" skip="0" id="s1-s1" name="Test FB70">Tests.Test FB70</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
