<?xml version="1.0" encoding="utf-8"?>
<robot generated="20240531 16:57:00.901" generator="Rebot 6.0.2 (Python 3.12.3 on win32)" rpa="false" schemaversion="3">
 <suite id="s1" name="Tests" source="D:\RobotFramework\SAPtesting\Tests">
  <kw name="Setup highest level suite" type="SETUP">
   <kw library="BuiltIn" name="Set Variable">
    <var>
     ${d.test_server}
    </var>
    <arg>
     ${test_server}
    </arg>
    <doc>
     Returns the given values which can then be assigned to a variables.
    </doc>
    <msg level="INFO" timestamp="20240531 16:56:24.998">
     ${d.test_server} = Dev
    </msg>
    <status endtime="20240531 16:56:24.998" starttime="20240531 16:56:24.998" status="PASS"/>
   </kw>
   <kw library="Support" name="Reset screenshot count variable">
    <kw library="BuiltIn" name="Set Variable">
     <var>
      ${screenshotCount}
     </var>
     <arg>
      ${PABOTQUEUEINDEX}_1
     </arg>
     <doc>
      Returns the given values which can then be assigned to a variables.
     </doc>
     <msg level="INFO" timestamp="20240531 16:56:25.014">
      ${screenshotCount} = 0_1
     </msg>
     <status endtime="20240531 16:56:25.014" starttime="20240531 16:56:24.998" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Set Global Variable">
     <arg>
      ${screenshotCount}
     </arg>
     <doc>
      Makes a variable available globally in all tests and suites.
     </doc>
     <msg level="INFO" timestamp="20240531 16:56:25.014">
      ${screenshotCount} = 0_1
     </msg>
     <status endtime="20240531 16:56:25.014" starttime="20240531 16:56:25.014" status="PASS"/>
    </kw>
    <kw library="Support" name="Set up screenshot directory">
     <kw library="OperatingSystem" name="Create Directory">
      <arg>
       ${OUTPUTDIR}${/}${wvar('screenshot_dir')}
      </arg>
      <doc>
       Creates the specified directory.
      </doc>
      <msg level="INFO" timestamp="20240531 16:56:25.014">
       Web.Dev.screenshot_dir: Screenshot
      </msg>
      <msg html="true" level="INFO" timestamp="20240531 16:56:25.014">
       Created directory '&lt;a href="file://D:\RobotFramework\SAPtesting\Output\ffd02a1f-df16-46db-a492-08e890f5fff8\pabot_results\0\Screenshot"&gt;D:\RobotFramework\SAPtesting\Output\ffd02a1f-df16-46db-a492-08e890f5fff8\pabot_results\0\Screenshot&lt;/a&gt;'.
      </msg>
      <status endtime="20240531 16:56:25.014" starttime="20240531 16:56:25.014" status="PASS"/>
     </kw>
     <status endtime="20240531 16:56:25.014" starttime="20240531 16:56:25.014" status="PASS"/>
    </kw>
    <status endtime="20240531 16:56:25.014" starttime="20240531 16:56:24.998" status="PASS"/>
   </kw>
   <kw library="BuiltIn" name="Set Global Variable">
    <arg>
     ${screenshot_taking}
    </arg>
    <arg>
     ${True}
    </arg>
    <doc>
     Makes a variable available globally in all tests and suites.
    </doc>
    <msg level="INFO" timestamp="20240531 16:56:25.014">
     ${screenshot_taking} = True
    </msg>
    <status endtime="20240531 16:56:25.014" starttime="20240531 16:56:25.014" status="PASS"/>
   </kw>
   <kw library="Support" name="Setup linux execution">
    <kw library="BuiltIn" name="Run Keyword And Return Status">
     <var>
      ${web_test_check}
     </var>
     <arg>
      Variable Should Exist
     </arg>
     <arg>
      ${web_test}
     </arg>
     <doc>
      Runs the given keyword with given arguments and returns the status as a Boolean value.
     </doc>
     <kw library="BuiltIn" name="Variable Should Exist">
      <arg>
       ${web_test}
      </arg>
      <doc>
       Fails unless the given variable exists within the current scope.
      </doc>
      <status endtime="20240531 16:56:25.014" starttime="20240531 16:56:25.014" status="PASS"/>
     </kw>
     <msg level="INFO" timestamp="20240531 16:56:25.014">
      ${web_test_check} = True
     </msg>
     <status endtime="20240531 16:56:25.014" starttime="20240531 16:56:25.014" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Run Keyword If">
     <arg>
      ${web_test_check}
     </arg>
     <arg>
      Setup Docker Execution Options
     </arg>
     <doc>
      Runs the given keyword with the given arguments, if ``condition`` is true.
     </doc>
     <kw library="Support_Web" name="Setup Docker Execution Options">
      <kw library="Support_Web" name="Setup Suite Metadata">
       <arg>
        ${browser}
       </arg>
       <kw library="BrowserSupport" name="Get Browser Metadata">
        <var>
         &amp;{browser_information}
        </var>
        <arg>
         browser=${browser}
        </arg>
        <doc>
         Fetches browser metadata information
:param browser: Name of the browser for which information is fetched
:param reload: Re-read the metadata based on the browser
:return: Browser metadata information, dict of format
            {"browser_version": browser version value,
             "driver_version": driver version value}
        </doc>
        <msg level="INFO" timestamp="20240531 16:56:29.046">
         &amp;{browser_information} = { browser_version=125.0.6422.77 | driver_version=124.0.6367.207  }
        </msg>
        <status endtime="20240531 16:56:29.046" starttime="20240531 16:56:25.014" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Suite Metadata">
        <arg>
         test_browser_name
        </arg>
        <arg>
         ${browser}
        </arg>
        <doc>
         Sets metadata for the current test suite.
        </doc>
        <msg level="INFO" timestamp="20240531 16:56:29.046">
         Set suite metadata 'test_browser_name' to value 'chrome'.
        </msg>
        <status endtime="20240531 16:56:29.046" starttime="20240531 16:56:29.046" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Suite Metadata">
        <arg>
         test_browser_version
        </arg>
        <arg>
         ${browser_information.browser_version}
        </arg>
        <doc>
         Sets metadata for the current test suite.
        </doc>
        <msg level="INFO" timestamp="20240531 16:56:29.046">
         Set suite metadata 'test_browser_version' to value '125.0.6422.77'.
        </msg>
        <status endtime="20240531 16:56:29.046" starttime="20240531 16:56:29.046" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Suite Metadata">
        <arg>
         test_driver_version
        </arg>
        <arg>
         ${browser_information.driver_version}
        </arg>
        <doc>
         Sets metadata for the current test suite.
        </doc>
        <msg level="INFO" timestamp="20240531 16:56:29.046">
         Set suite metadata 'test_driver_version' to value '124.0.6367.207 '.
        </msg>
        <status endtime="20240531 16:56:29.046" starttime="20240531 16:56:29.046" status="PASS"/>
       </kw>
       <status endtime="20240531 16:56:29.046" starttime="20240531 16:56:25.014" status="PASS"/>
      </kw>
      <kw library="Support_Web" name="Setup Global Docker Execution Options">
       <kw library="BuiltIn" name="Set Global Variable">
        <arg>
         ${global_browser_options}
        </arg>
        <arg>
         None
        </arg>
        <doc>
         Makes a variable available globally in all tests and suites.
        </doc>
        <msg level="INFO" timestamp="20240531 16:56:29.046">
         ${global_browser_options} = None
        </msg>
        <status endtime="20240531 16:56:29.046" starttime="20240531 16:56:29.046" status="PASS"/>
       </kw>
       <kw library="OperatingSystem" name="Get Environment Variable">
        <var>
         ${docker_check}
        </var>
        <arg>
         EXECUTION_ENVIRONMENT
        </arg>
        <arg>
         not_found
        </arg>
        <doc>
         Returns the value of an environment variable with the given name.
        </doc>
        <msg level="INFO" timestamp="20240531 16:56:29.046">
         ${docker_check} = not_found
        </msg>
        <status endtime="20240531 16:56:29.046" starttime="20240531 16:56:29.046" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Run Keyword And Return If">
        <arg>
         "${docker_check}"!="docker"
        </arg>
        <arg>
         Log
        </arg>
        <arg>
         Not executing on Docker
        </arg>
        <doc>
         Runs the specified keyword and returns from the enclosing user keyword.
        </doc>
        <kw library="BuiltIn" name="Log">
         <arg>
          Not executing on Docker
         </arg>
         <doc>
          Logs the given message with the given level.
         </doc>
         <msg level="INFO" timestamp="20240531 16:56:29.046">
          Not executing on Docker
         </msg>
         <status endtime="20240531 16:56:29.046" starttime="20240531 16:56:29.046" status="PASS"/>
        </kw>
        <msg level="INFO" timestamp="20240531 16:56:29.046">
         Returning from the enclosing user keyword.
        </msg>
        <status endtime="20240531 16:56:29.046" starttime="20240531 16:56:29.046" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Create List">
        <var>
         @{options}
        </var>
        <arg>
         --headless
        </arg>
        <arg>
         --no-sandbox
        </arg>
        <arg>
         --disable-dev-shm-usage
        </arg>
        <doc>
         Returns a list containing given items.
        </doc>
        <status endtime="20240531 16:56:29.046" starttime="20240531 16:56:29.046" status="NOT RUN"/>
       </kw>
       <kw library="BuiltIn" name="Set Global Variable">
        <arg>
         @{docker_options}
        </arg>
        <arg>
         @{options}
        </arg>
        <doc>
         Makes a variable available globally in all tests and suites.
        </doc>
        <status endtime="20240531 16:56:29.046" starttime="20240531 16:56:29.046" status="NOT RUN"/>
       </kw>
       <status endtime="20240531 16:56:29.046" starttime="20240531 16:56:29.046" status="PASS"/>
      </kw>
      <kw library="Support_Web" name="Create Webdriver for chrome preferences">
       <kw library="Support_Web" name="Update Docker Execution Options">
        <var>
         ${list_prefs}
        </var>
        <arg>
         ${list_prefs}
        </arg>
        <kw library="BuiltIn" name="Run Keyword And Return Status">
         <var>
          ${docker_check}
         </var>
         <arg>
          Variable Should Exist
         </arg>
         <arg>
          ${docker_options}
         </arg>
         <doc>
          Runs the given keyword with given arguments and returns the status as a Boolean value.
         </doc>
         <kw library="BuiltIn" name="Variable Should Exist">
          <arg>
           ${docker_options}
          </arg>
          <doc>
           Fails unless the given variable exists within the current scope.
          </doc>
          <msg level="FAIL" timestamp="20240531 16:56:29.046">
           Variable '${docker_options}' does not exist.
          </msg>
          <status endtime="20240531 16:56:29.046" starttime="20240531 16:56:29.046" status="FAIL"/>
         </kw>
         <msg level="INFO" timestamp="20240531 16:56:29.046">
          ${docker_check} = False
         </msg>
         <status endtime="20240531 16:56:29.046" starttime="20240531 16:56:29.046" status="PASS"/>
        </kw>
        <kw library="BuiltIn" name="Get Length">
         <var>
          ${list_prefs_length}
         </var>
         <arg>
          ${list_prefs}
         </arg>
         <doc>
          Returns and logs the length of the given item as an integer.
         </doc>
         <msg level="INFO" timestamp="20240531 16:56:29.046">
          Length is 1
         </msg>
         <msg level="INFO" timestamp="20240531 16:56:29.046">
          ${list_prefs_length} = 1
         </msg>
         <status endtime="20240531 16:56:29.046" starttime="20240531 16:56:29.046" status="PASS"/>
        </kw>
        <kw library="BuiltIn" name="Run Keyword If">
         <var>
          ${list_prefs}
         </var>
         <arg>
          ${docker_check} and ${list_prefs_length}&gt;0 and ${list_prefs}[0] != []
         </arg>
         <arg>
          Combine Lists
         </arg>
         <arg>
          ${list_prefs}
         </arg>
         <arg>
          ${docker_options}
         </arg>
         <arg>
          ELSE IF
         </arg>
         <arg>
          ${docker_check}
         </arg>
         <arg>
          Set Variable
         </arg>
         <arg>
          ${docker_options}
         </arg>
         <arg>
          ELSE
         </arg>
         <arg>
          Set Variable
         </arg>
         <arg>
          ${list_prefs}
         </arg>
         <doc>
          Runs the given keyword with the given arguments, if ``condition`` is true.
         </doc>
         <kw library="BuiltIn" name="Set Variable">
          <arg>
           ${list_prefs}
          </arg>
          <doc>
           Returns the given values which can then be assigned to a variables.
          </doc>
          <status endtime="20240531 16:56:29.062" starttime="20240531 16:56:29.046" status="PASS"/>
         </kw>
         <msg level="INFO" timestamp="20240531 16:56:29.062">
          ${list_prefs} = [[]]
         </msg>
         <status endtime="20240531 16:56:29.062" starttime="20240531 16:56:29.046" status="PASS"/>
        </kw>
        <msg level="INFO" timestamp="20240531 16:56:29.062">
         ${list_prefs} = [[]]
        </msg>
        <status endtime="20240531 16:56:29.062" starttime="20240531 16:56:29.046" status="PASS"/>
       </kw>
       <kw library="Support_Web" name="Create Chrome Options for download preferences">
        <var>
         ${chrome_options}
        </var>
        <kw library="BuiltIn" name="Evaluate">
         <var>
          ${chrome_options}
         </var>
         <arg>
          sys.modules['selenium.webdriver'].ChromeOptions()
         </arg>
         <arg>
          sys
         </arg>
         <doc>
          Evaluates the given expression in Python and returns the result.
         </doc>
         <msg level="INFO" timestamp="20240531 16:56:29.062">
          ${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x000001C230D3F110&gt;
         </msg>
         <status endtime="20240531 16:56:29.062" starttime="20240531 16:56:29.062" status="PASS"/>
        </kw>
        <msg level="INFO" timestamp="20240531 16:56:29.062">
         ${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x000001C230D3F110&gt;
        </msg>
        <status endtime="20240531 16:56:29.062" starttime="20240531 16:56:29.062" status="PASS"/>
       </kw>
       <kw library="Support_Web" name="Update Preferences List">
        <arg>
         ${chrome_options}
        </arg>
        <arg>
         @{list_prefs}
        </arg>
        <kw library="BuiltIn" name="Convert To String">
         <var>
          ${string_prefs}
         </var>
         <arg>
          ${list_prefs}
         </arg>
         <doc>
          Converts the given item to a Unicode string.
         </doc>
         <msg level="INFO" timestamp="20240531 16:56:29.062">
          ${string_prefs} = [[]]
         </msg>
         <status endtime="20240531 16:56:29.062" starttime="20240531 16:56:29.062" status="PASS"/>
        </kw>
        <kw library="BuiltIn" name="Return From Keyword If">
         <arg>
          ${string_prefs} == [[]]
         </arg>
         <doc>
          Returns from the enclosing user keyword if ``condition`` is true.
         </doc>
         <msg level="INFO" timestamp="20240531 16:56:29.062">
          Returning from the enclosing user keyword.
         </msg>
         <status endtime="20240531 16:56:29.062" starttime="20240531 16:56:29.062" status="PASS"/>
        </kw>
        <for flavor="IN">
         <var>
          ${preference}
         </var>
         <value>
          @{list_prefs}
         </value>
         <iter>
          <var name="${preference}"/>
          <kw library="BuiltIn" name="Call Method">
           <arg>
            ${chrome_options}
           </arg>
           <arg>
            add_argument
           </arg>
           <arg>
            ${preference}
           </arg>
           <doc>
            Calls the named method of the given object with the provided arguments.
           </doc>
           <status endtime="20240531 16:56:29.062" starttime="20240531 16:56:29.062" status="NOT RUN"/>
          </kw>
          <status endtime="20240531 16:56:29.062" starttime="20240531 16:56:29.062" status="NOT RUN"/>
         </iter>
         <status endtime="20240531 16:56:29.062" starttime="20240531 16:56:29.062" status="NOT RUN"/>
        </for>
        <status endtime="20240531 16:56:29.062" starttime="20240531 16:56:29.062" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Call Method">
        <arg>
         ${chrome_options}
        </arg>
        <arg>
         add_experimental_option
        </arg>
        <arg>
         prefs
        </arg>
        <arg>
         ${kw_prefs}
        </arg>
        <doc>
         Calls the named method of the given object with the provided arguments.
        </doc>
        <status endtime="20240531 16:56:29.062" starttime="20240531 16:56:29.062" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Global Variable">
        <arg>
         ${global_browser_options}
        </arg>
        <arg>
         ${chrome options}
        </arg>
        <doc>
         Makes a variable available globally in all tests and suites.
        </doc>
        <msg level="INFO" timestamp="20240531 16:56:29.062">
         ${global_browser_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x000001C230D3F110&gt;
        </msg>
        <status endtime="20240531 16:56:29.062" starttime="20240531 16:56:29.062" status="PASS"/>
       </kw>
       <status endtime="20240531 16:56:29.062" starttime="20240531 16:56:29.046" status="PASS"/>
      </kw>
      <status endtime="20240531 16:56:29.062" starttime="20240531 16:56:25.014" status="PASS"/>
     </kw>
     <status endtime="20240531 16:56:29.062" starttime="20240531 16:56:25.014" status="PASS"/>
    </kw>
    <status endtime="20240531 16:56:29.062" starttime="20240531 16:56:25.014" status="PASS"/>
   </kw>
   <kw library="BuiltIn" name="Set Suite Metadata">
    <arg>
     environment
    </arg>
    <arg>
     ${test_server}
    </arg>
    <doc>
     Sets metadata for the current test suite.
    </doc>
    <msg level="INFO" timestamp="20240531 16:56:29.062">
     Set suite metadata 'environment' to value 'Dev'.
    </msg>
    <status endtime="20240531 16:56:29.062" starttime="20240531 16:56:29.062" status="PASS"/>
   </kw>
   <status endtime="20240531 16:56:29.062" starttime="20240531 16:56:24.998" status="PASS"/>
  </kw>
  <suite id="s1-s1" name="Test Nike Strust" source="D:\RobotFramework\SAPtesting\Tests\Test_Nike_Strust.robot">
   <kw library="Nike_STRUST" name="System Logon" type="SETUP">
    <kw library="Process" name="Start Process">
     <arg>
      ${symvar('Nike_SAP')}
     </arg>
     <doc>
      Starts a new process on background.
     </doc>
     <msg level="INFO" timestamp="20240531 16:56:29.406">
      Sym.Dev.Nike_SAP: C:\Program Files\SAP\FrontEnd\SAPGUI\saplogon.exe
     </msg>
     <msg level="INFO" timestamp="20240531 16:56:29.406">
      Starting process:
"C:\Program Files\SAP\FrontEnd\SAPGUI\saplogon.exe"
     </msg>
     <status endtime="20240531 16:56:29.421" starttime="20240531 16:56:29.406" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      5
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240531 16:56:34.433">
      Slept 5 seconds
     </msg>
     <status endtime="20240531 16:56:34.433" starttime="20240531 16:56:29.421" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Connect To Session">
     <doc>
      Connects to an open session SAP.
     </doc>
     <status endtime="20240531 16:56:34.449" starttime="20240531 16:56:34.433" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Open Connection">
     <arg>
      ${symvar('Nike_connection')}
     </arg>
     <doc>
      Opens a connection to the given connection name. Be sure to provide the full connection name, including the bracket part.
     </doc>
     <msg level="INFO" timestamp="20240531 16:56:34.449">
      Sym.Dev.Nike_connection: CFG
     </msg>
     <status endtime="20240531 16:56:35.167" starttime="20240531 16:56:34.449" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Input Text">
     <arg>
      wnd[0]/usr/txtRSYST-MANDT
     </arg>
     <arg>
      ${symvar('CFG_CLIENT')}
     </arg>
     <doc>
      Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.
     </doc>
     <msg level="INFO" timestamp="20240531 16:56:35.167">
      Sym.Dev.CFG_CLIENT: 000
     </msg>
     <msg level="INFO" timestamp="20240531 16:56:35.230">
      Typing text '000' into text field 'wnd[0]/usr/txtRSYST-MANDT'.
     </msg>
     <status endtime="20240531 16:56:35.230" starttime="20240531 16:56:35.167" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Input Text">
     <arg>
      wnd[0]/usr/txtRSYST-BNAME
     </arg>
     <arg>
      ${symvar('CFG_USER')}
     </arg>
     <doc>
      Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.
     </doc>
     <msg level="INFO" timestamp="20240531 16:56:35.230">
      Sym.Dev.CFG_USER: basisadmin
     </msg>
     <msg level="INFO" timestamp="20240531 16:56:35.245">
      Typing text 'basisadmin' into text field 'wnd[0]/usr/txtRSYST-BNAME'.
     </msg>
     <status endtime="20240531 16:56:35.245" starttime="20240531 16:56:35.230" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Input Password">
     <arg>
      wnd[0]/usr/pwdRSYST-BCODE
     </arg>
     <arg>
      %{CFG_PASS}
     </arg>
     <doc>
      Inserts the given password into the text field identified by locator.
The password is not recorded in the log.
     </doc>
     <msg level="INFO" timestamp="20240531 16:56:35.261">
      Typing password into text field 'wnd[0]/usr/pwdRSYST-BCODE'.
     </msg>
     <status endtime="20240531 16:56:35.261" starttime="20240531 16:56:35.245" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Send Vkey">
     <arg>
      0
     </arg>
     <doc>
      Sends a SAP virtual key combination to the window, not into an element.
If you want to send a value to a text field, use `input text` instead.
     </doc>
     <status endtime="20240531 16:56:36.038" starttime="20240531 16:56:35.261" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Multiple Logon Handling">
     <arg>
      wnd[1]
     </arg>
     <arg>
      wnd[1]/usr/radMULTI_LOGON_OPT2
     </arg>
     <arg>
      wnd[1]/tbar[0]/btn[0]
     </arg>
     <status endtime="20240531 16:56:36.053" starttime="20240531 16:56:36.038" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      1
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240531 16:56:37.054">
      Slept 1 second
     </msg>
     <status endtime="20240531 16:56:37.054" starttime="20240531 16:56:36.053" status="PASS"/>
    </kw>
    <status endtime="20240531 16:56:37.054" starttime="20240531 16:56:29.406" status="PASS"/>
   </kw>
   <test id="s1-s1-t1" line="9" name="Executing STRUST">
    <kw library="Nike_STRUST" name="Transaction STRUST">
     <kw library="SAP_Tcode_Library" name="Run Transaction">
      <arg>
       /nstrust
      </arg>
      <doc>
       Runs a Sap transaction. An error is given when an unknown transaction is specified.
      </doc>
      <status endtime="20240531 16:56:38.263" starttime="20240531 16:56:37.054" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Send Vkey">
      <arg>
       0
      </arg>
      <doc>
       Sends a SAP virtual key combination to the window, not into an element.
If you want to send a value to a text field, use `input text` instead.
      </doc>
      <status endtime="20240531 16:56:38.451" starttime="20240531 16:56:38.263" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       001_Strust.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240531 16:56:38.576">
       &lt;a href="pabot_results%5C0%5C001_Strust.jpg"&gt;&lt;img src="pabot_results%5C0%5C001_Strust.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240531 16:56:38.576" starttime="20240531 16:56:38.451" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240531 16:56:40.588">
       Slept 2 seconds
      </msg>
      <status endtime="20240531 16:56:40.588" starttime="20240531 16:56:38.576" status="PASS"/>
     </kw>
     <status endtime="20240531 16:56:40.588" starttime="20240531 16:56:37.054" status="PASS"/>
    </kw>
    <kw library="Nike_STRUST" name="SSL server standard">
     <kw library="SAP_Tcode_Library" name="Double Click On Tree Item">
      <arg>
       wnd[0]/shellcont/shell
      </arg>
      <arg>
       SSLSDFAULT
      </arg>
      <status endtime="20240531 16:56:40.949" starttime="20240531 16:56:40.588" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240531 16:56:42.953">
       Slept 2 seconds
      </msg>
      <status endtime="20240531 16:56:42.953" starttime="20240531 16:56:40.949" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       031_SSLSDFAULT.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240531 16:56:43.031">
       &lt;a href="pabot_results%5C0%5C031_SSLSDFAULT.jpg"&gt;&lt;img src="pabot_results%5C0%5C031_SSLSDFAULT.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240531 16:56:43.031" starttime="20240531 16:56:42.953" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240531 16:56:45.038">
       Slept 2 seconds
      </msg>
      <status endtime="20240531 16:56:45.038" starttime="20240531 16:56:43.031" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Get Row Count">
      <var>
       ${row_count}
      </var>
      <arg>
       wnd[0]/usr/cntlPK_CTRL/shellcont/shell
      </arg>
      <doc>
       Returns the number of rows found in the specified table.
      </doc>
      <msg level="INFO" timestamp="20240531 16:56:45.038">
       ${row_count} = 0
      </msg>
      <status endtime="20240531 16:56:45.038" starttime="20240531 16:56:45.038" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Log To Console">
      <arg>
       ${row_count}
      </arg>
      <doc>
       Logs the given message to the console.
      </doc>
      <status endtime="20240531 16:56:45.038" starttime="20240531 16:56:45.038" status="PASS"/>
     </kw>
     <for flavor="IN RANGE">
      <var>
       ${row_no}
      </var>
      <value>
       0
      </value>
      <value>
       ${row_count}
      </value>
      <iter>
       <var name="${row_no}"/>
       <kw library="BuiltIn" name="Log To Console">
        <arg>
         ${row_no}
        </arg>
        <doc>
         Logs the given message to the console.
        </doc>
        <status endtime="20240531 16:56:45.038" starttime="20240531 16:56:45.038" status="NOT RUN"/>
       </kw>
       <kw library="SAP_Tcode_Library" name="Get Cell Value">
        <var>
         ${Owner}
        </var>
        <arg>
         wnd[0]/usr/cntlPK_CTRL/shellcont/shell
        </arg>
        <arg>
         ${row_no}
        </arg>
        <arg>
         SUBJECT
        </arg>
        <doc>
         Returns the cell value for the specified cell.
        </doc>
        <status endtime="20240531 16:56:45.038" starttime="20240531 16:56:45.038" status="NOT RUN"/>
       </kw>
       <kw library="BuiltIn" name="Log To Console">
        <arg>
         ${Owner}
        </arg>
        <doc>
         Logs the given message to the console.
        </doc>
        <status endtime="20240531 16:56:45.038" starttime="20240531 16:56:45.038" status="NOT RUN"/>
       </kw>
       <if>
        <branch condition="'${Owner}' == 'CN=www.splunk.com, O=Splunk Inc., L=San Francisco, SP=California, C=US'" type="IF">
         <kw library="SAP_Tcode_Library" name="Get Cell Value">
          <var>
           ${Valid_from}
          </var>
          <arg>
           wnd[0]/usr/cntlPK_CTRL/shellcont/shell
          </arg>
          <arg>
           ${row_no}
          </arg>
          <arg>
           DATEFROM
          </arg>
          <doc>
           Returns the cell value for the specified cell.
          </doc>
          <status endtime="20240531 16:56:45.053" starttime="20240531 16:56:45.053" status="NOT RUN"/>
         </kw>
         <kw library="BuiltIn" name="Log To Console">
          <arg>
           ${Valid_from}
          </arg>
          <doc>
           Logs the given message to the console.
          </doc>
          <status endtime="20240531 16:56:45.053" starttime="20240531 16:56:45.053" status="NOT RUN"/>
         </kw>
         <kw library="SAP_Tcode_Library" name="Get Cell Value">
          <var>
           ${Valid_To}
          </var>
          <arg>
           wnd[0]/usr/cntlPK_CTRL/shellcont/shell
          </arg>
          <arg>
           ${row_no}
          </arg>
          <arg>
           DATETO
          </arg>
          <doc>
           Returns the cell value for the specified cell.
          </doc>
          <status endtime="20240531 16:56:45.053" starttime="20240531 16:56:45.053" status="NOT RUN"/>
         </kw>
         <kw library="BuiltIn" name="Log To Console">
          <arg>
           ${Valid_To}
          </arg>
          <doc>
           Logs the given message to the console.
          </doc>
          <status endtime="20240531 16:56:45.053" starttime="20240531 16:56:45.053" status="NOT RUN"/>
         </kw>
         <if>
          <branch condition="'${Valid_from}' &gt;= '${Valid_To}'" type="IF">
           <kw library="BuiltIn" name="Log To Console">
            <arg>
             Certificate is Valid till ${Valid_To}
            </arg>
            <doc>
             Logs the given message to the console.
            </doc>
            <status endtime="20240531 16:56:45.053" starttime="20240531 16:56:45.053" status="NOT RUN"/>
           </kw>
           <kw library="BuiltIn" name="Set Global Variable">
            <arg>
             ${Valid_To}
            </arg>
            <doc>
             Makes a variable available globally in all tests and suites.
            </doc>
            <status endtime="20240531 16:56:45.053" starttime="20240531 16:56:45.053" status="NOT RUN"/>
           </kw>
           <kw library="BuiltIn" name="Log To Console">
            <arg>
             **gbStart**certificate_status**splitKeyValue**Valid**gbEnd**
            </arg>
            <doc>
             Logs the given message to the console.
            </doc>
            <status endtime="20240531 16:56:45.053" starttime="20240531 16:56:45.053" status="NOT RUN"/>
           </kw>
           <status endtime="20240531 16:56:45.053" starttime="20240531 16:56:45.053" status="NOT RUN"/>
          </branch>
          <branch type="ELSE">
           <kw library="BuiltIn" name="Log To Console">
            <arg>
             Certificate is invalid from ${Valid_To}
            </arg>
            <doc>
             Logs the given message to the console.
            </doc>
            <status endtime="20240531 16:56:45.053" starttime="20240531 16:56:45.053" status="NOT RUN"/>
           </kw>
           <kw library="BuiltIn" name="Log To Console">
            <arg>
             **gbStart**certificate_status**splitKeyValue**Expired**gbEnd**
            </arg>
            <doc>
             Logs the given message to the console.
            </doc>
            <status endtime="20240531 16:56:45.053" starttime="20240531 16:56:45.053" status="NOT RUN"/>
           </kw>
           <status endtime="20240531 16:56:45.053" starttime="20240531 16:56:45.053" status="NOT RUN"/>
          </branch>
          <status endtime="20240531 16:56:45.053" starttime="20240531 16:56:45.053" status="NOT RUN"/>
         </if>
         <status endtime="20240531 16:56:45.053" starttime="20240531 16:56:45.053" status="NOT RUN"/>
        </branch>
        <branch type="ELSE">
         <kw library="BuiltIn" name="Log To Console">
          <arg>
           Certificate not matches with Splunk.com
          </arg>
          <doc>
           Logs the given message to the console.
          </doc>
          <status endtime="20240531 16:56:45.053" starttime="20240531 16:56:45.053" status="NOT RUN"/>
         </kw>
         <status endtime="20240531 16:56:45.053" starttime="20240531 16:56:45.053" status="NOT RUN"/>
        </branch>
        <status endtime="20240531 16:56:45.053" starttime="20240531 16:56:45.053" status="NOT RUN"/>
       </if>
       <status endtime="20240531 16:56:45.053" starttime="20240531 16:56:45.038" status="NOT RUN"/>
      </iter>
      <status endtime="20240531 16:56:45.053" starttime="20240531 16:56:45.038" status="NOT RUN"/>
     </for>
     <status endtime="20240531 16:56:45.053" starttime="20240531 16:56:40.588" status="PASS"/>
    </kw>
    <tag>
     Nike_STRUST
    </tag>
    <tag>
     Regression
    </tag>
    <status endtime="20240531 16:56:45.053" starttime="20240531 16:56:37.054" status="PASS"/>
   </test>
   <kw library="Nike_STRUST" name="System Logout" type="TEARDOWN">
    <kw library="SAP_Tcode_Library" name="Run Transaction">
     <arg>
      /nex
     </arg>
     <doc>
      Runs a Sap transaction. An error is given when an unknown transaction is specified.
     </doc>
     <status endtime="20240531 16:56:45.116" starttime="20240531 16:56:45.053" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      5
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240531 16:56:50.130">
      Slept 5 seconds
     </msg>
     <status endtime="20240531 16:56:50.130" starttime="20240531 16:56:45.116" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      10
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240531 16:57:00.136">
      Slept 10 seconds
     </msg>
     <status endtime="20240531 16:57:00.136" starttime="20240531 16:56:50.130" status="PASS"/>
    </kw>
    <status endtime="20240531 16:57:00.136" starttime="20240531 16:56:45.053" status="PASS"/>
   </kw>
   <status endtime="20240531 16:57:00.136" starttime="20240531 16:56:29.062" status="PASS"/>
  </suite>
  <doc>
   Testing functionality through Robot Framework
  </doc>
  <meta name="environment">
   Dev
  </meta>
  <meta name="test_browser_name">
   chrome
  </meta>
  <meta name="test_browser_version">
   125.0.6422.77
  </meta>
  <meta name="test_driver_version">
   124.0.6367.207
  </meta>
  <meta name="test_environment">
   Dev
  </meta>
  <meta name="test_freeze_dependencies">
   astroid==3.1.0,attrs==23.2.0,beautifulsoup4==4.12.3,bs4==0.0.2,build==1.2.1,certifi==2024.2.2,cffi==1.16.0,chardet==5.2.0,charset-normalizer==3.3.2,click==8.1.7,cmake==3.29.3,colorama==0.4.6,comtypes==1.4.2,cryptography==42.0.5,defusedxml==0.7.1,dill==0.3.8,docutils==0.21.2,et-xmlfile==1.1.0,exceptiongroup==1.2.1,fire==0.4.0,gitdb==4.0.11,GitPython==3.1.43,h11==0.14.0,idna==3.7,isort==5.13.2,Jinja2==3.1.3,jira==3.8.0,jsonpath-ng==1.6.1,jsonschema==4.21.1,jsonschema-specifications==2023.12.1,lazy-object-proxy==1.10.0,lxml==5.2.1,markdown-it-py==3.0.0,MarkupSafe==2.1.5,mccabe==0.7.0,mdurl==0.1.2,natsort==8.4.0,oauthlib==3.2.2,openpyxl==3.1.2,outcome==1.3.0.post0,packaging==24.0,pathspec==0.11.2,pendulum==3.0.0,pillow==10.3.0,pip==24.0,platformdirs==4.2.1,ply==3.11,psutil==5.9.8,pycparser==2.22,Pygments==2.17.2,pylint==3.1.0,pynput-robocorp-fork==5.0.0,pyperclip==1.8.2,pyproject-toml==0.0.10,pyproject_hooks==1.1.0,PySocks==1.7.1,python-dateutil==2.9.0.post0,python-dotenv==1.0.1,pywin32==306,PyYAML==6.0.1,referencing==0.35.0,reportlab==4.2.0,requests==2.31.0,requests-oauthlib==2.0.0,requests-toolbelt==1.0.0,rich==13.7.1,rich-click==1.6.1,robotframework==6.0.2,robotframework-datadriver==1.9.0,robotframework-excellib==2.0.1,robotframework-jsonlibrary==0.5,robotframework-pabot==2.16.0,robotframework-pythonlibcore==4.2.0,robotframework-requests==0.9.2,robotframework-sapguilibrary==1.1,robotframework-seleniumlibrary==5.1.3,robotframework-stacktrace==0.4.1,robotframework-tidy==4.5.0,rpaframework-core==11.3.2,rpaframework-windows==7.5.1,rpds-py==0.18.0,selenium==4.9.1,setuptools==70.0.0,six==1.16.0,smmap==5.0.1,sniffio==1.3.1,sortedcontainers==2.4.0,soupsieve==2.5,termcolor==2.4.0,time-machine==2.14.1,toml==0.10.2,tomli==2.0.1,tomlkit==0.12.4,trio==0.25.0,trio-websocket==0.11.1,typing_extensions==4.11.0,tzdata==2024.1,uiautomation==2.0.18,urllib3==2.2.1,webdriver-manager==4.0.1,wheel==0.43.0,wrapt==1.16.0,wsproto==1.2.0
  </meta>
  <status endtime="20240531 16:57:00.495" starttime="20240531 16:56:24.561" status="PASS"/>
 </suite>
 <statistics>
  <total>
   <stat fail="0" pass="1" skip="0">
    All Tests
   </stat>
  </total>
  <tag>
   <stat fail="0" pass="1" skip="0">
    Nike_STRUST
   </stat>
   <stat fail="0" pass="1" skip="0">
    Regression
   </stat>
  </tag>
  <suite>
   <stat fail="0" id="s1" name="Tests" pass="1" skip="0">
    Tests
   </stat>
   <stat fail="0" id="s1-s1" name="Test Nike Strust" pass="1" skip="0">
    Tests.Test Nike Strust
   </stat>
  </suite>
 </statistics>
 <errors>
 </errors>
</robot>
