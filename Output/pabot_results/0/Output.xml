<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.12.3 on win32)" generated="20240602 18:36:36.427" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="D:\RobotFramework\SAPtesting\Tests">
<kw name="Setup highest level suite" type="SETUP">
<kw name="Set Variable" library="BuiltIn">
<var>${d.test_server}</var>
<arg>${test_server}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240602 18:36:37.274" level="INFO">${d.test_server} = Dev</msg>
<status status="PASS" starttime="20240602 18:36:37.273" endtime="20240602 18:36:37.274"/>
</kw>
<kw name="Reset screenshot count variable" library="Support">
<kw name="Set Variable" library="BuiltIn">
<var>${screenshotCount}</var>
<arg>${PABOTQUEUEINDEX}_1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240602 18:36:37.275" level="INFO">${screenshotCount} = 0_1</msg>
<status status="PASS" starttime="20240602 18:36:37.274" endtime="20240602 18:36:37.275"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${screenshotCount}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240602 18:36:37.276" level="INFO">${screenshotCount} = 0_1</msg>
<status status="PASS" starttime="20240602 18:36:37.275" endtime="20240602 18:36:37.276"/>
</kw>
<kw name="Set up screenshot directory" library="Support">
<kw name="Create Directory" library="OperatingSystem">
<arg>${OUTPUTDIR}${/}${wvar('screenshot_dir')}</arg>
<doc>Creates the specified directory.</doc>
<msg timestamp="20240602 18:36:37.277" level="INFO">Web.Dev.screenshot_dir: Screenshot</msg>
<msg timestamp="20240602 18:36:37.280" level="INFO" html="true">Created directory '&lt;a href="file://D:\RobotFramework\SAPtesting\Output\pabot_results\0\Screenshot"&gt;D:\RobotFramework\SAPtesting\Output\pabot_results\0\Screenshot&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20240602 18:36:37.276" endtime="20240602 18:36:37.280"/>
</kw>
<status status="PASS" starttime="20240602 18:36:37.276" endtime="20240602 18:36:37.280"/>
</kw>
<status status="PASS" starttime="20240602 18:36:37.274" endtime="20240602 18:36:37.280"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${screenshot_taking}</arg>
<arg>${True}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240602 18:36:37.281" level="INFO">${screenshot_taking} = True</msg>
<status status="PASS" starttime="20240602 18:36:37.281" endtime="20240602 18:36:37.281"/>
</kw>
<kw name="Setup linux execution" library="Support">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${web_test_check}</var>
<arg>Variable Should Exist</arg>
<arg>${web_test}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Variable Should Exist" library="BuiltIn">
<arg>${web_test}</arg>
<doc>Fails unless the given variable exists within the current scope.</doc>
<status status="PASS" starttime="20240602 18:36:37.282" endtime="20240602 18:36:37.283"/>
</kw>
<msg timestamp="20240602 18:36:37.283" level="INFO">${web_test_check} = True</msg>
<status status="PASS" starttime="20240602 18:36:37.282" endtime="20240602 18:36:37.283"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${web_test_check}</arg>
<arg>Setup Docker Execution Options</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup Docker Execution Options" library="Support_Web">
<kw name="Setup Suite Metadata" library="Support_Web">
<arg>${browser}</arg>
<kw name="Get Browser Metadata" library="BrowserSupport">
<var>&amp;{browser_information}</var>
<arg>browser=${browser}</arg>
<doc>Fetches browser metadata information
:param browser: Name of the browser for which information is fetched
:param reload: Re-read the metadata based on the browser
:return: Browser metadata information, dict of format
            {"browser_version": browser version value,
             "driver_version": driver version value}</doc>
<msg timestamp="20240602 18:36:41.018" level="INFO">&amp;{browser_information} = { browser_version=125.0.6422.77 | driver_version=124.0.6367.207  }</msg>
<status status="PASS" starttime="20240602 18:36:37.284" endtime="20240602 18:36:41.019"/>
</kw>
<kw name="Set Suite Metadata" library="BuiltIn">
<arg>test_browser_name</arg>
<arg>${browser}</arg>
<doc>Sets metadata for the current test suite.</doc>
<msg timestamp="20240602 18:36:41.020" level="INFO">Set suite metadata 'test_browser_name' to value 'chrome'.</msg>
<status status="PASS" starttime="20240602 18:36:41.019" endtime="20240602 18:36:41.020"/>
</kw>
<kw name="Set Suite Metadata" library="BuiltIn">
<arg>test_browser_version</arg>
<arg>${browser_information.browser_version}</arg>
<doc>Sets metadata for the current test suite.</doc>
<msg timestamp="20240602 18:36:41.021" level="INFO">Set suite metadata 'test_browser_version' to value '125.0.6422.77'.</msg>
<status status="PASS" starttime="20240602 18:36:41.020" endtime="20240602 18:36:41.021"/>
</kw>
<kw name="Set Suite Metadata" library="BuiltIn">
<arg>test_driver_version</arg>
<arg>${browser_information.driver_version}</arg>
<doc>Sets metadata for the current test suite.</doc>
<msg timestamp="20240602 18:36:41.022" level="INFO">Set suite metadata 'test_driver_version' to value '124.0.6367.207 '.</msg>
<status status="PASS" starttime="20240602 18:36:41.021" endtime="20240602 18:36:41.022"/>
</kw>
<status status="PASS" starttime="20240602 18:36:37.283" endtime="20240602 18:36:41.022"/>
</kw>
<kw name="Setup Global Docker Execution Options" library="Support_Web">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${global_browser_options}</arg>
<arg>None</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240602 18:36:41.024" level="INFO">${global_browser_options} = None</msg>
<status status="PASS" starttime="20240602 18:36:41.023" endtime="20240602 18:36:41.024"/>
</kw>
<kw name="Get Environment Variable" library="OperatingSystem">
<var>${docker_check}</var>
<arg>EXECUTION_ENVIRONMENT</arg>
<arg>not_found</arg>
<doc>Returns the value of an environment variable with the given name.</doc>
<msg timestamp="20240602 18:36:41.025" level="INFO">${docker_check} = not_found</msg>
<status status="PASS" starttime="20240602 18:36:41.024" endtime="20240602 18:36:41.025"/>
</kw>
<kw name="Run Keyword And Return If" library="BuiltIn">
<arg>"${docker_check}"!="docker"</arg>
<arg>Log</arg>
<arg>Not executing on Docker</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Log" library="BuiltIn">
<arg>Not executing on Docker</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240602 18:36:41.026" level="INFO">Not executing on Docker</msg>
<status status="PASS" starttime="20240602 18:36:41.025" endtime="20240602 18:36:41.026"/>
</kw>
<msg timestamp="20240602 18:36:41.026" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240602 18:36:41.025" endtime="20240602 18:36:41.026"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{options}</var>
<arg>--headless</arg>
<arg>--no-sandbox</arg>
<arg>--disable-dev-shm-usage</arg>
<doc>Returns a list containing given items.</doc>
<status status="NOT RUN" starttime="20240602 18:36:41.026" endtime="20240602 18:36:41.026"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>@{docker_options}</arg>
<arg>@{options}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20240602 18:36:41.027" endtime="20240602 18:36:41.027"/>
</kw>
<status status="PASS" starttime="20240602 18:36:41.023" endtime="20240602 18:36:41.027"/>
</kw>
<kw name="Create Webdriver for chrome preferences" library="Support_Web">
<kw name="Update Docker Execution Options" library="Support_Web">
<var>${list_prefs}</var>
<arg>${list_prefs}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${docker_check}</var>
<arg>Variable Should Exist</arg>
<arg>${docker_options}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Variable Should Exist" library="BuiltIn">
<arg>${docker_options}</arg>
<doc>Fails unless the given variable exists within the current scope.</doc>
<msg timestamp="20240602 18:36:41.031" level="FAIL">Variable '${docker_options}' does not exist.</msg>
<status status="FAIL" starttime="20240602 18:36:41.029" endtime="20240602 18:36:41.031"/>
</kw>
<msg timestamp="20240602 18:36:41.031" level="INFO">${docker_check} = False</msg>
<status status="PASS" starttime="20240602 18:36:41.028" endtime="20240602 18:36:41.031"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${list_prefs_length}</var>
<arg>${list_prefs}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240602 18:36:41.032" level="INFO">Length is 1</msg>
<msg timestamp="20240602 18:36:41.032" level="INFO">${list_prefs_length} = 1</msg>
<status status="PASS" starttime="20240602 18:36:41.031" endtime="20240602 18:36:41.032"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${list_prefs}</var>
<arg>${docker_check} and ${list_prefs_length}&gt;0 and ${list_prefs}[0] != []</arg>
<arg>Combine Lists</arg>
<arg>${list_prefs}</arg>
<arg>${docker_options}</arg>
<arg>ELSE IF</arg>
<arg>${docker_check}</arg>
<arg>Set Variable</arg>
<arg>${docker_options}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${list_prefs}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${list_prefs}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20240602 18:36:41.033" endtime="20240602 18:36:41.033"/>
</kw>
<msg timestamp="20240602 18:36:41.033" level="INFO">${list_prefs} = [[]]</msg>
<status status="PASS" starttime="20240602 18:36:41.032" endtime="20240602 18:36:41.033"/>
</kw>
<msg timestamp="20240602 18:36:41.033" level="INFO">${list_prefs} = [[]]</msg>
<status status="PASS" starttime="20240602 18:36:41.028" endtime="20240602 18:36:41.033"/>
</kw>
<kw name="Create Chrome Options for download preferences" library="Support_Web">
<var>${chrome_options}</var>
<kw name="Evaluate" library="BuiltIn">
<var>${chrome_options}</var>
<arg>sys.modules['selenium.webdriver'].ChromeOptions()</arg>
<arg>sys</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240602 18:36:41.034" level="INFO">${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x00000205EF1233B0&gt;</msg>
<status status="PASS" starttime="20240602 18:36:41.034" endtime="20240602 18:36:41.034"/>
</kw>
<msg timestamp="20240602 18:36:41.034" level="INFO">${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x00000205EF1233B0&gt;</msg>
<status status="PASS" starttime="20240602 18:36:41.033" endtime="20240602 18:36:41.034"/>
</kw>
<kw name="Update Preferences List" library="Support_Web">
<arg>${chrome_options}</arg>
<arg>@{list_prefs}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${string_prefs}</var>
<arg>${list_prefs}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240602 18:36:41.035" level="INFO">${string_prefs} = [[]]</msg>
<status status="PASS" starttime="20240602 18:36:41.035" endtime="20240602 18:36:41.035"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${string_prefs} == [[]]</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20240602 18:36:41.036" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240602 18:36:41.036" endtime="20240602 18:36:41.036"/>
</kw>
<for flavor="IN">
<var>${preference}</var>
<value>@{list_prefs}</value>
<iter>
<var name="${preference}"/>
<kw name="Call Method" library="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>${preference}</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="NOT RUN" starttime="20240602 18:36:41.037" endtime="20240602 18:36:41.037"/>
</kw>
<status status="NOT RUN" starttime="20240602 18:36:41.036" endtime="20240602 18:36:41.037"/>
</iter>
<status status="NOT RUN" starttime="20240602 18:36:41.036" endtime="20240602 18:36:41.037"/>
</for>
<status status="PASS" starttime="20240602 18:36:41.035" endtime="20240602 18:36:41.037"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_experimental_option</arg>
<arg>prefs</arg>
<arg>${kw_prefs}</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240602 18:36:41.037" endtime="20240602 18:36:41.038"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${global_browser_options}</arg>
<arg>${chrome options}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240602 18:36:41.038" level="INFO">${global_browser_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x00000205EF1233B0&gt;</msg>
<status status="PASS" starttime="20240602 18:36:41.038" endtime="20240602 18:36:41.038"/>
</kw>
<status status="PASS" starttime="20240602 18:36:41.027" endtime="20240602 18:36:41.039"/>
</kw>
<status status="PASS" starttime="20240602 18:36:37.283" endtime="20240602 18:36:41.039"/>
</kw>
<status status="PASS" starttime="20240602 18:36:37.283" endtime="20240602 18:36:41.039"/>
</kw>
<status status="PASS" starttime="20240602 18:36:37.281" endtime="20240602 18:36:41.039"/>
</kw>
<kw name="Set Suite Metadata" library="BuiltIn">
<arg>environment</arg>
<arg>${test_server}</arg>
<doc>Sets metadata for the current test suite.</doc>
<msg timestamp="20240602 18:36:41.040" level="INFO">Set suite metadata 'environment' to value 'Dev'.</msg>
<status status="PASS" starttime="20240602 18:36:41.039" endtime="20240602 18:36:41.040"/>
</kw>
<status status="PASS" starttime="20240602 18:36:37.272" endtime="20240602 18:36:41.040"/>
</kw>
<suite id="s1-s1" name="Test Spam version" source="D:\RobotFramework\SAPtesting\Tests\Test_Spam_version.robot">
<kw name="System Logon" library="Spam_version" type="SETUP">
<kw name="Start Process" library="Process">
<arg>${symvar('Nike_SAP')}</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20240602 18:36:41.171" level="INFO">Sym.Dev.Nike_SAP: C:\Program Files\SAP\FrontEnd\SAPGUI\saplogon.exe</msg>
<msg timestamp="20240602 18:36:41.171" level="INFO">Starting process:
"C:\Program Files\SAP\FrontEnd\SAPGUI\saplogon.exe"</msg>
<status status="PASS" starttime="20240602 18:36:41.170" endtime="20240602 18:36:41.180"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240602 18:36:46.182" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20240602 18:36:41.181" endtime="20240602 18:36:46.182"/>
</kw>
<kw name="Connect To Session" library="CustomSapGuiLibrary">
<doc>Connects to an open session SAP.</doc>
<status status="PASS" starttime="20240602 18:36:46.182" endtime="20240602 18:36:46.195"/>
</kw>
<kw name="Open Connection" library="CustomSapGuiLibrary">
<arg>${symvar('Nike_connection')}</arg>
<doc>Opens a connection to the given connection name. Be sure to provide the full connection name, including the bracket part.</doc>
<msg timestamp="20240602 18:36:46.197" level="INFO">Sym.Dev.Nike_connection: CFG</msg>
<status status="PASS" starttime="20240602 18:36:46.196" endtime="20240602 18:36:46.933"/>
</kw>
<kw name="Input Text" library="CustomSapGuiLibrary">
<arg>wnd[0]/usr/txtRSYST-MANDT</arg>
<arg>${symvar('CFG_CLIENT')}</arg>
<doc>Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.</doc>
<msg timestamp="20240602 18:36:46.935" level="INFO">Sym.Dev.CFG_CLIENT: 000</msg>
<msg timestamp="20240602 18:36:46.992" level="INFO">Typing text '000' into text field 'wnd[0]/usr/txtRSYST-MANDT'.</msg>
<status status="PASS" starttime="20240602 18:36:46.933" endtime="20240602 18:36:46.992"/>
</kw>
<kw name="Input Text" library="CustomSapGuiLibrary">
<arg>wnd[0]/usr/txtRSYST-BNAME</arg>
<arg>${symvar('CFG_USER')}</arg>
<doc>Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.</doc>
<msg timestamp="20240602 18:36:46.993" level="INFO">Sym.Dev.CFG_USER: basisadmin</msg>
<msg timestamp="20240602 18:36:47.007" level="INFO">Typing text 'basisadmin' into text field 'wnd[0]/usr/txtRSYST-BNAME'.</msg>
<status status="PASS" starttime="20240602 18:36:46.992" endtime="20240602 18:36:47.007"/>
</kw>
<kw name="Input Password" library="CustomSapGuiLibrary">
<arg>wnd[0]/usr/pwdRSYST-BCODE</arg>
<arg>%{CFG_PASS}</arg>
<doc>Inserts the given password into the text field identified by locator.
The password is not recorded in the log.</doc>
<msg timestamp="20240602 18:36:47.013" level="INFO">Typing password into text field 'wnd[0]/usr/pwdRSYST-BCODE'.</msg>
<status status="PASS" starttime="20240602 18:36:47.008" endtime="20240602 18:36:47.013"/>
</kw>
<kw name="Send Vkey" library="CustomSapGuiLibrary">
<arg>0</arg>
<doc>Sends a SAP virtual key combination to the window, not into an element.
If you want to send a value to a text field, use `input text` instead.</doc>
<status status="PASS" starttime="20240602 18:36:47.013" endtime="20240602 18:36:47.228"/>
</kw>
<kw name="Multiple Logon Handling" library="CustomSapGuiLibrary">
<arg>wnd[1]</arg>
<arg>wnd[1]/usr/radMULTI_LOGON_OPT2</arg>
<arg>wnd[1]/tbar[0]/btn[0]</arg>
<msg timestamp="20240602 18:36:47.730" level="INFO">Multiple logon exists</msg>
<status status="PASS" starttime="20240602 18:36:47.228" endtime="20240602 18:36:47.730"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240602 18:36:48.731" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20240602 18:36:47.731" endtime="20240602 18:36:48.731"/>
</kw>
<status status="PASS" starttime="20240602 18:36:41.170" endtime="20240602 18:36:48.731"/>
</kw>
<test id="s1-s1-t1" name="Check_Spam_update" line="10">
<kw name="Spam Transaction" library="Spam_version">
<kw name="Run Transaction" library="CustomSapGuiLibrary">
<arg>spam</arg>
<doc>Runs a Sap transaction. An error is given when an unknown transaction is specified.</doc>
<status status="PASS" starttime="20240602 18:36:48.732" endtime="20240602 18:36:49.708"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240602 18:36:54.710" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20240602 18:36:49.709" endtime="20240602 18:36:54.710"/>
</kw>
<kw name="Take Screenshot" library="CustomSapGuiLibrary">
<arg>001_spam.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240602 18:36:54.817" level="INFO" html="true">&lt;a href="001_spam.jpg"&gt;&lt;img src="001_spam.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240602 18:36:54.710" endtime="20240602 18:36:54.817"/>
</kw>
<status status="PASS" starttime="20240602 18:36:48.732" endtime="20240602 18:36:54.818"/>
</kw>
<kw name="Certificate Verification" library="Spam_version">
<kw name="Get Maintenance Certificate Text" library="CustomSapGuiLibrary">
<arg>wnd[0]/sbar/pane[0]</arg>
<msg timestamp="20240602 18:36:54.821" level="INFO">License available to proceed further</msg>
<status status="PASS" starttime="20240602 18:36:54.818" endtime="20240602 18:36:54.821"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240602 18:36:56.821" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20240602 18:36:54.821" endtime="20240602 18:36:56.821"/>
</kw>
<kw name="Take Screenshot" library="CustomSapGuiLibrary">
<arg>001a_Certificate.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240602 18:36:56.894" level="INFO" html="true">&lt;a href="001a_Certificate.jpg"&gt;&lt;img src="001a_Certificate.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240602 18:36:56.821" endtime="20240602 18:36:56.894"/>
</kw>
<status status="PASS" starttime="20240602 18:36:54.818" endtime="20240602 18:36:56.894"/>
</kw>
<kw name="Version check" library="Spam_version">
<kw name="Click Element" library="CustomSapGuiLibrary">
<arg>wnd[0]/usr/btnPATCH_STATUS</arg>
<doc>Performs a single click on a given element. Used only for buttons, tabs and menu items.</doc>
<status status="PASS" starttime="20240602 18:36:56.895" endtime="20240602 18:36:57.294"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240602 18:36:59.295" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20240602 18:36:57.294" endtime="20240602 18:36:59.295"/>
</kw>
<kw name="Take Screenshot" library="CustomSapGuiLibrary">
<arg>002a_Version_1.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240602 18:36:59.387" level="INFO" html="true">&lt;a href="002a_Version_1.jpg"&gt;&lt;img src="002a_Version_1.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240602 18:36:59.295" endtime="20240602 18:36:59.387"/>
</kw>
<kw name="Select Spam Version" library="CustomSapGuiLibrary">
<var>${row}</var>
<arg>wnd[1]/usr/tabsVERSDETAILS/tabpCOMP_VERS/ssubDETAIL_SUBSCREEN:SAPLOCS_UI_CONTROLS:0301/cntlSCV_CU_CONTROL/shellcont/shell</arg>
<arg>${symvar('addOn')}</arg>
<msg timestamp="20240602 18:36:59.388" level="INFO">Sym.Dev.addOn: BNWVS</msg>
<msg timestamp="20240602 18:36:59.490" level="INFO">92
0
SAP_BASIS
1
SAP_ABA
2
SAP_GWFND
3
SAP_UI
4
ST-PI
5
SAP_BW
6
UIBAS001
7
GRCPINW
8
MDG_FND
9
S4FND
10
MDG_APPL
11
S4CEXT
12
S4CORE
13
S4HCM
14
S4HCMCAE
15
S4HCMCAR
16
S4HCMCAT
17
S4HCMCAU
18
S4HCMCBE
19
S4HCMCBG
20
S4HCMCBR
21
S4HCMCCA
22
S4HCMCCH
23
S4HCMCCL
24
S4HCMCCN
25
S4HCMCCO
26
S4HCMCCZ
27
S4HCMCDE
28
S4HCMCDK
29
S4HCMCEG
30
S4HCMCES
31
S4HCMCFI
32
S4HCMCFR
33
S4HCMCGB
34
S4HCMCGR
35
S4HCMCHK
36
S4HCMCHR
37
S4HCMCHU
38
S4HCMCID
39
S4HCMCIE
40
S4HCMCIN
41
S4HCMCIT
42
S4HCMCJP
43
S4HCMCKR
44
S4HCMCKW
45
S4HCMCKZ
46
S4HCMCMX
47
S4HCMCMY
48
S4HCMCNL
49
S4HCMCNO
50
S4HCMCNZ
51
S4HCMCOM
52
S4HCMCPH
53
S4HCMCPL
54
S4HCMCPT
55
S4HCMCQA
56
S4HCMCRO
57
S4HCMCRU
58
S4HCMCSA
59
S4HCMCSE
60
S4HCMCSG
61
S4HCMCSI
62
S4HCMCSK
63
S4HCMCTH
64
S4HCMCTR
65
S4HCMCTW
66
S4HCMCUA
67
S4HCMCUN
68
S4HCMCUS
69
S4HCMCVE
70
S4HCMCZA
71
S4HCMGXX
72
S4HCMRXX
73
EA-DFPS
74
EA-PS
75
FI-CAX
76
IS-OIL
77
IS-PRA
78
IS-PS-CA
79
IS-UT
80
S4COREOP
81
S4DEPREC
82
GBX01HR5
83
UIAPFI70
84
UIS4HOP1
85
AIFGEN
86
BNWVS
Text Found in ${row}</msg>
<msg timestamp="20240602 18:36:59.490" level="INFO">${row} = 86</msg>
<status status="PASS" starttime="20240602 18:36:59.387" endtime="20240602 18:36:59.490"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${row}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240602 18:36:59.491" level="INFO">86</msg>
<status status="PASS" starttime="20240602 18:36:59.490" endtime="20240602 18:36:59.491"/>
</kw>
<kw name="Take Screenshot" library="CustomSapGuiLibrary">
<arg>002b_Version_1.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240602 18:36:59.565" level="INFO" html="true">&lt;a href="002b_Version_1.jpg"&gt;&lt;img src="002b_Version_1.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240602 18:36:59.491" endtime="20240602 18:36:59.565"/>
</kw>
<kw name="Select Table Row" library="CustomSapGuiLibrary">
<arg>wnd[1]/usr/tabsVERSDETAILS/tabpCOMP_VERS/ssubDETAIL_SUBSCREEN:SAPLOCS_UI_CONTROLS:0301/cntlSCV_CU_CONTROL/shellcont/shell</arg>
<arg>${row}</arg>
<doc>Selects an entire row of a table. This can either be a TableControl or a GridView 'table_id'
which is contained within a shell object. The row is an index to select the row, starting from 0.</doc>
<status status="PASS" starttime="20240602 18:36:59.566" endtime="20240602 18:36:59.595"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>6</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240602 18:37:05.597" level="INFO">Slept 6 seconds</msg>
<status status="PASS" starttime="20240602 18:36:59.595" endtime="20240602 18:37:05.597"/>
</kw>
<kw name="Take Screenshot" library="CustomSapGuiLibrary">
<arg>002c_Version_1.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240602 18:37:05.666" level="INFO" html="true">&lt;a href="002c_Version_1.jpg"&gt;&lt;img src="002c_Version_1.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240602 18:37:05.597" endtime="20240602 18:37:05.667"/>
</kw>
<kw name="Click Element" library="CustomSapGuiLibrary">
<arg>wnd[1]/tbar[0]/btn[0]</arg>
<doc>Performs a single click on a given element. Used only for buttons, tabs and menu items.</doc>
<status status="PASS" starttime="20240602 18:37:05.667" endtime="20240602 18:37:05.817"/>
</kw>
<status status="PASS" starttime="20240602 18:36:56.894" endtime="20240602 18:37:05.817"/>
</kw>
<kw name="Loading package" library="Spam_version">
<kw name="Click Element" library="CustomSapGuiLibrary">
<arg>wnd[0]/mbar/menu[0]/menu[0]/menu[1]</arg>
<doc>Performs a single click on a given element. Used only for buttons, tabs and menu items.</doc>
<status status="PASS" starttime="20240602 18:37:05.818" endtime="20240602 18:37:05.983"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240602 18:37:07.983" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20240602 18:37:05.983" endtime="20240602 18:37:07.983"/>
</kw>
<kw name="Take Screenshot" library="CustomSapGuiLibrary">
<arg>003_Load_1.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240602 18:37:08.049" level="INFO" html="true">&lt;a href="003_Load_1.jpg"&gt;&lt;img src="003_Load_1.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240602 18:37:07.983" endtime="20240602 18:37:08.049"/>
</kw>
<kw name="Click Element" library="CustomSapGuiLibrary">
<arg>wnd[1]/usr/btnSPOP-OPTION1</arg>
<doc>Performs a single click on a given element. Used only for buttons, tabs and menu items.</doc>
<status status="PASS" starttime="20240602 18:37:08.049" endtime="20240602 18:37:10.312"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240602 18:37:12.314" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20240602 18:37:10.313" endtime="20240602 18:37:12.314"/>
</kw>
<kw name="Take Screenshot" library="CustomSapGuiLibrary">
<arg>004_Load_2.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240602 18:37:12.397" level="INFO" html="true">&lt;a href="004_Load_2.jpg"&gt;&lt;img src="004_Load_2.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240602 18:37:12.314" endtime="20240602 18:37:12.397"/>
</kw>
<kw name="Click Element" library="CustomSapGuiLibrary">
<arg>wnd[0]/tbar[0]/btn[3]</arg>
<doc>Performs a single click on a given element. Used only for buttons, tabs and menu items.</doc>
<status status="PASS" starttime="20240602 18:37:12.397" endtime="20240602 18:37:12.776"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240602 18:37:14.777" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20240602 18:37:12.777" endtime="20240602 18:37:14.777"/>
</kw>
<kw name="Take Screenshot" library="CustomSapGuiLibrary">
<arg>005_Load_3.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240602 18:37:14.843" level="INFO" html="true">&lt;a href="005_Load_3.jpg"&gt;&lt;img src="005_Load_3.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240602 18:37:14.777" endtime="20240602 18:37:14.843"/>
</kw>
<status status="PASS" starttime="20240602 18:37:05.818" endtime="20240602 18:37:14.843"/>
</kw>
<kw name="Display/Define" library="Spam_version">
<kw name="Click Element" library="CustomSapGuiLibrary">
<arg>wnd[0]/usr/btnPAT100-QUEUE</arg>
<doc>Performs a single click on a given element. Used only for buttons, tabs and menu items.</doc>
<status status="PASS" starttime="20240602 18:37:14.844" endtime="20240602 18:37:15.808"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240602 18:37:17.809" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20240602 18:37:15.808" endtime="20240602 18:37:17.809"/>
</kw>
<kw name="Take Screenshot" library="CustomSapGuiLibrary">
<arg>006_Display.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240602 18:37:17.887" level="INFO" html="true">&lt;a href="006_Display.jpg"&gt;&lt;img src="006_Display.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240602 18:37:17.809" endtime="20240602 18:37:17.887"/>
</kw>
<status status="PASS" starttime="20240602 18:37:14.843" endtime="20240602 18:37:17.887"/>
</kw>
<kw name="Spam Component selection" library="Spam_version">
<kw name="Select Spam Based On Text" library="CustomSapGuiLibrary">
<var>${row}</var>
<arg>wnd[1]/usr/cntlCOMP_ONLY_CONTROL/shellcont/shell</arg>
<arg>${symvar('patch_comp')}</arg>
<msg timestamp="20240602 18:37:17.889" level="INFO">Sym.Dev.patch_comp: BNWVS</msg>
<msg timestamp="20240602 18:37:17.905" level="INFO">33
0
SAP_BASIS
not found
1
SAP_ABA
not found
2
SAP_GWFND
not found
3
SAP_UI
not found
4
ST-PI
not found
5
SAP_BW
not found
6
UIBAS001
not found
7
GRCPINW
not found
8
MDG_FND
not found
9
S4FND
not found
10
MDG_APPL
not found
11
S4CEXT
not found
12
S4CORE
not found
13
S4HCM
not found
14
EA-DFPS
not found
15
EA-PS
not found
16
FI-CAX
not found
17
IS-OIL
not found
18
IS-PRA
not found
19
IS-PS-CA
not found
20
IS-UT
not found
21
S4COREOP
not found
22
S4DEPREC
not found
23
GBX01HR5
not found
24
UIAPFI70
not found
25
UIS4HOP1
not found
26
AIFGEN
not found
27
BNWVS
Text Found in ${row}</msg>
<msg timestamp="20240602 18:37:17.905" level="INFO">${row} = 27</msg>
<status status="PASS" starttime="20240602 18:37:17.888" endtime="20240602 18:37:17.905"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${row}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240602 18:37:17.906" level="INFO">27</msg>
<status status="PASS" starttime="20240602 18:37:17.906" endtime="20240602 18:37:17.906"/>
</kw>
<kw name="Take Screenshot" library="CustomSapGuiLibrary">
<arg>007_Spam_component1.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240602 18:37:17.972" level="INFO" html="true">&lt;a href="007_Spam_component1.jpg"&gt;&lt;img src="007_Spam_component1.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240602 18:37:17.906" endtime="20240602 18:37:17.972"/>
</kw>
<kw name="Select Table Row" library="CustomSapGuiLibrary">
<arg>wnd[1]/usr/cntlCOMP_ONLY_CONTROL/shellcont/shell</arg>
<arg>${row}</arg>
<doc>Selects an entire row of a table. This can either be a TableControl or a GridView 'table_id'
which is contained within a shell object. The row is an index to select the row, starting from 0.</doc>
<status status="PASS" starttime="20240602 18:37:17.973" endtime="20240602 18:37:17.986"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240602 18:37:19.987" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20240602 18:37:17.986" endtime="20240602 18:37:19.987"/>
</kw>
<kw name="Take Screenshot" library="CustomSapGuiLibrary">
<arg>008_Spam_component2.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240602 18:37:20.077" level="INFO" html="true">&lt;a href="008_Spam_component2.jpg"&gt;&lt;img src="008_Spam_component2.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240602 18:37:19.987" endtime="20240602 18:37:20.077"/>
</kw>
<kw name="Click Element" library="CustomSapGuiLibrary">
<arg>wnd[1]/tbar[0]/btn[0]</arg>
<doc>Performs a single click on a given element. Used only for buttons, tabs and menu items.</doc>
<status status="PASS" starttime="20240602 18:37:20.077" endtime="20240602 18:37:20.265"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240602 18:37:22.266" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20240602 18:37:20.266" endtime="20240602 18:37:22.266"/>
</kw>
<kw name="Take Screenshot" library="CustomSapGuiLibrary">
<arg>009_Spam_component3.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240602 18:37:22.336" level="INFO" html="true">&lt;a href="009_Spam_component3.jpg"&gt;&lt;img src="009_Spam_component3.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240602 18:37:22.266" endtime="20240602 18:37:22.336"/>
</kw>
<status status="PASS" starttime="20240602 18:37:17.887" endtime="20240602 18:37:22.336"/>
</kw>
<kw name="Spam Patch selection" library="Spam_version">
<kw name="Spam Search And Select Label" library="CustomSapGuiLibrary">
<var>${patch_value}</var>
<arg>wnd[1]/usr</arg>
<arg>${symvar('patch_vers')}</arg>
<msg timestamp="20240602 18:37:22.338" level="INFO">Sym.Dev.patch_vers: SAPK-70A03INBNWVS</msg>
<msg timestamp="20240602 18:37:22.471" level="INFO">Text Found: SAPK-70A03INBNWVS</msg>
<msg timestamp="20240602 18:37:22.471" level="INFO">${patch_value} = None</msg>
<status status="PASS" starttime="20240602 18:37:22.337" endtime="20240602 18:37:22.471"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${patch_value}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240602 18:37:22.472" level="INFO">None</msg>
<status status="PASS" starttime="20240602 18:37:22.472" endtime="20240602 18:37:22.472"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240602 18:37:24.474" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20240602 18:37:22.473" endtime="20240602 18:37:24.474"/>
</kw>
<kw name="Take Screenshot" library="CustomSapGuiLibrary">
<arg>010_patch_select1.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240602 18:37:24.536" level="INFO" html="true">&lt;a href="010_patch_select1.jpg"&gt;&lt;img src="010_patch_select1.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240602 18:37:24.474" endtime="20240602 18:37:24.536"/>
</kw>
<kw name="Click Element" library="CustomSapGuiLibrary">
<arg>wnd[1]/tbar[0]/btn[0]</arg>
<doc>Performs a single click on a given element. Used only for buttons, tabs and menu items.</doc>
<status status="PASS" starttime="20240602 18:37:24.537" endtime="20240602 18:37:26.887"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240602 18:37:28.889" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20240602 18:37:26.887" endtime="20240602 18:37:28.889"/>
</kw>
<kw name="Take Screenshot" library="CustomSapGuiLibrary">
<arg>011_patch_select2.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240602 18:37:28.965" level="INFO" html="true">&lt;a href="011_patch_select2.jpg"&gt;&lt;img src="011_patch_select2.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240602 18:37:28.889" endtime="20240602 18:37:28.965"/>
</kw>
<status status="PASS" starttime="20240602 18:37:22.336" endtime="20240602 18:37:28.965"/>
</kw>
<kw name="Important SAP note handling" library="Spam_version">
<kw name="Is Imp Notes Existing" library="CustomSapGuiLibrary">
<arg>wnd[1]</arg>
<arg>wnd[1]/tbar[0]/btn[0]</arg>
<msg timestamp="20240602 18:37:28.970" level="INFO">Modal window does not exist.</msg>
<status status="PASS" starttime="20240602 18:37:28.966" endtime="20240602 18:37:28.970"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240602 18:37:30.970" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20240602 18:37:28.970" endtime="20240602 18:37:30.970"/>
</kw>
<kw name="Take Screenshot" library="CustomSapGuiLibrary">
<arg>012_SAP_note.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240602 18:37:31.045" level="INFO" html="true">&lt;a href="012_SAP_note.jpg"&gt;&lt;img src="012_SAP_note.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240602 18:37:30.970" endtime="20240602 18:37:31.045"/>
</kw>
<kw name="Click Element" library="CustomSapGuiLibrary">
<arg>wnd[1]/usr/btnBUTTON_2</arg>
<doc>Performs a single click on a given element. Used only for buttons, tabs and menu items.</doc>
<status status="PASS" starttime="20240602 18:37:31.045" endtime="20240602 18:37:31.245"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240602 18:37:33.246" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20240602 18:37:31.246" endtime="20240602 18:37:33.246"/>
</kw>
<kw name="Take Screenshot" library="CustomSapGuiLibrary">
<arg>013_Modification.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240602 18:37:33.336" level="INFO" html="true">&lt;a href="013_Modification.jpg"&gt;&lt;img src="013_Modification.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240602 18:37:33.246" endtime="20240602 18:37:33.337"/>
</kw>
<status status="PASS" starttime="20240602 18:37:28.966" endtime="20240602 18:37:33.337"/>
</kw>
<tag>Regression</tag>
<tag>spamversion</tag>
<status status="PASS" starttime="20240602 18:36:48.731" endtime="20240602 18:37:33.337"/>
</test>
<test id="s1-s1-t2" name="Import Queue" line="20">
<kw name="Importing queue from support package" library="Spam_version">
<kw name="Click Element" library="CustomSapGuiLibrary">
<arg>wnd[0]/mbar/menu[0]/menu[3]</arg>
<doc>Performs a single click on a given element. Used only for buttons, tabs and menu items.</doc>
<status status="PASS" starttime="20240602 18:37:33.340" endtime="20240602 18:37:33.513"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240602 18:37:35.514" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20240602 18:37:33.513" endtime="20240602 18:37:35.514"/>
</kw>
<kw name="Take Screenshot" library="CustomSapGuiLibrary">
<arg>014_Imp_que_1.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240602 18:37:35.598" level="INFO" html="true">&lt;a href="014_Imp_que_1.jpg"&gt;&lt;img src="014_Imp_que_1.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240602 18:37:35.514" endtime="20240602 18:37:35.598"/>
</kw>
<kw name="Click Element" library="CustomSapGuiLibrary">
<arg>wnd[1]/tbar[0]/btn[27]</arg>
<doc>Performs a single click on a given element. Used only for buttons, tabs and menu items.</doc>
<status status="PASS" starttime="20240602 18:37:35.598" endtime="20240602 18:37:35.719"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240602 18:37:37.720" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20240602 18:37:35.720" endtime="20240602 18:37:37.720"/>
</kw>
<kw name="Take Screenshot" library="CustomSapGuiLibrary">
<arg>015_Imp_que_2.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240602 18:37:37.796" level="INFO" html="true">&lt;a href="015_Imp_que_2.jpg"&gt;&lt;img src="015_Imp_que_2.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240602 18:37:37.720" endtime="20240602 18:37:37.796"/>
</kw>
<status status="PASS" starttime="20240602 18:37:33.339" endtime="20240602 18:37:37.796"/>
</kw>
<kw name="Start Options" library="Spam_version">
<kw name="Select Radio Button" library="CustomSapGuiLibrary">
<arg>wnd[1]/usr/tabsSTART_OPTIONS/tabpSTART_FC1/ssubSTART_OPTIONS_SCA:SAPLOCS_UI:0701/radLAY0700-RB1_DIA</arg>
<doc>Sets radio button to the specified value.</doc>
<status status="PASS" starttime="20240602 18:37:37.797" endtime="20240602 18:37:37.803"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240602 18:37:39.805" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20240602 18:37:37.803" endtime="20240602 18:37:39.805"/>
</kw>
<kw name="Take Screenshot" library="CustomSapGuiLibrary">
<arg>016_prep_dial.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240602 18:37:39.868" level="INFO" html="true">&lt;a href="016_prep_dial.jpg"&gt;&lt;img src="016_prep_dial.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240602 18:37:39.805" endtime="20240602 18:37:39.868"/>
</kw>
<kw name="Click Element" library="CustomSapGuiLibrary">
<arg>wnd[1]/usr/tabsSTART_OPTIONS/tabpSTART_FC2</arg>
<doc>Performs a single click on a given element. Used only for buttons, tabs and menu items.</doc>
<status status="PASS" starttime="20240602 18:37:39.869" endtime="20240602 18:37:39.938"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240602 18:37:41.939" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20240602 18:37:39.938" endtime="20240602 18:37:41.939"/>
</kw>
<kw name="Take Screenshot" library="CustomSapGuiLibrary">
<arg>017_import_select.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240602 18:37:42.003" level="INFO" html="true">&lt;a href="017_import_select.jpg"&gt;&lt;img src="017_import_select.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240602 18:37:41.939" endtime="20240602 18:37:42.004"/>
</kw>
<kw name="Select Radio Button" library="CustomSapGuiLibrary">
<arg>wnd[1]/usr/tabsSTART_OPTIONS/tabpSTART_FC2/ssubSTART_OPTIONS_SCA:SAPLOCS_UI:0702/radLAY0700-RB2_BTCHIM</arg>
<doc>Sets radio button to the specified value.</doc>
<status status="PASS" starttime="20240602 18:37:42.004" endtime="20240602 18:37:42.090"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240602 18:37:44.090" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20240602 18:37:42.090" endtime="20240602 18:37:44.090"/>
</kw>
<kw name="Take Screenshot" library="CustomSapGuiLibrary">
<arg>018_import_bkgd.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240602 18:37:44.172" level="INFO" html="true">&lt;a href="018_import_bkgd.jpg"&gt;&lt;img src="018_import_bkgd.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240602 18:37:44.090" endtime="20240602 18:37:44.173"/>
</kw>
<status status="PASS" starttime="20240602 18:37:37.796" endtime="20240602 18:37:44.173"/>
</kw>
<kw name="Import Option" library="Spam_version">
<kw name="Click Element" library="CustomSapGuiLibrary">
<arg>wnd[1]/tbar[0]/btn[0]</arg>
<doc>Performs a single click on a given element. Used only for buttons, tabs and menu items.</doc>
<status status="PASS" starttime="20240602 18:37:44.173" endtime="20240602 18:37:44.293"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240602 18:37:45.294" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20240602 18:37:44.293" endtime="20240602 18:37:45.294"/>
</kw>
<kw name="Take Screenshot" library="CustomSapGuiLibrary">
<arg>019_import1.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240602 18:37:45.380" level="INFO" html="true">&lt;a href="019_import1.jpg"&gt;&lt;img src="019_import1.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240602 18:37:45.294" endtime="20240602 18:37:45.380"/>
</kw>
<kw name="Click Element" library="CustomSapGuiLibrary">
<arg>wnd[1]/tbar[0]/btn[25]</arg>
<doc>Performs a single click on a given element. Used only for buttons, tabs and menu items.</doc>
<status status="PASS" starttime="20240602 18:37:45.381" endtime="20240602 18:37:45.540"/>
</kw>
<kw name="Take Screenshot" library="CustomSapGuiLibrary">
<arg>020_import2.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240602 18:37:45.603" level="INFO" html="true">&lt;a href="020_import2.jpg"&gt;&lt;img src="020_import2.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240602 18:37:45.541" endtime="20240602 18:37:45.604"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240602 18:37:47.605" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20240602 18:37:45.604" endtime="20240602 18:37:47.605"/>
</kw>
<kw name="Is Errors During Disassembling Existing" library="CustomSapGuiLibrary">
<arg>wnd[0]</arg>
<arg>wnd[0]/tbar[1]/btn[20]</arg>
<msg timestamp="20240602 18:37:48.758" level="INFO">Window exists</msg>
<status status="PASS" starttime="20240602 18:37:47.605" endtime="20240602 18:37:48.759"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240602 18:37:50.759" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20240602 18:37:48.759" endtime="20240602 18:37:50.759"/>
</kw>
<kw name="Take Screenshot" library="CustomSapGuiLibrary">
<arg>021_ignore.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240602 18:37:50.833" level="INFO" html="true">&lt;a href="021_ignore.jpg"&gt;&lt;img src="021_ignore.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240602 18:37:50.759" endtime="20240602 18:37:50.833"/>
</kw>
<kw name="Is Spam User Defined Existing" library="CustomSapGuiLibrary">
<arg>wnd[1]</arg>
<arg>wnd[1]/tbar[0]/btn[0]</arg>
<msg timestamp="20240602 18:37:55.906" level="INFO">Window exists</msg>
<status status="PASS" starttime="20240602 18:37:50.833" endtime="20240602 18:37:55.906"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240602 18:37:57.908" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20240602 18:37:55.906" endtime="20240602 18:37:57.908"/>
</kw>
<kw name="Take Screenshot" library="CustomSapGuiLibrary">
<arg>022_User_defined.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240602 18:37:57.985" level="INFO" html="true">&lt;a href="022_User_defined.jpg"&gt;&lt;img src="022_User_defined.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240602 18:37:57.908" endtime="20240602 18:37:57.986"/>
</kw>
<status status="PASS" starttime="20240602 18:37:44.173" endtime="20240602 18:37:57.986"/>
</kw>
<kw name="Confirm Queue" library="Spam_version">
<kw name="Get Finish Cell Text1" library="CustomSapGuiLibrary">
<var>${cell_text_1}</var>
<arg>${finish_str}</arg>
<arg>${button_id}</arg>
<arg>${status_line}</arg>
<arg>${refresh_id}</arg>
<msg timestamp="20240602 18:41:32.618" level="INFO">Installation Successful</msg>
<msg timestamp="20240602 18:41:32.618" level="INFO">${cell_text_1} = Confirm queue</msg>
<status status="PASS" starttime="20240602 18:37:57.986" endtime="20240602 18:41:32.618"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${cell_text_1}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240602 18:41:32.619" level="INFO">Confirm queue</msg>
<status status="PASS" starttime="20240602 18:41:32.618" endtime="20240602 18:41:32.620"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240602 18:41:34.621" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20240602 18:41:32.620" endtime="20240602 18:41:34.621"/>
</kw>
<kw name="Take Screenshot" library="CustomSapGuiLibrary">
<arg>023_Confirmed_queue.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240602 18:41:34.706" level="INFO" html="true">&lt;a href="023_Confirmed_queue.jpg"&gt;&lt;img src="023_Confirmed_queue.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240602 18:41:34.621" endtime="20240602 18:41:34.707"/>
</kw>
<kw name="No Queue Pending" library="CustomSapGuiLibrary">
<arg>${no_Queue_id}</arg>
<msg timestamp="20240602 18:41:34.710" level="INFO">Queue is available</msg>
<status status="PASS" starttime="20240602 18:41:34.707" endtime="20240602 18:41:34.710"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240602 18:41:36.710" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20240602 18:41:34.710" endtime="20240602 18:41:36.710"/>
</kw>
<kw name="Take Screenshot" library="CustomSapGuiLibrary">
<arg>024_Status_Confirmed_queue1.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240602 18:41:36.780" level="INFO" html="true">&lt;a href="024_Status_Confirmed_queue1.jpg"&gt;&lt;img src="024_Status_Confirmed_queue1.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240602 18:41:36.710" endtime="20240602 18:41:36.780"/>
</kw>
<kw name="Click Element" library="CustomSapGuiLibrary">
<arg>wnd[1]/tbar[0]/btn[27]</arg>
<doc>Performs a single click on a given element. Used only for buttons, tabs and menu items.</doc>
<status status="PASS" starttime="20240602 18:41:36.780" endtime="20240602 18:41:36.888"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240602 18:41:38.889" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20240602 18:41:36.888" endtime="20240602 18:41:38.889"/>
</kw>
<kw name="Take Screenshot" library="CustomSapGuiLibrary">
<arg>025_Status_Confirmed_queue2.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240602 18:41:38.949" level="INFO" html="true">&lt;a href="025_Status_Confirmed_queue2.jpg"&gt;&lt;img src="025_Status_Confirmed_queue2.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240602 18:41:38.889" endtime="20240602 18:41:38.949"/>
</kw>
<status status="PASS" starttime="20240602 18:37:57.986" endtime="20240602 18:41:38.949"/>
</kw>
<kw name="Version check post upgrade" library="Spam_version">
<kw name="Click Element" library="CustomSapGuiLibrary">
<arg>wnd[0]/usr/btnPATCH_STATUS</arg>
<doc>Performs a single click on a given element. Used only for buttons, tabs and menu items.</doc>
<status status="PASS" starttime="20240602 18:41:38.950" endtime="20240602 18:41:39.270"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240602 18:41:41.272" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20240602 18:41:39.271" endtime="20240602 18:41:41.272"/>
</kw>
<kw name="Take Screenshot" library="CustomSapGuiLibrary">
<arg>026a_Version_1.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240602 18:41:41.336" level="INFO" html="true">&lt;a href="026a_Version_1.jpg"&gt;&lt;img src="026a_Version_1.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240602 18:41:41.272" endtime="20240602 18:41:41.337"/>
</kw>
<kw name="Select Spam Version" library="CustomSapGuiLibrary">
<var>${row}</var>
<arg>wnd[1]/usr/tabsVERSDETAILS/tabpCOMP_VERS/ssubDETAIL_SUBSCREEN:SAPLOCS_UI_CONTROLS:0301/cntlSCV_CU_CONTROL/shellcont/shell</arg>
<arg>${symvar('addOn')}</arg>
<msg timestamp="20240602 18:41:41.338" level="INFO">Sym.Dev.addOn: BNWVS</msg>
<msg timestamp="20240602 18:41:41.462" level="INFO">92
0
SAP_BASIS
1
SAP_ABA
2
SAP_GWFND
3
SAP_UI
4
ST-PI
5
SAP_BW
6
UIBAS001
7
GRCPINW
8
MDG_FND
9
S4FND
10
MDG_APPL
11
S4CEXT
12
S4CORE
13
S4HCM
14
S4HCMCAE
15
S4HCMCAR
16
S4HCMCAT
17
S4HCMCAU
18
S4HCMCBE
19
S4HCMCBG
20
S4HCMCBR
21
S4HCMCCA
22
S4HCMCCH
23
S4HCMCCL
24
S4HCMCCN
25
S4HCMCCO
26
S4HCMCCZ
27
S4HCMCDE
28
S4HCMCDK
29
S4HCMCEG
30
S4HCMCES
31
S4HCMCFI
32
S4HCMCFR
33
S4HCMCGB
34
S4HCMCGR
35
S4HCMCHK
36
S4HCMCHR
37
S4HCMCHU
38
S4HCMCID
39
S4HCMCIE
40
S4HCMCIN
41
S4HCMCIT
42
S4HCMCJP
43
S4HCMCKR
44
S4HCMCKW
45
S4HCMCKZ
46
S4HCMCMX
47
S4HCMCMY
48
S4HCMCNL
49
S4HCMCNO
50
S4HCMCNZ
51
S4HCMCOM
52
S4HCMCPH
53
S4HCMCPL
54
S4HCMCPT
55
S4HCMCQA
56
S4HCMCRO
57
S4HCMCRU
58
S4HCMCSA
59
S4HCMCSE
60
S4HCMCSG
61
S4HCMCSI
62
S4HCMCSK
63
S4HCMCTH
64
S4HCMCTR
65
S4HCMCTW
66
S4HCMCUA
67
S4HCMCUN
68
S4HCMCUS
69
S4HCMCVE
70
S4HCMCZA
71
S4HCMGXX
72
S4HCMRXX
73
EA-DFPS
74
EA-PS
75
FI-CAX
76
IS-OIL
77
IS-PRA
78
IS-PS-CA
79
IS-UT
80
S4COREOP
81
S4DEPREC
82
GBX01HR5
83
UIAPFI70
84
UIS4HOP1
85
AIFGEN
86
BNWVS
Text Found in ${row}</msg>
<msg timestamp="20240602 18:41:41.462" level="INFO">${row} = 86</msg>
<status status="PASS" starttime="20240602 18:41:41.337" endtime="20240602 18:41:41.462"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${row}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240602 18:41:41.463" level="INFO">86</msg>
<status status="PASS" starttime="20240602 18:41:41.462" endtime="20240602 18:41:41.463"/>
</kw>
<kw name="Take Screenshot" library="CustomSapGuiLibrary">
<arg>026b_Version_1.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240602 18:41:41.524" level="INFO" html="true">&lt;a href="026b_Version_1.jpg"&gt;&lt;img src="026b_Version_1.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240602 18:41:41.463" endtime="20240602 18:41:41.525"/>
</kw>
<kw name="Select Table Row" library="CustomSapGuiLibrary">
<arg>wnd[1]/usr/tabsVERSDETAILS/tabpCOMP_VERS/ssubDETAIL_SUBSCREEN:SAPLOCS_UI_CONTROLS:0301/cntlSCV_CU_CONTROL/shellcont/shell</arg>
<arg>${row}</arg>
<doc>Selects an entire row of a table. This can either be a TableControl or a GridView 'table_id'
which is contained within a shell object. The row is an index to select the row, starting from 0.</doc>
<status status="PASS" starttime="20240602 18:41:41.525" endtime="20240602 18:41:41.549"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>6</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240602 18:41:47.549" level="INFO">Slept 6 seconds</msg>
<status status="PASS" starttime="20240602 18:41:41.549" endtime="20240602 18:41:47.549"/>
</kw>
<kw name="Take Screenshot" library="CustomSapGuiLibrary">
<arg>026c_Version_1.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240602 18:41:47.624" level="INFO" html="true">&lt;a href="026c_Version_1.jpg"&gt;&lt;img src="026c_Version_1.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240602 18:41:47.549" endtime="20240602 18:41:47.624"/>
</kw>
<status status="PASS" starttime="20240602 18:41:38.949" endtime="20240602 18:41:47.625"/>
</kw>
<tag>Regression</tag>
<tag>spamversion</tag>
<status status="PASS" starttime="20240602 18:37:33.339" endtime="20240602 18:41:47.625"/>
</test>
<status status="PASS" starttime="20240602 18:36:41.040" endtime="20240602 18:41:47.628"/>
</suite>
<doc>Testing functionality through Robot Framework</doc>
<meta name="environment">Dev</meta>
<meta name="test_browser_name">chrome</meta>
<meta name="test_browser_version">125.0.6422.77</meta>
<meta name="test_driver_version">124.0.6367.207 </meta>
<meta name="test_environment">Dev</meta>
<meta name="test_freeze_dependencies">astroid==3.1.0,attrs==23.2.0,beautifulsoup4==4.12.3,bs4==0.0.2,build==1.2.1,certifi==2024.2.2,cffi==1.16.0,chardet==5.2.0,charset-normalizer==3.3.2,click==8.1.7,cmake==3.29.3,colorama==0.4.6,comtypes==1.4.2,cryptography==42.0.5,defusedxml==0.7.1,dill==0.3.8,docutils==0.21.2,et-xmlfile==1.1.0,exceptiongroup==1.2.1,fire==0.4.0,gitdb==4.0.11,GitPython==3.1.43,h11==0.14.0,idna==3.7,isort==5.13.2,Jinja2==3.1.3,jira==3.8.0,jsonpath-ng==1.6.1,jsonschema==4.21.1,jsonschema-specifications==2023.12.1,lazy-object-proxy==1.10.0,lxml==5.2.1,markdown-it-py==3.0.0,MarkupSafe==2.1.5,mccabe==0.7.0,mdurl==0.1.2,natsort==8.4.0,oauthlib==3.2.2,openpyxl==3.1.2,outcome==1.3.0.post0,packaging==24.0,pathspec==0.11.2,pendulum==3.0.0,pillow==10.3.0,pip==24.0,platformdirs==4.2.1,ply==3.11,psutil==5.9.8,pycparser==2.22,Pygments==2.17.2,pylint==3.1.0,pynput-robocorp-fork==5.0.0,pyperclip==1.8.2,pyproject-toml==0.0.10,pyproject_hooks==1.1.0,PySocks==1.7.1,python-dateutil==2.9.0.post0,python-dotenv==1.0.1,pywin32==306,PyYAML==6.0.1,referencing==0.35.0,reportlab==4.2.0,requests==2.31.0,requests-oauthlib==2.0.0,requests-toolbelt==1.0.0,rich==13.7.1,rich-click==1.6.1,robotframework==6.0.2,robotframework-datadriver==1.9.0,robotframework-excellib==2.0.1,robotframework-jsonlibrary==0.5,robotframework-pabot==2.16.0,robotframework-pythonlibcore==4.2.0,robotframework-requests==0.9.2,robotframework-sapguilibrary==1.1,robotframework-seleniumlibrary==5.1.3,robotframework-stacktrace==0.4.1,robotframework-tidy==4.5.0,rpaframework-core==11.3.2,rpaframework-windows==7.5.1,rpds-py==0.18.0,selenium==4.9.1,setuptools==70.0.0,six==1.16.0,smmap==5.0.1,sniffio==1.3.1,sortedcontainers==2.4.0,soupsieve==2.5,termcolor==2.4.0,time-machine==2.14.1,toml==0.10.2,tomli==2.0.1,tomlkit==0.12.4,trio==0.25.0,trio-websocket==0.11.1,typing_extensions==4.11.0,tzdata==2024.1,uiautomation==2.0.18,urllib3==2.2.1,webdriver-manager==4.0.1,wheel==0.43.0,wrapt==1.16.0,wsproto==1.2.0</meta>
<status status="PASS" starttime="20240602 18:36:36.850" endtime="20240602 18:41:47.993"/>
</suite>
<statistics>
<total>
<stat pass="2" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0" skip="0">Regression</stat>
<stat pass="2" fail="0" skip="0">spamversion</stat>
</tag>
<suite>
<stat pass="2" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1" name="Test Spam version">Tests.Test Spam version</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
