<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.12.1 on win32)" generated="20240111 19:30:56.188" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="D:\SAP_Testing\sap_testing\Tests">
<kw name="Setup highest level suite" type="SETUP">
<kw name="Set Variable" library="BuiltIn">
<var>${d.test_server}</var>
<arg>${test_server}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240111 19:30:56.760" level="INFO">${d.test_server} = Dev</msg>
<status status="PASS" starttime="20240111 19:30:56.760" endtime="20240111 19:30:56.760"/>
</kw>
<kw name="Reset screenshot count variable" library="Support">
<kw name="Set Variable" library="BuiltIn">
<var>${screenshotCount}</var>
<arg>${PABOTQUEUEINDEX}_1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240111 19:30:56.761" level="INFO">${screenshotCount} = 0_1</msg>
<status status="PASS" starttime="20240111 19:30:56.760" endtime="20240111 19:30:56.761"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${screenshotCount}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240111 19:30:56.761" level="INFO">${screenshotCount} = 0_1</msg>
<status status="PASS" starttime="20240111 19:30:56.761" endtime="20240111 19:30:56.762"/>
</kw>
<kw name="Set up screenshot directory" library="Support">
<kw name="Create Directory" library="OperatingSystem">
<arg>${OUTPUTDIR}${/}${wvar('screenshot_dir')}</arg>
<doc>Creates the specified directory.</doc>
<msg timestamp="20240111 19:30:56.763" level="INFO">Web.Dev.screenshot_dir: Screenshot</msg>
<msg timestamp="20240111 19:30:56.764" level="INFO" html="true">Created directory '&lt;a href="file://D:\SAP_Testing\sap_testing\Output\pabot_results\0\Screenshot"&gt;D:\SAP_Testing\sap_testing\Output\pabot_results\0\Screenshot&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20240111 19:30:56.763" endtime="20240111 19:30:56.764"/>
</kw>
<status status="PASS" starttime="20240111 19:30:56.762" endtime="20240111 19:30:56.764"/>
</kw>
<status status="PASS" starttime="20240111 19:30:56.760" endtime="20240111 19:30:56.764"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${screenshot_taking}</arg>
<arg>${True}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240111 19:30:56.764" level="INFO">${screenshot_taking} = True</msg>
<status status="PASS" starttime="20240111 19:30:56.764" endtime="20240111 19:30:56.764"/>
</kw>
<kw name="Setup linux execution" library="Support">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${web_test_check}</var>
<arg>Variable Should Exist</arg>
<arg>${web_test}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Variable Should Exist" library="BuiltIn">
<arg>${web_test}</arg>
<doc>Fails unless the given variable exists within the current scope.</doc>
<status status="PASS" starttime="20240111 19:30:56.765" endtime="20240111 19:30:56.765"/>
</kw>
<msg timestamp="20240111 19:30:56.765" level="INFO">${web_test_check} = True</msg>
<status status="PASS" starttime="20240111 19:30:56.765" endtime="20240111 19:30:56.765"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${web_test_check}</arg>
<arg>Setup Docker Execution Options</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup Docker Execution Options" library="Support_Web">
<kw name="Setup Suite Metadata" library="Support_Web">
<arg>${browser}</arg>
<kw name="Get Browser Metadata" library="BrowserSupport">
<var>&amp;{browser_information}</var>
<arg>browser=${browser}</arg>
<doc>Fetches browser metadata information
:param browser: Name of the browser for which information is fetched
:param reload: Re-read the metadata based on the browser
:return: Browser metadata information, dict of format
            {"browser_version": browser version value,
             "driver_version": driver version value}</doc>
<msg timestamp="20240111 19:30:59.911" level="INFO">&amp;{browser_information} = { browser_version=120.0.6099.216 | driver_version=119.0.6045.105  }</msg>
<status status="PASS" starttime="20240111 19:30:56.766" endtime="20240111 19:30:59.911"/>
</kw>
<kw name="Set Suite Metadata" library="BuiltIn">
<arg>test_browser_name</arg>
<arg>${browser}</arg>
<doc>Sets metadata for the current test suite.</doc>
<msg timestamp="20240111 19:30:59.911" level="INFO">Set suite metadata 'test_browser_name' to value 'chrome'.</msg>
<status status="PASS" starttime="20240111 19:30:59.911" endtime="20240111 19:30:59.911"/>
</kw>
<kw name="Set Suite Metadata" library="BuiltIn">
<arg>test_browser_version</arg>
<arg>${browser_information.browser_version}</arg>
<doc>Sets metadata for the current test suite.</doc>
<msg timestamp="20240111 19:30:59.911" level="INFO">Set suite metadata 'test_browser_version' to value '120.0.6099.216'.</msg>
<status status="PASS" starttime="20240111 19:30:59.911" endtime="20240111 19:30:59.911"/>
</kw>
<kw name="Set Suite Metadata" library="BuiltIn">
<arg>test_driver_version</arg>
<arg>${browser_information.driver_version}</arg>
<doc>Sets metadata for the current test suite.</doc>
<msg timestamp="20240111 19:30:59.911" level="INFO">Set suite metadata 'test_driver_version' to value '119.0.6045.105 '.</msg>
<status status="PASS" starttime="20240111 19:30:59.911" endtime="20240111 19:30:59.911"/>
</kw>
<status status="PASS" starttime="20240111 19:30:56.766" endtime="20240111 19:30:59.911"/>
</kw>
<kw name="Setup Global Docker Execution Options" library="Support_Web">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${global_browser_options}</arg>
<arg>None</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240111 19:30:59.911" level="INFO">${global_browser_options} = None</msg>
<status status="PASS" starttime="20240111 19:30:59.911" endtime="20240111 19:30:59.911"/>
</kw>
<kw name="Get Environment Variable" library="OperatingSystem">
<var>${docker_check}</var>
<arg>EXECUTION_ENVIRONMENT</arg>
<arg>not_found</arg>
<doc>Returns the value of an environment variable with the given name.</doc>
<msg timestamp="20240111 19:30:59.911" level="INFO">${docker_check} = not_found</msg>
<status status="PASS" starttime="20240111 19:30:59.911" endtime="20240111 19:30:59.911"/>
</kw>
<kw name="Run Keyword And Return If" library="BuiltIn">
<arg>"${docker_check}"!="docker"</arg>
<arg>Log</arg>
<arg>Not executing on Docker</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Log" library="BuiltIn">
<arg>Not executing on Docker</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240111 19:30:59.911" level="INFO">Not executing on Docker</msg>
<status status="PASS" starttime="20240111 19:30:59.911" endtime="20240111 19:30:59.911"/>
</kw>
<msg timestamp="20240111 19:30:59.911" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240111 19:30:59.911" endtime="20240111 19:30:59.911"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{options}</var>
<arg>--headless</arg>
<arg>--no-sandbox</arg>
<arg>--disable-dev-shm-usage</arg>
<doc>Returns a list containing given items.</doc>
<status status="NOT RUN" starttime="20240111 19:30:59.911" endtime="20240111 19:30:59.911"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>@{docker_options}</arg>
<arg>@{options}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20240111 19:30:59.911" endtime="20240111 19:30:59.911"/>
</kw>
<status status="PASS" starttime="20240111 19:30:59.911" endtime="20240111 19:30:59.911"/>
</kw>
<kw name="Create Webdriver for chrome preferences" library="Support_Web">
<kw name="Update Docker Execution Options" library="Support_Web">
<var>${list_prefs}</var>
<arg>${list_prefs}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${docker_check}</var>
<arg>Variable Should Exist</arg>
<arg>${docker_options}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Variable Should Exist" library="BuiltIn">
<arg>${docker_options}</arg>
<doc>Fails unless the given variable exists within the current scope.</doc>
<msg timestamp="20240111 19:30:59.911" level="FAIL">Variable '${docker_options}' does not exist.</msg>
<status status="FAIL" starttime="20240111 19:30:59.911" endtime="20240111 19:30:59.911"/>
</kw>
<msg timestamp="20240111 19:30:59.911" level="INFO">${docker_check} = False</msg>
<status status="PASS" starttime="20240111 19:30:59.911" endtime="20240111 19:30:59.911"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${list_prefs_length}</var>
<arg>${list_prefs}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240111 19:30:59.911" level="INFO">Length is 1</msg>
<msg timestamp="20240111 19:30:59.911" level="INFO">${list_prefs_length} = 1</msg>
<status status="PASS" starttime="20240111 19:30:59.911" endtime="20240111 19:30:59.911"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${list_prefs}</var>
<arg>${docker_check} and ${list_prefs_length}&gt;0 and ${list_prefs}[0] != []</arg>
<arg>Combine Lists</arg>
<arg>${list_prefs}</arg>
<arg>${docker_options}</arg>
<arg>ELSE IF</arg>
<arg>${docker_check}</arg>
<arg>Set Variable</arg>
<arg>${docker_options}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${list_prefs}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${list_prefs}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20240111 19:30:59.911" endtime="20240111 19:30:59.911"/>
</kw>
<msg timestamp="20240111 19:30:59.911" level="INFO">${list_prefs} = [[]]</msg>
<status status="PASS" starttime="20240111 19:30:59.911" endtime="20240111 19:30:59.911"/>
</kw>
<msg timestamp="20240111 19:30:59.911" level="INFO">${list_prefs} = [[]]</msg>
<status status="PASS" starttime="20240111 19:30:59.911" endtime="20240111 19:30:59.911"/>
</kw>
<kw name="Create Chrome Options for download preferences" library="Support_Web">
<var>${chrome_options}</var>
<kw name="Evaluate" library="BuiltIn">
<var>${chrome_options}</var>
<arg>sys.modules['selenium.webdriver'].ChromeOptions()</arg>
<arg>sys</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240111 19:30:59.911" level="INFO">${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x000001B98B3851C0&gt;</msg>
<status status="PASS" starttime="20240111 19:30:59.911" endtime="20240111 19:30:59.911"/>
</kw>
<msg timestamp="20240111 19:30:59.911" level="INFO">${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x000001B98B3851C0&gt;</msg>
<status status="PASS" starttime="20240111 19:30:59.911" endtime="20240111 19:30:59.911"/>
</kw>
<kw name="Update Preferences List" library="Support_Web">
<arg>${chrome_options}</arg>
<arg>@{list_prefs}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${string_prefs}</var>
<arg>${list_prefs}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240111 19:30:59.911" level="INFO">${string_prefs} = [[]]</msg>
<status status="PASS" starttime="20240111 19:30:59.911" endtime="20240111 19:30:59.911"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${string_prefs} == [[]]</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20240111 19:30:59.911" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240111 19:30:59.911" endtime="20240111 19:30:59.911"/>
</kw>
<for flavor="IN">
<var>${preference}</var>
<value>@{list_prefs}</value>
<iter>
<var name="${preference}"/>
<kw name="Call Method" library="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>${preference}</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="NOT RUN" starttime="20240111 19:30:59.911" endtime="20240111 19:30:59.911"/>
</kw>
<status status="NOT RUN" starttime="20240111 19:30:59.911" endtime="20240111 19:30:59.911"/>
</iter>
<status status="NOT RUN" starttime="20240111 19:30:59.911" endtime="20240111 19:30:59.911"/>
</for>
<status status="PASS" starttime="20240111 19:30:59.911" endtime="20240111 19:30:59.911"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_experimental_option</arg>
<arg>prefs</arg>
<arg>${kw_prefs}</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240111 19:30:59.911" endtime="20240111 19:30:59.911"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${global_browser_options}</arg>
<arg>${chrome options}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240111 19:30:59.911" level="INFO">${global_browser_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x000001B98B3851C0&gt;</msg>
<status status="PASS" starttime="20240111 19:30:59.911" endtime="20240111 19:30:59.911"/>
</kw>
<status status="PASS" starttime="20240111 19:30:59.911" endtime="20240111 19:30:59.911"/>
</kw>
<status status="PASS" starttime="20240111 19:30:56.766" endtime="20240111 19:30:59.911"/>
</kw>
<status status="PASS" starttime="20240111 19:30:56.766" endtime="20240111 19:30:59.911"/>
</kw>
<status status="PASS" starttime="20240111 19:30:56.765" endtime="20240111 19:30:59.911"/>
</kw>
<kw name="Set Suite Metadata" library="BuiltIn">
<arg>environment</arg>
<arg>${test_server}</arg>
<doc>Sets metadata for the current test suite.</doc>
<msg timestamp="20240111 19:30:59.911" level="INFO">Set suite metadata 'environment' to value 'Dev'.</msg>
<status status="PASS" starttime="20240111 19:30:59.911" endtime="20240111 19:30:59.911"/>
</kw>
<status status="PASS" starttime="20240111 19:30:56.759" endtime="20240111 19:30:59.911"/>
</kw>
<suite id="s1-s1" name="Test spam patch" source="D:\SAP_Testing\sap_testing\Tests\Test_spam_patch.robot">
<kw name="System Logon" library="Common_Function" type="SETUP">
<kw name="Start Process" library="Process">
<arg>${symvar('EXE_PAD')}</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20240111 19:30:59.926" level="INFO">Sym.Dev.EXE_PAD: C:\Program Files (x86)\SAP\FrontEnd\SAPgui\saplogon.exe</msg>
<msg timestamp="20240111 19:30:59.926" level="INFO">Starting process:
"C:\Program Files (x86)\SAP\FrontEnd\SAPgui\saplogon.exe"</msg>
<status status="PASS" starttime="20240111 19:30:59.926" endtime="20240111 19:30:59.942"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240111 19:31:04.942" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20240111 19:30:59.942" endtime="20240111 19:31:04.942"/>
</kw>
<kw name="Connect To Session" library="CustomSapGuiLibrary">
<doc>Connects to an open session SAP.</doc>
<status status="PASS" starttime="20240111 19:31:04.942" endtime="20240111 19:31:04.942"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240111 19:31:09.942" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20240111 19:31:04.942" endtime="20240111 19:31:09.942"/>
</kw>
<kw name="Open Connection" library="CustomSapGuiLibrary">
<arg>${symvar('Connection_Name')}</arg>
<doc>Opens a connection to the given connection name. Be sure to provide the full connection name, including the bracket part.</doc>
<msg timestamp="20240111 19:31:09.942" level="INFO">Sym.Dev.Connection_Name: RBT</msg>
<status status="PASS" starttime="20240111 19:31:09.942" endtime="20240111 19:31:10.556"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240111 19:31:15.557" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20240111 19:31:10.557" endtime="20240111 19:31:15.557"/>
</kw>
<kw name="Input Text" library="CustomSapGuiLibrary">
<arg>wnd[0]/usr/txtRSYST-MANDT</arg>
<arg>${symvar('SAP_CLIENT')}</arg>
<doc>Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.</doc>
<msg timestamp="20240111 19:31:15.557" level="INFO">Sym.Dev.SAP_CLIENT: 000</msg>
<msg timestamp="20240111 19:31:15.557" level="INFO">Typing text '000' into text field 'wnd[0]/usr/txtRSYST-MANDT'.</msg>
<status status="PASS" starttime="20240111 19:31:15.557" endtime="20240111 19:31:15.557"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240111 19:31:16.558" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20240111 19:31:15.557" endtime="20240111 19:31:16.558"/>
</kw>
<kw name="Input Text" library="CustomSapGuiLibrary">
<arg>wnd[0]/usr/txtRSYST-BNAME</arg>
<arg>${symvar('SAP_USER')}</arg>
<doc>Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.</doc>
<msg timestamp="20240111 19:31:16.558" level="INFO">Sym.Dev.SAP_USER: DDIC</msg>
<msg timestamp="20240111 19:31:16.558" level="INFO">Typing text 'DDIC' into text field 'wnd[0]/usr/txtRSYST-BNAME'.</msg>
<status status="PASS" starttime="20240111 19:31:16.558" endtime="20240111 19:31:16.558"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240111 19:31:17.559" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20240111 19:31:16.558" endtime="20240111 19:31:17.559"/>
</kw>
<kw name="Input Password" library="CustomSapGuiLibrary">
<arg>wnd[0]/usr/pwdRSYST-BCODE</arg>
<arg>${symvar('SAP_PASSWORD')}</arg>
<doc>Inserts the given password into the text field identified by locator.
The password is not recorded in the log.</doc>
<msg timestamp="20240111 19:31:17.559" level="INFO">Sym.Dev.SAP_PASSWORD: Sym@rocks2023</msg>
<msg timestamp="20240111 19:31:17.559" level="INFO">Typing password into text field 'wnd[0]/usr/pwdRSYST-BCODE'.</msg>
<status status="PASS" starttime="20240111 19:31:17.559" endtime="20240111 19:31:17.559"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240111 19:31:19.559" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20240111 19:31:17.559" endtime="20240111 19:31:19.559"/>
</kw>
<kw name="Send Vkey" library="CustomSapGuiLibrary">
<arg>0</arg>
<doc>Sends a SAP virtual key combination to the window, not into an element.
If you want to send a value to a text field, use `input text` instead.</doc>
<status status="PASS" starttime="20240111 19:31:19.560" endtime="20240111 19:31:19.874"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240111 19:31:24.875" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20240111 19:31:19.874" endtime="20240111 19:31:24.875"/>
</kw>
<kw name="Take Screenshot" library="CustomSapGuiLibrary">
<arg>01_loginpage.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240111 19:31:24.930" level="INFO" html="true">&lt;a href="01_loginpage.jpg"&gt;&lt;img src="01_loginpage.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240111 19:31:24.875" endtime="20240111 19:31:24.930"/>
</kw>
<status status="PASS" starttime="20240111 19:30:59.926" endtime="20240111 19:31:24.930"/>
</kw>
<test id="s1-s1-t1" name="Check_Spam_update" line="9">
<kw name="Spam Transaction" library="Spam_Patch">
<kw name="Run Transaction" library="CustomSapGuiLibrary">
<arg>spam</arg>
<doc>Runs a Sap transaction. An error is given when an unknown transaction is specified.</doc>
<status status="PASS" starttime="20240111 19:31:24.930" endtime="20240111 19:31:25.158"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240111 19:31:30.158" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20240111 19:31:25.158" endtime="20240111 19:31:30.158"/>
</kw>
<kw name="Take Screenshot" library="CustomSapGuiLibrary">
<arg>02_spam.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240111 19:31:30.198" level="INFO" html="true">&lt;a href="02_spam.jpg"&gt;&lt;img src="02_spam.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240111 19:31:30.158" endtime="20240111 19:31:30.198"/>
</kw>
<status status="PASS" starttime="20240111 19:31:24.930" endtime="20240111 19:31:30.198"/>
</kw>
<kw name="Certificate Verification" library="Spam_Patch">
<kw name="Get Maintenance Certificate Text" library="CustomSapGuiLibrary">
<arg>wnd[0]/sbar/pane[0]</arg>
<msg timestamp="20240111 19:31:30.198" level="INFO">License available to proceed further</msg>
<status status="PASS" starttime="20240111 19:31:30.198" endtime="20240111 19:31:30.198"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240111 19:31:32.198" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20240111 19:31:30.198" endtime="20240111 19:31:32.198"/>
</kw>
<kw name="Take Screenshot" library="CustomSapGuiLibrary">
<arg>03_Certificate.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240111 19:31:32.245" level="INFO" html="true">&lt;a href="03_Certificate.jpg"&gt;&lt;img src="03_Certificate.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240111 19:31:32.198" endtime="20240111 19:31:32.245"/>
</kw>
<status status="PASS" starttime="20240111 19:31:30.198" endtime="20240111 19:31:32.245"/>
</kw>
<kw name="Loading package" library="Spam_Patch">
<kw name="Click Element" library="CustomSapGuiLibrary">
<arg>wnd[0]/mbar/menu[0]/menu[0]/menu[1]</arg>
<doc>Performs a single click on a given element. Used only for buttons, tabs and menu items.</doc>
<status status="PASS" starttime="20240111 19:31:32.245" endtime="20240111 19:31:32.367"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240111 19:31:34.367" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20240111 19:31:32.367" endtime="20240111 19:31:34.367"/>
</kw>
<kw name="Take Screenshot" library="CustomSapGuiLibrary">
<arg>04_Load_1.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240111 19:31:34.417" level="INFO" html="true">&lt;a href="04_Load_1.jpg"&gt;&lt;img src="04_Load_1.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240111 19:31:34.367" endtime="20240111 19:31:34.417"/>
</kw>
<kw name="Click Element" library="CustomSapGuiLibrary">
<arg>wnd[1]/usr/btnSPOP-OPTION1</arg>
<doc>Performs a single click on a given element. Used only for buttons, tabs and menu items.</doc>
<status status="PASS" starttime="20240111 19:31:34.417" endtime="20240111 19:31:39.730"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240111 19:31:41.731" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20240111 19:31:39.730" endtime="20240111 19:31:41.731"/>
</kw>
<kw name="Take Screenshot" library="CustomSapGuiLibrary">
<arg>05_Load_2.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240111 19:31:41.779" level="INFO" html="true">&lt;a href="05_Load_2.jpg"&gt;&lt;img src="05_Load_2.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240111 19:31:41.731" endtime="20240111 19:31:41.779"/>
</kw>
<kw name="Click Element" library="CustomSapGuiLibrary">
<arg>wnd[0]/tbar[0]/btn[3]</arg>
<doc>Performs a single click on a given element. Used only for buttons, tabs and menu items.</doc>
<status status="PASS" starttime="20240111 19:31:41.779" endtime="20240111 19:31:41.923"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240111 19:31:43.925" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20240111 19:31:41.923" endtime="20240111 19:31:43.925"/>
</kw>
<kw name="Take Screenshot" library="CustomSapGuiLibrary">
<arg>06_Load_3.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240111 19:31:43.972" level="INFO" html="true">&lt;a href="06_Load_3.jpg"&gt;&lt;img src="06_Load_3.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240111 19:31:43.925" endtime="20240111 19:31:43.972"/>
</kw>
<status status="PASS" starttime="20240111 19:31:32.245" endtime="20240111 19:31:43.972"/>
</kw>
<kw name="Display/Define" library="Spam_Patch">
<kw name="Click Element" library="CustomSapGuiLibrary">
<arg>wnd[0]/usr/btnPAT100-QUEUE</arg>
<doc>Performs a single click on a given element. Used only for buttons, tabs and menu items.</doc>
<status status="PASS" starttime="20240111 19:31:43.988" endtime="20240111 19:31:44.364"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240111 19:31:46.365" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20240111 19:31:44.364" endtime="20240111 19:31:46.365"/>
</kw>
<kw name="Take Screenshot" library="CustomSapGuiLibrary">
<arg>07_Display.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240111 19:31:46.396" level="INFO" html="true">&lt;a href="07_Display.jpg"&gt;&lt;img src="07_Display.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240111 19:31:46.365" endtime="20240111 19:31:46.396"/>
</kw>
<status status="PASS" starttime="20240111 19:31:43.988" endtime="20240111 19:31:46.412"/>
</kw>
<kw name="Spam Component selection" library="Spam_Patch">
<kw name="Select Spam Based On Text" library="CustomSapGuiLibrary">
<var>${row}</var>
<arg>wnd[1]/usr/cntlCOMP_ONLY_CONTROL/shellcont/shell</arg>
<arg>${patch_comp}</arg>
<msg timestamp="20240111 19:31:46.412" level="INFO">7
0
SAP_BASIS
not found
1
SAP_ABA
not found
2
SAP_GWFND
not found
3
SAP_UI
not found
4
ST-PI
Text Found in ${row}</msg>
<msg timestamp="20240111 19:31:46.412" level="INFO">${row} = 4</msg>
<status status="PASS" starttime="20240111 19:31:46.412" endtime="20240111 19:31:46.412"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${row}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240111 19:31:46.412" level="INFO">4</msg>
<status status="PASS" starttime="20240111 19:31:46.412" endtime="20240111 19:31:46.412"/>
</kw>
<kw name="Select Table Row" library="CustomSapGuiLibrary">
<arg>wnd[1]/usr/cntlCOMP_ONLY_CONTROL/shellcont/shell</arg>
<arg>4</arg>
<doc>Selects an entire row of a table. This can either be a TableControl or a GridView 'table_id'
which is contained within a shell object. The row is an index to select the row, starting from 0.</doc>
<status status="PASS" starttime="20240111 19:31:46.412" endtime="20240111 19:31:46.427"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240111 19:31:48.428" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20240111 19:31:46.427" endtime="20240111 19:31:48.428"/>
</kw>
<kw name="Take Screenshot" library="CustomSapGuiLibrary">
<arg>08_Spam_component1.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240111 19:31:48.479" level="INFO" html="true">&lt;a href="08_Spam_component1.jpg"&gt;&lt;img src="08_Spam_component1.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240111 19:31:48.428" endtime="20240111 19:31:48.479"/>
</kw>
<kw name="Click Element" library="CustomSapGuiLibrary">
<arg>wnd[1]/tbar[0]/btn[0]</arg>
<doc>Performs a single click on a given element. Used only for buttons, tabs and menu items.</doc>
<status status="PASS" starttime="20240111 19:31:48.479" endtime="20240111 19:31:48.759"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240111 19:31:50.760" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20240111 19:31:48.759" endtime="20240111 19:31:50.760"/>
</kw>
<kw name="Take Screenshot" library="CustomSapGuiLibrary">
<arg>09_Spam_component2.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240111 19:31:50.820" level="INFO" html="true">&lt;a href="09_Spam_component2.jpg"&gt;&lt;img src="09_Spam_component2.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240111 19:31:50.760" endtime="20240111 19:31:50.820"/>
</kw>
<status status="PASS" starttime="20240111 19:31:46.412" endtime="20240111 19:31:50.820"/>
</kw>
<kw name="Spam Patch selection" library="Spam_Patch">
<kw name="Spam Search And Select Label" library="CustomSapGuiLibrary">
<var>${patch_value}</var>
<arg>wnd[1]/usr</arg>
<arg>${patch_vers}</arg>
<msg timestamp="20240111 19:31:52.174" level="INFO">0
Text Found: SAPK-74022INSTPI</msg>
<msg timestamp="20240111 19:31:52.174" level="INFO">${patch_value} = None</msg>
<status status="PASS" starttime="20240111 19:31:50.820" endtime="20240111 19:31:52.174"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${patch_value}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240111 19:31:52.175" level="INFO">None</msg>
<status status="PASS" starttime="20240111 19:31:52.174" endtime="20240111 19:31:52.175"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240111 19:31:54.175" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20240111 19:31:52.175" endtime="20240111 19:31:54.175"/>
</kw>
<kw name="Click Element" library="CustomSapGuiLibrary">
<arg>wnd[1]/tbar[0]/btn[0]</arg>
<doc>Performs a single click on a given element. Used only for buttons, tabs and menu items.</doc>
<status status="PASS" starttime="20240111 19:31:54.175" endtime="20240111 19:31:54.445"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240111 19:31:56.447" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20240111 19:31:54.445" endtime="20240111 19:31:56.447"/>
</kw>
<kw name="Take Screenshot" library="CustomSapGuiLibrary">
<arg>10_Spam_patch1.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240111 19:31:56.495" level="INFO" html="true">&lt;a href="10_Spam_patch1.jpg"&gt;&lt;img src="10_Spam_patch1.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240111 19:31:56.447" endtime="20240111 19:31:56.496"/>
</kw>
<status status="PASS" starttime="20240111 19:31:50.820" endtime="20240111 19:31:56.496"/>
</kw>
<kw name="Important SAP note handling" library="Spam_Patch">
<kw name="Is Imp Notes Existing" library="CustomSapGuiLibrary">
<arg>wnd[1]</arg>
<arg>wnd[1]/tbar[0]/btn[0]</arg>
<msg timestamp="20240111 19:31:56.500" level="INFO">Modal window does not exist.</msg>
<status status="PASS" starttime="20240111 19:31:56.496" endtime="20240111 19:31:56.500"/>
</kw>
<kw name="Take Screenshot" library="CustomSapGuiLibrary">
<arg>11_SAP_note.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240111 19:31:56.544" level="INFO" html="true">&lt;a href="11_SAP_note.jpg"&gt;&lt;img src="11_SAP_note.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240111 19:31:56.500" endtime="20240111 19:31:56.544"/>
</kw>
<kw name="Click Element" library="CustomSapGuiLibrary">
<arg>wnd[2]/tbar[0]/btn[0]</arg>
<doc>Performs a single click on a given element. Used only for buttons, tabs and menu items.</doc>
<status status="PASS" starttime="20240111 19:31:56.544" endtime="20240111 19:31:57.136"/>
</kw>
<kw name="Click Element" library="CustomSapGuiLibrary">
<arg>wnd[1]/usr/btnBUTTON_2</arg>
<doc>Performs a single click on a given element. Used only for buttons, tabs and menu items.</doc>
<status status="PASS" starttime="20240111 19:31:57.136" endtime="20240111 19:31:57.295"/>
</kw>
<kw name="Take Screenshot" library="CustomSapGuiLibrary">
<arg>12_Modification.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240111 19:31:57.344" level="INFO" html="true">&lt;a href="12_Modification.jpg"&gt;&lt;img src="12_Modification.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240111 19:31:57.296" endtime="20240111 19:31:57.344"/>
</kw>
<status status="PASS" starttime="20240111 19:31:56.496" endtime="20240111 19:31:57.344"/>
</kw>
<tag>Regression</tag>
<tag>spampatch</tag>
<status status="PASS" starttime="20240111 19:31:24.930" endtime="20240111 19:31:57.344"/>
</test>
<test id="s1-s1-t2" name="Import Queue" line="18">
<kw name="Importing queue from support package" library="Spam_Patch">
<kw name="Click Element" library="CustomSapGuiLibrary">
<arg>wnd[0]/mbar/menu[0]/menu[3]</arg>
<doc>Performs a single click on a given element. Used only for buttons, tabs and menu items.</doc>
<status status="PASS" starttime="20240111 19:31:57.344" endtime="20240111 19:31:57.473"/>
</kw>
<kw name="Click Element" library="CustomSapGuiLibrary">
<arg>wnd[1]/tbar[0]/btn[0]</arg>
<doc>Performs a single click on a given element. Used only for buttons, tabs and menu items.</doc>
<status status="PASS" starttime="20240111 19:31:57.473" endtime="20240111 19:31:57.607"/>
</kw>
<kw name="Take Screenshot" library="CustomSapGuiLibrary">
<arg>13_Imp_que_1.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240111 19:31:57.660" level="INFO" html="true">&lt;a href="13_Imp_que_1.jpg"&gt;&lt;img src="13_Imp_que_1.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240111 19:31:57.607" endtime="20240111 19:31:57.660"/>
</kw>
<kw name="Click Element" library="CustomSapGuiLibrary">
<arg>wnd[1]/tbar[0]/btn[27]</arg>
<doc>Performs a single click on a given element. Used only for buttons, tabs and menu items.</doc>
<status status="PASS" starttime="20240111 19:31:57.660" endtime="20240111 19:31:57.868"/>
</kw>
<kw name="Take Screenshot" library="CustomSapGuiLibrary">
<arg>14_Start_options.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240111 19:31:57.931" level="INFO" html="true">&lt;a href="14_Start_options.jpg"&gt;&lt;img src="14_Start_options.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240111 19:31:57.869" endtime="20240111 19:31:57.931"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240111 19:31:58.931" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20240111 19:31:57.931" endtime="20240111 19:31:58.931"/>
</kw>
<kw name="Select Radio Button" library="CustomSapGuiLibrary">
<arg>wnd[1]/usr/tabsSTART_OPTIONS/tabpSTART_FC1/ssubSTART_OPTIONS_SCA:SAPLOCS_UI:0701/radLAY0700-RB1_BTCHIM</arg>
<doc>Sets radio button to the specified value.</doc>
<status status="PASS" starttime="20240111 19:31:58.931" endtime="20240111 19:31:58.982"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240111 19:31:59.982" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20240111 19:31:58.982" endtime="20240111 19:31:59.982"/>
</kw>
<kw name="Take Screenshot" library="CustomSapGuiLibrary">
<arg>15_Start_bkgd.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240111 19:32:00.045" level="INFO" html="true">&lt;a href="15_Start_bkgd.jpg"&gt;&lt;img src="15_Start_bkgd.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240111 19:31:59.982" endtime="20240111 19:32:00.045"/>
</kw>
<kw name="Click Element" library="CustomSapGuiLibrary">
<arg>wnd[1]/tbar[0]/btn[0]</arg>
<doc>Performs a single click on a given element. Used only for buttons, tabs and menu items.</doc>
<status status="PASS" starttime="20240111 19:32:00.045" endtime="20240111 19:32:00.138"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240111 19:32:01.139" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20240111 19:32:00.138" endtime="20240111 19:32:01.139"/>
</kw>
<kw name="Take Screenshot" library="CustomSapGuiLibrary">
<arg>16_Start_bkgd_2.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240111 19:32:01.177" level="INFO" html="true">&lt;a href="16_Start_bkgd_2.jpg"&gt;&lt;img src="16_Start_bkgd_2.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240111 19:32:01.139" endtime="20240111 19:32:01.177"/>
</kw>
<kw name="Click Element" library="CustomSapGuiLibrary">
<arg>wnd[1]/tbar[0]/btn[25]</arg>
<doc>Performs a single click on a given element. Used only for buttons, tabs and menu items.</doc>
<status status="PASS" starttime="20240111 19:32:01.177" endtime="20240111 19:32:05.289"/>
</kw>
<kw name="Take Screenshot" library="CustomSapGuiLibrary">
<arg>17_Start_bkgd_3.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240111 19:32:05.367" level="INFO" html="true">&lt;a href="17_Start_bkgd_3.jpg"&gt;&lt;img src="17_Start_bkgd_3.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240111 19:32:05.289" endtime="20240111 19:32:05.367"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240111 19:32:06.367" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20240111 19:32:05.367" endtime="20240111 19:32:06.367"/>
</kw>
<status status="PASS" starttime="20240111 19:31:57.344" endtime="20240111 19:32:06.367"/>
</kw>
<kw name="Confirm Queue" library="Spam_Patch">
<kw name="Get Finish Cell Text1" library="CustomSapGuiLibrary">
<var>${cell_text_1}</var>
<arg>${finish_str}</arg>
<arg>${button_id}</arg>
<arg>${status_line}</arg>
<arg>${refresh_id}</arg>
<msg timestamp="20240111 19:49:09.381" level="INFO">Installation Successful</msg>
<msg timestamp="20240111 19:49:09.381" level="INFO">${cell_text_1} = Confirm queue</msg>
<status status="PASS" starttime="20240111 19:32:06.367" endtime="20240111 19:49:09.381"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${cell_text_1}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240111 19:49:09.382" level="INFO">Confirm queue</msg>
<status status="PASS" starttime="20240111 19:49:09.381" endtime="20240111 19:49:09.382"/>
</kw>
<kw name="Take Screenshot" library="CustomSapGuiLibrary">
<arg>18_Confirmed_queue.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240111 19:49:09.452" level="INFO" html="true">&lt;a href="18_Confirmed_queue.jpg"&gt;&lt;img src="18_Confirmed_queue.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240111 19:49:09.382" endtime="20240111 19:49:09.452"/>
</kw>
<kw name="No Queue Pending" library="CustomSapGuiLibrary">
<arg>${no_Queue_id}</arg>
<msg timestamp="20240111 19:49:09.452" level="INFO">Queue is available</msg>
<status status="PASS" starttime="20240111 19:49:09.452" endtime="20240111 19:49:09.452"/>
</kw>
<kw name="Take Screenshot" library="CustomSapGuiLibrary">
<arg>19_Status_Confirmed_queue1.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240111 19:49:09.499" level="INFO" html="true">&lt;a href="19_Status_Confirmed_queue1.jpg"&gt;&lt;img src="19_Status_Confirmed_queue1.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240111 19:49:09.452" endtime="20240111 19:49:09.499"/>
</kw>
<kw name="Click Element" library="CustomSapGuiLibrary">
<arg>wnd[1]/tbar[0]/btn[27]</arg>
<doc>Performs a single click on a given element. Used only for buttons, tabs and menu items.</doc>
<status status="PASS" starttime="20240111 19:49:09.499" endtime="20240111 19:49:09.585"/>
</kw>
<kw name="Take Screenshot" library="CustomSapGuiLibrary">
<arg>20_Status_Confirmed_queue2.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240111 19:49:09.633" level="INFO" html="true">&lt;a href="20_Status_Confirmed_queue2.jpg"&gt;&lt;img src="20_Status_Confirmed_queue2.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240111 19:49:09.585" endtime="20240111 19:49:09.633"/>
</kw>
<status status="PASS" starttime="20240111 19:32:06.367" endtime="20240111 19:49:09.633"/>
</kw>
<tag>Regression</tag>
<tag>spampatch</tag>
<status status="PASS" starttime="20240111 19:31:57.344" endtime="20240111 19:49:09.633"/>
</test>
<kw name="System Logout" library="Common_Function" type="TEARDOWN">
<kw name="Run Transaction" library="CustomSapGuiLibrary">
<arg>/nex</arg>
<doc>Runs a Sap transaction. An error is given when an unknown transaction is specified.</doc>
<status status="PASS" starttime="20240111 19:49:09.633" endtime="20240111 19:49:09.672"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240111 19:49:14.673" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20240111 19:49:09.672" endtime="20240111 19:49:14.673"/>
</kw>
<kw name="Take Screenshot" library="CustomSapGuiLibrary">
<arg>logoutpage.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240111 19:49:14.748" level="INFO" html="true">&lt;a href="logoutpage.jpg"&gt;&lt;img src="logoutpage.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240111 19:49:14.673" endtime="20240111 19:49:14.748"/>
</kw>
<status status="PASS" starttime="20240111 19:49:09.633" endtime="20240111 19:49:14.748"/>
</kw>
<status status="PASS" starttime="20240111 19:30:59.911" endtime="20240111 19:49:14.748"/>
</suite>
<doc>Testing functionality through Robot Framework</doc>
<meta name="environment">Dev</meta>
<meta name="test_browser_name">chrome</meta>
<meta name="test_browser_version">120.0.6099.216</meta>
<meta name="test_driver_version">119.0.6045.105 </meta>
<meta name="test_environment">Dev</meta>
<meta name="test_freeze_dependencies">astroid==3.0.2,attrs==23.2.0,beautifulsoup4==4.12.2,bs4==0.0.1,certifi==2023.11.17,cffi==1.16.0,chardet==5.2.0,charset-normalizer==3.3.2,click==8.1.7,colorama==0.4.6,cryptography==41.0.7,defusedxml==0.7.1,dill==0.3.7,docutils==0.20.1,exceptiongroup==1.2.0,gitdb==4.0.11,GitPython==3.1.40,h11==0.14.0,idna==3.6,isort==5.13.2,Jinja2==3.1.2,jira==3.6.0,jsonpath-ng==1.6.0,jsonschema==4.20.0,jsonschema-specifications==2023.12.1,lazy-object-proxy==1.10.0,lxml==5.1.0,markdown-it-py==3.0.0,MarkupSafe==2.1.3,mccabe==0.7.0,mdurl==0.1.2,natsort==8.4.0,oauthlib==3.2.2,outcome==1.3.0.post0,packaging==23.2,pathspec==0.11.2,pillow==10.2.0,pip==23.3.2,platformdirs==4.1.0,ply==3.11,pycparser==2.21,Pygments==2.17.2,pylint==3.0.3,PySocks==1.7.1,pywin32==306,PyYAML==6.0.1,referencing==0.32.1,requests==2.31.0,requests-oauthlib==1.3.1,requests-toolbelt==1.0.0,rich==13.7.0,rich-click==1.6.1,robotframework==6.0.2,robotframework-datadriver==1.9.0,robotframework-jsonlibrary==0.5,robotframework-pabot==2.16.0,robotframework-pythonlibcore==4.2.0,robotframework-requests==0.9.2,robotframework-sapguilibrary==1.1,robotframework-seleniumlibrary==5.1.3,robotframework-stacktrace==0.4.1,robotframework-tidy==4.5.0,rpds-py==0.16.2,selenium==4.9.1,setuptools==69.0.3,smmap==5.0.1,sniffio==1.3.0,sortedcontainers==2.4.0,soupsieve==2.5,tomli==2.0.1,tomlkit==0.12.3,trio==0.23.2,trio-websocket==0.11.1,typing_extensions==4.9.0,urllib3==2.1.0,wheel==0.42.0,wrapt==1.16.0,wsproto==1.2.0</meta>
<status status="PASS" starttime="20240111 19:30:56.421" endtime="20240111 19:49:15.121"/>
</suite>
<statistics>
<total>
<stat pass="2" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0" skip="0">Regression</stat>
<stat pass="2" fail="0" skip="0">spampatch</stat>
</tag>
<suite>
<stat pass="2" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1" name="Test spam patch">Tests.Test spam patch</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
