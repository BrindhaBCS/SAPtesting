<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.12.2 on win32)" generated="20240321 16:05:23.020" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="C:\SAP_Testing\SAPtesting\Tests">
<kw name="Setup highest level suite" type="SETUP">
<kw name="Set Variable" library="BuiltIn">
<var>${d.test_server}</var>
<arg>${test_server}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240321 16:05:23.777" level="INFO">${d.test_server} = Dev</msg>
<status status="PASS" starttime="20240321 16:05:23.777" endtime="20240321 16:05:23.777"/>
</kw>
<kw name="Reset screenshot count variable" library="Support">
<kw name="Set Variable" library="BuiltIn">
<var>${screenshotCount}</var>
<arg>${PABOTQUEUEINDEX}_1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240321 16:05:23.799" level="INFO">${screenshotCount} = 0_1</msg>
<status status="PASS" starttime="20240321 16:05:23.778" endtime="20240321 16:05:23.799"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${screenshotCount}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240321 16:05:23.799" level="INFO">${screenshotCount} = 0_1</msg>
<status status="PASS" starttime="20240321 16:05:23.799" endtime="20240321 16:05:23.799"/>
</kw>
<kw name="Set up screenshot directory" library="Support">
<kw name="Create Directory" library="OperatingSystem">
<arg>${OUTPUTDIR}${/}${wvar('screenshot_dir')}</arg>
<doc>Creates the specified directory.</doc>
<msg timestamp="20240321 16:05:23.801" level="INFO">Web.Dev.screenshot_dir: Screenshot</msg>
<msg timestamp="20240321 16:05:23.802" level="INFO" html="true">Created directory '&lt;a href="file://C:\SAP_Testing\SAPtesting\Output\pabot_results\0\Screenshot"&gt;C:\SAP_Testing\SAPtesting\Output\pabot_results\0\Screenshot&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20240321 16:05:23.800" endtime="20240321 16:05:23.802"/>
</kw>
<status status="PASS" starttime="20240321 16:05:23.799" endtime="20240321 16:05:23.802"/>
</kw>
<status status="PASS" starttime="20240321 16:05:23.777" endtime="20240321 16:05:23.803"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${screenshot_taking}</arg>
<arg>${True}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240321 16:05:23.804" level="INFO">${screenshot_taking} = True</msg>
<status status="PASS" starttime="20240321 16:05:23.803" endtime="20240321 16:05:23.804"/>
</kw>
<kw name="Setup linux execution" library="Support">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${web_test_check}</var>
<arg>Variable Should Exist</arg>
<arg>${web_test}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Variable Should Exist" library="BuiltIn">
<arg>${web_test}</arg>
<doc>Fails unless the given variable exists within the current scope.</doc>
<status status="PASS" starttime="20240321 16:05:23.805" endtime="20240321 16:05:23.806"/>
</kw>
<msg timestamp="20240321 16:05:23.806" level="INFO">${web_test_check} = True</msg>
<status status="PASS" starttime="20240321 16:05:23.805" endtime="20240321 16:05:23.806"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${web_test_check}</arg>
<arg>Setup Docker Execution Options</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup Docker Execution Options" library="Support_Web">
<kw name="Setup Suite Metadata" library="Support_Web">
<arg>${browser}</arg>
<kw name="Get Browser Metadata" library="BrowserSupport">
<var>&amp;{browser_information}</var>
<arg>browser=${browser}</arg>
<doc>Fetches browser metadata information
:param browser: Name of the browser for which information is fetched
:param reload: Re-read the metadata based on the browser
:return: Browser metadata information, dict of format
            {"browser_version": browser version value,
             "driver_version": driver version value}</doc>
<msg timestamp="20240321 16:05:28.896" level="INFO">&amp;{browser_information} = { browser_version=122.0.6261.129 | driver_version=121.0.6167.85  }</msg>
<status status="PASS" starttime="20240321 16:05:23.808" endtime="20240321 16:05:28.896"/>
</kw>
<kw name="Set Suite Metadata" library="BuiltIn">
<arg>test_browser_name</arg>
<arg>${browser}</arg>
<doc>Sets metadata for the current test suite.</doc>
<msg timestamp="20240321 16:05:28.897" level="INFO">Set suite metadata 'test_browser_name' to value 'chrome'.</msg>
<status status="PASS" starttime="20240321 16:05:28.897" endtime="20240321 16:05:28.897"/>
</kw>
<kw name="Set Suite Metadata" library="BuiltIn">
<arg>test_browser_version</arg>
<arg>${browser_information.browser_version}</arg>
<doc>Sets metadata for the current test suite.</doc>
<msg timestamp="20240321 16:05:28.900" level="INFO">Set suite metadata 'test_browser_version' to value '122.0.6261.129'.</msg>
<status status="PASS" starttime="20240321 16:05:28.897" endtime="20240321 16:05:28.901"/>
</kw>
<kw name="Set Suite Metadata" library="BuiltIn">
<arg>test_driver_version</arg>
<arg>${browser_information.driver_version}</arg>
<doc>Sets metadata for the current test suite.</doc>
<msg timestamp="20240321 16:05:28.902" level="INFO">Set suite metadata 'test_driver_version' to value '121.0.6167.85 '.</msg>
<status status="PASS" starttime="20240321 16:05:28.901" endtime="20240321 16:05:28.902"/>
</kw>
<status status="PASS" starttime="20240321 16:05:23.807" endtime="20240321 16:05:28.903"/>
</kw>
<kw name="Setup Global Docker Execution Options" library="Support_Web">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${global_browser_options}</arg>
<arg>None</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240321 16:05:28.904" level="INFO">${global_browser_options} = None</msg>
<status status="PASS" starttime="20240321 16:05:28.903" endtime="20240321 16:05:28.904"/>
</kw>
<kw name="Get Environment Variable" library="OperatingSystem">
<var>${docker_check}</var>
<arg>EXECUTION_ENVIRONMENT</arg>
<arg>not_found</arg>
<doc>Returns the value of an environment variable with the given name.</doc>
<msg timestamp="20240321 16:05:28.905" level="INFO">${docker_check} = not_found</msg>
<status status="PASS" starttime="20240321 16:05:28.904" endtime="20240321 16:05:28.905"/>
</kw>
<kw name="Run Keyword And Return If" library="BuiltIn">
<arg>"${docker_check}"!="docker"</arg>
<arg>Log</arg>
<arg>Not executing on Docker</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Log" library="BuiltIn">
<arg>Not executing on Docker</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240321 16:05:28.906" level="INFO">Not executing on Docker</msg>
<status status="PASS" starttime="20240321 16:05:28.905" endtime="20240321 16:05:28.906"/>
</kw>
<msg timestamp="20240321 16:05:28.906" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240321 16:05:28.905" endtime="20240321 16:05:28.906"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{options}</var>
<arg>--headless</arg>
<arg>--no-sandbox</arg>
<arg>--disable-dev-shm-usage</arg>
<doc>Returns a list containing given items.</doc>
<status status="NOT RUN" starttime="20240321 16:05:28.906" endtime="20240321 16:05:28.906"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>@{docker_options}</arg>
<arg>@{options}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20240321 16:05:28.906" endtime="20240321 16:05:28.906"/>
</kw>
<status status="PASS" starttime="20240321 16:05:28.903" endtime="20240321 16:05:28.907"/>
</kw>
<kw name="Create Webdriver for chrome preferences" library="Support_Web">
<kw name="Update Docker Execution Options" library="Support_Web">
<var>${list_prefs}</var>
<arg>${list_prefs}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${docker_check}</var>
<arg>Variable Should Exist</arg>
<arg>${docker_options}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Variable Should Exist" library="BuiltIn">
<arg>${docker_options}</arg>
<doc>Fails unless the given variable exists within the current scope.</doc>
<msg timestamp="20240321 16:05:28.910" level="FAIL">Variable '${docker_options}' does not exist.</msg>
<status status="FAIL" starttime="20240321 16:05:28.908" endtime="20240321 16:05:28.910"/>
</kw>
<msg timestamp="20240321 16:05:28.911" level="INFO">${docker_check} = False</msg>
<status status="PASS" starttime="20240321 16:05:28.908" endtime="20240321 16:05:28.911"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${list_prefs_length}</var>
<arg>${list_prefs}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240321 16:05:28.911" level="INFO">Length is 1</msg>
<msg timestamp="20240321 16:05:28.911" level="INFO">${list_prefs_length} = 1</msg>
<status status="PASS" starttime="20240321 16:05:28.911" endtime="20240321 16:05:28.911"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${list_prefs}</var>
<arg>${docker_check} and ${list_prefs_length}&gt;0 and ${list_prefs}[0] != []</arg>
<arg>Combine Lists</arg>
<arg>${list_prefs}</arg>
<arg>${docker_options}</arg>
<arg>ELSE IF</arg>
<arg>${docker_check}</arg>
<arg>Set Variable</arg>
<arg>${docker_options}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${list_prefs}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${list_prefs}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20240321 16:05:28.912" endtime="20240321 16:05:28.913"/>
</kw>
<msg timestamp="20240321 16:05:28.913" level="INFO">${list_prefs} = [[]]</msg>
<status status="PASS" starttime="20240321 16:05:28.912" endtime="20240321 16:05:28.913"/>
</kw>
<msg timestamp="20240321 16:05:28.913" level="INFO">${list_prefs} = [[]]</msg>
<status status="PASS" starttime="20240321 16:05:28.907" endtime="20240321 16:05:28.913"/>
</kw>
<kw name="Create Chrome Options for download preferences" library="Support_Web">
<var>${chrome_options}</var>
<kw name="Evaluate" library="BuiltIn">
<var>${chrome_options}</var>
<arg>sys.modules['selenium.webdriver'].ChromeOptions()</arg>
<arg>sys</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240321 16:05:28.914" level="INFO">${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x000001482E711370&gt;</msg>
<status status="PASS" starttime="20240321 16:05:28.914" endtime="20240321 16:05:28.914"/>
</kw>
<msg timestamp="20240321 16:05:28.915" level="INFO">${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x000001482E711370&gt;</msg>
<status status="PASS" starttime="20240321 16:05:28.914" endtime="20240321 16:05:28.915"/>
</kw>
<kw name="Update Preferences List" library="Support_Web">
<arg>${chrome_options}</arg>
<arg>@{list_prefs}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${string_prefs}</var>
<arg>${list_prefs}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240321 16:05:28.916" level="INFO">${string_prefs} = [[]]</msg>
<status status="PASS" starttime="20240321 16:05:28.916" endtime="20240321 16:05:28.916"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${string_prefs} == [[]]</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20240321 16:05:28.917" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240321 16:05:28.917" endtime="20240321 16:05:28.917"/>
</kw>
<for flavor="IN">
<var>${preference}</var>
<value>@{list_prefs}</value>
<iter>
<var name="${preference}"/>
<kw name="Call Method" library="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>${preference}</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="NOT RUN" starttime="20240321 16:05:28.918" endtime="20240321 16:05:28.918"/>
</kw>
<status status="NOT RUN" starttime="20240321 16:05:28.917" endtime="20240321 16:05:28.918"/>
</iter>
<status status="NOT RUN" starttime="20240321 16:05:28.917" endtime="20240321 16:05:28.918"/>
</for>
<status status="PASS" starttime="20240321 16:05:28.915" endtime="20240321 16:05:28.918"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_experimental_option</arg>
<arg>prefs</arg>
<arg>${kw_prefs}</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240321 16:05:28.918" endtime="20240321 16:05:28.918"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${global_browser_options}</arg>
<arg>${chrome options}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240321 16:05:28.919" level="INFO">${global_browser_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x000001482E711370&gt;</msg>
<status status="PASS" starttime="20240321 16:05:28.919" endtime="20240321 16:05:28.919"/>
</kw>
<status status="PASS" starttime="20240321 16:05:28.907" endtime="20240321 16:05:28.919"/>
</kw>
<status status="PASS" starttime="20240321 16:05:23.807" endtime="20240321 16:05:28.919"/>
</kw>
<status status="PASS" starttime="20240321 16:05:23.806" endtime="20240321 16:05:28.919"/>
</kw>
<status status="PASS" starttime="20240321 16:05:23.804" endtime="20240321 16:05:28.920"/>
</kw>
<kw name="Set Suite Metadata" library="BuiltIn">
<arg>environment</arg>
<arg>${test_server}</arg>
<doc>Sets metadata for the current test suite.</doc>
<msg timestamp="20240321 16:05:28.920" level="INFO">Set suite metadata 'environment' to value 'Dev'.</msg>
<status status="PASS" starttime="20240321 16:05:28.920" endtime="20240321 16:05:28.920"/>
</kw>
<status status="PASS" starttime="20240321 16:05:23.776" endtime="20240321 16:05:28.920"/>
</kw>
<suite id="s1-s1" name="Test Sales Force" source="C:\SAP_Testing\SAPtesting\Tests\Test_Sales_Force.robot">
<kw name="Launch Sales Force" library="Sales_Force" type="SETUP">
<kw name="Open Browser" library="SeleniumLibrary">
<arg>${symvar('Sales_URL')}</arg>
<arg>chrome</arg>
<doc>Opens a new browser instance to the optional ``url``.</doc>
<msg timestamp="20240321 16:05:29.074" level="INFO">Sym.Dev.Sales_URL: https://globalscientificsolutions--gssc100.sandbox.lightning.force.com/lightning/o/UserAppMenuItem/home</msg>
<msg timestamp="20240321 16:05:29.075" level="INFO">Opening browser 'chrome' to base url 'https://globalscientificsolutions--gssc100.sandbox.lightning.force.com/lightning/o/UserAppMenuItem/home'.</msg>
<status status="PASS" starttime="20240321 16:05:29.072" endtime="20240321 16:05:35.549"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>10s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240321 16:05:45.553" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20240321 16:05:35.550" endtime="20240321 16:05:45.553"/>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20240321 16:05:45.553" endtime="20240321 16:05:45.897"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>id:username</arg>
<arg>${symvar('login_name')}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20240321 16:05:45.899" level="INFO">Sym.Dev.login_name: sap_test1@evidentscientific.com</msg>
<msg timestamp="20240321 16:05:45.900" level="INFO">Typing text 'sap_test1@evidentscientific.com' into text field 'id:username'.</msg>
<status status="PASS" starttime="20240321 16:05:45.897" endtime="20240321 16:05:46.226"/>
</kw>
<kw name="Input Password" library="SeleniumLibrary">
<arg>id:password</arg>
<arg>%{login_password}</arg>
<doc>Types the given password into the text field identified by ``locator``.</doc>
<msg timestamp="20240321 16:05:46.228" level="INFO">Typing password into text field 'id:password'.</msg>
<msg timestamp="20240321 16:05:46.284" level="INFO">Temporally setting log level to: NONE</msg>
<msg timestamp="20240321 16:05:46.376" level="INFO">Log level changed from NONE to INFO.</msg>
<status status="PASS" starttime="20240321 16:05:46.226" endtime="20240321 16:05:46.376"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>id:Login</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20240321 16:05:46.378" level="INFO">Clicking element 'id:Login'.</msg>
<status status="PASS" starttime="20240321 16:05:46.376" endtime="20240321 16:05:51.987"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>21_Sales_login.jpg</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20240321 16:05:53.034" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="21_Sales_login.jpg"&gt;&lt;img src="21_Sales_login.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<msg timestamp="20240321 16:05:53.034" level="INFO">C:\SAP_Testing\SAPtesting\RoboEnvironment\Symphony\Lib\site-packages\selenium\webdriver\remote\webdriver.py:889: UserWarning: name used for saved screenshot does not match file type. It should end with a `.png` extension
  warnings.warn(</msg>
<status status="PASS" starttime="20240321 16:05:51.987" endtime="20240321 16:05:53.035"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>10s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240321 16:06:03.036" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20240321 16:05:53.035" endtime="20240321 16:06:03.036"/>
</kw>
<status status="PASS" starttime="20240321 16:05:29.072" endtime="20240321 16:06:03.036"/>
</kw>
<test id="s1-s1-t1" name="Searching for sales document" line="10">
<kw name="Document Search" library="Sales_Force">
<kw name="Click Button" library="SeleniumLibrary">
<arg>//button[@class='slds-button slds-button_neutral search-button slds-truncate']</arg>
<doc>Clicks the button identified by ``locator``.</doc>
<msg timestamp="20240321 16:06:03.039" level="INFO">Clicking button '//button[@class='slds-button slds-button_neutral search-button slds-truncate']'.</msg>
<status status="PASS" starttime="20240321 16:06:03.038" endtime="20240321 16:06:03.358"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240321 16:06:08.360" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20240321 16:06:03.359" endtime="20240321 16:06:08.360"/>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<arg>//input[@placeholder='Search...']</arg>
<arg>${order_no}</arg>
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<msg timestamp="20240321 16:06:08.361" level="INFO">Typing text '13029138' into text field '//input[@placeholder='Search...']'.</msg>
<status status="PASS" starttime="20240321 16:06:08.360" endtime="20240321 16:06:08.531"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>22_Orderno_input.jpg</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20240321 16:06:08.824" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="22_Orderno_input.jpg"&gt;&lt;img src="22_Orderno_input.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240321 16:06:08.532" endtime="20240321 16:06:08.824"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240321 16:06:13.825" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20240321 16:06:08.825" endtime="20240321 16:06:13.825"/>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<arg>//input[@placeholder='Search...']</arg>
<arg>ENTER</arg>
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<msg timestamp="20240321 16:06:13.827" level="INFO">Sending key(s) ('ENTER',) to //input[@placeholder='Search...'] element.</msg>
<msg timestamp="20240321 16:06:14.124" level="INFO">Pressing special key ENTER to element.</msg>
<msg timestamp="20240321 16:06:14.124" level="INFO">Releasing special key ENTER.</msg>
<status status="PASS" starttime="20240321 16:06:13.825" endtime="20240321 16:06:14.295"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240321 16:06:16.296" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20240321 16:06:14.295" endtime="20240321 16:06:16.296"/>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<arg>//a[@data-special-link='true']</arg>
<doc>Click the element identified by ``locator``.</doc>
<msg timestamp="20240321 16:06:16.297" level="INFO">Clicking element '//a[@data-special-link='true']'.</msg>
<status status="PASS" starttime="20240321 16:06:16.296" endtime="20240321 16:06:16.617"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>23_locate_hyperlink.jpg</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20240321 16:06:17.344" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="23_locate_hyperlink.jpg"&gt;&lt;img src="23_locate_hyperlink.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240321 16:06:16.617" endtime="20240321 16:06:17.344"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240321 16:06:19.346" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20240321 16:06:17.345" endtime="20240321 16:06:19.346"/>
</kw>
<kw name="Capture Page Screenshot" library="SeleniumLibrary">
<arg>Document.png</arg>
<doc>Takes a screenshot of the current page and embeds it into a log file.</doc>
<msg timestamp="20240321 16:06:19.515" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;a href="Document.png"&gt;&lt;img src="Document.png" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240321 16:06:19.346" endtime="20240321 16:06:19.516"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240321 16:06:21.516" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20240321 16:06:19.516" endtime="20240321 16:06:21.516"/>
</kw>
<status status="PASS" starttime="20240321 16:06:03.038" endtime="20240321 16:06:21.516"/>
</kw>
<tag>Regression</tag>
<tag>Sales</tag>
<status status="PASS" starttime="20240321 16:06:03.037" endtime="20240321 16:06:21.516"/>
</test>
<kw name="Close Sales Force" library="Sales_Force" type="TEARDOWN">
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20240321 16:06:21.519" endtime="20240321 16:06:27.248"/>
</kw>
<kw name="Create Pdf" library="PDF">
<arg>${screenshot_directory}</arg>
<arg>${PDF_Dir}</arg>
<status status="PASS" starttime="20240321 16:06:27.249" endtime="20240321 16:06:28.765"/>
</kw>
<kw name="Merge Pdfs In Folder" library="Merge">
<arg>${PDF_file}</arg>
<arg>${mergedpdf}</arg>
<status status="PASS" starttime="20240321 16:06:28.766" endtime="20240321 16:06:29.003"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240321 16:06:31.004" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20240321 16:06:29.004" endtime="20240321 16:06:31.004"/>
</kw>
<status status="PASS" starttime="20240321 16:06:21.518" endtime="20240321 16:06:31.004"/>
</kw>
<status status="PASS" starttime="20240321 16:05:28.920" endtime="20240321 16:06:31.004"/>
</suite>
<doc>Testing functionality through Robot Framework</doc>
<meta name="environment">Dev</meta>
<meta name="test_browser_name">chrome</meta>
<meta name="test_browser_version">122.0.6261.129</meta>
<meta name="test_driver_version">121.0.6167.85 </meta>
<meta name="test_environment">Dev</meta>
<meta name="test_freeze_dependencies">astroid==3.1.0,attrs==23.2.0,beautifulsoup4==4.12.3,bs4==0.0.2,certifi==2024.2.2,cffi==1.16.0,chardet==5.2.0,charset-normalizer==3.3.2,click==8.1.7,colorama==0.4.6,cryptography==42.0.5,defusedxml==0.7.1,dill==0.3.8,docutils==0.20.1,exceptiongroup==1.2.0,gitdb==4.0.11,GitPython==3.1.42,h11==0.14.0,idna==3.6,isort==5.13.2,Jinja2==3.1.3,jira==3.6.0,jsonpath-ng==1.6.1,jsonschema==4.21.1,jsonschema-specifications==2023.12.1,lazy-object-proxy==1.10.0,lxml==5.1.0,markdown-it-py==3.0.0,MarkupSafe==2.1.5,mccabe==0.7.0,mdurl==0.1.2,natsort==8.4.0,oauthlib==3.2.2,outcome==1.3.0.post0,packaging==24.0,pathspec==0.11.2,pillow==10.2.0,pip==24.0,platformdirs==4.2.0,ply==3.11,pycparser==2.21,Pygments==2.17.2,pylint==3.1.0,PyPDF2==3.0.1,PySocks==1.7.1,pywin32==306,PyYAML==6.0.1,referencing==0.33.0,reportlab==4.1.0,requests==2.31.0,requests-oauthlib==1.4.0,requests-toolbelt==1.0.0,rich==13.7.1,rich-click==1.6.1,robotframework==6.0.2,robotframework-datadriver==1.9.0,robotframework-jsonlibrary==0.5,robotframework-pabot==2.16.0,robotframework-pythonlibcore==4.2.0,robotframework-requests==0.9.2,robotframework-sapguilibrary==1.1,robotframework-seleniumlibrary==5.1.3,robotframework-stacktrace==0.4.1,robotframework-tidy==4.5.0,rpds-py==0.18.0,selenium==4.9.1,setuptools==69.2.0,smmap==5.0.1,sniffio==1.3.1,sortedcontainers==2.4.0,soupsieve==2.5,tomli==2.0.1,tomlkit==0.12.4,trio==0.24.0,trio-websocket==0.11.1,typing_extensions==4.10.0,urllib3==2.2.1,wheel==0.43.0,wrapt==1.16.0,wsproto==1.2.0</meta>
<status status="PASS" starttime="20240321 16:05:23.403" endtime="20240321 16:06:31.522"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">Regression</stat>
<stat pass="1" fail="0" skip="0">Sales</stat>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Test Sales Force">Tests.Test Sales Force</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
