<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.12.3 on win32)" generated="20240522 12:26:42.299" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="D:\RobotFramework\SAPtesting\Tests">
<kw name="Setup highest level suite" type="SETUP">
<kw name="Set Variable" library="BuiltIn">
<var>${d.test_server}</var>
<arg>${test_server}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240522 12:26:43.043" level="INFO">${d.test_server} = Dev</msg>
<status status="PASS" starttime="20240522 12:26:43.043" endtime="20240522 12:26:43.043"/>
</kw>
<kw name="Reset screenshot count variable" library="Support">
<kw name="Set Variable" library="BuiltIn">
<var>${screenshotCount}</var>
<arg>${PABOTQUEUEINDEX}_1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240522 12:26:43.044" level="INFO">${screenshotCount} = 0_1</msg>
<status status="PASS" starttime="20240522 12:26:43.044" endtime="20240522 12:26:43.044"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${screenshotCount}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240522 12:26:43.045" level="INFO">${screenshotCount} = 0_1</msg>
<status status="PASS" starttime="20240522 12:26:43.044" endtime="20240522 12:26:43.045"/>
</kw>
<kw name="Set up screenshot directory" library="Support">
<kw name="Create Directory" library="OperatingSystem">
<arg>${OUTPUTDIR}${/}${wvar('screenshot_dir')}</arg>
<doc>Creates the specified directory.</doc>
<msg timestamp="20240522 12:26:43.046" level="INFO">Web.Dev.screenshot_dir: Screenshot</msg>
<msg timestamp="20240522 12:26:43.048" level="INFO" html="true">Created directory '&lt;a href="file://D:\RobotFramework\SAPtesting\Output\pabot_results\0\Screenshot"&gt;D:\RobotFramework\SAPtesting\Output\pabot_results\0\Screenshot&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20240522 12:26:43.045" endtime="20240522 12:26:43.048"/>
</kw>
<status status="PASS" starttime="20240522 12:26:43.045" endtime="20240522 12:26:43.048"/>
</kw>
<status status="PASS" starttime="20240522 12:26:43.043" endtime="20240522 12:26:43.048"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${screenshot_taking}</arg>
<arg>${True}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240522 12:26:43.049" level="INFO">${screenshot_taking} = True</msg>
<status status="PASS" starttime="20240522 12:26:43.048" endtime="20240522 12:26:43.049"/>
</kw>
<kw name="Setup linux execution" library="Support">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${web_test_check}</var>
<arg>Variable Should Exist</arg>
<arg>${web_test}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Variable Should Exist" library="BuiltIn">
<arg>${web_test}</arg>
<doc>Fails unless the given variable exists within the current scope.</doc>
<status status="PASS" starttime="20240522 12:26:43.050" endtime="20240522 12:26:43.050"/>
</kw>
<msg timestamp="20240522 12:26:43.050" level="INFO">${web_test_check} = True</msg>
<status status="PASS" starttime="20240522 12:26:43.049" endtime="20240522 12:26:43.050"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${web_test_check}</arg>
<arg>Setup Docker Execution Options</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup Docker Execution Options" library="Support_Web">
<kw name="Setup Suite Metadata" library="Support_Web">
<arg>${browser}</arg>
<kw name="Get Browser Metadata" library="BrowserSupport">
<var>&amp;{browser_information}</var>
<arg>browser=${browser}</arg>
<doc>Fetches browser metadata information
:param browser: Name of the browser for which information is fetched
:param reload: Re-read the metadata based on the browser
:return: Browser metadata information, dict of format
            {"browser_version": browser version value,
             "driver_version": driver version value}</doc>
<msg timestamp="20240522 12:26:47.178" level="INFO">&amp;{browser_information} = { browser_version=124.0.6367.119 | driver_version=124.0.6367.207  }</msg>
<status status="PASS" starttime="20240522 12:26:43.051" endtime="20240522 12:26:47.178"/>
</kw>
<kw name="Set Suite Metadata" library="BuiltIn">
<arg>test_browser_name</arg>
<arg>${browser}</arg>
<doc>Sets metadata for the current test suite.</doc>
<msg timestamp="20240522 12:26:47.179" level="INFO">Set suite metadata 'test_browser_name' to value 'chrome'.</msg>
<status status="PASS" starttime="20240522 12:26:47.179" endtime="20240522 12:26:47.179"/>
</kw>
<kw name="Set Suite Metadata" library="BuiltIn">
<arg>test_browser_version</arg>
<arg>${browser_information.browser_version}</arg>
<doc>Sets metadata for the current test suite.</doc>
<msg timestamp="20240522 12:26:47.180" level="INFO">Set suite metadata 'test_browser_version' to value '124.0.6367.119'.</msg>
<status status="PASS" starttime="20240522 12:26:47.179" endtime="20240522 12:26:47.180"/>
</kw>
<kw name="Set Suite Metadata" library="BuiltIn">
<arg>test_driver_version</arg>
<arg>${browser_information.driver_version}</arg>
<doc>Sets metadata for the current test suite.</doc>
<msg timestamp="20240522 12:26:47.181" level="INFO">Set suite metadata 'test_driver_version' to value '124.0.6367.207 '.</msg>
<status status="PASS" starttime="20240522 12:26:47.181" endtime="20240522 12:26:47.181"/>
</kw>
<status status="PASS" starttime="20240522 12:26:43.051" endtime="20240522 12:26:47.182"/>
</kw>
<kw name="Setup Global Docker Execution Options" library="Support_Web">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${global_browser_options}</arg>
<arg>None</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240522 12:26:47.183" level="INFO">${global_browser_options} = None</msg>
<status status="PASS" starttime="20240522 12:26:47.182" endtime="20240522 12:26:47.183"/>
</kw>
<kw name="Get Environment Variable" library="OperatingSystem">
<var>${docker_check}</var>
<arg>EXECUTION_ENVIRONMENT</arg>
<arg>not_found</arg>
<doc>Returns the value of an environment variable with the given name.</doc>
<msg timestamp="20240522 12:26:47.184" level="INFO">${docker_check} = not_found</msg>
<status status="PASS" starttime="20240522 12:26:47.184" endtime="20240522 12:26:47.184"/>
</kw>
<kw name="Run Keyword And Return If" library="BuiltIn">
<arg>"${docker_check}"!="docker"</arg>
<arg>Log</arg>
<arg>Not executing on Docker</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Log" library="BuiltIn">
<arg>Not executing on Docker</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240522 12:26:47.185" level="INFO">Not executing on Docker</msg>
<status status="PASS" starttime="20240522 12:26:47.184" endtime="20240522 12:26:47.185"/>
</kw>
<msg timestamp="20240522 12:26:47.185" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240522 12:26:47.184" endtime="20240522 12:26:47.185"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{options}</var>
<arg>--headless</arg>
<arg>--no-sandbox</arg>
<arg>--disable-dev-shm-usage</arg>
<doc>Returns a list containing given items.</doc>
<status status="NOT RUN" starttime="20240522 12:26:47.185" endtime="20240522 12:26:47.185"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>@{docker_options}</arg>
<arg>@{options}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20240522 12:26:47.186" endtime="20240522 12:26:47.186"/>
</kw>
<status status="PASS" starttime="20240522 12:26:47.182" endtime="20240522 12:26:47.186"/>
</kw>
<kw name="Create Webdriver for chrome preferences" library="Support_Web">
<kw name="Update Docker Execution Options" library="Support_Web">
<var>${list_prefs}</var>
<arg>${list_prefs}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${docker_check}</var>
<arg>Variable Should Exist</arg>
<arg>${docker_options}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Variable Should Exist" library="BuiltIn">
<arg>${docker_options}</arg>
<doc>Fails unless the given variable exists within the current scope.</doc>
<msg timestamp="20240522 12:26:47.189" level="FAIL">Variable '${docker_options}' does not exist.</msg>
<status status="FAIL" starttime="20240522 12:26:47.187" endtime="20240522 12:26:47.189"/>
</kw>
<msg timestamp="20240522 12:26:47.190" level="INFO">${docker_check} = False</msg>
<status status="PASS" starttime="20240522 12:26:47.187" endtime="20240522 12:26:47.190"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${list_prefs_length}</var>
<arg>${list_prefs}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240522 12:26:47.190" level="INFO">Length is 1</msg>
<msg timestamp="20240522 12:26:47.190" level="INFO">${list_prefs_length} = 1</msg>
<status status="PASS" starttime="20240522 12:26:47.190" endtime="20240522 12:26:47.190"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${list_prefs}</var>
<arg>${docker_check} and ${list_prefs_length}&gt;0 and ${list_prefs}[0] != []</arg>
<arg>Combine Lists</arg>
<arg>${list_prefs}</arg>
<arg>${docker_options}</arg>
<arg>ELSE IF</arg>
<arg>${docker_check}</arg>
<arg>Set Variable</arg>
<arg>${docker_options}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${list_prefs}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${list_prefs}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20240522 12:26:47.191" endtime="20240522 12:26:47.191"/>
</kw>
<msg timestamp="20240522 12:26:47.191" level="INFO">${list_prefs} = [[]]</msg>
<status status="PASS" starttime="20240522 12:26:47.190" endtime="20240522 12:26:47.191"/>
</kw>
<msg timestamp="20240522 12:26:47.191" level="INFO">${list_prefs} = [[]]</msg>
<status status="PASS" starttime="20240522 12:26:47.186" endtime="20240522 12:26:47.192"/>
</kw>
<kw name="Create Chrome Options for download preferences" library="Support_Web">
<var>${chrome_options}</var>
<kw name="Evaluate" library="BuiltIn">
<var>${chrome_options}</var>
<arg>sys.modules['selenium.webdriver'].ChromeOptions()</arg>
<arg>sys</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240522 12:26:47.192" level="INFO">${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x000002C65EE4E480&gt;</msg>
<status status="PASS" starttime="20240522 12:26:47.192" endtime="20240522 12:26:47.192"/>
</kw>
<msg timestamp="20240522 12:26:47.193" level="INFO">${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x000002C65EE4E480&gt;</msg>
<status status="PASS" starttime="20240522 12:26:47.192" endtime="20240522 12:26:47.193"/>
</kw>
<kw name="Update Preferences List" library="Support_Web">
<arg>${chrome_options}</arg>
<arg>@{list_prefs}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${string_prefs}</var>
<arg>${list_prefs}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240522 12:26:47.193" level="INFO">${string_prefs} = [[]]</msg>
<status status="PASS" starttime="20240522 12:26:47.193" endtime="20240522 12:26:47.193"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${string_prefs} == [[]]</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20240522 12:26:47.194" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240522 12:26:47.194" endtime="20240522 12:26:47.194"/>
</kw>
<for flavor="IN">
<var>${preference}</var>
<value>@{list_prefs}</value>
<iter>
<var name="${preference}"/>
<kw name="Call Method" library="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>${preference}</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="NOT RUN" starttime="20240522 12:26:47.194" endtime="20240522 12:26:47.195"/>
</kw>
<status status="NOT RUN" starttime="20240522 12:26:47.194" endtime="20240522 12:26:47.195"/>
</iter>
<status status="NOT RUN" starttime="20240522 12:26:47.194" endtime="20240522 12:26:47.195"/>
</for>
<status status="PASS" starttime="20240522 12:26:47.193" endtime="20240522 12:26:47.195"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_experimental_option</arg>
<arg>prefs</arg>
<arg>${kw_prefs}</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240522 12:26:47.195" endtime="20240522 12:26:47.195"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${global_browser_options}</arg>
<arg>${chrome options}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240522 12:26:47.196" level="INFO">${global_browser_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x000002C65EE4E480&gt;</msg>
<status status="PASS" starttime="20240522 12:26:47.196" endtime="20240522 12:26:47.196"/>
</kw>
<status status="PASS" starttime="20240522 12:26:47.186" endtime="20240522 12:26:47.196"/>
</kw>
<status status="PASS" starttime="20240522 12:26:43.051" endtime="20240522 12:26:47.196"/>
</kw>
<status status="PASS" starttime="20240522 12:26:43.050" endtime="20240522 12:26:47.196"/>
</kw>
<status status="PASS" starttime="20240522 12:26:43.049" endtime="20240522 12:26:47.197"/>
</kw>
<kw name="Set Suite Metadata" library="BuiltIn">
<arg>environment</arg>
<arg>${test_server}</arg>
<doc>Sets metadata for the current test suite.</doc>
<msg timestamp="20240522 12:26:47.197" level="INFO">Set suite metadata 'environment' to value 'Dev'.</msg>
<status status="PASS" starttime="20240522 12:26:47.197" endtime="20240522 12:26:47.197"/>
</kw>
<status status="PASS" starttime="20240522 12:26:43.042" endtime="20240522 12:26:47.197"/>
</kw>
<suite id="s1-s1" name="Test Nike RZ11" source="D:\RobotFramework\SAPtesting\Tests\Test_Nike_RZ11.robot">
<kw name="System Logon" library="Nike_RZ11" type="SETUP">
<kw name="Start Process" library="Process">
<arg>${symvar('Nike_SAP')}</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20240522 12:26:47.216" level="INFO">Sym.Dev.Nike_SAP: C:\Program Files\SAP\FrontEnd\SAPGUI\saplogon.exe</msg>
<msg timestamp="20240522 12:26:47.216" level="INFO">Starting process:
"C:\Program Files\SAP\FrontEnd\SAPGUI\saplogon.exe"</msg>
<status status="PASS" starttime="20240522 12:26:47.215" endtime="20240522 12:26:47.226"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240522 12:26:52.226" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20240522 12:26:47.226" endtime="20240522 12:26:52.226"/>
</kw>
<kw name="Connect To Session" library="SAP_Tcode_Library">
<doc>Connects to an open session SAP.</doc>
<status status="PASS" starttime="20240522 12:26:52.226" endtime="20240522 12:26:52.239"/>
</kw>
<kw name="Open Connection" library="SAP_Tcode_Library">
<arg>${symvar('Nike_connection')}</arg>
<doc>Opens a connection to the given connection name. Be sure to provide the full connection name, including the bracket part.</doc>
<msg timestamp="20240522 12:26:52.240" level="INFO">Sym.Dev.Nike_connection: CFG</msg>
<status status="PASS" starttime="20240522 12:26:52.239" endtime="20240522 12:26:52.912"/>
</kw>
<kw name="Input Text" library="SAP_Tcode_Library">
<arg>wnd[0]/usr/txtRSYST-MANDT</arg>
<arg>${symvar('CFG_CLIENT')}</arg>
<doc>Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.</doc>
<msg timestamp="20240522 12:26:52.914" level="INFO">Sym.Dev.CFG_CLIENT: 000</msg>
<msg timestamp="20240522 12:26:52.982" level="INFO">Typing text '000' into text field 'wnd[0]/usr/txtRSYST-MANDT'.</msg>
<status status="PASS" starttime="20240522 12:26:52.913" endtime="20240522 12:26:52.983"/>
</kw>
<kw name="Input Text" library="SAP_Tcode_Library">
<arg>wnd[0]/usr/txtRSYST-BNAME</arg>
<arg>${symvar('CFG_USER')}</arg>
<doc>Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.</doc>
<msg timestamp="20240522 12:26:52.984" level="INFO">Sym.Dev.CFG_USER: basisadmin</msg>
<msg timestamp="20240522 12:26:53.005" level="INFO">Typing text 'basisadmin' into text field 'wnd[0]/usr/txtRSYST-BNAME'.</msg>
<status status="PASS" starttime="20240522 12:26:52.983" endtime="20240522 12:26:53.005"/>
</kw>
<kw name="Input Password" library="SAP_Tcode_Library">
<arg>wnd[0]/usr/pwdRSYST-BCODE</arg>
<arg>%{CFG_PASS}</arg>
<doc>Inserts the given password into the text field identified by locator.
The password is not recorded in the log.</doc>
<msg timestamp="20240522 12:26:53.012" level="INFO">Typing password into text field 'wnd[0]/usr/pwdRSYST-BCODE'.</msg>
<status status="PASS" starttime="20240522 12:26:53.006" endtime="20240522 12:26:53.012"/>
</kw>
<kw name="Send Vkey" library="SAP_Tcode_Library">
<arg>0</arg>
<doc>Sends a SAP virtual key combination to the window, not into an element.
If you want to send a value to a text field, use `input text` instead.</doc>
<status status="PASS" starttime="20240522 12:26:53.012" endtime="20240522 12:26:53.239"/>
</kw>
<kw name="Multiple Logon Handling" library="SAP_Tcode_Library">
<arg>wnd[1]</arg>
<arg>wnd[1]/usr/radMULTI_LOGON_OPT2</arg>
<arg>wnd[1]/tbar[0]/btn[0]</arg>
<msg timestamp="20240522 12:26:53.672" level="INFO">Multiple logon exists</msg>
<status status="PASS" starttime="20240522 12:26:53.240" endtime="20240522 12:26:53.673"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240522 12:26:54.674" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20240522 12:26:53.673" endtime="20240522 12:26:54.674"/>
</kw>
<status status="PASS" starttime="20240522 12:26:47.215" endtime="20240522 12:26:54.674"/>
</kw>
<test id="s1-s1-t1" name="Executing RZ11" line="9">
<kw name="Transaction RZ11" library="Nike_RZ11">
<kw name="Run Transaction" library="SAP_Tcode_Library">
<arg>/nRZ11</arg>
<doc>Runs a Sap transaction. An error is given when an unknown transaction is specified.</doc>
<status status="PASS" starttime="20240522 12:26:54.676" endtime="20240522 12:26:54.830"/>
</kw>
<kw name="Send Vkey" library="SAP_Tcode_Library">
<arg>0</arg>
<doc>Sends a SAP virtual key combination to the window, not into an element.
If you want to send a value to a text field, use `input text` instead.</doc>
<status status="PASS" starttime="20240522 12:26:54.831" endtime="20240522 12:26:54.923"/>
</kw>
<kw name="Take Screenshot" library="SAP_Tcode_Library">
<arg>001_RZ11.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240522 12:26:55.013" level="INFO" html="true">&lt;a href="001_RZ11.jpg"&gt;&lt;img src="001_RZ11.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240522 12:26:54.924" endtime="20240522 12:26:55.013"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240522 12:26:57.015" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20240522 12:26:55.014" endtime="20240522 12:26:57.015"/>
</kw>
<status status="PASS" starttime="20240522 12:26:54.676" endtime="20240522 12:26:57.015"/>
</kw>
<kw name="Parameter check" library="Nike_RZ11">
<kw name="Input Text" library="SAP_Tcode_Library">
<arg>wnd[0]/usr/ctxtTPFYSTRUCT-NAME</arg>
<arg>ssl/ciphersuites</arg>
<doc>Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.</doc>
<msg timestamp="20240522 12:26:57.035" level="INFO">Typing text 'ssl/ciphersuites' into text field 'wnd[0]/usr/ctxtTPFYSTRUCT-NAME'.</msg>
<status status="PASS" starttime="20240522 12:26:57.016" endtime="20240522 12:26:57.035"/>
</kw>
<kw name="Click Element" library="SAP_Tcode_Library">
<arg>wnd[0]/tbar[1]/btn[6]</arg>
<doc>Performs a single click on a given element. Used only for buttons, tabs and menu items.</doc>
<status status="PASS" starttime="20240522 12:26:57.035" endtime="20240522 12:27:06.067"/>
</kw>
<kw name="Get Row Count" library="SAP_Tcode_Library">
<var>${row_count}</var>
<arg>wnd[0]/shellcont/shell/shellcont[0]/shell</arg>
<doc>Returns the number of rows found in the specified table.</doc>
<msg timestamp="20240522 12:27:06.084" level="FAIL">AttributeError: &lt;unknown&gt;.rowCount</msg>
<status status="FAIL" starttime="20240522 12:27:06.067" endtime="20240522 12:27:06.093"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${row_count}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20240522 12:27:06.093" endtime="20240522 12:27:06.093"/>
</kw>
<status status="FAIL" starttime="20240522 12:26:57.015" endtime="20240522 12:27:06.093"/>
</kw>
<tag>Nike_RZ11</tag>
<tag>Regression</tag>
<status status="FAIL" starttime="20240522 12:26:54.675" endtime="20240522 12:27:06.094">AttributeError: &lt;unknown&gt;.rowCount</status>
</test>
<kw name="System Logout" library="Nike_RZ11" type="TEARDOWN">
<kw name="Run Transaction" library="SAP_Tcode_Library">
<arg>/nex</arg>
<doc>Runs a Sap transaction. An error is given when an unknown transaction is specified.</doc>
<status status="PASS" starttime="20240522 12:27:06.097" endtime="20240522 12:27:06.142"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240522 12:27:11.143" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20240522 12:27:06.143" endtime="20240522 12:27:11.143"/>
</kw>
<status status="PASS" starttime="20240522 12:27:06.097" endtime="20240522 12:27:11.143"/>
</kw>
<status status="FAIL" starttime="20240522 12:26:47.198" endtime="20240522 12:27:11.144"/>
</suite>
<doc>Testing functionality through Robot Framework</doc>
<meta name="environment">Dev</meta>
<meta name="test_browser_name">chrome</meta>
<meta name="test_browser_version">124.0.6367.119</meta>
<meta name="test_driver_version">124.0.6367.207 </meta>
<meta name="test_environment">Dev</meta>
<meta name="test_freeze_dependencies">astroid==3.1.0,attrs==23.2.0,beautifulsoup4==4.12.3,bs4==0.0.2,certifi==2024.2.2,cffi==1.16.0,chardet==5.2.0,charset-normalizer==3.3.2,click==8.1.7,colorama==0.4.6,cryptography==42.0.5,defusedxml==0.7.1,dill==0.3.8,docutils==0.21.2,exceptiongroup==1.2.1,gitdb==4.0.11,GitPython==3.1.43,h11==0.14.0,idna==3.7,isort==5.13.2,Jinja2==3.1.3,jira==3.8.0,jsonpath-ng==1.6.1,jsonschema==4.21.1,jsonschema-specifications==2023.12.1,lazy-object-proxy==1.10.0,lxml==5.2.1,markdown-it-py==3.0.0,MarkupSafe==2.1.5,mccabe==0.7.0,mdurl==0.1.2,natsort==8.4.0,oauthlib==3.2.2,outcome==1.3.0.post0,packaging==24.0,pathspec==0.11.2,pillow==10.3.0,pip==24.0,platformdirs==4.2.1,ply==3.11,pycparser==2.22,Pygments==2.17.2,pylint==3.1.0,PySocks==1.7.1,pywin32==306,PyYAML==6.0.1,referencing==0.35.0,reportlab==4.2.0,requests==2.31.0,requests-oauthlib==2.0.0,requests-toolbelt==1.0.0,rich==13.7.1,rich-click==1.6.1,robotframework==6.0.2,robotframework-datadriver==1.9.0,robotframework-jsonlibrary==0.5,robotframework-pabot==2.16.0,robotframework-pythonlibcore==4.2.0,robotframework-requests==0.9.2,robotframework-sapguilibrary==1.1,robotframework-seleniumlibrary==5.1.3,robotframework-stacktrace==0.4.1,robotframework-tidy==4.5.0,rpds-py==0.18.0,selenium==4.9.1,setuptools==69.5.1,smmap==5.0.1,sniffio==1.3.1,sortedcontainers==2.4.0,soupsieve==2.5,tomli==2.0.1,tomlkit==0.12.4,trio==0.25.0,trio-websocket==0.11.1,typing_extensions==4.11.0,urllib3==2.2.1,wheel==0.43.0,wrapt==1.16.0,wsproto==1.2.0</meta>
<status status="FAIL" starttime="20240522 12:26:42.666" endtime="20240522 12:27:11.482"/>
</suite>
<statistics>
<total>
<stat pass="0" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="1" skip="0">Nike_RZ11</stat>
<stat pass="0" fail="1" skip="0">Regression</stat>
</tag>
<suite>
<stat pass="0" fail="1" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="0" fail="1" skip="0" id="s1-s1" name="Test Nike RZ11">Tests.Test Nike RZ11</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
