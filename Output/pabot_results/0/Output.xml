<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.9.13 on win32)" generated="20250106 12:18:01.522" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="C:\Nike\SAPtesting\Tests">
<kw name="Setup highest level suite" type="SETUP">
<kw name="Set Variable" library="BuiltIn">
<var>${d.test_server}</var>
<arg>${test_server}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250106 12:18:02.082" level="INFO">${d.test_server} = Dev</msg>
<status status="PASS" starttime="20250106 12:18:02.075" endtime="20250106 12:18:02.082"/>
</kw>
<kw name="Reset screenshot count variable" library="Support">
<kw name="Set Variable" library="BuiltIn">
<var>${screenshotCount}</var>
<arg>${PABOTQUEUEINDEX}_1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250106 12:18:02.084" level="INFO">${screenshotCount} = 0_1</msg>
<status status="PASS" starttime="20250106 12:18:02.083" endtime="20250106 12:18:02.084"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${screenshotCount}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250106 12:18:02.085" level="INFO">${screenshotCount} = 0_1</msg>
<status status="PASS" starttime="20250106 12:18:02.084" endtime="20250106 12:18:02.085"/>
</kw>
<kw name="Set up screenshot directory" library="Support">
<kw name="Create Directory" library="OperatingSystem">
<arg>${OUTPUTDIR}${/}${wvar('screenshot_dir')}</arg>
<doc>Creates the specified directory.</doc>
<msg timestamp="20250106 12:18:02.085" level="INFO">Web.Dev.screenshot_dir: Screenshot</msg>
<msg timestamp="20250106 12:18:02.087" level="INFO" html="true">Created directory '&lt;a href="file://C:\Nike\SAPtesting\Output\pabot_results\0\Screenshot"&gt;C:\Nike\SAPtesting\Output\pabot_results\0\Screenshot&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20250106 12:18:02.085" endtime="20250106 12:18:02.087"/>
</kw>
<status status="PASS" starttime="20250106 12:18:02.085" endtime="20250106 12:18:02.087"/>
</kw>
<status status="PASS" starttime="20250106 12:18:02.082" endtime="20250106 12:18:02.087"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${screenshot_taking}</arg>
<arg>${True}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250106 12:18:02.087" level="INFO">${screenshot_taking} = True</msg>
<status status="PASS" starttime="20250106 12:18:02.087" endtime="20250106 12:18:02.087"/>
</kw>
<kw name="Setup linux execution" library="Support">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${web_test_check}</var>
<arg>Variable Should Exist</arg>
<arg>${web_test}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Variable Should Exist" library="BuiltIn">
<arg>${web_test}</arg>
<doc>Fails unless the given variable exists within the current scope.</doc>
<status status="PASS" starttime="20250106 12:18:02.089" endtime="20250106 12:18:02.089"/>
</kw>
<msg timestamp="20250106 12:18:02.089" level="INFO">${web_test_check} = True</msg>
<status status="PASS" starttime="20250106 12:18:02.089" endtime="20250106 12:18:02.089"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${web_test_check}</arg>
<arg>Setup Docker Execution Options</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup Docker Execution Options" library="Support_Web">
<kw name="Setup Suite Metadata" library="Support_Web">
<arg>${browser}</arg>
<kw name="Get Browser Metadata" library="BrowserSupport">
<var>&amp;{browser_information}</var>
<arg>browser=${browser}</arg>
<doc>Fetches browser metadata information
:param browser: Name of the browser for which information is fetched
:param reload: Re-read the metadata based on the browser
:return: Browser metadata information, dict of format
            {"browser_version": browser version value,
             "driver_version": driver version value}</doc>
<msg timestamp="20250106 12:18:05.642" level="INFO">&amp;{browser_information} = { browser_version=131.0.6778.205 | driver_version=131.0.6778.204  }</msg>
<status status="PASS" starttime="20250106 12:18:02.089" endtime="20250106 12:18:05.642"/>
</kw>
<kw name="Set Suite Metadata" library="BuiltIn">
<arg>test_browser_name</arg>
<arg>${browser}</arg>
<doc>Sets metadata for the current test suite.</doc>
<msg timestamp="20250106 12:18:05.642" level="INFO">Set suite metadata 'test_browser_name' to value 'chrome'.</msg>
<status status="PASS" starttime="20250106 12:18:05.642" endtime="20250106 12:18:05.642"/>
</kw>
<kw name="Set Suite Metadata" library="BuiltIn">
<arg>test_browser_version</arg>
<arg>${browser_information.browser_version}</arg>
<doc>Sets metadata for the current test suite.</doc>
<msg timestamp="20250106 12:18:05.644" level="INFO">Set suite metadata 'test_browser_version' to value '131.0.6778.205'.</msg>
<status status="PASS" starttime="20250106 12:18:05.642" endtime="20250106 12:18:05.644"/>
</kw>
<kw name="Set Suite Metadata" library="BuiltIn">
<arg>test_driver_version</arg>
<arg>${browser_information.driver_version}</arg>
<doc>Sets metadata for the current test suite.</doc>
<msg timestamp="20250106 12:18:05.644" level="INFO">Set suite metadata 'test_driver_version' to value '131.0.6778.204 '.</msg>
<status status="PASS" starttime="20250106 12:18:05.644" endtime="20250106 12:18:05.644"/>
</kw>
<status status="PASS" starttime="20250106 12:18:02.089" endtime="20250106 12:18:05.644"/>
</kw>
<kw name="Setup Global Docker Execution Options" library="Support_Web">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${global_browser_options}</arg>
<arg>None</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250106 12:18:05.646" level="INFO">${global_browser_options} = None</msg>
<status status="PASS" starttime="20250106 12:18:05.644" endtime="20250106 12:18:05.646"/>
</kw>
<kw name="Get Environment Variable" library="OperatingSystem">
<var>${docker_check}</var>
<arg>EXECUTION_ENVIRONMENT</arg>
<arg>not_found</arg>
<doc>Returns the value of an environment variable with the given name.</doc>
<msg timestamp="20250106 12:18:05.646" level="INFO">${docker_check} = not_found</msg>
<status status="PASS" starttime="20250106 12:18:05.646" endtime="20250106 12:18:05.646"/>
</kw>
<kw name="Run Keyword And Return If" library="BuiltIn">
<arg>"${docker_check}"!="docker"</arg>
<arg>Log</arg>
<arg>Not executing on Docker</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Log" library="BuiltIn">
<arg>Not executing on Docker</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250106 12:18:05.646" level="INFO">Not executing on Docker</msg>
<status status="PASS" starttime="20250106 12:18:05.646" endtime="20250106 12:18:05.646"/>
</kw>
<msg timestamp="20250106 12:18:05.646" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250106 12:18:05.646" endtime="20250106 12:18:05.646"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{options}</var>
<arg>--headless</arg>
<arg>--no-sandbox</arg>
<arg>--disable-dev-shm-usage</arg>
<doc>Returns a list containing given items.</doc>
<status status="NOT RUN" starttime="20250106 12:18:05.646" endtime="20250106 12:18:05.646"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>@{docker_options}</arg>
<arg>@{options}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250106 12:18:05.648" endtime="20250106 12:18:05.648"/>
</kw>
<status status="PASS" starttime="20250106 12:18:05.644" endtime="20250106 12:18:05.648"/>
</kw>
<kw name="Create Webdriver for chrome preferences" library="Support_Web">
<kw name="Update Docker Execution Options" library="Support_Web">
<var>${list_prefs}</var>
<arg>${list_prefs}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${docker_check}</var>
<arg>Variable Should Exist</arg>
<arg>${docker_options}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Variable Should Exist" library="BuiltIn">
<arg>${docker_options}</arg>
<doc>Fails unless the given variable exists within the current scope.</doc>
<msg timestamp="20250106 12:18:05.650" level="FAIL">Variable '${docker_options}' does not exist.</msg>
<status status="FAIL" starttime="20250106 12:18:05.648" endtime="20250106 12:18:05.650"/>
</kw>
<msg timestamp="20250106 12:18:05.650" level="INFO">${docker_check} = False</msg>
<status status="PASS" starttime="20250106 12:18:05.648" endtime="20250106 12:18:05.650"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${list_prefs_length}</var>
<arg>${list_prefs}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20250106 12:18:05.650" level="INFO">Length is 1</msg>
<msg timestamp="20250106 12:18:05.650" level="INFO">${list_prefs_length} = 1</msg>
<status status="PASS" starttime="20250106 12:18:05.650" endtime="20250106 12:18:05.650"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${list_prefs}</var>
<arg>${docker_check} and ${list_prefs_length}&gt;0 and ${list_prefs}[0] != []</arg>
<arg>Combine Lists</arg>
<arg>${list_prefs}</arg>
<arg>${docker_options}</arg>
<arg>ELSE IF</arg>
<arg>${docker_check}</arg>
<arg>Set Variable</arg>
<arg>${docker_options}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${list_prefs}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${list_prefs}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20250106 12:18:05.650" endtime="20250106 12:18:05.650"/>
</kw>
<msg timestamp="20250106 12:18:05.650" level="INFO">${list_prefs} = [[]]</msg>
<status status="PASS" starttime="20250106 12:18:05.650" endtime="20250106 12:18:05.650"/>
</kw>
<msg timestamp="20250106 12:18:05.650" level="INFO">${list_prefs} = [[]]</msg>
<status status="PASS" starttime="20250106 12:18:05.648" endtime="20250106 12:18:05.650"/>
</kw>
<kw name="Create Chrome Options for download preferences" library="Support_Web">
<var>${chrome_options}</var>
<kw name="Evaluate" library="BuiltIn">
<var>${chrome_options}</var>
<arg>sys.modules['selenium.webdriver'].ChromeOptions()</arg>
<arg>sys</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250106 12:18:05.652" level="INFO">${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x00000226E1A2EFD0&gt;</msg>
<status status="PASS" starttime="20250106 12:18:05.652" endtime="20250106 12:18:05.652"/>
</kw>
<msg timestamp="20250106 12:18:05.652" level="INFO">${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x00000226E1A2EFD0&gt;</msg>
<status status="PASS" starttime="20250106 12:18:05.650" endtime="20250106 12:18:05.652"/>
</kw>
<kw name="Update Preferences List" library="Support_Web">
<arg>${chrome_options}</arg>
<arg>@{list_prefs}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${string_prefs}</var>
<arg>${list_prefs}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20250106 12:18:05.652" level="INFO">${string_prefs} = [[]]</msg>
<status status="PASS" starttime="20250106 12:18:05.652" endtime="20250106 12:18:05.652"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${string_prefs} == [[]]</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250106 12:18:05.652" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250106 12:18:05.652" endtime="20250106 12:18:05.652"/>
</kw>
<for flavor="IN">
<var>${preference}</var>
<value>@{list_prefs}</value>
<iter>
<var name="${preference}"/>
<kw name="Call Method" library="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>${preference}</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="NOT RUN" starttime="20250106 12:18:05.654" endtime="20250106 12:18:05.654"/>
</kw>
<status status="NOT RUN" starttime="20250106 12:18:05.652" endtime="20250106 12:18:05.654"/>
</iter>
<status status="NOT RUN" starttime="20250106 12:18:05.652" endtime="20250106 12:18:05.654"/>
</for>
<status status="PASS" starttime="20250106 12:18:05.652" endtime="20250106 12:18:05.654"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_experimental_option</arg>
<arg>prefs</arg>
<arg>${kw_prefs}</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20250106 12:18:05.654" endtime="20250106 12:18:05.654"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${global_browser_options}</arg>
<arg>${chrome options}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250106 12:18:05.654" level="INFO">${global_browser_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x00000226E1A2EFD0&gt;</msg>
<status status="PASS" starttime="20250106 12:18:05.654" endtime="20250106 12:18:05.654"/>
</kw>
<status status="PASS" starttime="20250106 12:18:05.648" endtime="20250106 12:18:05.654"/>
</kw>
<status status="PASS" starttime="20250106 12:18:02.089" endtime="20250106 12:18:05.654"/>
</kw>
<status status="PASS" starttime="20250106 12:18:02.089" endtime="20250106 12:18:05.654"/>
</kw>
<status status="PASS" starttime="20250106 12:18:02.087" endtime="20250106 12:18:05.654"/>
</kw>
<kw name="Set Suite Metadata" library="BuiltIn">
<arg>environment</arg>
<arg>${test_server}</arg>
<doc>Sets metadata for the current test suite.</doc>
<msg timestamp="20250106 12:18:05.654" level="INFO">Set suite metadata 'environment' to value 'Dev'.</msg>
<status status="PASS" starttime="20250106 12:18:05.654" endtime="20250106 12:18:05.654"/>
</kw>
<status status="PASS" starttime="20250106 12:18:02.075" endtime="20250106 12:18:05.654"/>
</kw>
<suite id="s1-s1" name="Resource" source="C:\Nike\SAPtesting\Tests\Resource">
<suite id="s1-s1-s1" name="Create Folder" source="C:\Nike\SAPtesting\Tests\Resource\create_folder.robot">
<test id="s1-s1-s1-t1" name="Read Json Variable" line="62">
<kw name="Convert Json Format" library="SAP_Tcode_Library">
<var>@{values}</var>
<arg>${json}</arg>
<msg timestamp="20250106 12:18:06.574" level="FAIL">IndexError: string index out of range</msg>
<status status="FAIL" starttime="20250106 12:18:06.572" endtime="20250106 12:18:06.574"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>converted value is: @{values}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20250106 12:18:06.574" endtime="20250106 12:18:06.574"/>
</kw>
<tag>folder</tag>
<tag>Regression</tag>
<status status="FAIL" starttime="20250106 12:18:06.572" endtime="20250106 12:18:06.574">IndexError: string index out of range</status>
</test>
<status status="FAIL" starttime="20250106 12:18:05.656" endtime="20250106 12:18:06.574"/>
</suite>
<status status="FAIL" starttime="20250106 12:18:05.656" endtime="20250106 12:18:06.594"/>
</suite>
<doc>Testing functionality through Robot Framework</doc>
<meta name="environment">Dev</meta>
<meta name="test_browser_name">chrome</meta>
<meta name="test_browser_version">131.0.6778.205</meta>
<meta name="test_driver_version">131.0.6778.204 </meta>
<meta name="test_environment">Dev</meta>
<meta name="test_freeze_dependencies">astroid==3.1.0,attrs==23.2.0,beautifulsoup4==4.12.3,bs4==0.0.2,certifi==2024.2.2,cffi==1.16.0,chardet==5.2.0,charset-normalizer==3.3.2,click==8.1.7,colorama==0.4.6,cryptography==42.0.5,defusedxml==0.7.1,dill==0.3.8,docutils==0.20.1,et-xmlfile==1.1.0,exceptiongroup==1.2.0,gitdb==4.0.11,GitPython==3.1.42,h11==0.14.0,idna==3.6,isort==5.13.2,Jinja2==3.1.3,jira==3.6.0,jsonpath-ng==1.6.1,jsonschema==4.21.1,jsonschema-specifications==2023.12.1,lazy-object-proxy==1.10.0,lxml==5.1.0,markdown-it-py==3.0.0,MarkupSafe==2.1.5,mccabe==0.7.0,mdurl==0.1.2,natsort==8.4.0,numpy==2.0.2,oauthlib==3.2.2,openpyxl==3.1.2,outcome==1.3.0.post0,packaging==23.2,pandas==2.2.3,pathspec==0.11.2,pillow==10.2.0,pip==24.3.1,platformdirs==4.2.0,ply==3.11,pycparser==2.21,Pygments==2.17.2,pylint==3.1.0,PySocks==1.7.1,python-dateutil==2.9.0.post0,pytz==2024.2,pywin32==306,PyYAML==6.0.1,referencing==0.33.0,requests==2.31.0,requests-oauthlib==1.3.1,requests-toolbelt==1.0.0,rich==13.7.1,rich-click==1.6.1,robotframework==6.0.2,robotframework-datadriver==1.9.0,robotframework-excellib==2.0.1,robotframework-jsonlibrary==0.5,robotframework-pabot==2.16.0,robotframework-pythonlibcore==4.2.0,robotframework-requests==0.9.2,robotframework-sapguilibrary==1.1,robotframework-seleniumlibrary==5.1.3,robotframework-stacktrace==0.4.1,robotframework-tidy==4.5.0,rpds-py==0.18.0,selenium==4.9.1,setuptools==68.0.0,six==1.16.0,smmap==5.0.1,sniffio==1.3.1,sortedcontainers==2.4.0,soupsieve==2.5,tomli==2.0.1,tomlkit==0.12.4,trio==0.24.0,trio-websocket==0.11.1,typing_extensions==4.10.0,tzdata==2024.2,urllib3==2.2.1,wheel==0.40.0,wrapt==1.16.0,wsproto==1.2.0</meta>
<status status="FAIL" starttime="20250106 12:18:01.760" endtime="20250106 12:18:06.594"/>
</suite>
<statistics>
<total>
<stat pass="0" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="1" skip="0">folder</stat>
<stat pass="0" fail="1" skip="0">Regression</stat>
</tag>
<suite>
<stat pass="0" fail="1" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="0" fail="1" skip="0" id="s1-s1" name="Resource">Tests.Resource</stat>
<stat pass="0" fail="1" skip="0" id="s1-s1-s1" name="Create Folder">Tests.Resource.Create Folder</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20250106 12:18:05.656" level="ERROR">Error in file 'C:\Nike\SAPtesting\Tests\Resource\create_folder.robot' on line 11: Setting variable '' failed: Invalid variable name ''.</msg>
<msg timestamp="20250106 12:18:05.656" level="ERROR">Error in file 'C:\Nike\SAPtesting\Tests\Resource\create_folder.robot' on line 12: Setting variable '' failed: Invalid variable name ''.</msg>
<msg timestamp="20250106 12:18:05.656" level="ERROR">Error in file 'C:\Nike\SAPtesting\Tests\Resource\create_folder.robot' on line 13: Setting variable '' failed: Invalid variable name ''.</msg>
<msg timestamp="20250106 12:18:05.656" level="ERROR">Error in file 'C:\Nike\SAPtesting\Tests\Resource\create_folder.robot' on line 14: Setting variable '' failed: Invalid variable name ''.</msg>
<msg timestamp="20250106 12:18:05.656" level="ERROR">Error in file 'C:\Nike\SAPtesting\Tests\Resource\create_folder.robot' on line 15: Setting variable '' failed: Invalid variable name ''.</msg>
<msg timestamp="20250106 12:18:05.683" level="ERROR">Error in file 'C:\Nike\SAPtesting\Tests\Resource\create_folder.robot' on line 16: Setting variable '' failed: Invalid variable name ''.</msg>
<msg timestamp="20250106 12:18:05.683" level="ERROR">Error in file 'C:\Nike\SAPtesting\Tests\Resource\create_folder.robot' on line 17: Setting variable '' failed: Invalid variable name ''.</msg>
<msg timestamp="20250106 12:18:05.683" level="ERROR">Error in file 'C:\Nike\SAPtesting\Tests\Resource\create_folder.robot' on line 18: Setting variable '' failed: Invalid variable name ''.</msg>
<msg timestamp="20250106 12:18:05.683" level="ERROR">Error in file 'C:\Nike\SAPtesting\Tests\Resource\create_folder.robot' on line 19: Setting variable '' failed: Invalid variable name ''.</msg>
<msg timestamp="20250106 12:18:05.683" level="ERROR">Error in file 'C:\Nike\SAPtesting\Tests\Resource\create_folder.robot' on line 20: Setting variable '' failed: Invalid variable name ''.</msg>
<msg timestamp="20250106 12:18:05.683" level="ERROR">Error in file 'C:\Nike\SAPtesting\Tests\Resource\create_folder.robot' on line 21: Setting variable '' failed: Invalid variable name ''.</msg>
<msg timestamp="20250106 12:18:05.683" level="ERROR">Error in file 'C:\Nike\SAPtesting\Tests\Resource\create_folder.robot' on line 22: Setting variable '' failed: Invalid variable name ''.</msg>
<msg timestamp="20250106 12:18:05.683" level="ERROR">Error in file 'C:\Nike\SAPtesting\Tests\Resource\create_folder.robot' on line 23: Setting variable '' failed: Invalid variable name ''.</msg>
<msg timestamp="20250106 12:18:05.683" level="ERROR">Error in file 'C:\Nike\SAPtesting\Tests\Resource\create_folder.robot' on line 24: Setting variable '' failed: Invalid variable name ''.</msg>
<msg timestamp="20250106 12:18:05.683" level="ERROR">Error in file 'C:\Nike\SAPtesting\Tests\Resource\create_folder.robot' on line 25: Setting variable '' failed: Invalid variable name ''.</msg>
<msg timestamp="20250106 12:18:05.683" level="ERROR">Error in file 'C:\Nike\SAPtesting\Tests\Resource\create_folder.robot' on line 26: Setting variable '' failed: Invalid variable name ''.</msg>
<msg timestamp="20250106 12:18:05.683" level="ERROR">Error in file 'C:\Nike\SAPtesting\Tests\Resource\create_folder.robot' on line 27: Setting variable ']' failed: Invalid variable name ']'.</msg>
</errors>
</robot>
