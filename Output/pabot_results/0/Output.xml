<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.12.1 on win32)" generated="20240222 13:45:16.678" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="C:\SAP_Testing\SAPtesting\Tests">
<kw name="Setup highest level suite" type="SETUP">
<kw name="Set Variable" library="BuiltIn">
<var>${d.test_server}</var>
<arg>${test_server}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240222 13:45:17.337" level="INFO">${d.test_server} = Dev</msg>
<status status="PASS" starttime="20240222 13:45:17.336" endtime="20240222 13:45:17.337"/>
</kw>
<kw name="Reset screenshot count variable" library="Support">
<kw name="Set Variable" library="BuiltIn">
<var>${screenshotCount}</var>
<arg>${PABOTQUEUEINDEX}_1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240222 13:45:17.338" level="INFO">${screenshotCount} = 0_1</msg>
<status status="PASS" starttime="20240222 13:45:17.337" endtime="20240222 13:45:17.338"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${screenshotCount}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240222 13:45:17.338" level="INFO">${screenshotCount} = 0_1</msg>
<status status="PASS" starttime="20240222 13:45:17.338" endtime="20240222 13:45:17.338"/>
</kw>
<kw name="Set up screenshot directory" library="Support">
<kw name="Create Directory" library="OperatingSystem">
<arg>${OUTPUTDIR}${/}${wvar('screenshot_dir')}</arg>
<doc>Creates the specified directory.</doc>
<msg timestamp="20240222 13:45:17.339" level="INFO">Web.Dev.screenshot_dir: Screenshot</msg>
<msg timestamp="20240222 13:45:17.343" level="INFO" html="true">Created directory '&lt;a href="file://C:\SAP_Testing\SAPtesting\Output\pabot_results\0\Screenshot"&gt;C:\SAP_Testing\SAPtesting\Output\pabot_results\0\Screenshot&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20240222 13:45:17.339" endtime="20240222 13:45:17.343"/>
</kw>
<status status="PASS" starttime="20240222 13:45:17.338" endtime="20240222 13:45:17.343"/>
</kw>
<status status="PASS" starttime="20240222 13:45:17.337" endtime="20240222 13:45:17.344"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${screenshot_taking}</arg>
<arg>${True}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240222 13:45:17.345" level="INFO">${screenshot_taking} = True</msg>
<status status="PASS" starttime="20240222 13:45:17.344" endtime="20240222 13:45:17.345"/>
</kw>
<kw name="Setup linux execution" library="Support">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${web_test_check}</var>
<arg>Variable Should Exist</arg>
<arg>${web_test}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Variable Should Exist" library="BuiltIn">
<arg>${web_test}</arg>
<doc>Fails unless the given variable exists within the current scope.</doc>
<status status="PASS" starttime="20240222 13:45:17.346" endtime="20240222 13:45:17.346"/>
</kw>
<msg timestamp="20240222 13:45:17.346" level="INFO">${web_test_check} = True</msg>
<status status="PASS" starttime="20240222 13:45:17.345" endtime="20240222 13:45:17.346"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${web_test_check}</arg>
<arg>Setup Docker Execution Options</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup Docker Execution Options" library="Support_Web">
<kw name="Setup Suite Metadata" library="Support_Web">
<arg>${browser}</arg>
<kw name="Get Browser Metadata" library="BrowserSupport">
<var>&amp;{browser_information}</var>
<arg>browser=${browser}</arg>
<doc>Fetches browser metadata information
:param browser: Name of the browser for which information is fetched
:param reload: Re-read the metadata based on the browser
:return: Browser metadata information, dict of format
            {"browser_version": browser version value,
             "driver_version": driver version value}</doc>
<msg timestamp="20240222 13:45:20.574" level="INFO">&amp;{browser_information} = { browser_version=122.0.6261.57 | driver_version=121.0.6167.85  }</msg>
<status status="PASS" starttime="20240222 13:45:17.347" endtime="20240222 13:45:20.574"/>
</kw>
<kw name="Set Suite Metadata" library="BuiltIn">
<arg>test_browser_name</arg>
<arg>${browser}</arg>
<doc>Sets metadata for the current test suite.</doc>
<msg timestamp="20240222 13:45:20.574" level="INFO">Set suite metadata 'test_browser_name' to value 'chrome'.</msg>
<status status="PASS" starttime="20240222 13:45:20.574" endtime="20240222 13:45:20.574"/>
</kw>
<kw name="Set Suite Metadata" library="BuiltIn">
<arg>test_browser_version</arg>
<arg>${browser_information.browser_version}</arg>
<doc>Sets metadata for the current test suite.</doc>
<msg timestamp="20240222 13:45:20.574" level="INFO">Set suite metadata 'test_browser_version' to value '122.0.6261.57'.</msg>
<status status="PASS" starttime="20240222 13:45:20.574" endtime="20240222 13:45:20.574"/>
</kw>
<kw name="Set Suite Metadata" library="BuiltIn">
<arg>test_driver_version</arg>
<arg>${browser_information.driver_version}</arg>
<doc>Sets metadata for the current test suite.</doc>
<msg timestamp="20240222 13:45:20.574" level="INFO">Set suite metadata 'test_driver_version' to value '121.0.6167.85 '.</msg>
<status status="PASS" starttime="20240222 13:45:20.574" endtime="20240222 13:45:20.574"/>
</kw>
<status status="PASS" starttime="20240222 13:45:17.347" endtime="20240222 13:45:20.574"/>
</kw>
<kw name="Setup Global Docker Execution Options" library="Support_Web">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${global_browser_options}</arg>
<arg>None</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240222 13:45:20.574" level="INFO">${global_browser_options} = None</msg>
<status status="PASS" starttime="20240222 13:45:20.574" endtime="20240222 13:45:20.574"/>
</kw>
<kw name="Get Environment Variable" library="OperatingSystem">
<var>${docker_check}</var>
<arg>EXECUTION_ENVIRONMENT</arg>
<arg>not_found</arg>
<doc>Returns the value of an environment variable with the given name.</doc>
<msg timestamp="20240222 13:45:20.574" level="INFO">${docker_check} = not_found</msg>
<status status="PASS" starttime="20240222 13:45:20.574" endtime="20240222 13:45:20.574"/>
</kw>
<kw name="Run Keyword And Return If" library="BuiltIn">
<arg>"${docker_check}"!="docker"</arg>
<arg>Log</arg>
<arg>Not executing on Docker</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Log" library="BuiltIn">
<arg>Not executing on Docker</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240222 13:45:20.574" level="INFO">Not executing on Docker</msg>
<status status="PASS" starttime="20240222 13:45:20.574" endtime="20240222 13:45:20.574"/>
</kw>
<msg timestamp="20240222 13:45:20.574" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240222 13:45:20.574" endtime="20240222 13:45:20.574"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{options}</var>
<arg>--headless</arg>
<arg>--no-sandbox</arg>
<arg>--disable-dev-shm-usage</arg>
<doc>Returns a list containing given items.</doc>
<status status="NOT RUN" starttime="20240222 13:45:20.574" endtime="20240222 13:45:20.574"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>@{docker_options}</arg>
<arg>@{options}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20240222 13:45:20.574" endtime="20240222 13:45:20.574"/>
</kw>
<status status="PASS" starttime="20240222 13:45:20.574" endtime="20240222 13:45:20.574"/>
</kw>
<kw name="Create Webdriver for chrome preferences" library="Support_Web">
<kw name="Update Docker Execution Options" library="Support_Web">
<var>${list_prefs}</var>
<arg>${list_prefs}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${docker_check}</var>
<arg>Variable Should Exist</arg>
<arg>${docker_options}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Variable Should Exist" library="BuiltIn">
<arg>${docker_options}</arg>
<doc>Fails unless the given variable exists within the current scope.</doc>
<msg timestamp="20240222 13:45:20.574" level="FAIL">Variable '${docker_options}' does not exist.</msg>
<status status="FAIL" starttime="20240222 13:45:20.574" endtime="20240222 13:45:20.574"/>
</kw>
<msg timestamp="20240222 13:45:20.574" level="INFO">${docker_check} = False</msg>
<status status="PASS" starttime="20240222 13:45:20.574" endtime="20240222 13:45:20.574"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${list_prefs_length}</var>
<arg>${list_prefs}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240222 13:45:20.574" level="INFO">Length is 1</msg>
<msg timestamp="20240222 13:45:20.574" level="INFO">${list_prefs_length} = 1</msg>
<status status="PASS" starttime="20240222 13:45:20.574" endtime="20240222 13:45:20.574"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${list_prefs}</var>
<arg>${docker_check} and ${list_prefs_length}&gt;0 and ${list_prefs}[0] != []</arg>
<arg>Combine Lists</arg>
<arg>${list_prefs}</arg>
<arg>${docker_options}</arg>
<arg>ELSE IF</arg>
<arg>${docker_check}</arg>
<arg>Set Variable</arg>
<arg>${docker_options}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${list_prefs}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${list_prefs}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20240222 13:45:20.574" endtime="20240222 13:45:20.574"/>
</kw>
<msg timestamp="20240222 13:45:20.574" level="INFO">${list_prefs} = [[]]</msg>
<status status="PASS" starttime="20240222 13:45:20.574" endtime="20240222 13:45:20.574"/>
</kw>
<msg timestamp="20240222 13:45:20.574" level="INFO">${list_prefs} = [[]]</msg>
<status status="PASS" starttime="20240222 13:45:20.574" endtime="20240222 13:45:20.574"/>
</kw>
<kw name="Create Chrome Options for download preferences" library="Support_Web">
<var>${chrome_options}</var>
<kw name="Evaluate" library="BuiltIn">
<var>${chrome_options}</var>
<arg>sys.modules['selenium.webdriver'].ChromeOptions()</arg>
<arg>sys</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240222 13:45:20.574" level="INFO">${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x00000222B6469040&gt;</msg>
<status status="PASS" starttime="20240222 13:45:20.574" endtime="20240222 13:45:20.574"/>
</kw>
<msg timestamp="20240222 13:45:20.574" level="INFO">${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x00000222B6469040&gt;</msg>
<status status="PASS" starttime="20240222 13:45:20.574" endtime="20240222 13:45:20.574"/>
</kw>
<kw name="Update Preferences List" library="Support_Web">
<arg>${chrome_options}</arg>
<arg>@{list_prefs}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${string_prefs}</var>
<arg>${list_prefs}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240222 13:45:20.574" level="INFO">${string_prefs} = [[]]</msg>
<status status="PASS" starttime="20240222 13:45:20.574" endtime="20240222 13:45:20.574"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${string_prefs} == [[]]</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20240222 13:45:20.589" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240222 13:45:20.574" endtime="20240222 13:45:20.589"/>
</kw>
<for flavor="IN">
<var>${preference}</var>
<value>@{list_prefs}</value>
<iter>
<var name="${preference}"/>
<kw name="Call Method" library="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>${preference}</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="NOT RUN" starttime="20240222 13:45:20.589" endtime="20240222 13:45:20.589"/>
</kw>
<status status="NOT RUN" starttime="20240222 13:45:20.589" endtime="20240222 13:45:20.589"/>
</iter>
<status status="NOT RUN" starttime="20240222 13:45:20.589" endtime="20240222 13:45:20.589"/>
</for>
<status status="PASS" starttime="20240222 13:45:20.574" endtime="20240222 13:45:20.589"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_experimental_option</arg>
<arg>prefs</arg>
<arg>${kw_prefs}</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240222 13:45:20.589" endtime="20240222 13:45:20.589"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${global_browser_options}</arg>
<arg>${chrome options}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240222 13:45:20.589" level="INFO">${global_browser_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x00000222B6469040&gt;</msg>
<status status="PASS" starttime="20240222 13:45:20.589" endtime="20240222 13:45:20.589"/>
</kw>
<status status="PASS" starttime="20240222 13:45:20.574" endtime="20240222 13:45:20.589"/>
</kw>
<status status="PASS" starttime="20240222 13:45:17.347" endtime="20240222 13:45:20.589"/>
</kw>
<status status="PASS" starttime="20240222 13:45:17.346" endtime="20240222 13:45:20.589"/>
</kw>
<status status="PASS" starttime="20240222 13:45:17.345" endtime="20240222 13:45:20.589"/>
</kw>
<kw name="Set Suite Metadata" library="BuiltIn">
<arg>environment</arg>
<arg>${test_server}</arg>
<doc>Sets metadata for the current test suite.</doc>
<msg timestamp="20240222 13:45:20.589" level="INFO">Set suite metadata 'environment' to value 'Dev'.</msg>
<status status="PASS" starttime="20240222 13:45:20.589" endtime="20240222 13:45:20.589"/>
</kw>
<status status="PASS" starttime="20240222 13:45:17.335" endtime="20240222 13:45:20.589"/>
</kw>
<suite id="s1-s1" name="Test spam patch enhance" source="C:\SAP_Testing\SAPtesting\Tests\Test_spam_patch_enhance.robot">
<test id="s1-s1-t1" name="Check RBT Logon" line="6">
<kw name="RBT Logon" library="Spam_Patch_enhance">
<kw name="Start Process" library="Process">
<arg>${EXE_PAD}</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20240222 13:45:20.613" level="INFO">Starting process:
"C:\Program Files (x86)\SAP\FrontEnd\SAPgui\saplogon.exe"</msg>
<status status="PASS" starttime="20240222 13:45:20.613" endtime="20240222 13:45:20.613"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240222 13:45:25.613" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20240222 13:45:20.613" endtime="20240222 13:45:25.613"/>
</kw>
<kw name="Connect To Session" library="CustomSapGuiLibrary">
<doc>Connects to an open session SAP.</doc>
<status status="PASS" starttime="20240222 13:45:25.613" endtime="20240222 13:45:25.628"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240222 13:45:30.628" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20240222 13:45:25.628" endtime="20240222 13:45:30.628"/>
</kw>
<kw name="Open Connection" library="CustomSapGuiLibrary">
<arg>${Connection_Name}</arg>
<doc>Opens a connection to the given connection name. Be sure to provide the full connection name, including the bracket part.</doc>
<status status="PASS" starttime="20240222 13:45:30.628" endtime="20240222 13:45:32.296"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240222 13:45:37.297" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20240222 13:45:32.296" endtime="20240222 13:45:37.297"/>
</kw>
<kw name="Input Text" library="CustomSapGuiLibrary">
<arg>wnd[0]/usr/txtRSYST-MANDT</arg>
<arg>${SAP_CLIENT}</arg>
<doc>Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.</doc>
<msg timestamp="20240222 13:45:37.299" level="INFO">Typing text '000' into text field 'wnd[0]/usr/txtRSYST-MANDT'.</msg>
<status status="PASS" starttime="20240222 13:45:37.297" endtime="20240222 13:45:37.299"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240222 13:45:38.299" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20240222 13:45:37.299" endtime="20240222 13:45:38.299"/>
</kw>
<kw name="Input Text" library="CustomSapGuiLibrary">
<arg>wnd[0]/usr/txtRSYST-BNAME</arg>
<arg>${SAP_USER}</arg>
<doc>Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.</doc>
<msg timestamp="20240222 13:45:38.312" level="INFO">Typing text 'DDIC' into text field 'wnd[0]/usr/txtRSYST-BNAME'.</msg>
<status status="PASS" starttime="20240222 13:45:38.299" endtime="20240222 13:45:38.312"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240222 13:45:39.312" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20240222 13:45:38.312" endtime="20240222 13:45:39.312"/>
</kw>
<kw name="Input Password" library="CustomSapGuiLibrary">
<arg>wnd[0]/usr/pwdRSYST-BCODE</arg>
<arg>${SAP_PASSWORD}</arg>
<doc>Inserts the given password into the text field identified by locator.
The password is not recorded in the log.</doc>
<msg timestamp="20240222 13:45:39.319" level="INFO">Typing password into text field 'wnd[0]/usr/pwdRSYST-BCODE'.</msg>
<status status="PASS" starttime="20240222 13:45:39.312" endtime="20240222 13:45:39.319"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240222 13:45:41.320" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20240222 13:45:39.319" endtime="20240222 13:45:41.320"/>
</kw>
<kw name="Send Vkey" library="CustomSapGuiLibrary">
<arg>0</arg>
<doc>Sends a SAP virtual key combination to the window, not into an element.
If you want to send a value to a text field, use `input text` instead.</doc>
<status status="PASS" starttime="20240222 13:45:41.320" endtime="20240222 13:45:41.833"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240222 13:45:46.833" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20240222 13:45:41.833" endtime="20240222 13:45:46.833"/>
</kw>
<kw name="Take Screenshot" library="CustomSapGuiLibrary">
<arg>A01_loginpage.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240222 13:45:46.906" level="INFO" html="true">&lt;a href="A01_loginpage.jpg"&gt;&lt;img src="A01_loginpage.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240222 13:45:46.833" endtime="20240222 13:45:46.906"/>
</kw>
<status status="PASS" starttime="20240222 13:45:20.613" endtime="20240222 13:45:46.906"/>
</kw>
<tag>Regression</tag>
<tag>spampatchenhance</tag>
<status status="PASS" starttime="20240222 13:45:20.610" endtime="20240222 13:45:46.906"/>
</test>
<test id="s1-s1-t2" name="Check_Spam_update" line="9">
<kw name="Spam Transaction" library="Spam_Patch_enhance">
<kw name="Run Transaction" library="CustomSapGuiLibrary">
<arg>spam</arg>
<doc>Runs a Sap transaction. An error is given when an unknown transaction is specified.</doc>
<status status="PASS" starttime="20240222 13:45:46.916" endtime="20240222 13:45:47.359"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240222 13:45:52.360" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20240222 13:45:47.359" endtime="20240222 13:45:52.360"/>
</kw>
<kw name="Take Screenshot" library="CustomSapGuiLibrary">
<arg>B01_spam.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240222 13:45:52.412" level="INFO" html="true">&lt;a href="B01_spam.jpg"&gt;&lt;img src="B01_spam.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240222 13:45:52.360" endtime="20240222 13:45:52.412"/>
</kw>
<status status="PASS" starttime="20240222 13:45:46.916" endtime="20240222 13:45:52.412"/>
</kw>
<kw name="Certificate Verification" library="Spam_Patch_enhance">
<kw name="Get Maintenance Certificate Text" library="CustomSapGuiLibrary">
<arg>wnd[0]/sbar/pane[0]</arg>
<msg timestamp="20240222 13:45:52.428" level="INFO">License available to proceed further</msg>
<status status="PASS" starttime="20240222 13:45:52.412" endtime="20240222 13:45:52.428"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240222 13:45:54.428" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20240222 13:45:52.428" endtime="20240222 13:45:54.428"/>
</kw>
<kw name="Take Screenshot" library="CustomSapGuiLibrary">
<arg>C01_Certificate.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240222 13:45:54.477" level="INFO" html="true">&lt;a href="C01_Certificate.jpg"&gt;&lt;img src="C01_Certificate.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240222 13:45:54.428" endtime="20240222 13:45:54.477"/>
</kw>
<status status="PASS" starttime="20240222 13:45:52.412" endtime="20240222 13:45:54.477"/>
</kw>
<kw name="Loading package" library="Spam_Patch_enhance">
<kw name="Click Element" library="CustomSapGuiLibrary">
<arg>wnd[0]/mbar/menu[0]/menu[0]/menu[1]</arg>
<doc>Performs a single click on a given element. Used only for buttons, tabs and menu items.</doc>
<status status="PASS" starttime="20240222 13:45:54.477" endtime="20240222 13:45:54.637"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240222 13:45:56.637" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20240222 13:45:54.637" endtime="20240222 13:45:56.637"/>
</kw>
<kw name="Take Screenshot" library="CustomSapGuiLibrary">
<arg>D01_Load_1.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240222 13:45:56.703" level="INFO" html="true">&lt;a href="D01_Load_1.jpg"&gt;&lt;img src="D01_Load_1.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240222 13:45:56.637" endtime="20240222 13:45:56.703"/>
</kw>
<kw name="Click Element" library="CustomSapGuiLibrary">
<arg>wnd[1]/usr/btnSPOP-OPTION1</arg>
<doc>Performs a single click on a given element. Used only for buttons, tabs and menu items.</doc>
<status status="PASS" starttime="20240222 13:45:56.703" endtime="20240222 13:46:00.299"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240222 13:46:02.299" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20240222 13:46:00.299" endtime="20240222 13:46:02.299"/>
</kw>
<kw name="Take Screenshot" library="CustomSapGuiLibrary">
<arg>D02_Load_2.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240222 13:46:02.350" level="INFO" html="true">&lt;a href="D02_Load_2.jpg"&gt;&lt;img src="D02_Load_2.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240222 13:46:02.299" endtime="20240222 13:46:02.350"/>
</kw>
<kw name="Click Element" library="CustomSapGuiLibrary">
<arg>wnd[0]/tbar[0]/btn[3]</arg>
<doc>Performs a single click on a given element. Used only for buttons, tabs and menu items.</doc>
<status status="PASS" starttime="20240222 13:46:02.350" endtime="20240222 13:46:02.500"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240222 13:46:04.500" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20240222 13:46:02.500" endtime="20240222 13:46:04.500"/>
</kw>
<kw name="Take Screenshot" library="CustomSapGuiLibrary">
<arg>D03_Load_3.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240222 13:46:04.573" level="INFO" html="true">&lt;a href="D03_Load_3.jpg"&gt;&lt;img src="D03_Load_3.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240222 13:46:04.500" endtime="20240222 13:46:04.573"/>
</kw>
<status status="PASS" starttime="20240222 13:45:54.477" endtime="20240222 13:46:04.573"/>
</kw>
<kw name="Display/Define" library="Spam_Patch_enhance">
<kw name="Click Element" library="CustomSapGuiLibrary">
<arg>wnd[0]/usr/btnPAT100-QUEUE</arg>
<doc>Performs a single click on a given element. Used only for buttons, tabs and menu items.</doc>
<status status="PASS" starttime="20240222 13:46:04.573" endtime="20240222 13:46:05.606"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240222 13:46:07.620" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20240222 13:46:05.619" endtime="20240222 13:46:07.620"/>
</kw>
<kw name="Take Screenshot" library="CustomSapGuiLibrary">
<arg>E01_Display.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240222 13:46:07.672" level="INFO" html="true">&lt;a href="E01_Display.jpg"&gt;&lt;img src="E01_Display.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240222 13:46:07.620" endtime="20240222 13:46:07.672"/>
</kw>
<status status="PASS" starttime="20240222 13:46:04.573" endtime="20240222 13:46:07.672"/>
</kw>
<kw name="Spam software selection" library="Spam_Patch_enhance">
<kw name="Click Element" library="CustomSapGuiLibrary">
<arg>wnd[1]/tbar[0]/btn[7]</arg>
<doc>Performs a single click on a given element. Used only for buttons, tabs and menu items.</doc>
<status status="PASS" starttime="20240222 13:46:07.672" endtime="20240222 13:46:08.118"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240222 13:46:10.118" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20240222 13:46:08.118" endtime="20240222 13:46:10.118"/>
</kw>
<kw name="Take Screenshot" library="CustomSapGuiLibrary">
<arg>F01_patch_1.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240222 13:46:10.169" level="INFO" html="true">&lt;a href="F01_patch_1.jpg"&gt;&lt;img src="F01_patch_1.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240222 13:46:10.118" endtime="20240222 13:46:10.169"/>
</kw>
<kw name="Spam Multiple Patch Version Select" library="CustomSapGuiLibrary">
<arg>${comp_id}</arg>
<arg>${search_comp}</arg>
<arg>${search_patch}</arg>
<msg timestamp="20240222 13:46:10.201" level="INFO">(-2147352567, 'Exception occurred.', (0, 'SAP Frontend Server', '', None, 0, -2147024809), None)
(-2147352567, 'Exception occurred.', (0, 'SAP Frontend Server', '', None, 0, -2147024809), None)
(-2147352567, 'Exception occurred.', (0, 'SAP Frontend Server', '', None, 0, -2147024809), None)</msg>
<status status="PASS" starttime="20240222 13:46:10.169" endtime="20240222 13:46:10.201"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>4</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240222 13:46:14.202" level="INFO">Slept 4 seconds</msg>
<status status="PASS" starttime="20240222 13:46:10.201" endtime="20240222 13:46:14.202"/>
</kw>
<kw name="Take Screenshot" library="CustomSapGuiLibrary">
<arg>F02_patch_2.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240222 13:46:14.256" level="INFO" html="true">&lt;a href="F02_patch_2.jpg"&gt;&lt;img src="F02_patch_2.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240222 13:46:14.202" endtime="20240222 13:46:14.256"/>
</kw>
<kw name="Click Element" library="CustomSapGuiLibrary">
<arg>wnd[1]/tbar[0]/btn[0]</arg>
<doc>Performs a single click on a given element. Used only for buttons, tabs and menu items.</doc>
<status status="PASS" starttime="20240222 13:46:14.256" endtime="20240222 13:46:14.478"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240222 13:46:16.479" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20240222 13:46:14.478" endtime="20240222 13:46:16.479"/>
</kw>
<kw name="Take Screenshot" library="CustomSapGuiLibrary">
<arg>F03_patch_3.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240222 13:46:16.567" level="INFO" html="true">&lt;a href="F03_patch_3.jpg"&gt;&lt;img src="F03_patch_3.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240222 13:46:16.479" endtime="20240222 13:46:16.567"/>
</kw>
<kw name="Click Element" library="CustomSapGuiLibrary">
<arg>wnd[1]/tbar[0]/btn[0]</arg>
<doc>Performs a single click on a given element. Used only for buttons, tabs and menu items.</doc>
<status status="PASS" starttime="20240222 13:46:16.567" endtime="20240222 13:46:16.895"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240222 13:46:18.896" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20240222 13:46:16.895" endtime="20240222 13:46:18.896"/>
</kw>
<kw name="Take Screenshot" library="CustomSapGuiLibrary">
<arg>F04_patch_4.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240222 13:46:18.950" level="INFO" html="true">&lt;a href="F04_patch_4.jpg"&gt;&lt;img src="F04_patch_4.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240222 13:46:18.896" endtime="20240222 13:46:18.950"/>
</kw>
<status status="PASS" starttime="20240222 13:46:07.672" endtime="20240222 13:46:18.950"/>
</kw>
<kw name="Important SAP note handling" library="Spam_Patch_enhance">
<kw name="Is Imp Notes Existing" library="CustomSapGuiLibrary">
<arg>wnd[1]</arg>
<arg>wnd[1]/tbar[0]/btn[0]</arg>
<msg timestamp="20240222 13:46:18.950" level="INFO">Modal window does not exist.</msg>
<status status="PASS" starttime="20240222 13:46:18.950" endtime="20240222 13:46:18.950"/>
</kw>
<kw name="Take Screenshot" library="CustomSapGuiLibrary">
<arg>G01_SAP_note.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240222 13:46:19.014" level="INFO" html="true">&lt;a href="G01_SAP_note.jpg"&gt;&lt;img src="G01_SAP_note.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240222 13:46:18.950" endtime="20240222 13:46:19.014"/>
</kw>
<kw name="Click Element" library="CustomSapGuiLibrary">
<arg>wnd[2]/tbar[0]/btn[0]</arg>
<doc>Performs a single click on a given element. Used only for buttons, tabs and menu items.</doc>
<status status="PASS" starttime="20240222 13:46:19.014" endtime="20240222 13:46:23.354"/>
</kw>
<kw name="Click Element" library="CustomSapGuiLibrary">
<arg>wnd[1]/usr/btnBUTTON_2</arg>
<doc>Performs a single click on a given element. Used only for buttons, tabs and menu items.</doc>
<status status="PASS" starttime="20240222 13:46:23.354" endtime="20240222 13:46:23.528"/>
</kw>
<kw name="Take Screenshot" library="CustomSapGuiLibrary">
<arg>G02_Modification.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240222 13:46:23.608" level="INFO" html="true">&lt;a href="G02_Modification.jpg"&gt;&lt;img src="G02_Modification.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240222 13:46:23.528" endtime="20240222 13:46:23.608"/>
</kw>
<status status="PASS" starttime="20240222 13:46:18.950" endtime="20240222 13:46:23.608"/>
</kw>
<tag>Regression</tag>
<tag>spampatchenhance</tag>
<status status="PASS" starttime="20240222 13:45:46.906" endtime="20240222 13:46:23.608"/>
</test>
<status status="PASS" starttime="20240222 13:45:20.589" endtime="20240222 13:46:23.608"/>
</suite>
<doc>Testing functionality through Robot Framework</doc>
<meta name="environment">Dev</meta>
<meta name="test_browser_name">chrome</meta>
<meta name="test_browser_version">122.0.6261.57</meta>
<meta name="test_driver_version">121.0.6167.85 </meta>
<meta name="test_environment">Dev</meta>
<meta name="test_freeze_dependencies">astroid==3.0.3,attrs==23.2.0,beautifulsoup4==4.12.3,bs4==0.0.2,certifi==2024.2.2,cffi==1.16.0,chardet==5.2.0,charset-normalizer==3.3.2,click==8.1.7,colorama==0.4.6,cryptography==42.0.2,defusedxml==0.7.1,dill==0.3.8,docutils==0.20.1,et-xmlfile==1.1.0,exceptiongroup==1.2.0,gitdb==4.0.11,GitPython==3.1.41,h11==0.14.0,idna==3.6,isort==5.13.2,Jinja2==3.1.3,jira==3.6.0,jsonpath-ng==1.6.1,jsonschema==4.21.1,jsonschema-specifications==2023.12.1,lazy-object-proxy==1.10.0,lxml==5.1.0,markdown-it-py==3.0.0,MarkupSafe==2.1.5,mccabe==0.7.0,mdurl==0.1.2,natsort==8.4.0,oauthlib==3.2.2,openpyxl==3.1.2,outcome==1.3.0.post0,packaging==23.2,pathspec==0.11.2,pillow==10.2.0,pip==24.0,platformdirs==4.2.0,ply==3.11,pycparser==2.21,Pygments==2.17.2,pylint==3.0.3,PySocks==1.7.1,pywin32==306,PyYAML==6.0.1,referencing==0.33.0,reportlab==4.1.0,requests==2.31.0,requests-oauthlib==1.3.1,requests-toolbelt==1.0.0,rich==13.7.0,rich-click==1.6.1,robotframework==6.0.2,robotframework-datadriver==1.9.0,robotframework-excellib==2.0.1,robotframework-jsonlibrary==0.5,robotframework-pabot==2.16.0,robotframework-pythonlibcore==4.2.0,robotframework-requests==0.9.2,robotframework-sapguilibrary==1.1,robotframework-seleniumlibrary==5.1.3,robotframework-stacktrace==0.4.1,robotframework-tidy==4.5.0,rpds-py==0.17.1,selenium==4.9.1,setuptools==69.0.3,smmap==5.0.1,sniffio==1.3.0,sortedcontainers==2.4.0,soupsieve==2.5,tomli==2.0.1,tomlkit==0.12.3,trio==0.24.0,trio-websocket==0.11.1,typing_extensions==4.9.0,urllib3==2.2.0,wheel==0.42.0,wrapt==1.16.0,wsproto==1.2.0</meta>
<status status="PASS" starttime="20240222 13:45:16.972" endtime="20240222 13:46:24.064"/>
</suite>
<statistics>
<total>
<stat pass="2" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0" skip="0">Regression</stat>
<stat pass="2" fail="0" skip="0">spampatchenhance</stat>
</tag>
<suite>
<stat pass="2" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1" name="Test spam patch enhance">Tests.Test spam patch enhance</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
