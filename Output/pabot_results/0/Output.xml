<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.12.3 on win32)" generated="20250102 10:26:24.453" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="C:\SAP_Testing\SAPtesting\Tests">
<kw name="Setup highest level suite" type="SETUP">
<kw name="Set Variable" library="BuiltIn">
<var>${d.test_server}</var>
<arg>${test_server}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250102 10:26:25.087" level="INFO">${d.test_server} = Dev</msg>
<status status="PASS" starttime="20250102 10:26:25.087" endtime="20250102 10:26:25.087"/>
</kw>
<kw name="Reset screenshot count variable" library="Support">
<kw name="Set Variable" library="BuiltIn">
<var>${screenshotCount}</var>
<arg>${PABOTQUEUEINDEX}_1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20250102 10:26:25.088" level="INFO">${screenshotCount} = 0_1</msg>
<status status="PASS" starttime="20250102 10:26:25.087" endtime="20250102 10:26:25.088"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${screenshotCount}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250102 10:26:25.088" level="INFO">${screenshotCount} = 0_1</msg>
<status status="PASS" starttime="20250102 10:26:25.088" endtime="20250102 10:26:25.088"/>
</kw>
<kw name="Set up screenshot directory" library="Support">
<kw name="Create Directory" library="OperatingSystem">
<arg>${OUTPUTDIR}${/}${wvar('screenshot_dir')}</arg>
<doc>Creates the specified directory.</doc>
<msg timestamp="20250102 10:26:25.089" level="INFO">Web.Dev.screenshot_dir: Screenshot</msg>
<msg timestamp="20250102 10:26:25.090" level="INFO" html="true">Created directory '&lt;a href="file://C:\SAP_Testing\SAPtesting\Output\pabot_results\0\Screenshot"&gt;C:\SAP_Testing\SAPtesting\Output\pabot_results\0\Screenshot&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20250102 10:26:25.089" endtime="20250102 10:26:25.090"/>
</kw>
<status status="PASS" starttime="20250102 10:26:25.088" endtime="20250102 10:26:25.090"/>
</kw>
<status status="PASS" starttime="20250102 10:26:25.087" endtime="20250102 10:26:25.090"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${screenshot_taking}</arg>
<arg>${True}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250102 10:26:25.091" level="INFO">${screenshot_taking} = True</msg>
<status status="PASS" starttime="20250102 10:26:25.091" endtime="20250102 10:26:25.091"/>
</kw>
<kw name="Setup linux execution" library="Support">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${web_test_check}</var>
<arg>Variable Should Exist</arg>
<arg>${web_test}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Variable Should Exist" library="BuiltIn">
<arg>${web_test}</arg>
<doc>Fails unless the given variable exists within the current scope.</doc>
<status status="PASS" starttime="20250102 10:26:25.091" endtime="20250102 10:26:25.092"/>
</kw>
<msg timestamp="20250102 10:26:25.092" level="INFO">${web_test_check} = True</msg>
<status status="PASS" starttime="20250102 10:26:25.091" endtime="20250102 10:26:25.092"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${web_test_check}</arg>
<arg>Setup Docker Execution Options</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup Docker Execution Options" library="Support_Web">
<kw name="Setup Suite Metadata" library="Support_Web">
<arg>${browser}</arg>
<kw name="Get Browser Metadata" library="BrowserSupport">
<var>&amp;{browser_information}</var>
<arg>browser=${browser}</arg>
<doc>Fetches browser metadata information
:param browser: Name of the browser for which information is fetched
:param reload: Re-read the metadata based on the browser
:return: Browser metadata information, dict of format
            {"browser_version": browser version value,
             "driver_version": driver version value}</doc>
<msg timestamp="20250102 10:26:29.366" level="INFO">&amp;{browser_information} = { browser_version=131.0.6778.205 | driver_version=131.0.6778.69  }</msg>
<status status="PASS" starttime="20250102 10:26:25.093" endtime="20250102 10:26:29.366"/>
</kw>
<kw name="Set Suite Metadata" library="BuiltIn">
<arg>test_browser_name</arg>
<arg>${browser}</arg>
<doc>Sets metadata for the current test suite.</doc>
<msg timestamp="20250102 10:26:29.366" level="INFO">Set suite metadata 'test_browser_name' to value 'chrome'.</msg>
<status status="PASS" starttime="20250102 10:26:29.366" endtime="20250102 10:26:29.366"/>
</kw>
<kw name="Set Suite Metadata" library="BuiltIn">
<arg>test_browser_version</arg>
<arg>${browser_information.browser_version}</arg>
<doc>Sets metadata for the current test suite.</doc>
<msg timestamp="20250102 10:26:29.366" level="INFO">Set suite metadata 'test_browser_version' to value '131.0.6778.205'.</msg>
<status status="PASS" starttime="20250102 10:26:29.366" endtime="20250102 10:26:29.366"/>
</kw>
<kw name="Set Suite Metadata" library="BuiltIn">
<arg>test_driver_version</arg>
<arg>${browser_information.driver_version}</arg>
<doc>Sets metadata for the current test suite.</doc>
<msg timestamp="20250102 10:26:29.366" level="INFO">Set suite metadata 'test_driver_version' to value '131.0.6778.69 '.</msg>
<status status="PASS" starttime="20250102 10:26:29.366" endtime="20250102 10:26:29.366"/>
</kw>
<status status="PASS" starttime="20250102 10:26:25.092" endtime="20250102 10:26:29.366"/>
</kw>
<kw name="Setup Global Docker Execution Options" library="Support_Web">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${global_browser_options}</arg>
<arg>None</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250102 10:26:29.366" level="INFO">${global_browser_options} = None</msg>
<status status="PASS" starttime="20250102 10:26:29.366" endtime="20250102 10:26:29.366"/>
</kw>
<kw name="Get Environment Variable" library="OperatingSystem">
<var>${docker_check}</var>
<arg>EXECUTION_ENVIRONMENT</arg>
<arg>not_found</arg>
<doc>Returns the value of an environment variable with the given name.</doc>
<msg timestamp="20250102 10:26:29.366" level="INFO">${docker_check} = not_found</msg>
<status status="PASS" starttime="20250102 10:26:29.366" endtime="20250102 10:26:29.366"/>
</kw>
<kw name="Run Keyword And Return If" library="BuiltIn">
<arg>"${docker_check}"!="docker"</arg>
<arg>Log</arg>
<arg>Not executing on Docker</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Log" library="BuiltIn">
<arg>Not executing on Docker</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250102 10:26:29.366" level="INFO">Not executing on Docker</msg>
<status status="PASS" starttime="20250102 10:26:29.366" endtime="20250102 10:26:29.366"/>
</kw>
<msg timestamp="20250102 10:26:29.366" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250102 10:26:29.366" endtime="20250102 10:26:29.366"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{options}</var>
<arg>--headless</arg>
<arg>--no-sandbox</arg>
<arg>--disable-dev-shm-usage</arg>
<doc>Returns a list containing given items.</doc>
<status status="NOT RUN" starttime="20250102 10:26:29.366" endtime="20250102 10:26:29.366"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>@{docker_options}</arg>
<arg>@{options}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20250102 10:26:29.366" endtime="20250102 10:26:29.366"/>
</kw>
<status status="PASS" starttime="20250102 10:26:29.366" endtime="20250102 10:26:29.366"/>
</kw>
<kw name="Create Webdriver for chrome preferences" library="Support_Web">
<kw name="Update Docker Execution Options" library="Support_Web">
<var>${list_prefs}</var>
<arg>${list_prefs}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${docker_check}</var>
<arg>Variable Should Exist</arg>
<arg>${docker_options}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Variable Should Exist" library="BuiltIn">
<arg>${docker_options}</arg>
<doc>Fails unless the given variable exists within the current scope.</doc>
<msg timestamp="20250102 10:26:29.366" level="FAIL">Variable '${docker_options}' does not exist.</msg>
<status status="FAIL" starttime="20250102 10:26:29.366" endtime="20250102 10:26:29.366"/>
</kw>
<msg timestamp="20250102 10:26:29.366" level="INFO">${docker_check} = False</msg>
<status status="PASS" starttime="20250102 10:26:29.366" endtime="20250102 10:26:29.366"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${list_prefs_length}</var>
<arg>${list_prefs}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20250102 10:26:29.366" level="INFO">Length is 1</msg>
<msg timestamp="20250102 10:26:29.366" level="INFO">${list_prefs_length} = 1</msg>
<status status="PASS" starttime="20250102 10:26:29.366" endtime="20250102 10:26:29.366"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${list_prefs}</var>
<arg>${docker_check} and ${list_prefs_length}&gt;0 and ${list_prefs}[0] != []</arg>
<arg>Combine Lists</arg>
<arg>${list_prefs}</arg>
<arg>${docker_options}</arg>
<arg>ELSE IF</arg>
<arg>${docker_check}</arg>
<arg>Set Variable</arg>
<arg>${docker_options}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${list_prefs}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${list_prefs}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20250102 10:26:29.366" endtime="20250102 10:26:29.366"/>
</kw>
<msg timestamp="20250102 10:26:29.366" level="INFO">${list_prefs} = [[]]</msg>
<status status="PASS" starttime="20250102 10:26:29.366" endtime="20250102 10:26:29.366"/>
</kw>
<msg timestamp="20250102 10:26:29.366" level="INFO">${list_prefs} = [[]]</msg>
<status status="PASS" starttime="20250102 10:26:29.366" endtime="20250102 10:26:29.366"/>
</kw>
<kw name="Create Chrome Options for download preferences" library="Support_Web">
<var>${chrome_options}</var>
<kw name="Evaluate" library="BuiltIn">
<var>${chrome_options}</var>
<arg>sys.modules['selenium.webdriver'].ChromeOptions()</arg>
<arg>sys</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20250102 10:26:29.366" level="INFO">${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x00000256FB51B620&gt;</msg>
<status status="PASS" starttime="20250102 10:26:29.366" endtime="20250102 10:26:29.366"/>
</kw>
<msg timestamp="20250102 10:26:29.366" level="INFO">${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x00000256FB51B620&gt;</msg>
<status status="PASS" starttime="20250102 10:26:29.366" endtime="20250102 10:26:29.366"/>
</kw>
<kw name="Update Preferences List" library="Support_Web">
<arg>${chrome_options}</arg>
<arg>@{list_prefs}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${string_prefs}</var>
<arg>${list_prefs}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20250102 10:26:29.366" level="INFO">${string_prefs} = [[]]</msg>
<status status="PASS" starttime="20250102 10:26:29.366" endtime="20250102 10:26:29.366"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${string_prefs} == [[]]</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20250102 10:26:29.366" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20250102 10:26:29.366" endtime="20250102 10:26:29.366"/>
</kw>
<for flavor="IN">
<var>${preference}</var>
<value>@{list_prefs}</value>
<iter>
<var name="${preference}"/>
<kw name="Call Method" library="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>${preference}</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="NOT RUN" starttime="20250102 10:26:29.366" endtime="20250102 10:26:29.366"/>
</kw>
<status status="NOT RUN" starttime="20250102 10:26:29.366" endtime="20250102 10:26:29.366"/>
</iter>
<status status="NOT RUN" starttime="20250102 10:26:29.366" endtime="20250102 10:26:29.366"/>
</for>
<status status="PASS" starttime="20250102 10:26:29.366" endtime="20250102 10:26:29.366"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_experimental_option</arg>
<arg>prefs</arg>
<arg>${kw_prefs}</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20250102 10:26:29.366" endtime="20250102 10:26:29.366"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${global_browser_options}</arg>
<arg>${chrome options}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20250102 10:26:29.366" level="INFO">${global_browser_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x00000256FB51B620&gt;</msg>
<status status="PASS" starttime="20250102 10:26:29.366" endtime="20250102 10:26:29.366"/>
</kw>
<status status="PASS" starttime="20250102 10:26:29.366" endtime="20250102 10:26:29.366"/>
</kw>
<status status="PASS" starttime="20250102 10:26:25.092" endtime="20250102 10:26:29.366"/>
</kw>
<status status="PASS" starttime="20250102 10:26:25.092" endtime="20250102 10:26:29.366"/>
</kw>
<status status="PASS" starttime="20250102 10:26:25.091" endtime="20250102 10:26:29.366"/>
</kw>
<kw name="Set Suite Metadata" library="BuiltIn">
<arg>environment</arg>
<arg>${test_server}</arg>
<doc>Sets metadata for the current test suite.</doc>
<msg timestamp="20250102 10:26:29.366" level="INFO">Set suite metadata 'environment' to value 'Dev'.</msg>
<status status="PASS" starttime="20250102 10:26:29.366" endtime="20250102 10:26:29.366"/>
</kw>
<status status="PASS" starttime="20250102 10:26:25.086" endtime="20250102 10:26:29.366"/>
</kw>
<suite id="s1-s1" name="Test Create Rental Invoice" source="C:\SAP_Testing\SAPtesting\Tests\Test_Create_Rental_Invoice.robot">
<kw name="System Logon" library="create_rental_invoice" type="SETUP">
<kw name="Start Process" library="Process">
<arg>${symvar('SAP_SERVER')}</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20250102 10:26:29.910" level="INFO">Sym.Dev.SAP_SERVER: C:\Program Files (x86)\SAP\FrontEnd\SAPgui\saplogon.exe</msg>
<msg timestamp="20250102 10:26:29.910" level="INFO">Starting process:
"C:\Program Files (x86)\SAP\FrontEnd\SAPgui\saplogon.exe"</msg>
<status status="PASS" starttime="20250102 10:26:29.910" endtime="20250102 10:26:29.910"/>
</kw>
<kw name="Connect To Session" library="SAP_Tcode_Library">
<doc>Connects to an open session SAP.</doc>
<status status="PASS" starttime="20250102 10:26:29.910" endtime="20250102 10:26:29.941"/>
</kw>
<kw name="Open Connection" library="SAP_Tcode_Library">
<arg>${symvar('Rental_Connection')}</arg>
<doc>Opens a connection to the given connection name. Be sure to provide the full connection name, including the bracket part.</doc>
<msg timestamp="20250102 10:26:29.941" level="INFO">Sym.Dev.Rental_Connection: TS4</msg>
<status status="PASS" starttime="20250102 10:26:29.941" endtime="20250102 10:26:30.436"/>
</kw>
<kw name="Input Text" library="SAP_Tcode_Library">
<arg>wnd[0]/usr/txtRSYST-MANDT</arg>
<arg>${symvar('Rental_Client')}</arg>
<doc>Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.</doc>
<msg timestamp="20250102 10:26:30.437" level="INFO">Sym.Dev.Rental_Client: 001</msg>
<msg timestamp="20250102 10:26:30.478" level="INFO">Typing text '001' into text field 'wnd[0]/usr/txtRSYST-MANDT'.</msg>
<status status="PASS" starttime="20250102 10:26:30.436" endtime="20250102 10:26:30.478"/>
</kw>
<kw name="Input Text" library="SAP_Tcode_Library">
<arg>wnd[0]/usr/txtRSYST-BNAME</arg>
<arg>${symvar('Rental_User')}</arg>
<doc>Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.</doc>
<msg timestamp="20250102 10:26:30.479" level="INFO">Sym.Dev.Rental_User: naren</msg>
<msg timestamp="20250102 10:26:30.493" level="INFO">Typing text 'naren' into text field 'wnd[0]/usr/txtRSYST-BNAME'.</msg>
<status status="PASS" starttime="20250102 10:26:30.478" endtime="20250102 10:26:30.493"/>
</kw>
<kw name="Input Password" library="SAP_Tcode_Library">
<arg>wnd[0]/usr/pwdRSYST-BCODE</arg>
<arg>%{RENTAL_PASSWORD}</arg>
<doc>Inserts the given password into the text field identified by locator.
The password is not recorded in the log.</doc>
<msg timestamp="20250102 10:26:30.500" level="INFO">Typing password into text field 'wnd[0]/usr/pwdRSYST-BCODE'.</msg>
<status status="PASS" starttime="20250102 10:26:30.493" endtime="20250102 10:26:30.500"/>
</kw>
<kw name="Send Vkey" library="SAP_Tcode_Library">
<arg>0</arg>
<doc>Sends a SAP virtual key combination to the window, not into an element.
If you want to send a value to a text field, use `input text` instead.</doc>
<status status="PASS" starttime="20250102 10:26:30.500" endtime="20250102 10:26:30.835"/>
</kw>
<status status="PASS" starttime="20250102 10:26:29.910" endtime="20250102 10:26:30.835"/>
</kw>
<test id="s1-s1-t1" name="Create the rental Invoice" line="8">
<kw name="Pdf_process" library="create_rental_invoice">
<arg>90000485</arg>
<kw name="Run Transaction" library="SAP_Tcode_Library">
<arg>/nVF03</arg>
<doc>Runs a Sap transaction. An error is given when an unknown transaction is specified.</doc>
<status status="PASS" starttime="20250102 10:26:30.836" endtime="20250102 10:26:30.977"/>
</kw>
<kw name="Input Text" library="SAP_Tcode_Library">
<arg>wnd[0]/usr/ctxtVBRK-VBELN</arg>
<arg>${invoice_doc}</arg>
<doc>Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.</doc>
<msg timestamp="20250102 10:26:30.986" level="INFO">Typing text '90000485' into text field 'wnd[0]/usr/ctxtVBRK-VBELN'.</msg>
<status status="PASS" starttime="20250102 10:26:30.978" endtime="20250102 10:26:30.986"/>
</kw>
<kw name="Click Element" library="SAP_Tcode_Library">
<arg>wnd[0]/mbar/menu[0]/menu[11]</arg>
<doc>Performs a single click on a given element. Used only for buttons, tabs and menu items.</doc>
<status status="PASS" starttime="20250102 10:26:30.986" endtime="20250102 10:26:31.139"/>
</kw>
<kw name="Click Element" library="SAP_Tcode_Library">
<arg>wnd[1]/tbar[0]/btn[37]</arg>
<doc>Performs a single click on a given element. Used only for buttons, tabs and menu items.</doc>
<status status="PASS" starttime="20250102 10:26:31.139" endtime="20250102 10:26:31.315"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250102 10:26:32.315" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250102 10:26:31.315" endtime="20250102 10:26:32.315"/>
</kw>
<kw name="Unselect Checkbox" library="SAP_Tcode_Library">
<arg>wnd[2]/usr/chk[1,4]</arg>
<doc>Removes selection of checkbox identified by locator.
Does nothing if the checkbox is not selected.</doc>
<status status="PASS" starttime="20250102 10:26:32.315" endtime="20250102 10:26:32.315"/>
</kw>
<kw name="Unselect Checkbox" library="SAP_Tcode_Library">
<arg>wnd[2]/usr/chk[1,5]</arg>
<doc>Removes selection of checkbox identified by locator.
Does nothing if the checkbox is not selected.</doc>
<status status="PASS" starttime="20250102 10:26:32.315" endtime="20250102 10:26:32.315"/>
</kw>
<kw name="Unselect Checkbox" library="SAP_Tcode_Library">
<arg>wnd[2]/usr/chk[1,6]</arg>
<doc>Removes selection of checkbox identified by locator.
Does nothing if the checkbox is not selected.</doc>
<status status="PASS" starttime="20250102 10:26:32.315" endtime="20250102 10:26:32.330"/>
</kw>
<kw name="Click Element" library="SAP_Tcode_Library">
<arg>wnd[2]/tbar[0]/btn[0]</arg>
<doc>Performs a single click on a given element. Used only for buttons, tabs and menu items.</doc>
<status status="PASS" starttime="20250102 10:26:32.330" endtime="20250102 10:26:32.455"/>
</kw>
<kw name="Click Element" library="SAP_Tcode_Library">
<arg>wnd[2]/tbar[0]/btn[8]</arg>
<doc>Performs a single click on a given element. Used only for buttons, tabs and menu items.</doc>
<status status="PASS" starttime="20250102 10:26:32.455" endtime="20250102 10:26:32.721"/>
</kw>
<kw name="Click Element" library="SAP_Tcode_Library">
<arg>wnd[0]/mbar/menu[0]/menu[0]</arg>
<doc>Performs a single click on a given element. Used only for buttons, tabs and menu items.</doc>
<status status="PASS" starttime="20250102 10:26:32.721" endtime="20250102 10:26:32.830"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250102 10:26:33.830" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250102 10:26:32.830" endtime="20250102 10:26:33.830"/>
</kw>
<kw name="Get Value" library="SAP_Tcode_Library">
<var>${spool_value}</var>
<arg>wnd[0]/sbar/pane[0]</arg>
<doc>Gets the value of the given element. The possible return values depend on the type of element (see Return values).</doc>
<msg timestamp="20250102 10:26:33.830" level="INFO">${spool_value} = Spool request (number 10,546) created.</msg>
<status status="PASS" starttime="20250102 10:26:33.830" endtime="20250102 10:26:33.830"/>
</kw>
<kw name="Extract Numeric" library="SAP_Tcode_Library">
<var>${spool_id}</var>
<arg>${spool_value}</arg>
<msg timestamp="20250102 10:26:33.830" level="INFO">${spool_id} = 10546</msg>
<status status="PASS" starttime="20250102 10:26:33.830" endtime="20250102 10:26:33.830"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250102 10:26:34.830" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250102 10:26:33.830" endtime="20250102 10:26:34.830"/>
</kw>
<kw name="Run Transaction" library="SAP_Tcode_Library">
<arg>/nex</arg>
<doc>Runs a Sap transaction. An error is given when an unknown transaction is specified.</doc>
<status status="PASS" starttime="20250102 10:26:34.830" endtime="20250102 10:26:34.877"/>
</kw>
<kw name="System Logon" library="create_rental_invoice">
<kw name="Start Process" library="Process">
<arg>${symvar('SAP_SERVER')}</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20250102 10:26:34.877" level="INFO">Sym.Dev.SAP_SERVER: C:\Program Files (x86)\SAP\FrontEnd\SAPgui\saplogon.exe</msg>
<msg timestamp="20250102 10:26:34.877" level="INFO">Starting process:
"C:\Program Files (x86)\SAP\FrontEnd\SAPgui\saplogon.exe"</msg>
<status status="PASS" starttime="20250102 10:26:34.877" endtime="20250102 10:26:34.877"/>
</kw>
<kw name="Connect To Session" library="SAP_Tcode_Library">
<doc>Connects to an open session SAP.</doc>
<status status="PASS" starttime="20250102 10:26:34.877" endtime="20250102 10:26:34.893"/>
</kw>
<kw name="Open Connection" library="SAP_Tcode_Library">
<arg>${symvar('Rental_Connection')}</arg>
<doc>Opens a connection to the given connection name. Be sure to provide the full connection name, including the bracket part.</doc>
<msg timestamp="20250102 10:26:34.893" level="INFO">Sym.Dev.Rental_Connection: TS4</msg>
<status status="PASS" starttime="20250102 10:26:34.893" endtime="20250102 10:26:35.330"/>
</kw>
<kw name="Input Text" library="SAP_Tcode_Library">
<arg>wnd[0]/usr/txtRSYST-MANDT</arg>
<arg>${symvar('Rental_Client')}</arg>
<doc>Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.</doc>
<msg timestamp="20250102 10:26:35.330" level="INFO">Sym.Dev.Rental_Client: 001</msg>
<msg timestamp="20250102 10:26:35.346" level="INFO">Typing text '001' into text field 'wnd[0]/usr/txtRSYST-MANDT'.</msg>
<status status="PASS" starttime="20250102 10:26:35.330" endtime="20250102 10:26:35.346"/>
</kw>
<kw name="Input Text" library="SAP_Tcode_Library">
<arg>wnd[0]/usr/txtRSYST-BNAME</arg>
<arg>${symvar('Rental_User')}</arg>
<doc>Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.</doc>
<msg timestamp="20250102 10:26:35.346" level="INFO">Sym.Dev.Rental_User: naren</msg>
<msg timestamp="20250102 10:26:35.362" level="INFO">Typing text 'naren' into text field 'wnd[0]/usr/txtRSYST-BNAME'.</msg>
<status status="PASS" starttime="20250102 10:26:35.346" endtime="20250102 10:26:35.362"/>
</kw>
<kw name="Input Password" library="SAP_Tcode_Library">
<arg>wnd[0]/usr/pwdRSYST-BCODE</arg>
<arg>%{RENTAL_PASSWORD}</arg>
<doc>Inserts the given password into the text field identified by locator.
The password is not recorded in the log.</doc>
<msg timestamp="20250102 10:26:35.362" level="INFO">Typing password into text field 'wnd[0]/usr/pwdRSYST-BCODE'.</msg>
<status status="PASS" starttime="20250102 10:26:35.362" endtime="20250102 10:26:35.362"/>
</kw>
<kw name="Send Vkey" library="SAP_Tcode_Library">
<arg>0</arg>
<doc>Sends a SAP virtual key combination to the window, not into an element.
If you want to send a value to a text field, use `input text` instead.</doc>
<status status="PASS" starttime="20250102 10:26:35.362" endtime="20250102 10:26:35.705"/>
</kw>
<status status="PASS" starttime="20250102 10:26:34.877" endtime="20250102 10:26:35.705"/>
</kw>
<kw name="Run Transaction" library="SAP_Tcode_Library">
<arg>/nZPDF</arg>
<doc>Runs a Sap transaction. An error is given when an unknown transaction is specified.</doc>
<status status="PASS" starttime="20250102 10:26:35.705" endtime="20250102 10:26:35.846"/>
</kw>
<kw name="Input Text" library="SAP_Tcode_Library">
<arg>wnd[0]/usr/txtSPOOLNO</arg>
<arg>${spool_id}</arg>
<doc>Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.</doc>
<msg timestamp="20250102 10:26:35.862" level="INFO">Typing text '10546' into text field 'wnd[0]/usr/txtSPOOLNO'.</msg>
<status status="PASS" starttime="20250102 10:26:35.846" endtime="20250102 10:26:35.862"/>
</kw>
<kw name="Click Element" library="SAP_Tcode_Library">
<arg>wnd[0]/tbar[1]/btn[8]</arg>
<doc>Performs a single click on a given element. Used only for buttons, tabs and menu items.</doc>
<status status="PASS" starttime="20250102 10:26:35.862" endtime="20250102 10:26:36.162"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250102 10:26:37.162" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250102 10:26:36.162" endtime="20250102 10:26:37.162"/>
</kw>
<kw name="Input Text" library="SAP_Tcode_Library">
<arg>wnd[1]/usr/ctxtDY_PATH</arg>
<arg>${EMPTY}</arg>
<doc>Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.</doc>
<msg timestamp="20250102 10:26:37.162" level="INFO">Typing text '' into text field 'wnd[1]/usr/ctxtDY_PATH'.</msg>
<status status="PASS" starttime="20250102 10:26:37.162" endtime="20250102 10:26:37.162"/>
</kw>
<kw name="Input Text" library="SAP_Tcode_Library">
<arg>wnd[1]/usr/ctxtDY_FILENAME</arg>
<arg>${EMPTY}</arg>
<doc>Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.</doc>
<msg timestamp="20250102 10:26:37.162" level="INFO">Typing text '' into text field 'wnd[1]/usr/ctxtDY_FILENAME'.</msg>
<status status="PASS" starttime="20250102 10:26:37.162" endtime="20250102 10:26:37.162"/>
</kw>
<kw name="Get Current Date" library="DateTime">
<var>${Month1}</var>
<arg>result_format=%B</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250102 10:26:37.162" level="INFO">${Month1} = January</msg>
<status status="PASS" starttime="20250102 10:26:37.162" endtime="20250102 10:26:37.162"/>
</kw>
<kw name="Get Current Date" library="DateTime">
<var>${Month}</var>
<arg>result_format=%b</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250102 10:26:37.178" level="INFO">${Month} = Jan</msg>
<status status="PASS" starttime="20250102 10:26:37.162" endtime="20250102 10:26:37.178"/>
</kw>
<kw name="Get Current Date" library="DateTime">
<var>${year}</var>
<arg>result_format=%Y</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<msg timestamp="20250102 10:26:37.178" level="INFO">${year} = 2025</msg>
<status status="PASS" starttime="20250102 10:26:37.178" endtime="20250102 10:26:37.178"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${EXISTS}</var>
<arg>Directory Should Exist</arg>
<arg>${symvar('Invoice_PDF_PATH')}\\${year}\\${Month1}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Directory Should Exist" library="OperatingSystem">
<arg>${symvar('Invoice_PDF_PATH')}\\${year}\\${Month1}</arg>
<doc>Fails unless the given path points to an existing directory.</doc>
<msg timestamp="20250102 10:26:37.178" level="INFO">Sym.Dev.Invoice_PDF_PATH: C:\Symphony\Rental_Invoice\Download</msg>
<msg timestamp="20250102 10:26:37.178" level="FAIL">Directory 'C:\Symphony\Rental_Invoice\Download\2025\January' does not exist.</msg>
<status status="FAIL" starttime="20250102 10:26:37.178" endtime="20250102 10:26:37.178"/>
</kw>
<msg timestamp="20250102 10:26:37.178" level="INFO">${EXISTS} = False</msg>
<status status="PASS" starttime="20250102 10:26:37.178" endtime="20250102 10:26:37.178"/>
</kw>
<if>
<branch type="IF" condition="'${EXISTS}' == &quot;False&quot;">
<kw name="Create Directory" library="OperatingSystem">
<arg>${symvar('Invoice_PDF_PATH')}\\${year}\\${Month1}</arg>
<doc>Creates the specified directory.</doc>
<msg timestamp="20250102 10:26:37.178" level="INFO">Sym.Dev.Invoice_PDF_PATH: C:\Symphony\Rental_Invoice\Download</msg>
<msg timestamp="20250102 10:26:37.178" level="INFO" html="true">Created directory '&lt;a href="file://C:\Symphony\Rental_Invoice\Download\2025\January"&gt;C:\Symphony\Rental_Invoice\Download\2025\January&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20250102 10:26:37.178" endtime="20250102 10:26:37.178"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Folder created at ${symvar('Invoice_PDF_PATH')}\\${year}\\${Month1}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20250102 10:26:37.178" level="INFO">Sym.Dev.Invoice_PDF_PATH: C:\Symphony\Rental_Invoice\Download</msg>
<msg timestamp="20250102 10:26:37.178" level="INFO">Folder created at C:\Symphony\Rental_Invoice\Download\2025\January</msg>
<status status="PASS" starttime="20250102 10:26:37.178" endtime="20250102 10:26:37.178"/>
</kw>
<status status="PASS" starttime="20250102 10:26:37.178" endtime="20250102 10:26:37.178"/>
</branch>
<status status="PASS" starttime="20250102 10:26:37.178" endtime="20250102 10:26:37.178"/>
</if>
<kw name="Input Text" library="SAP_Tcode_Library">
<arg>wnd[1]/usr/ctxtDY_PATH</arg>
<arg>${symvar('Invoice_PDF_PATH')}\\${year}\\${Month1}</arg>
<doc>Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.</doc>
<msg timestamp="20250102 10:26:37.178" level="INFO">Sym.Dev.Invoice_PDF_PATH: C:\Symphony\Rental_Invoice\Download</msg>
<msg timestamp="20250102 10:26:37.178" level="INFO">Typing text 'C:\Symphony\Rental_Invoice\Download\2025\January' into text field 'wnd[1]/usr/ctxtDY_PATH'.</msg>
<status status="PASS" starttime="20250102 10:26:37.178" endtime="20250102 10:26:37.178"/>
</kw>
<kw name="Input Text" library="SAP_Tcode_Library">
<arg>wnd[1]/usr/ctxtDY_FILENAME</arg>
<arg>${invoice_doc}_${Month}${year}.pdf</arg>
<doc>Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.</doc>
<msg timestamp="20250102 10:26:37.194" level="INFO">Typing text '90000485_Jan2025.pdf' into text field 'wnd[1]/usr/ctxtDY_FILENAME'.</msg>
<status status="PASS" starttime="20250102 10:26:37.178" endtime="20250102 10:26:37.194"/>
</kw>
<kw name="Click Element" library="SAP_Tcode_Library">
<arg>wnd[1]/tbar[0]/btn[0]</arg>
<doc>Performs a single click on a given element. Used only for buttons, tabs and menu items.</doc>
<status status="PASS" starttime="20250102 10:26:37.194" endtime="20250102 10:26:37.571"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20250102 10:26:38.574" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20250102 10:26:37.571" endtime="20250102 10:26:38.574"/>
</kw>
<status status="PASS" starttime="20250102 10:26:30.836" endtime="20250102 10:26:38.574"/>
</kw>
<tag>Regression</tag>
<tag>VF01</tag>
<status status="PASS" starttime="20250102 10:26:30.835" endtime="20250102 10:26:38.574"/>
</test>
<kw name="System Logout" library="create_rental_invoice" type="TEARDOWN">
<kw name="Run Transaction" library="SAP_Tcode_Library">
<arg>/nex</arg>
<doc>Runs a Sap transaction. An error is given when an unknown transaction is specified.</doc>
<status status="PASS" starttime="20250102 10:26:38.574" endtime="20250102 10:26:38.621"/>
</kw>
<status status="PASS" starttime="20250102 10:26:38.574" endtime="20250102 10:26:38.621"/>
</kw>
<status status="PASS" starttime="20250102 10:26:29.366" endtime="20250102 10:26:38.621"/>
</suite>
<doc>Testing functionality through Robot Framework</doc>
<meta name="environment">Dev</meta>
<meta name="test_browser_name">chrome</meta>
<meta name="test_browser_version">131.0.6778.205</meta>
<meta name="test_driver_version">131.0.6778.69 </meta>
<meta name="test_environment">Dev</meta>
<meta name="test_freeze_dependencies">astroid==3.3.8,attrs==24.3.0,beautifulsoup4==4.12.3,bs4==0.0.2,certifi==2024.12.14,cffi==1.17.1,chardet==5.2.0,charset-normalizer==3.4.1,click==8.1.8,colorama==0.4.6,cryptography==44.0.0,defusedxml==0.7.1,dill==0.3.9,docutils==0.21.2,et_xmlfile==2.0.0,exceptiongroup==1.2.2,gitdb==4.0.11,GitPython==3.1.43,h11==0.14.0,idna==3.10,isort==5.13.2,Jinja2==3.1.5,jira==3.8.0,jsonpath-ng==1.7.0,jsonschema==4.23.0,jsonschema-specifications==2024.10.1,lazy-object-proxy==1.10.0,lxml==5.3.0,markdown-it-py==3.0.0,MarkupSafe==3.0.2,mccabe==0.7.0,mdurl==0.1.2,natsort==8.4.0,numpy==2.2.1,O365==2.0.38,oauthlib==3.2.2,opencv-python-headless==4.10.0.84,openpyxl==3.1.5,outcome==1.3.0.post0,packaging==24.2,pandas==2.2.3,pathspec==0.11.2,pillow==11.0.0,pip==24.3.1,platformdirs==4.3.6,ply==3.11,pycparser==2.22,Pygments==2.18.0,pylint==3.3.3,PyMuPDF==1.25.1,PySocks==1.7.1,pytesseract==0.3.13,python-dateutil==2.9.0.post0,pytz==2024.2,pywin32==308,PyYAML==6.0.2,referencing==0.35.1,requests==2.32.3,requests-oauthlib==2.0.0,requests-toolbelt==1.0.0,rich==13.9.4,rich-click==1.6.1,robotframework==6.0.2,robotframework-datadriver==1.9.0,robotframework-excellib==2.0.1,robotframework-jsonlibrary==0.5,robotframework-pabot==2.16.0,robotframework-pythonlibcore==4.2.0,robotframework-requests==0.9.2,robotframework-sapguilibrary==1.1,robotframework-seleniumlibrary==5.1.3,robotframework-stacktrace==0.4.1,robotframework-tidy==4.5.0,rpds-py==0.22.3,selenium==4.9.1,setuptools==75.6.0,six==1.17.0,smmap==5.0.1,sniffio==1.3.1,sortedcontainers==2.4.0,soupsieve==2.6,tomli==2.0.2,tomlkit==0.13.2,trio==0.28.0,trio-websocket==0.11.1,typing_extensions==4.12.2,tzdata==2024.2,tzlocal==5.2,urllib3==2.3.0,wheel==0.45.1,wrapt==1.17.0,wsproto==1.2.0</meta>
<status status="PASS" starttime="20250102 10:26:24.832" endtime="20250102 10:26:38.621"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">Regression</stat>
<stat pass="1" fail="0" skip="0">VF01</stat>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Test Create Rental Invoice">Tests.Test Create Rental Invoice</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
