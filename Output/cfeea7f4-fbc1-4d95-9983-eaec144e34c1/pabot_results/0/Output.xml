<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.12.4 on win32)" generated="20241117 09:12:54.242" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="C:\Tally\SAPtesting\Tests">
<kw name="Setup highest level suite" type="SETUP">
<kw name="Set Variable" library="BuiltIn">
<var>${d.test_server}</var>
<arg>${test_server}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241117 09:12:55.018" level="INFO">${d.test_server} = Dev</msg>
<status status="PASS" starttime="20241117 09:12:55.018" endtime="20241117 09:12:55.018"/>
</kw>
<kw name="Reset screenshot count variable" library="Support">
<kw name="Set Variable" library="BuiltIn">
<var>${screenshotCount}</var>
<arg>${PABOTQUEUEINDEX}_1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20241117 09:12:55.022" level="INFO">${screenshotCount} = 0_1</msg>
<status status="PASS" starttime="20241117 09:12:55.018" endtime="20241117 09:12:55.022"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${screenshotCount}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20241117 09:12:55.022" level="INFO">${screenshotCount} = 0_1</msg>
<status status="PASS" starttime="20241117 09:12:55.022" endtime="20241117 09:12:55.022"/>
</kw>
<kw name="Set up screenshot directory" library="Support">
<kw name="Create Directory" library="OperatingSystem">
<arg>${OUTPUTDIR}${/}${wvar('screenshot_dir')}</arg>
<doc>Creates the specified directory.</doc>
<msg timestamp="20241117 09:12:55.022" level="INFO">Web.Dev.screenshot_dir: Screenshot</msg>
<msg timestamp="20241117 09:12:55.022" level="INFO" html="true">Created directory '&lt;a href="file://C:\Tally\SAPtesting\Output\cfeea7f4-fbc1-4d95-9983-eaec144e34c1\pabot_results\0\Screenshot"&gt;C:\Tally\SAPtesting\Output\cfeea7f4-fbc1-4d95-9983-eaec144e34c1\pabot_results\0\Screenshot&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20241117 09:12:55.022" endtime="20241117 09:12:55.022"/>
</kw>
<status status="PASS" starttime="20241117 09:12:55.022" endtime="20241117 09:12:55.022"/>
</kw>
<status status="PASS" starttime="20241117 09:12:55.018" endtime="20241117 09:12:55.022"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${screenshot_taking}</arg>
<arg>${True}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20241117 09:12:55.022" level="INFO">${screenshot_taking} = True</msg>
<status status="PASS" starttime="20241117 09:12:55.022" endtime="20241117 09:12:55.022"/>
</kw>
<kw name="Setup linux execution" library="Support">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${web_test_check}</var>
<arg>Variable Should Exist</arg>
<arg>${web_test}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Variable Should Exist" library="BuiltIn">
<arg>${web_test}</arg>
<doc>Fails unless the given variable exists within the current scope.</doc>
<status status="PASS" starttime="20241117 09:12:55.034" endtime="20241117 09:12:55.034"/>
</kw>
<msg timestamp="20241117 09:12:55.034" level="INFO">${web_test_check} = True</msg>
<status status="PASS" starttime="20241117 09:12:55.022" endtime="20241117 09:12:55.034"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${web_test_check}</arg>
<arg>Setup Docker Execution Options</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup Docker Execution Options" library="Support_Web">
<kw name="Setup Suite Metadata" library="Support_Web">
<arg>${browser}</arg>
<kw name="Get Browser Metadata" library="BrowserSupport">
<var>&amp;{browser_information}</var>
<arg>browser=${browser}</arg>
<doc>Fetches browser metadata information
:param browser: Name of the browser for which information is fetched
:param reload: Re-read the metadata based on the browser
:return: Browser metadata information, dict of format
            {"browser_version": browser version value,
             "driver_version": driver version value}</doc>
<msg timestamp="20241117 09:12:58.374" level="INFO">&amp;{browser_information} = { browser_version=131.0.6778.70 | driver_version=130.0.6723.69  }</msg>
<status status="PASS" starttime="20241117 09:12:55.034" endtime="20241117 09:12:58.374"/>
</kw>
<kw name="Set Suite Metadata" library="BuiltIn">
<arg>test_browser_name</arg>
<arg>${browser}</arg>
<doc>Sets metadata for the current test suite.</doc>
<msg timestamp="20241117 09:12:58.374" level="INFO">Set suite metadata 'test_browser_name' to value 'chrome'.</msg>
<status status="PASS" starttime="20241117 09:12:58.374" endtime="20241117 09:12:58.374"/>
</kw>
<kw name="Set Suite Metadata" library="BuiltIn">
<arg>test_browser_version</arg>
<arg>${browser_information.browser_version}</arg>
<doc>Sets metadata for the current test suite.</doc>
<msg timestamp="20241117 09:12:58.374" level="INFO">Set suite metadata 'test_browser_version' to value '131.0.6778.70'.</msg>
<status status="PASS" starttime="20241117 09:12:58.374" endtime="20241117 09:12:58.374"/>
</kw>
<kw name="Set Suite Metadata" library="BuiltIn">
<arg>test_driver_version</arg>
<arg>${browser_information.driver_version}</arg>
<doc>Sets metadata for the current test suite.</doc>
<msg timestamp="20241117 09:12:58.374" level="INFO">Set suite metadata 'test_driver_version' to value '130.0.6723.69 '.</msg>
<status status="PASS" starttime="20241117 09:12:58.374" endtime="20241117 09:12:58.374"/>
</kw>
<status status="PASS" starttime="20241117 09:12:55.034" endtime="20241117 09:12:58.374"/>
</kw>
<kw name="Setup Global Docker Execution Options" library="Support_Web">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${global_browser_options}</arg>
<arg>None</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20241117 09:12:58.374" level="INFO">${global_browser_options} = None</msg>
<status status="PASS" starttime="20241117 09:12:58.374" endtime="20241117 09:12:58.374"/>
</kw>
<kw name="Get Environment Variable" library="OperatingSystem">
<var>${docker_check}</var>
<arg>EXECUTION_ENVIRONMENT</arg>
<arg>not_found</arg>
<doc>Returns the value of an environment variable with the given name.</doc>
<msg timestamp="20241117 09:12:58.374" level="INFO">${docker_check} = not_found</msg>
<status status="PASS" starttime="20241117 09:12:58.374" endtime="20241117 09:12:58.374"/>
</kw>
<kw name="Run Keyword And Return If" library="BuiltIn">
<arg>"${docker_check}"!="docker"</arg>
<arg>Log</arg>
<arg>Not executing on Docker</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Log" library="BuiltIn">
<arg>Not executing on Docker</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20241117 09:12:58.374" level="INFO">Not executing on Docker</msg>
<status status="PASS" starttime="20241117 09:12:58.374" endtime="20241117 09:12:58.374"/>
</kw>
<msg timestamp="20241117 09:12:58.374" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241117 09:12:58.374" endtime="20241117 09:12:58.374"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{options}</var>
<arg>--headless</arg>
<arg>--no-sandbox</arg>
<arg>--disable-dev-shm-usage</arg>
<doc>Returns a list containing given items.</doc>
<status status="NOT RUN" starttime="20241117 09:12:58.374" endtime="20241117 09:12:58.374"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>@{docker_options}</arg>
<arg>@{options}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20241117 09:12:58.374" endtime="20241117 09:12:58.374"/>
</kw>
<status status="PASS" starttime="20241117 09:12:58.374" endtime="20241117 09:12:58.374"/>
</kw>
<kw name="Create Webdriver for chrome preferences" library="Support_Web">
<kw name="Update Docker Execution Options" library="Support_Web">
<var>${list_prefs}</var>
<arg>${list_prefs}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${docker_check}</var>
<arg>Variable Should Exist</arg>
<arg>${docker_options}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Variable Should Exist" library="BuiltIn">
<arg>${docker_options}</arg>
<doc>Fails unless the given variable exists within the current scope.</doc>
<msg timestamp="20241117 09:12:58.374" level="FAIL">Variable '${docker_options}' does not exist.</msg>
<status status="FAIL" starttime="20241117 09:12:58.374" endtime="20241117 09:12:58.374"/>
</kw>
<msg timestamp="20241117 09:12:58.374" level="INFO">${docker_check} = False</msg>
<status status="PASS" starttime="20241117 09:12:58.374" endtime="20241117 09:12:58.374"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${list_prefs_length}</var>
<arg>${list_prefs}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20241117 09:12:58.374" level="INFO">Length is 1</msg>
<msg timestamp="20241117 09:12:58.374" level="INFO">${list_prefs_length} = 1</msg>
<status status="PASS" starttime="20241117 09:12:58.374" endtime="20241117 09:12:58.374"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${list_prefs}</var>
<arg>${docker_check} and ${list_prefs_length}&gt;0 and ${list_prefs}[0] != []</arg>
<arg>Combine Lists</arg>
<arg>${list_prefs}</arg>
<arg>${docker_options}</arg>
<arg>ELSE IF</arg>
<arg>${docker_check}</arg>
<arg>Set Variable</arg>
<arg>${docker_options}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${list_prefs}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${list_prefs}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20241117 09:12:58.374" endtime="20241117 09:12:58.374"/>
</kw>
<msg timestamp="20241117 09:12:58.374" level="INFO">${list_prefs} = [[]]</msg>
<status status="PASS" starttime="20241117 09:12:58.374" endtime="20241117 09:12:58.374"/>
</kw>
<msg timestamp="20241117 09:12:58.374" level="INFO">${list_prefs} = [[]]</msg>
<status status="PASS" starttime="20241117 09:12:58.374" endtime="20241117 09:12:58.374"/>
</kw>
<kw name="Create Chrome Options for download preferences" library="Support_Web">
<var>${chrome_options}</var>
<kw name="Evaluate" library="BuiltIn">
<var>${chrome_options}</var>
<arg>sys.modules['selenium.webdriver'].ChromeOptions()</arg>
<arg>sys</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20241117 09:12:58.374" level="INFO">${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x000001F63019A900&gt;</msg>
<status status="PASS" starttime="20241117 09:12:58.374" endtime="20241117 09:12:58.374"/>
</kw>
<msg timestamp="20241117 09:12:58.374" level="INFO">${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x000001F63019A900&gt;</msg>
<status status="PASS" starttime="20241117 09:12:58.374" endtime="20241117 09:12:58.374"/>
</kw>
<kw name="Update Preferences List" library="Support_Web">
<arg>${chrome_options}</arg>
<arg>@{list_prefs}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${string_prefs}</var>
<arg>${list_prefs}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20241117 09:12:58.374" level="INFO">${string_prefs} = [[]]</msg>
<status status="PASS" starttime="20241117 09:12:58.374" endtime="20241117 09:12:58.374"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${string_prefs} == [[]]</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20241117 09:12:58.374" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20241117 09:12:58.374" endtime="20241117 09:12:58.374"/>
</kw>
<for flavor="IN">
<var>${preference}</var>
<value>@{list_prefs}</value>
<iter>
<var name="${preference}"/>
<kw name="Call Method" library="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>${preference}</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="NOT RUN" starttime="20241117 09:12:58.374" endtime="20241117 09:12:58.374"/>
</kw>
<status status="NOT RUN" starttime="20241117 09:12:58.374" endtime="20241117 09:12:58.374"/>
</iter>
<status status="NOT RUN" starttime="20241117 09:12:58.374" endtime="20241117 09:12:58.374"/>
</for>
<status status="PASS" starttime="20241117 09:12:58.374" endtime="20241117 09:12:58.374"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_experimental_option</arg>
<arg>prefs</arg>
<arg>${kw_prefs}</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20241117 09:12:58.374" endtime="20241117 09:12:58.374"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${global_browser_options}</arg>
<arg>${chrome options}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20241117 09:12:58.374" level="INFO">${global_browser_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x000001F63019A900&gt;</msg>
<status status="PASS" starttime="20241117 09:12:58.374" endtime="20241117 09:12:58.374"/>
</kw>
<status status="PASS" starttime="20241117 09:12:58.374" endtime="20241117 09:12:58.374"/>
</kw>
<status status="PASS" starttime="20241117 09:12:55.034" endtime="20241117 09:12:58.374"/>
</kw>
<status status="PASS" starttime="20241117 09:12:55.034" endtime="20241117 09:12:58.374"/>
</kw>
<status status="PASS" starttime="20241117 09:12:55.022" endtime="20241117 09:12:58.374"/>
</kw>
<kw name="Set Suite Metadata" library="BuiltIn">
<arg>environment</arg>
<arg>${test_server}</arg>
<doc>Sets metadata for the current test suite.</doc>
<msg timestamp="20241117 09:12:58.389" level="INFO">Set suite metadata 'environment' to value 'Dev'.</msg>
<status status="PASS" starttime="20241117 09:12:58.374" endtime="20241117 09:12:58.389"/>
</kw>
<status status="PASS" starttime="20241117 09:12:55.018" endtime="20241117 09:12:58.389"/>
</kw>
<suite id="s1-s1" name="Test Invoice Overdue" source="C:\Tally\SAPtesting\Tests\Test_Invoice_Overdue.robot">
<test id="s1-s1-t1" name="Start And Use Tally" line="8">
<kw name="Start And Use Tally" library="Invoice_Overdue">
<kw name="Login" library="Invoice_Overdue">
<kw name="Login Tally" library="TallyLibrary">
<arg>${symvar('TALLY')}</arg>
<doc>Start Tally and return the main window after login.</doc>
<msg timestamp="20241117 09:12:58.596" level="INFO">Sym.Dev.TALLY: C:\Program Files\TallyPrime\tally.exe</msg>
<msg timestamp="20241117 09:13:29.392" level="INFO">Started Tally with Process ID: 8292</msg>
<status status="PASS" starttime="20241117 09:12:58.596" endtime="20241117 09:13:29.392"/>
</kw>
<status status="PASS" starttime="20241117 09:12:58.596" endtime="20241117 09:13:29.392"/>
</kw>
<kw name="Send Keys To Window" library="TallyLibrary">
<arg>${symvar('Shift_T')}</arg>
<doc>Ensure the correct Tally window is focused, then send keystrokes.</doc>
<msg timestamp="20241117 09:13:29.392" level="INFO">Sym.Dev.Shift_T: +T</msg>
<status status="PASS" starttime="20241117 09:13:29.392" endtime="20241117 09:13:29.545"/>
</kw>
<kw name="Send Keys To Window" library="TallyLibrary">
<arg>${symvar('Shift_D')}</arg>
<doc>Ensure the correct Tally window is focused, then send keystrokes.</doc>
<msg timestamp="20241117 09:13:29.545" level="INFO">Sym.Dev.Shift_D: +D</msg>
<status status="PASS" starttime="20241117 09:13:29.545" endtime="20241117 09:13:29.698"/>
</kw>
<kw name="Send Keys To Window" library="TallyLibrary">
<arg>${symvar('Shift_S')}</arg>
<doc>Ensure the correct Tally window is focused, then send keystrokes.</doc>
<msg timestamp="20241117 09:13:29.698" level="INFO">Sym.Dev.Shift_S: +S</msg>
<status status="PASS" starttime="20241117 09:13:29.698" endtime="20241117 09:13:29.865"/>
</kw>
<kw name="Send Keys To Window" library="TallyLibrary">
<arg>${symvar('Shift_O')}</arg>
<doc>Ensure the correct Tally window is focused, then send keystrokes.</doc>
<msg timestamp="20241117 09:13:29.865" level="INFO">Sym.Dev.Shift_O: +O</msg>
<status status="PASS" starttime="20241117 09:13:29.865" endtime="20241117 09:13:30.019"/>
</kw>
<kw name="Send Keys To Window" library="TallyLibrary">
<arg>${symvar('Shift_R')}</arg>
<doc>Ensure the correct Tally window is focused, then send keystrokes.</doc>
<msg timestamp="20241117 09:13:30.019" level="INFO">Sym.Dev.Shift_R: +R</msg>
<status status="PASS" starttime="20241117 09:13:30.019" endtime="20241117 09:13:30.172"/>
</kw>
<kw name="Send Keys To Window" library="TallyLibrary">
<arg>${symvar('F2')}</arg>
<doc>Ensure the correct Tally window is focused, then send keystrokes.</doc>
<msg timestamp="20241117 09:13:30.172" level="INFO">Sym.Dev.F2: F2</msg>
<status status="PASS" starttime="20241117 09:13:30.172" endtime="20241117 09:13:30.274"/>
</kw>
<kw name="Select Period" library="TallyLibrary">
<arg>${symvar('FROM_DATE')}</arg>
<arg>${symvar('TO_DATE')}</arg>
<doc>Select a period in Tally by entering the from and to dates.</doc>
<msg timestamp="20241117 09:13:30.274" level="INFO">Sym.Dev.FROM_DATE: 01-01-2024</msg>
<msg timestamp="20241117 09:13:30.274" level="INFO">Sym.Dev.TO_DATE: 31-12-2024</msg>
<status status="PASS" starttime="20241117 09:13:30.274" endtime="20241117 09:13:40.446"/>
</kw>
<kw name="Logout" library="Invoice_Overdue">
<kw name="Close Tally Window" library="TallyLibrary">
<doc>Close the Tally application gracefully.</doc>
<status status="PASS" starttime="20241117 09:13:40.446" endtime="20241117 09:13:42.650"/>
</kw>
<status status="PASS" starttime="20241117 09:13:40.446" endtime="20241117 09:13:42.650"/>
</kw>
<status status="PASS" starttime="20241117 09:12:58.596" endtime="20241117 09:13:42.650"/>
</kw>
<tag>IO</tag>
<tag>Regression</tag>
<status status="PASS" starttime="20241117 09:12:58.596" endtime="20241117 09:13:42.650"/>
</test>
<status status="PASS" starttime="20241117 09:12:58.389" endtime="20241117 09:13:42.650"/>
</suite>
<doc>Testing functionality through Robot Framework</doc>
<meta name="environment">Dev</meta>
<meta name="test_browser_name">chrome</meta>
<meta name="test_browser_version">131.0.6778.70</meta>
<meta name="test_driver_version">130.0.6723.69 </meta>
<meta name="test_environment">Dev</meta>
<meta name="test_freeze_dependencies">astroid==3.3.5,attrs==24.2.0,beautifulsoup4==4.12.3,bs4==0.0.2,certifi==2024.8.30,cffi==1.17.1,chardet==5.2.0,charset-normalizer==3.4.0,click==8.1.7,colorama==0.4.6,comtypes==1.4.8,cryptography==43.0.3,defusedxml==0.7.1,dill==0.3.9,docutils==0.21.2,exceptiongroup==1.2.2,gitdb==4.0.11,GitPython==3.1.43,h11==0.14.0,idna==3.10,isort==5.13.2,Jinja2==3.1.4,jira==3.8.0,jsonpath-ng==1.7.0,jsonschema==4.23.0,jsonschema-specifications==2024.10.1,keyboard==0.13.5,lazy-object-proxy==1.10.0,lxml==5.3.0,markdown-it-py==3.0.0,MarkupSafe==3.0.2,mccabe==0.7.0,mdurl==0.1.2,MouseInfo==0.1.3,natsort==8.4.0,oauthlib==3.2.2,outcome==1.3.0.post0,packaging==24.2,pathspec==0.11.2,pillow==11.0.0,pip==24.3.1,platformdirs==4.3.6,ply==3.11,PyAutoGUI==0.9.54,pycparser==2.22,PyGetWindow==0.0.9,Pygments==2.18.0,pylint==3.3.1,PyMsgBox==1.0.9,pyperclip==1.9.0,PyRect==0.2.0,PyScreeze==1.0.1,PySocks==1.7.1,pytweening==1.2.0,pywin32==308,pywinauto==0.6.8,PyYAML==6.0.2,referencing==0.35.1,requests==2.32.3,requests-oauthlib==2.0.0,requests-toolbelt==1.0.0,rich==13.9.4,rich-click==1.6.1,robotframework==6.0.2,robotframework-datadriver==1.9.0,robotframework-jsonlibrary==0.5,robotframework-pabot==2.16.0,robotframework-pythonlibcore==4.2.0,robotframework-requests==0.9.2,robotframework-sapguilibrary==1.1,robotframework-seleniumlibrary==5.1.3,robotframework-SikuliLibrary==2.0.3,robotframework-stacktrace==0.4.1,robotframework-tidy==4.5.0,rpds-py==0.21.0,selenium==4.9.1,setuptools==75.4.0,six==1.16.0,smmap==5.0.1,sniffio==1.3.1,sortedcontainers==2.4.0,soupsieve==2.6,tomli==2.0.2,tomlkit==0.13.2,trio==0.27.0,trio-websocket==0.11.1,typing_extensions==4.12.2,urllib3==2.2.3,wheel==0.45.0,wrapt==1.16.0,wsproto==1.2.0</meta>
<status status="PASS" starttime="20241117 09:12:54.737" endtime="20241117 09:13:42.709"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">IO</stat>
<stat pass="1" fail="0" skip="0">Regression</stat>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Test Invoice Overdue">Tests.Test Invoice Overdue</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
