<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.12.3 on win32)" generated="20240820 10:28:29.840" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="C:\RobotFramework\sap_testing\Tests">
<kw name="Setup highest level suite" type="SETUP">
<kw name="Set Variable" library="BuiltIn">
<var>${d.test_server}</var>
<arg>${test_server}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240820 10:28:30.713" level="INFO">${d.test_server} = Dev</msg>
<status status="PASS" starttime="20240820 10:28:30.713" endtime="20240820 10:28:30.713"/>
</kw>
<kw name="Reset screenshot count variable" library="Support">
<kw name="Set Variable" library="BuiltIn">
<var>${screenshotCount}</var>
<arg>${PABOTQUEUEINDEX}_1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240820 10:28:30.715" level="INFO">${screenshotCount} = 0_1</msg>
<status status="PASS" starttime="20240820 10:28:30.714" endtime="20240820 10:28:30.715"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${screenshotCount}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240820 10:28:30.715" level="INFO">${screenshotCount} = 0_1</msg>
<status status="PASS" starttime="20240820 10:28:30.715" endtime="20240820 10:28:30.715"/>
</kw>
<kw name="Set up screenshot directory" library="Support">
<kw name="Create Directory" library="OperatingSystem">
<arg>${OUTPUTDIR}${/}${wvar('screenshot_dir')}</arg>
<doc>Creates the specified directory.</doc>
<msg timestamp="20240820 10:28:30.717" level="INFO">Web.Dev.screenshot_dir: Screenshot</msg>
<msg timestamp="20240820 10:28:30.718" level="INFO" html="true">Created directory '&lt;a href="file://C:\RobotFramework\sap_testing\Output\36ceb126-48a7-4ce5-9151-6f7afeec7e55\pabot_results\0\Screenshot"&gt;C:\RobotFramework\sap_testing\Output\36ceb126-48a7-4ce5-9151-6f7afeec7e55\pabot_results\0\Screenshot&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20240820 10:28:30.716" endtime="20240820 10:28:30.718"/>
</kw>
<status status="PASS" starttime="20240820 10:28:30.715" endtime="20240820 10:28:30.719"/>
</kw>
<status status="PASS" starttime="20240820 10:28:30.714" endtime="20240820 10:28:30.719"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${screenshot_taking}</arg>
<arg>${True}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240820 10:28:30.719" level="INFO">${screenshot_taking} = True</msg>
<status status="PASS" starttime="20240820 10:28:30.719" endtime="20240820 10:28:30.719"/>
</kw>
<kw name="Setup linux execution" library="Support">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${web_test_check}</var>
<arg>Variable Should Exist</arg>
<arg>${web_test}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Variable Should Exist" library="BuiltIn">
<arg>${web_test}</arg>
<doc>Fails unless the given variable exists within the current scope.</doc>
<status status="PASS" starttime="20240820 10:28:30.720" endtime="20240820 10:28:30.721"/>
</kw>
<msg timestamp="20240820 10:28:30.721" level="INFO">${web_test_check} = True</msg>
<status status="PASS" starttime="20240820 10:28:30.720" endtime="20240820 10:28:30.721"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${web_test_check}</arg>
<arg>Setup Docker Execution Options</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup Docker Execution Options" library="Support_Web">
<kw name="Setup Suite Metadata" library="Support_Web">
<arg>${browser}</arg>
<kw name="Get Browser Metadata" library="BrowserSupport">
<var>&amp;{browser_information}</var>
<arg>browser=${browser}</arg>
<doc>Fetches browser metadata information
:param browser: Name of the browser for which information is fetched
:param reload: Re-read the metadata based on the browser
:return: Browser metadata information, dict of format
            {"browser_version": browser version value,
             "driver_version": driver version value}</doc>
<msg timestamp="20240820 10:28:34.101" level="INFO">&amp;{browser_information} = { browser_version=127.0.6533.120 | driver_version=127.0.6533.72  }</msg>
<status status="PASS" starttime="20240820 10:28:30.722" endtime="20240820 10:28:34.101"/>
</kw>
<kw name="Set Suite Metadata" library="BuiltIn">
<arg>test_browser_name</arg>
<arg>${browser}</arg>
<doc>Sets metadata for the current test suite.</doc>
<msg timestamp="20240820 10:28:34.101" level="INFO">Set suite metadata 'test_browser_name' to value 'chrome'.</msg>
<status status="PASS" starttime="20240820 10:28:34.101" endtime="20240820 10:28:34.101"/>
</kw>
<kw name="Set Suite Metadata" library="BuiltIn">
<arg>test_browser_version</arg>
<arg>${browser_information.browser_version}</arg>
<doc>Sets metadata for the current test suite.</doc>
<msg timestamp="20240820 10:28:34.101" level="INFO">Set suite metadata 'test_browser_version' to value '127.0.6533.120'.</msg>
<status status="PASS" starttime="20240820 10:28:34.101" endtime="20240820 10:28:34.101"/>
</kw>
<kw name="Set Suite Metadata" library="BuiltIn">
<arg>test_driver_version</arg>
<arg>${browser_information.driver_version}</arg>
<doc>Sets metadata for the current test suite.</doc>
<msg timestamp="20240820 10:28:34.101" level="INFO">Set suite metadata 'test_driver_version' to value '127.0.6533.72 '.</msg>
<status status="PASS" starttime="20240820 10:28:34.101" endtime="20240820 10:28:34.101"/>
</kw>
<status status="PASS" starttime="20240820 10:28:30.722" endtime="20240820 10:28:34.101"/>
</kw>
<kw name="Setup Global Docker Execution Options" library="Support_Web">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${global_browser_options}</arg>
<arg>None</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240820 10:28:34.101" level="INFO">${global_browser_options} = None</msg>
<status status="PASS" starttime="20240820 10:28:34.101" endtime="20240820 10:28:34.101"/>
</kw>
<kw name="Get Environment Variable" library="OperatingSystem">
<var>${docker_check}</var>
<arg>EXECUTION_ENVIRONMENT</arg>
<arg>not_found</arg>
<doc>Returns the value of an environment variable with the given name.</doc>
<msg timestamp="20240820 10:28:34.101" level="INFO">${docker_check} = not_found</msg>
<status status="PASS" starttime="20240820 10:28:34.101" endtime="20240820 10:28:34.101"/>
</kw>
<kw name="Run Keyword And Return If" library="BuiltIn">
<arg>"${docker_check}"!="docker"</arg>
<arg>Log</arg>
<arg>Not executing on Docker</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Log" library="BuiltIn">
<arg>Not executing on Docker</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240820 10:28:34.101" level="INFO">Not executing on Docker</msg>
<status status="PASS" starttime="20240820 10:28:34.101" endtime="20240820 10:28:34.101"/>
</kw>
<msg timestamp="20240820 10:28:34.101" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240820 10:28:34.101" endtime="20240820 10:28:34.101"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{options}</var>
<arg>--headless</arg>
<arg>--no-sandbox</arg>
<arg>--disable-dev-shm-usage</arg>
<doc>Returns a list containing given items.</doc>
<status status="NOT RUN" starttime="20240820 10:28:34.101" endtime="20240820 10:28:34.101"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>@{docker_options}</arg>
<arg>@{options}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20240820 10:28:34.101" endtime="20240820 10:28:34.101"/>
</kw>
<status status="PASS" starttime="20240820 10:28:34.101" endtime="20240820 10:28:34.101"/>
</kw>
<kw name="Create Webdriver for chrome preferences" library="Support_Web">
<kw name="Update Docker Execution Options" library="Support_Web">
<var>${list_prefs}</var>
<arg>${list_prefs}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${docker_check}</var>
<arg>Variable Should Exist</arg>
<arg>${docker_options}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Variable Should Exist" library="BuiltIn">
<arg>${docker_options}</arg>
<doc>Fails unless the given variable exists within the current scope.</doc>
<msg timestamp="20240820 10:28:34.101" level="FAIL">Variable '${docker_options}' does not exist.</msg>
<status status="FAIL" starttime="20240820 10:28:34.101" endtime="20240820 10:28:34.101"/>
</kw>
<msg timestamp="20240820 10:28:34.101" level="INFO">${docker_check} = False</msg>
<status status="PASS" starttime="20240820 10:28:34.101" endtime="20240820 10:28:34.101"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${list_prefs_length}</var>
<arg>${list_prefs}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240820 10:28:34.101" level="INFO">Length is 1</msg>
<msg timestamp="20240820 10:28:34.101" level="INFO">${list_prefs_length} = 1</msg>
<status status="PASS" starttime="20240820 10:28:34.101" endtime="20240820 10:28:34.101"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${list_prefs}</var>
<arg>${docker_check} and ${list_prefs_length}&gt;0 and ${list_prefs}[0] != []</arg>
<arg>Combine Lists</arg>
<arg>${list_prefs}</arg>
<arg>${docker_options}</arg>
<arg>ELSE IF</arg>
<arg>${docker_check}</arg>
<arg>Set Variable</arg>
<arg>${docker_options}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${list_prefs}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${list_prefs}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20240820 10:28:34.101" endtime="20240820 10:28:34.101"/>
</kw>
<msg timestamp="20240820 10:28:34.101" level="INFO">${list_prefs} = [[]]</msg>
<status status="PASS" starttime="20240820 10:28:34.101" endtime="20240820 10:28:34.101"/>
</kw>
<msg timestamp="20240820 10:28:34.101" level="INFO">${list_prefs} = [[]]</msg>
<status status="PASS" starttime="20240820 10:28:34.101" endtime="20240820 10:28:34.101"/>
</kw>
<kw name="Create Chrome Options for download preferences" library="Support_Web">
<var>${chrome_options}</var>
<kw name="Evaluate" library="BuiltIn">
<var>${chrome_options}</var>
<arg>sys.modules['selenium.webdriver'].ChromeOptions()</arg>
<arg>sys</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240820 10:28:34.101" level="INFO">${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x0000017FDD661220&gt;</msg>
<status status="PASS" starttime="20240820 10:28:34.101" endtime="20240820 10:28:34.101"/>
</kw>
<msg timestamp="20240820 10:28:34.101" level="INFO">${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x0000017FDD661220&gt;</msg>
<status status="PASS" starttime="20240820 10:28:34.101" endtime="20240820 10:28:34.101"/>
</kw>
<kw name="Update Preferences List" library="Support_Web">
<arg>${chrome_options}</arg>
<arg>@{list_prefs}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${string_prefs}</var>
<arg>${list_prefs}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240820 10:28:34.101" level="INFO">${string_prefs} = [[]]</msg>
<status status="PASS" starttime="20240820 10:28:34.101" endtime="20240820 10:28:34.101"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${string_prefs} == [[]]</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20240820 10:28:34.101" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240820 10:28:34.101" endtime="20240820 10:28:34.101"/>
</kw>
<for flavor="IN">
<var>${preference}</var>
<value>@{list_prefs}</value>
<iter>
<var name="${preference}"/>
<kw name="Call Method" library="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>${preference}</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="NOT RUN" starttime="20240820 10:28:34.101" endtime="20240820 10:28:34.101"/>
</kw>
<status status="NOT RUN" starttime="20240820 10:28:34.101" endtime="20240820 10:28:34.101"/>
</iter>
<status status="NOT RUN" starttime="20240820 10:28:34.101" endtime="20240820 10:28:34.101"/>
</for>
<status status="PASS" starttime="20240820 10:28:34.101" endtime="20240820 10:28:34.101"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_experimental_option</arg>
<arg>prefs</arg>
<arg>${kw_prefs}</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240820 10:28:34.101" endtime="20240820 10:28:34.101"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${global_browser_options}</arg>
<arg>${chrome options}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240820 10:28:34.101" level="INFO">${global_browser_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x0000017FDD661220&gt;</msg>
<status status="PASS" starttime="20240820 10:28:34.101" endtime="20240820 10:28:34.101"/>
</kw>
<status status="PASS" starttime="20240820 10:28:34.101" endtime="20240820 10:28:34.101"/>
</kw>
<status status="PASS" starttime="20240820 10:28:30.722" endtime="20240820 10:28:34.101"/>
</kw>
<status status="PASS" starttime="20240820 10:28:30.721" endtime="20240820 10:28:34.101"/>
</kw>
<status status="PASS" starttime="20240820 10:28:30.720" endtime="20240820 10:28:34.101"/>
</kw>
<kw name="Set Suite Metadata" library="BuiltIn">
<arg>environment</arg>
<arg>${test_server}</arg>
<doc>Sets metadata for the current test suite.</doc>
<msg timestamp="20240820 10:28:34.117" level="INFO">Set suite metadata 'environment' to value 'Dev'.</msg>
<status status="PASS" starttime="20240820 10:28:34.101" endtime="20240820 10:28:34.117"/>
</kw>
<status status="PASS" starttime="20240820 10:28:30.712" endtime="20240820 10:28:34.117"/>
</kw>
<suite id="s1-s1" name="Test Read CSV file" source="C:\RobotFramework\sap_testing\Tests\Test_Read_CSV_file.robot">
<test id="s1-s1-t1" name="Read and Write CSV with Pandas" line="6">
<kw name="Read CSV File" library="Read_CSV_file">
<doc>Read the content from the CSV file using Pandas.</doc>
<kw name="Read Csv File To Dataframe" library="PandasLibrary">
<var>${dataframe}</var>
<arg>${INPUT_FILE}</arg>
<msg timestamp="20240820 10:28:35.117" level="INFO">${dataframe} =       d
0     u
1     m
2     m
3     y
4     d
...  ..
2847  a
2848  t
2849  a
2850  ;
2851  ;

[2852 rows x 1 columns]</msg>
<status status="PASS" starttime="20240820 10:28:34.648" endtime="20240820 10:28:35.117"/>
</kw>
<kw name="Log Dataframe Info" library="PandasLibrary">
<arg>${dataframe}</arg>
<msg timestamp="20240820 10:28:35.679" level="INFO">&lt;class 'pandas.core.frame.DataFrame'&gt;
RangeIndex: 2852 entries, 0 to 2851
Data columns (total 1 columns):
 #   Column  Non-Null Count  Dtype 
---  ------  --------------  ----- 
 0   d       2852 non-null   object
dtypes: object(1)
memory usage: 22.4+ KB
None</msg>
<status status="PASS" starttime="20240820 10:28:35.117" endtime="20240820 10:28:35.679"/>
</kw>
<kw name="Dataframe To List" library="PandasLibrary">
<var>${data}</var>
<arg>${dataframe}</arg>
<msg timestamp="20240820 10:28:35.679" level="INFO">${data} = [['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], ['!'], ['@'], ['&amp;'], ['^'], ['!'], ['@'], [';'], ['!'], ['@...</msg>
<status status="PASS" starttime="20240820 10:28:35.679" endtime="20240820 10:28:35.679"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${data}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240820 10:28:35.679" level="INFO">[['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], ['!'], ['@'], ['&amp;'], ['^'], ['!'], ['@'], [';'], ['!'], ['@'], ['*'], ['^'], ['$'], ['#'], ['*'], ['('], ['&amp;'], ['^'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [')'], ['('], ['*'], ['('], [')'], ['&amp;'], ['$'], ['@'], [';'], ['('], ['*'], [')'], [')'], ['('], ['&amp;'], ['$'], ['@'], ['('], [')'], ['&amp;'], ['$'], ['@'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], ['d'], ['a'], ['t'], ['a'], [';'], ['d'], ['u'], ['m'], ['m'], ['y'], [';'], ['d'], ['a'], ['t'], ['a'], [';'], [';']]</msg>
<status status="PASS" starttime="20240820 10:28:35.679" endtime="20240820 10:28:35.679"/>
</kw>
<status status="PASS" starttime="20240820 10:28:34.648" endtime="20240820 10:28:35.679"/>
</kw>
<kw name="Write CSV File" library="Read_CSV_file">
<doc>Write content to a new CSV file using Pandas.</doc>
<kw name="Read Csv File To Dataframe" library="PandasLibrary">
<var>${dataframe}</var>
<arg>${INPUT_FILE}</arg>
<msg timestamp="20240820 10:28:35.695" level="INFO">${dataframe} =       d
0     u
1     m
2     m
3     y
4     d
...  ..
2847  a
2848  t
2849  a
2850  ;
2851  ;

[2852 rows x 1 columns]</msg>
<status status="PASS" starttime="20240820 10:28:35.679" endtime="20240820 10:28:35.695"/>
</kw>
<kw name="Add Column To Dataframe" library="PandasLibrary">
<var>${dataframe}</var>
<arg>${dataframe}</arg>
<arg>Salary</arg>
<arg>50000</arg>
<msg timestamp="20240820 10:28:35.695" level="INFO">${dataframe} =       d Salary
0     u  50000
1     m  50000
2     m  50000
3     y  50000
4     d  50000
...  ..    ...
2847  a  50000
2848  t  50000
2849  a  50000
2850  ;  50000
2851  ;  50000

[2852 rows x 2 colu...</msg>
<status status="PASS" starttime="20240820 10:28:35.695" endtime="20240820 10:28:35.695"/>
</kw>
<kw name="Write Dataframe To Csv" library="PandasLibrary">
<arg>${dataframe}</arg>
<arg>${OUTPUT_FILE}</arg>
<status status="PASS" starttime="20240820 10:28:35.695" endtime="20240820 10:28:35.726"/>
</kw>
<status status="PASS" starttime="20240820 10:28:35.679" endtime="20240820 10:28:35.726"/>
</kw>
<tag>CSVfile</tag>
<tag>Regression</tag>
<status status="PASS" starttime="20240820 10:28:34.648" endtime="20240820 10:28:35.726"/>
</test>
<status status="PASS" starttime="20240820 10:28:34.117" endtime="20240820 10:28:35.726"/>
</suite>
<doc>Testing functionality through Robot Framework</doc>
<meta name="environment">Dev</meta>
<meta name="test_browser_name">chrome</meta>
<meta name="test_browser_version">127.0.6533.120</meta>
<meta name="test_driver_version">127.0.6533.72 </meta>
<meta name="test_environment">Dev</meta>
<meta name="test_freeze_dependencies">annotated-types==0.7.0,arrow==1.3.0,astroid==3.2.2,asttokens==2.4.1,attrs==23.2.0,beautifulsoup4==4.12.3,binaryornot==0.4.4,bs4==0.0.2,certifi==2024.6.2,cffi==1.16.0,chardet==5.2.0,charset-normalizer==3.3.2,click==8.1.7,colorama==0.4.6,cookiecutter==2.6.0,cryptography==42.0.7,decorator==5.1.1,defusedxml==0.7.1,dill==0.3.8,docutils==0.21.2,et-xmlfile==1.1.0,exceptiongroup==1.2.1,executing==2.0.1,gitdb==4.0.11,GitPython==3.1.43,grpcio==1.64.1,h11==0.14.0,idna==3.7,ipython==8.25.0,isort==5.13.2,jaraco.classes==3.4.0,jaraco.context==5.3.0,jaraco.functools==4.0.1,jedi==0.19.1,Jinja2==3.1.4,jira==3.8.0,jsonpath-ng==1.6.1,jsonschema==4.22.0,jsonschema-specifications==2023.12.1,keyring==25.2.1,lazy-object-proxy==1.10.0,lxml==5.2.2,markdown-it-py==3.0.0,MarkupSafe==2.1.5,matplotlib-inline==0.1.7,mccabe==0.7.0,mdurl==0.1.2,more-itertools==10.3.0,natsort==8.4.0,numpy==2.0.0,oauthlib==3.2.2,openpyxl==3.1.5,outcome==1.3.0.post0,packaging==24.0,pandas==2.2.2,parso==0.8.4,pathspec==0.11.2,pillow==10.3.0,pip==24.2,platformdirs==4.2.2,ply==3.11,prompt_toolkit==3.0.47,pure-eval==0.2.2,pycparser==2.22,pydantic==2.7.4,pydantic_core==2.18.4,Pygments==2.18.0,pylint==3.2.2,PyPDF2==3.0.1,PySocks==1.7.1,python-dateutil==2.9.0.post0,python-dotenv==1.0.1,python-slugify==8.0.4,pytz==2024.1,pywin32==306,pywin32-ctypes==0.2.2,PyYAML==6.0.1,redis==5.0.6,referencing==0.35.1,reportlab==4.2.0,requests==2.32.3,requests-oauthlib==2.0.0,requests-toolbelt==1.0.0,RestrictedPython==7.1,rich==13.7.1,rich-click==1.6.1,robotframework==6.0.2,robotframework-datadriver==1.9.0,robotframework-excellib==2.0.1,robotframework-jsonlibrary==0.5,robotframework-pabot==2.16.0,robotframework-pythonlibcore==4.2.0,robotframework-requests==0.9.2,robotframework-sapguilibrary==1.1,robotframework-seleniumlibrary==5.1.3,robotframework-stacktrace==0.4.1,robotframework-tidy==4.5.0,rpds-py==0.18.1,selenium==4.9.1,setuptools==70.0.0,shellingham==1.5.4,six==1.16.0,smmap==5.0.1,sniffio==1.3.1,sortedcontainers==2.4.0,soupsieve==2.5,stack-data==0.6.3,statsd==4.0.1,text-unidecode==1.3,tomli==2.0.1,tomlkit==0.12.5,traitlets==5.14.3,trio==0.25.1,trio-websocket==0.11.1,typer==0.12.3,types-python-dateutil==2.9.0.20240316,typing_extensions==4.12.1,tzdata==2024.1,urllib3==2.2.1,wcwidth==0.2.13,websocket-client==1.8.0,wheel==0.43.0,wrapt==1.16.0,wsproto==1.2.0</meta>
<status status="PASS" starttime="20240820 10:28:30.311" endtime="20240820 10:28:35.789"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">CSVfile</stat>
<stat pass="1" fail="0" skip="0">Regression</stat>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Test Read CSV file">Tests.Test Read CSV file</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
