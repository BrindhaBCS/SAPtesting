<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.12.3 on win32)" generated="20240919 06:59:52.934" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="C:\RobotFramework\sap_testing\Tests">
<kw name="Setup highest level suite" type="SETUP">
<kw name="Set Variable" library="BuiltIn">
<var>${d.test_server}</var>
<arg>${test_server}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240919 06:59:53.639" level="INFO">${d.test_server} = Dev</msg>
<status status="PASS" starttime="20240919 06:59:53.639" endtime="20240919 06:59:53.639"/>
</kw>
<kw name="Reset screenshot count variable" library="Support">
<kw name="Set Variable" library="BuiltIn">
<var>${screenshotCount}</var>
<arg>${PABOTQUEUEINDEX}_1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240919 06:59:53.640" level="INFO">${screenshotCount} = 0_1</msg>
<status status="PASS" starttime="20240919 06:59:53.639" endtime="20240919 06:59:53.640"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${screenshotCount}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240919 06:59:53.640" level="INFO">${screenshotCount} = 0_1</msg>
<status status="PASS" starttime="20240919 06:59:53.640" endtime="20240919 06:59:53.641"/>
</kw>
<kw name="Set up screenshot directory" library="Support">
<kw name="Create Directory" library="OperatingSystem">
<arg>${OUTPUTDIR}${/}${wvar('screenshot_dir')}</arg>
<doc>Creates the specified directory.</doc>
<msg timestamp="20240919 06:59:53.642" level="INFO">Web.Dev.screenshot_dir: Screenshot</msg>
<msg timestamp="20240919 06:59:53.643" level="INFO" html="true">Created directory '&lt;a href="file://C:\RobotFramework\sap_testing\Output\ffd2ba2a-0b22-4c02-85d8-33fa4bcff0b8\pabot_results\0\Screenshot"&gt;C:\RobotFramework\sap_testing\Output\ffd2ba2a-0b22-4c02-85d8-33fa4bcff0b8\pabot_results\0\Screenshot&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20240919 06:59:53.641" endtime="20240919 06:59:53.643"/>
</kw>
<status status="PASS" starttime="20240919 06:59:53.641" endtime="20240919 06:59:53.643"/>
</kw>
<status status="PASS" starttime="20240919 06:59:53.639" endtime="20240919 06:59:53.644"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${screenshot_taking}</arg>
<arg>${True}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240919 06:59:53.644" level="INFO">${screenshot_taking} = True</msg>
<status status="PASS" starttime="20240919 06:59:53.644" endtime="20240919 06:59:53.644"/>
</kw>
<kw name="Setup linux execution" library="Support">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${web_test_check}</var>
<arg>Variable Should Exist</arg>
<arg>${web_test}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Variable Should Exist" library="BuiltIn">
<arg>${web_test}</arg>
<doc>Fails unless the given variable exists within the current scope.</doc>
<status status="PASS" starttime="20240919 06:59:53.645" endtime="20240919 06:59:53.646"/>
</kw>
<msg timestamp="20240919 06:59:53.646" level="INFO">${web_test_check} = True</msg>
<status status="PASS" starttime="20240919 06:59:53.645" endtime="20240919 06:59:53.646"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${web_test_check}</arg>
<arg>Setup Docker Execution Options</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup Docker Execution Options" library="Support_Web">
<kw name="Setup Suite Metadata" library="Support_Web">
<arg>${browser}</arg>
<kw name="Get Browser Metadata" library="BrowserSupport">
<var>&amp;{browser_information}</var>
<arg>browser=${browser}</arg>
<doc>Fetches browser metadata information
:param browser: Name of the browser for which information is fetched
:param reload: Re-read the metadata based on the browser
:return: Browser metadata information, dict of format
            {"browser_version": browser version value,
             "driver_version": driver version value}</doc>
<msg timestamp="20240919 06:59:57.001" level="INFO">&amp;{browser_information} = { browser_version=128.0.6613.138 | driver_version=127.0.6533.72  }</msg>
<status status="PASS" starttime="20240919 06:59:53.647" endtime="20240919 06:59:57.001"/>
</kw>
<kw name="Set Suite Metadata" library="BuiltIn">
<arg>test_browser_name</arg>
<arg>${browser}</arg>
<doc>Sets metadata for the current test suite.</doc>
<msg timestamp="20240919 06:59:57.002" level="INFO">Set suite metadata 'test_browser_name' to value 'chrome'.</msg>
<status status="PASS" starttime="20240919 06:59:57.001" endtime="20240919 06:59:57.002"/>
</kw>
<kw name="Set Suite Metadata" library="BuiltIn">
<arg>test_browser_version</arg>
<arg>${browser_information.browser_version}</arg>
<doc>Sets metadata for the current test suite.</doc>
<msg timestamp="20240919 06:59:57.002" level="INFO">Set suite metadata 'test_browser_version' to value '128.0.6613.138'.</msg>
<status status="PASS" starttime="20240919 06:59:57.002" endtime="20240919 06:59:57.003"/>
</kw>
<kw name="Set Suite Metadata" library="BuiltIn">
<arg>test_driver_version</arg>
<arg>${browser_information.driver_version}</arg>
<doc>Sets metadata for the current test suite.</doc>
<msg timestamp="20240919 06:59:57.003" level="INFO">Set suite metadata 'test_driver_version' to value '127.0.6533.72 '.</msg>
<status status="PASS" starttime="20240919 06:59:57.003" endtime="20240919 06:59:57.003"/>
</kw>
<status status="PASS" starttime="20240919 06:59:53.646" endtime="20240919 06:59:57.003"/>
</kw>
<kw name="Setup Global Docker Execution Options" library="Support_Web">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${global_browser_options}</arg>
<arg>None</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240919 06:59:57.005" level="INFO">${global_browser_options} = None</msg>
<status status="PASS" starttime="20240919 06:59:57.004" endtime="20240919 06:59:57.005"/>
</kw>
<kw name="Get Environment Variable" library="OperatingSystem">
<var>${docker_check}</var>
<arg>EXECUTION_ENVIRONMENT</arg>
<arg>not_found</arg>
<doc>Returns the value of an environment variable with the given name.</doc>
<msg timestamp="20240919 06:59:57.005" level="INFO">${docker_check} = not_found</msg>
<status status="PASS" starttime="20240919 06:59:57.005" endtime="20240919 06:59:57.005"/>
</kw>
<kw name="Run Keyword And Return If" library="BuiltIn">
<arg>"${docker_check}"!="docker"</arg>
<arg>Log</arg>
<arg>Not executing on Docker</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Log" library="BuiltIn">
<arg>Not executing on Docker</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240919 06:59:57.006" level="INFO">Not executing on Docker</msg>
<status status="PASS" starttime="20240919 06:59:57.005" endtime="20240919 06:59:57.006"/>
</kw>
<msg timestamp="20240919 06:59:57.006" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240919 06:59:57.005" endtime="20240919 06:59:57.006"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{options}</var>
<arg>--headless</arg>
<arg>--no-sandbox</arg>
<arg>--disable-dev-shm-usage</arg>
<doc>Returns a list containing given items.</doc>
<status status="NOT RUN" starttime="20240919 06:59:57.006" endtime="20240919 06:59:57.006"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>@{docker_options}</arg>
<arg>@{options}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20240919 06:59:57.006" endtime="20240919 06:59:57.006"/>
</kw>
<status status="PASS" starttime="20240919 06:59:57.003" endtime="20240919 06:59:57.006"/>
</kw>
<kw name="Create Webdriver for chrome preferences" library="Support_Web">
<kw name="Update Docker Execution Options" library="Support_Web">
<var>${list_prefs}</var>
<arg>${list_prefs}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${docker_check}</var>
<arg>Variable Should Exist</arg>
<arg>${docker_options}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Variable Should Exist" library="BuiltIn">
<arg>${docker_options}</arg>
<doc>Fails unless the given variable exists within the current scope.</doc>
<msg timestamp="20240919 06:59:57.009" level="FAIL">Variable '${docker_options}' does not exist.</msg>
<status status="FAIL" starttime="20240919 06:59:57.007" endtime="20240919 06:59:57.009"/>
</kw>
<msg timestamp="20240919 06:59:57.009" level="INFO">${docker_check} = False</msg>
<status status="PASS" starttime="20240919 06:59:57.007" endtime="20240919 06:59:57.009"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${list_prefs_length}</var>
<arg>${list_prefs}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240919 06:59:57.009" level="INFO">Length is 1</msg>
<msg timestamp="20240919 06:59:57.009" level="INFO">${list_prefs_length} = 1</msg>
<status status="PASS" starttime="20240919 06:59:57.009" endtime="20240919 06:59:57.009"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${list_prefs}</var>
<arg>${docker_check} and ${list_prefs_length}&gt;0 and ${list_prefs}[0] != []</arg>
<arg>Combine Lists</arg>
<arg>${list_prefs}</arg>
<arg>${docker_options}</arg>
<arg>ELSE IF</arg>
<arg>${docker_check}</arg>
<arg>Set Variable</arg>
<arg>${docker_options}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${list_prefs}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${list_prefs}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20240919 06:59:57.010" endtime="20240919 06:59:57.010"/>
</kw>
<msg timestamp="20240919 06:59:57.010" level="INFO">${list_prefs} = [[]]</msg>
<status status="PASS" starttime="20240919 06:59:57.009" endtime="20240919 06:59:57.010"/>
</kw>
<msg timestamp="20240919 06:59:57.010" level="INFO">${list_prefs} = [[]]</msg>
<status status="PASS" starttime="20240919 06:59:57.007" endtime="20240919 06:59:57.010"/>
</kw>
<kw name="Create Chrome Options for download preferences" library="Support_Web">
<var>${chrome_options}</var>
<kw name="Evaluate" library="BuiltIn">
<var>${chrome_options}</var>
<arg>sys.modules['selenium.webdriver'].ChromeOptions()</arg>
<arg>sys</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240919 06:59:57.011" level="INFO">${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x0000022D6E272120&gt;</msg>
<status status="PASS" starttime="20240919 06:59:57.010" endtime="20240919 06:59:57.011"/>
</kw>
<msg timestamp="20240919 06:59:57.011" level="INFO">${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x0000022D6E272120&gt;</msg>
<status status="PASS" starttime="20240919 06:59:57.010" endtime="20240919 06:59:57.011"/>
</kw>
<kw name="Update Preferences List" library="Support_Web">
<arg>${chrome_options}</arg>
<arg>@{list_prefs}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${string_prefs}</var>
<arg>${list_prefs}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240919 06:59:57.011" level="INFO">${string_prefs} = [[]]</msg>
<status status="PASS" starttime="20240919 06:59:57.011" endtime="20240919 06:59:57.012"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${string_prefs} == [[]]</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20240919 06:59:57.012" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240919 06:59:57.012" endtime="20240919 06:59:57.012"/>
</kw>
<for flavor="IN">
<var>${preference}</var>
<value>@{list_prefs}</value>
<iter>
<var name="${preference}"/>
<kw name="Call Method" library="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>${preference}</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="NOT RUN" starttime="20240919 06:59:57.012" endtime="20240919 06:59:57.012"/>
</kw>
<status status="NOT RUN" starttime="20240919 06:59:57.012" endtime="20240919 06:59:57.013"/>
</iter>
<status status="NOT RUN" starttime="20240919 06:59:57.012" endtime="20240919 06:59:57.013"/>
</for>
<status status="PASS" starttime="20240919 06:59:57.011" endtime="20240919 06:59:57.013"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_experimental_option</arg>
<arg>prefs</arg>
<arg>${kw_prefs}</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240919 06:59:57.013" endtime="20240919 06:59:57.013"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${global_browser_options}</arg>
<arg>${chrome options}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240919 06:59:57.013" level="INFO">${global_browser_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x0000022D6E272120&gt;</msg>
<status status="PASS" starttime="20240919 06:59:57.013" endtime="20240919 06:59:57.013"/>
</kw>
<status status="PASS" starttime="20240919 06:59:57.006" endtime="20240919 06:59:57.014"/>
</kw>
<status status="PASS" starttime="20240919 06:59:53.646" endtime="20240919 06:59:57.014"/>
</kw>
<status status="PASS" starttime="20240919 06:59:53.646" endtime="20240919 06:59:57.014"/>
</kw>
<status status="PASS" starttime="20240919 06:59:53.644" endtime="20240919 06:59:57.014"/>
</kw>
<kw name="Set Suite Metadata" library="BuiltIn">
<arg>environment</arg>
<arg>${test_server}</arg>
<doc>Sets metadata for the current test suite.</doc>
<msg timestamp="20240919 06:59:57.014" level="INFO">Set suite metadata 'environment' to value 'Dev'.</msg>
<status status="PASS" starttime="20240919 06:59:57.014" endtime="20240919 06:59:57.014"/>
</kw>
<status status="PASS" starttime="20240919 06:59:53.638" endtime="20240919 06:59:57.014"/>
</kw>
<suite id="s1-s1" name="Test material master" source="C:\RobotFramework\sap_testing\Tests\Test_material_master.robot">
<kw name="System Logon" library="material_master" type="SETUP">
<kw name="Start Process" library="Process">
<arg>${symvar('MASTER_SAP_SERVER')}</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20240919 06:59:57.610" level="INFO">Sym.Dev.MASTER_SAP_SERVER: C:\Program Files (x86)\SAP\FrontEnd\SAPgui\saplogon.exe</msg>
<msg timestamp="20240919 06:59:57.610" level="INFO">Starting process:
"C:\Program Files (x86)\SAP\FrontEnd\SAPgui\saplogon.exe"</msg>
<status status="PASS" starttime="20240919 06:59:57.609" endtime="20240919 06:59:57.613"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240919 06:59:59.620" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20240919 06:59:57.613" endtime="20240919 06:59:59.620"/>
</kw>
<kw name="Connect To Session" library="SAP_Tcode_Library">
<doc>Connects to an open session SAP.</doc>
<status status="PASS" starttime="20240919 06:59:59.620" endtime="20240919 06:59:59.620"/>
</kw>
<kw name="Open Connection" library="SAP_Tcode_Library">
<arg>${symvar('MASTER_SAP_connection')}</arg>
<doc>Opens a connection to the given connection name. Be sure to provide the full connection name, including the bracket part.</doc>
<msg timestamp="20240919 06:59:59.620" level="INFO">Sym.Dev.MASTER_SAP_connection: BIS</msg>
<status status="PASS" starttime="20240919 06:59:59.620" endtime="20240919 07:00:00.651"/>
</kw>
<kw name="Input Text" library="SAP_Tcode_Library">
<arg>wnd[0]/usr/txtRSYST-MANDT</arg>
<arg>${symvar('MASTER_Client_Id')}</arg>
<doc>Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.</doc>
<msg timestamp="20240919 07:00:00.651" level="INFO">Sym.Dev.MASTER_Client_Id: 800</msg>
<msg timestamp="20240919 07:00:00.683" level="INFO">Typing text '800' into text field 'wnd[0]/usr/txtRSYST-MANDT'.</msg>
<status status="PASS" starttime="20240919 07:00:00.651" endtime="20240919 07:00:00.683"/>
</kw>
<kw name="Input Text" library="SAP_Tcode_Library">
<arg>wnd[0]/usr/txtRSYST-BNAME</arg>
<arg>${symvar('MASTER_User_Name')}</arg>
<doc>Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.</doc>
<msg timestamp="20240919 07:00:00.683" level="INFO">Sym.Dev.MASTER_User_Name: BCSADMIN</msg>
<msg timestamp="20240919 07:00:00.683" level="INFO">Typing text 'BCSADMIN' into text field 'wnd[0]/usr/txtRSYST-BNAME'.</msg>
<status status="PASS" starttime="20240919 07:00:00.683" endtime="20240919 07:00:00.683"/>
</kw>
<kw name="Input Password" library="SAP_Tcode_Library">
<arg>wnd[0]/usr/pwdRSYST-BCODE</arg>
<arg>%{SAP_PASSWORD}</arg>
<doc>Inserts the given password into the text field identified by locator.
The password is not recorded in the log.</doc>
<msg timestamp="20240919 07:00:00.698" level="INFO">Typing password into text field 'wnd[0]/usr/pwdRSYST-BCODE'.</msg>
<status status="PASS" starttime="20240919 07:00:00.683" endtime="20240919 07:00:00.698"/>
</kw>
<kw name="Send Vkey" library="SAP_Tcode_Library">
<arg>0</arg>
<doc>Sends a SAP virtual key combination to the window, not into an element.
If you want to send a value to a text field, use `input text` instead.</doc>
<status status="PASS" starttime="20240919 07:00:00.698" endtime="20240919 07:00:01.105"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240919 07:00:06.116" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20240919 07:00:01.105" endtime="20240919 07:00:06.116"/>
</kw>
<kw name="Multiple Logon Handling" library="SAP_Tcode_Library">
<arg>wnd[1]</arg>
<arg>wnd[1]/usr/radMULTI_LOGON_OPT2</arg>
<arg>wnd[1]/tbar[0]/btn[0]</arg>
<msg timestamp="20240919 07:00:09.215" level="INFO">Multiple logon exists</msg>
<status status="PASS" starttime="20240919 07:00:06.116" endtime="20240919 07:00:09.215"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240919 07:00:10.215" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20240919 07:00:09.215" endtime="20240919 07:00:10.215"/>
</kw>
<status status="PASS" starttime="20240919 06:59:57.609" endtime="20240919 07:00:10.215"/>
</kw>
<test id="s1-s1-t1" name="Material_master" line="9">
<kw name="Material_master" library="material_master">
<kw name="Run Transaction" library="SAP_Tcode_Library">
<arg>mm01</arg>
<doc>Runs a Sap transaction. An error is given when an unknown transaction is specified.</doc>
<status status="PASS" starttime="20240919 07:00:10.215" endtime="20240919 07:00:11.371"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240919 07:00:13.372" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20240919 07:00:11.371" endtime="20240919 07:00:13.372"/>
</kw>
<kw name="Get Material Count" library="SAP_Tcode_Library">
<var>${total_row}</var>
<arg>${symvar('Excel_file')}</arg>
<msg timestamp="20240919 07:00:13.372" level="INFO">Sym.Dev.Excel_file: C:\RobotFramework\sap_testing\Tests\Resource\Material.xlsx</msg>
<msg timestamp="20240919 07:00:13.419" level="INFO">100</msg>
<msg timestamp="20240919 07:00:13.419" level="INFO">${total_row} = 100</msg>
<status status="PASS" starttime="20240919 07:00:13.372" endtime="20240919 07:00:13.419"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${rows}</var>
<arg>${total_row} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240919 07:00:13.419" level="INFO">${rows} = 101</msg>
<status status="PASS" starttime="20240919 07:00:13.419" endtime="20240919 07:00:13.419"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${rows}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20240919 07:00:13.419" endtime="20240919 07:00:13.419"/>
</kw>
<for flavor="IN RANGE">
<var>${initial_row}</var>
<value>2</value>
<value>${rows}</value>
<iter>
<var name="${initial_row}">2</var>
<kw name="Read Excel Sheet" library="material_master">
<var>${industry_sector}</var>
<arg>${symvar('Excel_file')}</arg>
<arg>${symvar('Sheet_name')}</arg>
<arg>${initial_row}</arg>
<arg>1</arg>
<msg timestamp="20240919 07:00:13.419" level="INFO">Sym.Dev.Excel_file: C:\RobotFramework\sap_testing\Tests\Resource\Material.xlsx</msg>
<msg timestamp="20240919 07:00:13.419" level="INFO">Sym.Dev.Sheet_name: Testing Team</msg>
<kw name="Open Excel Document" library="ExcelLibrary">
<arg>${Excel_file}</arg>
<arg>1</arg>
<doc>Opens xlsx document file.</doc>
<status status="PASS" starttime="20240919 07:00:13.419" endtime="20240919 07:00:13.450"/>
</kw>
<kw name="Get Sheet" library="ExcelLibrary">
<arg>${sheetname}</arg>
<doc>Returns a page from the current document.</doc>
<status status="PASS" starttime="20240919 07:00:13.450" endtime="20240919 07:00:13.450"/>
</kw>
<kw name="Read Excel Cell" library="ExcelLibrary">
<var>${data}</var>
<arg>${rownum}</arg>
<arg>${colnum}</arg>
<doc>Returns content of a cell.</doc>
<msg timestamp="20240919 07:00:13.450" level="INFO">${data} = M </msg>
<status status="PASS" starttime="20240919 07:00:13.450" endtime="20240919 07:00:13.450"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${data}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20240919 07:00:13.450" endtime="20240919 07:00:13.450"/>
</kw>
<kw name="Close Current Excel Document" library="ExcelLibrary">
<doc>Closes current document.</doc>
<status status="PASS" starttime="20240919 07:00:13.450" endtime="20240919 07:00:13.450"/>
</kw>
<msg timestamp="20240919 07:00:13.450" level="INFO">${industry_sector} = M </msg>
<status status="PASS" starttime="20240919 07:00:13.419" endtime="20240919 07:00:13.450"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${industry_sector}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20240919 07:00:13.450" endtime="20240919 07:00:13.450"/>
</kw>
<kw name="Select From List By Key" library="SAP_Tcode_Library">
<arg>wnd[0]/usr/cmbRMMG1-MBRSH</arg>
<arg>${industry_sector}</arg>
<doc>Selects the specified option from the selection list.</doc>
<msg timestamp="20240919 07:00:13.560" level="FAIL">AttributeError: Property '&lt;unknown&gt;.key' can not be set.</msg>
<status status="FAIL" starttime="20240919 07:00:13.450" endtime="20240919 07:00:13.560"/>
</kw>
<kw name="Read Excel Sheet" library="material_master">
<var>${Material_type}</var>
<arg>${symvar('Excel_file')}</arg>
<arg>${symvar('Sheet_name')}</arg>
<arg>${initial_row}</arg>
<arg>2</arg>
<status status="NOT RUN" starttime="20240919 07:00:13.560" endtime="20240919 07:00:13.560"/>
</kw>
<kw name="Select From List By Key" library="SAP_Tcode_Library">
<arg>wnd[0]/usr/cmbRMMG1-MTART</arg>
<arg>${Material_type}</arg>
<doc>Selects the specified option from the selection list.</doc>
<status status="NOT RUN" starttime="20240919 07:00:13.560" endtime="20240919 07:00:13.575"/>
</kw>
<kw name="Click Element" library="SAP_Tcode_Library">
<arg>wnd[0]/tbar[1]/btn[5]</arg>
<doc>Performs a single click on a given element. Used only for buttons, tabs and menu items.</doc>
<status status="NOT RUN" starttime="20240919 07:00:13.575" endtime="20240919 07:00:13.575"/>
</kw>
<kw name="Get Row Count" library="SAP_Tcode_Library">
<var>${rowcount}</var>
<arg>wnd[1]/usr/tblSAPLMGMMTC_VIEW</arg>
<doc>Returns the number of rows found in the specified table.</doc>
<status status="NOT RUN" starttime="20240919 07:00:13.575" endtime="20240919 07:00:13.575"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>${rowcount}</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20240919 07:00:13.575" endtime="20240919 07:00:13.575"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${row_index}</var>
<arg>0</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20240919 07:00:13.575" endtime="20240919 07:00:13.575"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${visible_rows}</var>
<arg>17</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20240919 07:00:13.575" endtime="20240919 07:00:13.575"/>
</kw>
<for flavor="IN RANGE">
<var>${value}</var>
<value>0</value>
<value>${rowcount}</value>
<iter>
<var name="${value}"/>
<kw name="Set Variable" library="BuiltIn">
<var>${cell_id}</var>
<arg>wnd[1]/usr/tblSAPLMGMMTC_VIEW/txtMSICHTAUSW-DYTXT[0,${row_index}]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20240919 07:00:13.575" endtime="20240919 07:00:13.575"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<arg>Set Focus</arg>
<arg>${cell_id}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" starttime="20240919 07:00:13.575" endtime="20240919 07:00:13.575"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_row_visible}</var>
<arg>Get Table Cell Text</arg>
<arg>wnd[1]/usr/tblSAPLMGMMTC_VIEW</arg>
<arg>${row_index}</arg>
<arg>0</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="NOT RUN" starttime="20240919 07:00:13.575" endtime="20240919 07:00:13.575"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${is_row_visible}" == "False"</arg>
<arg>Exit For Loop</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240919 07:00:13.575" endtime="20240919 07:00:13.575"/>
</kw>
<kw name="Get Table Cell Text" library="SAP_Tcode_Library">
<var>${Data}</var>
<arg>wnd[1]/usr/tblSAPLMGMMTC_VIEW</arg>
<arg>${row_index}</arg>
<arg>0</arg>
<doc>Returns the cell value for the specified cell.</doc>
<status status="NOT RUN" starttime="20240919 07:00:13.575" endtime="20240919 07:00:13.575"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"${Data}" in "@{symvar('search_comp')}"</arg>
<arg>Select Table Row</arg>
<arg>wnd[1]/usr/tblSAPLMGMMTC_VIEW</arg>
<arg>${value}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240919 07:00:13.575" endtime="20240919 07:00:13.575"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${row_index}</var>
<arg>${row_index} + 1</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" starttime="20240919 07:00:13.575" endtime="20240919 07:00:13.575"/>
</kw>
<if>
<branch type="IF" condition="${row_index} &gt;= ${visible_rows}">
<kw name="Set Variable" library="BuiltIn">
<var>${row_index}</var>
<arg>1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20240919 07:00:13.575" endtime="20240919 07:00:13.575"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${scroll_position}</var>
<arg>${row_index}*16</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" starttime="20240919 07:00:13.575" endtime="20240919 07:00:13.575"/>
</kw>
<kw name="Scroll" library="SAP_Tcode_Library">
<arg>wnd[1]/usr/tblSAPLMGMMTC_VIEW</arg>
<arg>${scroll_position}</arg>
<doc>Scrolls the scrollbar of an element 'element_id' that is contained within a shell object.
'Position' is the number of rows to scroll.</doc>
<status status="NOT RUN" starttime="20240919 07:00:13.575" endtime="20240919 07:00:13.575"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20240919 07:00:13.575" endtime="20240919 07:00:13.575"/>
</kw>
<status status="NOT RUN" starttime="20240919 07:00:13.575" endtime="20240919 07:00:13.575"/>
</branch>
<status status="NOT RUN" starttime="20240919 07:00:13.575" endtime="20240919 07:00:13.575"/>
</if>
<status status="NOT RUN" starttime="20240919 07:00:13.575" endtime="20240919 07:00:13.575"/>
</iter>
<status status="NOT RUN" starttime="20240919 07:00:13.575" endtime="20240919 07:00:13.575"/>
</for>
<kw name="Send Vkey" library="SAP_Tcode_Library">
<arg>0</arg>
<doc>Sends a SAP virtual key combination to the window, not into an element.
If you want to send a value to a text field, use `input text` instead.</doc>
<status status="NOT RUN" starttime="20240919 07:00:13.575" endtime="20240919 07:00:13.575"/>
</kw>
<kw name="Read Excel Sheet" library="material_master">
<var>${plant}</var>
<arg>${symvar('Excel_file')}</arg>
<arg>${symvar('Sheet_name')}</arg>
<arg>${initial_row}</arg>
<arg>10</arg>
<status status="NOT RUN" starttime="20240919 07:00:13.575" endtime="20240919 07:00:13.575"/>
</kw>
<kw name="Input Text" library="SAP_Tcode_Library">
<arg>wnd[1]/usr/ctxtRMMG1-WERKS</arg>
<arg>${plant}</arg>
<doc>Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.</doc>
<status status="NOT RUN" starttime="20240919 07:00:13.575" endtime="20240919 07:00:13.575"/>
</kw>
<kw name="Read Excel Sheet" library="material_master">
<var>${storage_loc}</var>
<arg>${symvar('Excel_file')}</arg>
<arg>${symvar('Sheet_name')}</arg>
<arg>${initial_row}</arg>
<arg>11</arg>
<status status="NOT RUN" starttime="20240919 07:00:13.575" endtime="20240919 07:00:13.575"/>
</kw>
<kw name="Input Text" library="SAP_Tcode_Library">
<arg>wnd[1]/usr/ctxtRMMG1-LGORT</arg>
<arg>${storage_loc}</arg>
<doc>Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.</doc>
<status status="NOT RUN" starttime="20240919 07:00:13.575" endtime="20240919 07:00:13.575"/>
</kw>
<kw name="Send Vkey" library="SAP_Tcode_Library">
<arg>0</arg>
<doc>Sends a SAP virtual key combination to the window, not into an element.
If you want to send a value to a text field, use `input text` instead.</doc>
<status status="NOT RUN" starttime="20240919 07:00:13.575" endtime="20240919 07:00:13.575"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${window_exist}</var>
<arg>Element Should Be Present</arg>
<arg>wnd[2]</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="NOT RUN" starttime="20240919 07:00:13.575" endtime="20240919 07:00:13.575"/>
</kw>
<if>
<branch type="IF" condition="'${window_exist}' == 'True'">
<kw name="Get Value" library="SAP_Tcode_Library">
<var>${popup_value}</var>
<arg>wnd[2]/usr/txtMESSTXT1</arg>
<doc>Gets the value of the given element. The possible return values depend on the type of element (see Return values).</doc>
<status status="NOT RUN" starttime="20240919 07:00:13.575" endtime="20240919 07:00:13.575"/>
</kw>
<kw name="Write Excel" library="material_master">
<arg>${symvar('Excel_file')}</arg>
<arg>${symvar('Sheet_name')}</arg>
<arg>${initial_row}</arg>
<arg>21</arg>
<arg>${popup_value}</arg>
<status status="NOT RUN" starttime="20240919 07:00:13.575" endtime="20240919 07:00:13.575"/>
</kw>
<kw name="Close Window">
<arg>wnd[2]</arg>
<status status="NOT RUN" starttime="20240919 07:00:13.575" endtime="20240919 07:00:13.575"/>
</kw>
<kw name="Close Window">
<arg>wnd[1]</arg>
<status status="NOT RUN" starttime="20240919 07:00:13.575" endtime="20240919 07:00:13.575"/>
</kw>
<kw name="Continue For Loop" library="BuiltIn">
<doc>Skips the current FOR loop iteration and continues from the next.</doc>
<status status="NOT RUN" starttime="20240919 07:00:13.575" endtime="20240919 07:00:13.575"/>
</kw>
<status status="NOT RUN" starttime="20240919 07:00:13.575" endtime="20240919 07:00:13.575"/>
</branch>
<branch type="ELSE">
<kw name="Read Excel Sheet" library="material_master">
<var>${material_description}</var>
<arg>${symvar('Excel_file')}</arg>
<arg>${symvar('Sheet_name')}</arg>
<arg>${initial_row}</arg>
<arg>12</arg>
<status status="NOT RUN" starttime="20240919 07:00:13.575" endtime="20240919 07:00:13.575"/>
</kw>
<kw name="Input Text" library="SAP_Tcode_Library">
<arg>wnd[0]/usr/tabsTABSPR1/tabpSP01/ssubTABFRA1:SAPLMGMM:2004/subSUB1:SAPLMGD1:1002/txtMAKT-MAKTX</arg>
<arg>${material_description}</arg>
<doc>Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.</doc>
<status status="NOT RUN" starttime="20240919 07:00:13.575" endtime="20240919 07:00:13.575"/>
</kw>
<kw name="Read Excel Sheet" library="material_master">
<var>${Base_unit_of_Measure}</var>
<arg>${symvar('Excel_file')}</arg>
<arg>${symvar('Sheet_name')}</arg>
<arg>${initial_row}</arg>
<arg>13</arg>
<status status="NOT RUN" starttime="20240919 07:00:13.575" endtime="20240919 07:00:13.575"/>
</kw>
<kw name="Input Text" library="SAP_Tcode_Library">
<arg>wnd[0]/usr/tabsTABSPR1/tabpSP01/ssubTABFRA1:SAPLMGMM:2004/subSUB2:SAPLMGD1:2001/ctxtMARA-MEINS</arg>
<arg>${Base_unit_of_Measure}</arg>
<doc>Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.</doc>
<status status="NOT RUN" starttime="20240919 07:00:13.575" endtime="20240919 07:00:13.575"/>
</kw>
<kw name="Read Excel Sheet" library="material_master">
<var>${Material_group}</var>
<arg>${symvar('Excel_file')}</arg>
<arg>${symvar('Sheet_name')}</arg>
<arg>${initial_row}</arg>
<arg>14</arg>
<status status="NOT RUN" starttime="20240919 07:00:13.575" endtime="20240919 07:00:13.575"/>
</kw>
<kw name="Input Text" library="SAP_Tcode_Library">
<arg>wnd[0]/usr/tabsTABSPR1/tabpSP01/ssubTABFRA1:SAPLMGMM:2004/subSUB2:SAPLMGD1:2001/ctxtMARA-MATKL</arg>
<arg>${Material_group}</arg>
<doc>Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.</doc>
<status status="NOT RUN" starttime="20240919 07:00:13.575" endtime="20240919 07:00:13.575"/>
</kw>
<status status="NOT RUN" starttime="20240919 07:00:13.575" endtime="20240919 07:00:13.575"/>
</branch>
<status status="NOT RUN" starttime="20240919 07:00:13.575" endtime="20240919 07:00:13.575"/>
</if>
<for flavor="IN RANGE">
<var>${index}</var>
<value>0</value>
<value>10</value>
<iter>
<var name="${index}"/>
<kw name="Send Vkey" library="SAP_Tcode_Library">
<arg>0</arg>
<doc>Sends a SAP virtual key combination to the window, not into an element.
If you want to send a value to a text field, use `input text` instead.</doc>
<status status="NOT RUN" starttime="20240919 07:00:13.575" endtime="20240919 07:00:13.575"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20240919 07:00:13.575" endtime="20240919 07:00:13.575"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_present}</var>
<arg>Element Should Be Present</arg>
<arg>wnd[0]/usr/tabsTABSPR1/tabpSP09/ssubTABFRA1:SAPLMGMM:2000/subSUB2:SAPLMGD1:2301/ctxtMARC-EKGRP</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="NOT RUN" starttime="20240919 07:00:13.575" endtime="20240919 07:00:13.575"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${is_present}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240919 07:00:13.575" endtime="20240919 07:00:13.575"/>
</kw>
<status status="NOT RUN" starttime="20240919 07:00:13.575" endtime="20240919 07:00:13.575"/>
</iter>
<status status="NOT RUN" starttime="20240919 07:00:13.575" endtime="20240919 07:00:13.575"/>
</for>
<kw name="Read Excel Sheet" library="material_master">
<var>${purchasing_group}</var>
<arg>${symvar('Excel_file')}</arg>
<arg>${symvar('Sheet_name')}</arg>
<arg>${initial_row}</arg>
<arg>15</arg>
<status status="NOT RUN" starttime="20240919 07:00:13.575" endtime="20240919 07:00:13.575"/>
</kw>
<kw name="Input Text" library="SAP_Tcode_Library">
<arg>wnd[0]/usr/tabsTABSPR1/tabpSP09/ssubTABFRA1:SAPLMGMM:2000/subSUB2:SAPLMGD1:2301/ctxtMARC-EKGRP</arg>
<arg>${purchasing_group}</arg>
<doc>Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.</doc>
<status status="NOT RUN" starttime="20240919 07:00:13.575" endtime="20240919 07:00:13.575"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20240919 07:00:13.575" endtime="20240919 07:00:13.575"/>
</kw>
<for flavor="IN RANGE">
<var>${index}</var>
<value>0</value>
<value>10</value>
<iter>
<var name="${index}"/>
<kw name="Send Vkey" library="SAP_Tcode_Library">
<arg>0</arg>
<doc>Sends a SAP virtual key combination to the window, not into an element.
If you want to send a value to a text field, use `input text` instead.</doc>
<status status="NOT RUN" starttime="20240919 07:00:13.575" endtime="20240919 07:00:13.575"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20240919 07:00:13.575" endtime="20240919 07:00:13.575"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_present}</var>
<arg>Element Should Be Present</arg>
<arg>wnd[0]/usr/tabsTABSPR1/tabpSP24/ssubTABFRA1:SAPLMGMM:2000/subSUB2:SAPLMGD1:2800/subSUB2:SAPLMGD1:2802/ctxtMBEW-BKLAS</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="NOT RUN" starttime="20240919 07:00:13.575" endtime="20240919 07:00:13.575"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${is_present}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240919 07:00:13.575" endtime="20240919 07:00:13.575"/>
</kw>
<status status="NOT RUN" starttime="20240919 07:00:13.575" endtime="20240919 07:00:13.575"/>
</iter>
<status status="NOT RUN" starttime="20240919 07:00:13.575" endtime="20240919 07:00:13.575"/>
</for>
<kw name="Read Excel Sheet" library="material_master">
<var>${valuation_class}</var>
<arg>${symvar('Excel_file')}</arg>
<arg>${symvar('Sheet_name')}</arg>
<arg>${initial_row}</arg>
<arg>17</arg>
<status status="NOT RUN" starttime="20240919 07:00:13.575" endtime="20240919 07:00:13.575"/>
</kw>
<kw name="Input Text" library="SAP_Tcode_Library">
<arg>wnd[0]/usr/tabsTABSPR1/tabpSP24/ssubTABFRA1:SAPLMGMM:2000/subSUB2:SAPLMGD1:2800/subSUB2:SAPLMGD1:2802/ctxtMBEW-BKLAS</arg>
<arg>${valuation_class}</arg>
<doc>Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.</doc>
<status status="NOT RUN" starttime="20240919 07:00:13.575" endtime="20240919 07:00:13.575"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20240919 07:00:13.575" endtime="20240919 07:00:13.575"/>
</kw>
<kw name="Read Excel Sheet" library="material_master">
<var>${price_control}</var>
<arg>${symvar('Excel_file')}</arg>
<arg>${symvar('Sheet_name')}</arg>
<arg>${initial_row}</arg>
<arg>18</arg>
<status status="NOT RUN" starttime="20240919 07:00:13.575" endtime="20240919 07:00:13.575"/>
</kw>
<kw name="Input Text" library="SAP_Tcode_Library">
<arg>wnd[0]/usr/tabsTABSPR1/tabpSP24/ssubTABFRA1:SAPLMGMM:2000/subSUB2:SAPLMGD1:2800/subSUB2:SAPLMGD1:2802/ctxtMBEW-VPRSV</arg>
<arg>${price_control}</arg>
<doc>Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.</doc>
<status status="NOT RUN" starttime="20240919 07:00:13.575" endtime="20240919 07:00:13.575"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20240919 07:00:13.575" endtime="20240919 07:00:13.575"/>
</kw>
<kw name="Read Excel Sheet" library="material_master">
<var>${price_unit}</var>
<arg>${symvar('Excel_file')}</arg>
<arg>${symvar('Sheet_name')}</arg>
<arg>${initial_row}</arg>
<arg>19</arg>
<status status="NOT RUN" starttime="20240919 07:00:13.575" endtime="20240919 07:00:13.575"/>
</kw>
<kw name="Input Text" library="SAP_Tcode_Library">
<arg>wnd[0]/usr/tabsTABSPR1/tabpSP24/ssubTABFRA1:SAPLMGMM:2000/subSUB2:SAPLMGD1:2800/subSUB2:SAPLMGD1:2802/txtMBEW-PEINH</arg>
<arg>${price_unit}</arg>
<doc>Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.</doc>
<status status="NOT RUN" starttime="20240919 07:00:13.575" endtime="20240919 07:00:13.575"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20240919 07:00:13.575" endtime="20240919 07:00:13.591"/>
</kw>
<kw name="Read Excel Sheet" library="material_master">
<var>${moving_price}</var>
<arg>${symvar('Excel_file')}</arg>
<arg>${symvar('Sheet_name')}</arg>
<arg>${initial_row}</arg>
<arg>20</arg>
<status status="NOT RUN" starttime="20240919 07:00:13.591" endtime="20240919 07:00:13.591"/>
</kw>
<kw name="Input Text" library="SAP_Tcode_Library">
<arg>wnd[0]/usr/tabsTABSPR1/tabpSP24/ssubTABFRA1:SAPLMGMM:2000/subSUB2:SAPLMGD1:2800/subSUB2:SAPLMGD1:2802/txtMBEW-VERPR</arg>
<arg>${moving_price}</arg>
<doc>Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.</doc>
<status status="NOT RUN" starttime="20240919 07:00:13.591" endtime="20240919 07:00:13.591"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20240919 07:00:13.591" endtime="20240919 07:00:13.591"/>
</kw>
<for flavor="IN RANGE">
<var>${index}</var>
<value>0</value>
<value>10</value>
<iter>
<var name="${index}"/>
<kw name="Send Vkey" library="SAP_Tcode_Library">
<arg>0</arg>
<doc>Sends a SAP virtual key combination to the window, not into an element.
If you want to send a value to a text field, use `input text` instead.</doc>
<status status="NOT RUN" starttime="20240919 07:00:13.591" endtime="20240919 07:00:13.591"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1</arg>
<doc>Pauses the test executed for the given time.</doc>
<status status="NOT RUN" starttime="20240919 07:00:13.591" endtime="20240919 07:00:13.591"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${is_present}</var>
<arg>Element Should Be Present</arg>
<arg>wnd[1]/usr/btnSPOP-OPTION1</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="NOT RUN" starttime="20240919 07:00:13.591" endtime="20240919 07:00:13.591"/>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<arg>Click Element</arg>
<arg>wnd[1]/usr/btnSPOP-OPTION1</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" starttime="20240919 07:00:13.591" endtime="20240919 07:00:13.591"/>
</kw>
<kw name="Exit For Loop If" library="BuiltIn">
<arg>${is_present}</arg>
<doc>Stops executing the enclosing FOR loop if the ``condition`` is true.</doc>
<status status="NOT RUN" starttime="20240919 07:00:13.591" endtime="20240919 07:00:13.591"/>
</kw>
<status status="NOT RUN" starttime="20240919 07:00:13.591" endtime="20240919 07:00:13.591"/>
</iter>
<status status="NOT RUN" starttime="20240919 07:00:13.591" endtime="20240919 07:00:13.591"/>
</for>
<kw name="Get Value" library="SAP_Tcode_Library">
<var>${material_status}</var>
<arg>wnd[0]/sbar</arg>
<doc>Gets the value of the given element. The possible return values depend on the type of element (see Return values).</doc>
<status status="NOT RUN" starttime="20240919 07:00:13.591" endtime="20240919 07:00:13.591"/>
</kw>
<kw name="Extract Order Number" library="SAP_Tcode_Library">
<var>${material_number}</var>
<arg>${material_status}</arg>
<doc>Extracts the integer value from the given sentence.</doc>
<status status="NOT RUN" starttime="20240919 07:00:13.591" endtime="20240919 07:00:13.591"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${material_number}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20240919 07:00:13.591" endtime="20240919 07:00:13.591"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${material_number}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20240919 07:00:13.591" endtime="20240919 07:00:13.591"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>**gbStart**Copilot_Status**splitKeyValue**${material_number}**gbEnd**</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20240919 07:00:13.591" endtime="20240919 07:00:13.591"/>
</kw>
<kw name="Write Excel" library="material_master">
<arg>${symvar('Excel_file')}</arg>
<arg>${symvar('Sheet_name')}</arg>
<arg>${initial_row}</arg>
<arg>21</arg>
<arg>${material_number}</arg>
<status status="NOT RUN" starttime="20240919 07:00:13.591" endtime="20240919 07:00:13.591"/>
</kw>
<status status="FAIL" starttime="20240919 07:00:13.419" endtime="20240919 07:00:13.591"/>
</iter>
<status status="FAIL" starttime="20240919 07:00:13.419" endtime="20240919 07:00:13.591"/>
</for>
<status status="FAIL" starttime="20240919 07:00:10.215" endtime="20240919 07:00:13.591"/>
</kw>
<tag>Material1</tag>
<tag>Regression</tag>
<status status="FAIL" starttime="20240919 07:00:10.215" endtime="20240919 07:00:13.591">AttributeError: Property '&lt;unknown&gt;.key' can not be set.</status>
</test>
<kw name="System Logout" library="material_master" type="TEARDOWN">
<kw name="Run Transaction" library="SAP_Tcode_Library">
<arg>/nex</arg>
<doc>Runs a Sap transaction. An error is given when an unknown transaction is specified.</doc>
<status status="PASS" starttime="20240919 07:00:13.591" endtime="20240919 07:00:14.091"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240919 07:00:19.091" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20240919 07:00:14.091" endtime="20240919 07:00:19.091"/>
</kw>
<status status="PASS" starttime="20240919 07:00:13.591" endtime="20240919 07:00:19.091"/>
</kw>
<status status="FAIL" starttime="20240919 06:59:57.014" endtime="20240919 07:00:19.091"/>
</suite>
<doc>Testing functionality through Robot Framework</doc>
<meta name="environment">Dev</meta>
<meta name="test_browser_name">chrome</meta>
<meta name="test_browser_version">128.0.6613.138</meta>
<meta name="test_driver_version">127.0.6533.72 </meta>
<meta name="test_environment">Dev</meta>
<meta name="test_freeze_dependencies">annotated-types==0.7.0,arrow==1.3.0,astroid==3.2.2,asttokens==2.4.1,attrs==23.2.0,beautifulsoup4==4.12.3,binaryornot==0.4.4,bs4==0.0.2,certifi==2024.6.2,cffi==1.16.0,chardet==5.2.0,charset-normalizer==3.3.2,click==8.1.7,colorama==0.4.6,cookiecutter==2.6.0,cryptography==42.0.7,decorator==5.1.1,defusedxml==0.7.1,dill==0.3.8,docutils==0.21.2,et-xmlfile==1.1.0,exceptiongroup==1.2.1,executing==2.0.1,gitdb==4.0.11,GitPython==3.1.43,grpcio==1.64.1,h11==0.14.0,idna==3.7,ipython==8.25.0,isort==5.13.2,jaraco.classes==3.4.0,jaraco.context==5.3.0,jaraco.functools==4.0.1,jedi==0.19.1,Jinja2==3.1.4,jira==3.8.0,jsonpath-ng==1.6.1,jsonschema==4.22.0,jsonschema-specifications==2023.12.1,keyring==25.2.1,lazy-object-proxy==1.10.0,lxml==5.2.2,markdown-it-py==3.0.0,MarkupSafe==2.1.5,matplotlib-inline==0.1.7,mccabe==0.7.0,mdurl==0.1.2,more-itertools==10.3.0,MouseInfo==0.1.3,natsort==8.4.0,numpy==2.0.0,oauthlib==3.2.2,openpyxl==3.1.5,outcome==1.3.0.post0,packaging==24.0,pandas==2.2.2,parso==0.8.4,pathspec==0.11.2,pillow==10.3.0,pip==24.2,platformdirs==4.2.2,ply==3.11,prompt_toolkit==3.0.47,pure-eval==0.2.2,PyAutoGUI==0.9.54,pycparser==2.22,pydantic==2.7.4,pydantic_core==2.18.4,PyGetWindow==0.0.9,Pygments==2.18.0,pylint==3.2.2,PyMsgBox==1.0.9,PyPDF2==3.0.1,pyperclip==1.9.0,PyRect==0.2.0,PyScreeze==1.0.1,PySocks==1.7.1,python-dateutil==2.9.0.post0,python-dotenv==1.0.1,python-slugify==8.0.4,pytweening==1.2.0,pytz==2024.1,pywin32==306,pywin32-ctypes==0.2.2,PyYAML==6.0.1,redis==5.0.6,referencing==0.35.1,reportlab==4.2.0,requests==2.32.3,requests-oauthlib==2.0.0,requests-toolbelt==1.0.0,RestrictedPython==7.1,rich==13.7.1,rich-click==1.6.1,robotframework==6.0.2,robotframework-datadriver==1.9.0,robotframework-excellib==2.0.1,robotframework-jsonlibrary==0.5,robotframework-pabot==2.16.0,robotframework-pythonlibcore==4.2.0,robotframework-requests==0.9.2,robotframework-sapguilibrary==1.1,robotframework-seleniumlibrary==5.1.3,robotframework-stacktrace==0.4.1,robotframework-tidy==4.5.0,rpds-py==0.18.1,selenium==4.9.1,setuptools==70.0.0,shellingham==1.5.4,six==1.16.0,smmap==5.0.1,sniffio==1.3.1,sortedcontainers==2.4.0,soupsieve==2.5,stack-data==0.6.3,statsd==4.0.1,text-unidecode==1.3,tomli==2.0.1,tomlkit==0.12.5,traitlets==5.14.3,trio==0.25.1,trio-websocket==0.11.1,typer==0.12.3,types-python-dateutil==2.9.0.20240316,typing_extensions==4.12.1,tzdata==2024.1,urllib3==2.2.1,wcwidth==0.2.13,websocket-client==1.8.0,wheel==0.43.0,wrapt==1.16.0,wsproto==1.2.0</meta>
<status status="FAIL" starttime="20240919 06:59:53.349" endtime="20240919 07:00:19.148"/>
</suite>
<statistics>
<total>
<stat pass="0" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="1" skip="0">Material1</stat>
<stat pass="0" fail="1" skip="0">Regression</stat>
</tag>
<suite>
<stat pass="0" fail="1" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="0" fail="1" skip="0" id="s1-s1" name="Test material master">Tests.Test material master</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
