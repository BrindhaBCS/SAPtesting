<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.12.3 on win32)" generated="20240516 08:26:20.716" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="D:\RobotFramework\SAPtesting\Tests">
<kw name="Setup highest level suite" type="SETUP">
<kw name="Set Variable" library="BuiltIn">
<var>${d.test_server}</var>
<arg>${test_server}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240516 08:26:21.427" level="INFO">${d.test_server} = Dev</msg>
<status status="PASS" starttime="20240516 08:26:21.426" endtime="20240516 08:26:21.427"/>
</kw>
<kw name="Reset screenshot count variable" library="Support">
<kw name="Set Variable" library="BuiltIn">
<var>${screenshotCount}</var>
<arg>${PABOTQUEUEINDEX}_1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240516 08:26:21.428" level="INFO">${screenshotCount} = 0_1</msg>
<status status="PASS" starttime="20240516 08:26:21.427" endtime="20240516 08:26:21.428"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${screenshotCount}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240516 08:26:21.429" level="INFO">${screenshotCount} = 0_1</msg>
<status status="PASS" starttime="20240516 08:26:21.428" endtime="20240516 08:26:21.429"/>
</kw>
<kw name="Set up screenshot directory" library="Support">
<kw name="Create Directory" library="OperatingSystem">
<arg>${OUTPUTDIR}${/}${wvar('screenshot_dir')}</arg>
<doc>Creates the specified directory.</doc>
<msg timestamp="20240516 08:26:21.430" level="INFO">Web.Dev.screenshot_dir: Screenshot</msg>
<msg timestamp="20240516 08:26:21.432" level="INFO" html="true">Created directory '&lt;a href="file://D:\RobotFramework\SAPtesting\Output\pabot_results\0\Screenshot"&gt;D:\RobotFramework\SAPtesting\Output\pabot_results\0\Screenshot&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20240516 08:26:21.429" endtime="20240516 08:26:21.432"/>
</kw>
<status status="PASS" starttime="20240516 08:26:21.429" endtime="20240516 08:26:21.432"/>
</kw>
<status status="PASS" starttime="20240516 08:26:21.427" endtime="20240516 08:26:21.432"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${screenshot_taking}</arg>
<arg>${True}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240516 08:26:21.433" level="INFO">${screenshot_taking} = True</msg>
<status status="PASS" starttime="20240516 08:26:21.432" endtime="20240516 08:26:21.433"/>
</kw>
<kw name="Setup linux execution" library="Support">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${web_test_check}</var>
<arg>Variable Should Exist</arg>
<arg>${web_test}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Variable Should Exist" library="BuiltIn">
<arg>${web_test}</arg>
<doc>Fails unless the given variable exists within the current scope.</doc>
<status status="PASS" starttime="20240516 08:26:21.434" endtime="20240516 08:26:21.434"/>
</kw>
<msg timestamp="20240516 08:26:21.434" level="INFO">${web_test_check} = True</msg>
<status status="PASS" starttime="20240516 08:26:21.433" endtime="20240516 08:26:21.434"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${web_test_check}</arg>
<arg>Setup Docker Execution Options</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup Docker Execution Options" library="Support_Web">
<kw name="Setup Suite Metadata" library="Support_Web">
<arg>${browser}</arg>
<kw name="Get Browser Metadata" library="BrowserSupport">
<var>&amp;{browser_information}</var>
<arg>browser=${browser}</arg>
<doc>Fetches browser metadata information
:param browser: Name of the browser for which information is fetched
:param reload: Re-read the metadata based on the browser
:return: Browser metadata information, dict of format
            {"browser_version": browser version value,
             "driver_version": driver version value}</doc>
<msg timestamp="20240516 08:26:25.445" level="INFO">&amp;{browser_information} = { browser_version=124.0.6367.119 | driver_version=124.0.6367.207  }</msg>
<status status="PASS" starttime="20240516 08:26:21.435" endtime="20240516 08:26:25.445"/>
</kw>
<kw name="Set Suite Metadata" library="BuiltIn">
<arg>test_browser_name</arg>
<arg>${browser}</arg>
<doc>Sets metadata for the current test suite.</doc>
<msg timestamp="20240516 08:26:25.447" level="INFO">Set suite metadata 'test_browser_name' to value 'chrome'.</msg>
<status status="PASS" starttime="20240516 08:26:25.446" endtime="20240516 08:26:25.447"/>
</kw>
<kw name="Set Suite Metadata" library="BuiltIn">
<arg>test_browser_version</arg>
<arg>${browser_information.browser_version}</arg>
<doc>Sets metadata for the current test suite.</doc>
<msg timestamp="20240516 08:26:25.448" level="INFO">Set suite metadata 'test_browser_version' to value '124.0.6367.119'.</msg>
<status status="PASS" starttime="20240516 08:26:25.447" endtime="20240516 08:26:25.448"/>
</kw>
<kw name="Set Suite Metadata" library="BuiltIn">
<arg>test_driver_version</arg>
<arg>${browser_information.driver_version}</arg>
<doc>Sets metadata for the current test suite.</doc>
<msg timestamp="20240516 08:26:25.450" level="INFO">Set suite metadata 'test_driver_version' to value '124.0.6367.207 '.</msg>
<status status="PASS" starttime="20240516 08:26:25.449" endtime="20240516 08:26:25.450"/>
</kw>
<status status="PASS" starttime="20240516 08:26:21.435" endtime="20240516 08:26:25.450"/>
</kw>
<kw name="Setup Global Docker Execution Options" library="Support_Web">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${global_browser_options}</arg>
<arg>None</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240516 08:26:25.453" level="INFO">${global_browser_options} = None</msg>
<status status="PASS" starttime="20240516 08:26:25.451" endtime="20240516 08:26:25.453"/>
</kw>
<kw name="Get Environment Variable" library="OperatingSystem">
<var>${docker_check}</var>
<arg>EXECUTION_ENVIRONMENT</arg>
<arg>not_found</arg>
<doc>Returns the value of an environment variable with the given name.</doc>
<msg timestamp="20240516 08:26:25.454" level="INFO">${docker_check} = not_found</msg>
<status status="PASS" starttime="20240516 08:26:25.453" endtime="20240516 08:26:25.454"/>
</kw>
<kw name="Run Keyword And Return If" library="BuiltIn">
<arg>"${docker_check}"!="docker"</arg>
<arg>Log</arg>
<arg>Not executing on Docker</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Log" library="BuiltIn">
<arg>Not executing on Docker</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240516 08:26:25.455" level="INFO">Not executing on Docker</msg>
<status status="PASS" starttime="20240516 08:26:25.455" endtime="20240516 08:26:25.455"/>
</kw>
<msg timestamp="20240516 08:26:25.455" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240516 08:26:25.454" endtime="20240516 08:26:25.455"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{options}</var>
<arg>--headless</arg>
<arg>--no-sandbox</arg>
<arg>--disable-dev-shm-usage</arg>
<doc>Returns a list containing given items.</doc>
<status status="NOT RUN" starttime="20240516 08:26:25.456" endtime="20240516 08:26:25.456"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>@{docker_options}</arg>
<arg>@{options}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20240516 08:26:25.456" endtime="20240516 08:26:25.456"/>
</kw>
<status status="PASS" starttime="20240516 08:26:25.451" endtime="20240516 08:26:25.456"/>
</kw>
<kw name="Create Webdriver for chrome preferences" library="Support_Web">
<kw name="Update Docker Execution Options" library="Support_Web">
<var>${list_prefs}</var>
<arg>${list_prefs}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${docker_check}</var>
<arg>Variable Should Exist</arg>
<arg>${docker_options}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Variable Should Exist" library="BuiltIn">
<arg>${docker_options}</arg>
<doc>Fails unless the given variable exists within the current scope.</doc>
<msg timestamp="20240516 08:26:25.460" level="FAIL">Variable '${docker_options}' does not exist.</msg>
<status status="FAIL" starttime="20240516 08:26:25.458" endtime="20240516 08:26:25.460"/>
</kw>
<msg timestamp="20240516 08:26:25.460" level="INFO">${docker_check} = False</msg>
<status status="PASS" starttime="20240516 08:26:25.457" endtime="20240516 08:26:25.460"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${list_prefs_length}</var>
<arg>${list_prefs}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240516 08:26:25.460" level="INFO">Length is 1</msg>
<msg timestamp="20240516 08:26:25.460" level="INFO">${list_prefs_length} = 1</msg>
<status status="PASS" starttime="20240516 08:26:25.460" endtime="20240516 08:26:25.460"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${list_prefs}</var>
<arg>${docker_check} and ${list_prefs_length}&gt;0 and ${list_prefs}[0] != []</arg>
<arg>Combine Lists</arg>
<arg>${list_prefs}</arg>
<arg>${docker_options}</arg>
<arg>ELSE IF</arg>
<arg>${docker_check}</arg>
<arg>Set Variable</arg>
<arg>${docker_options}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${list_prefs}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${list_prefs}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20240516 08:26:25.461" endtime="20240516 08:26:25.461"/>
</kw>
<msg timestamp="20240516 08:26:25.461" level="INFO">${list_prefs} = [[]]</msg>
<status status="PASS" starttime="20240516 08:26:25.461" endtime="20240516 08:26:25.461"/>
</kw>
<msg timestamp="20240516 08:26:25.462" level="INFO">${list_prefs} = [[]]</msg>
<status status="PASS" starttime="20240516 08:26:25.457" endtime="20240516 08:26:25.462"/>
</kw>
<kw name="Create Chrome Options for download preferences" library="Support_Web">
<var>${chrome_options}</var>
<kw name="Evaluate" library="BuiltIn">
<var>${chrome_options}</var>
<arg>sys.modules['selenium.webdriver'].ChromeOptions()</arg>
<arg>sys</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240516 08:26:25.463" level="INFO">${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x0000022E98D09C40&gt;</msg>
<status status="PASS" starttime="20240516 08:26:25.462" endtime="20240516 08:26:25.463"/>
</kw>
<msg timestamp="20240516 08:26:25.463" level="INFO">${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x0000022E98D09C40&gt;</msg>
<status status="PASS" starttime="20240516 08:26:25.462" endtime="20240516 08:26:25.463"/>
</kw>
<kw name="Update Preferences List" library="Support_Web">
<arg>${chrome_options}</arg>
<arg>@{list_prefs}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${string_prefs}</var>
<arg>${list_prefs}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240516 08:26:25.464" level="INFO">${string_prefs} = [[]]</msg>
<status status="PASS" starttime="20240516 08:26:25.463" endtime="20240516 08:26:25.464"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${string_prefs} == [[]]</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20240516 08:26:25.464" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240516 08:26:25.464" endtime="20240516 08:26:25.464"/>
</kw>
<for flavor="IN">
<var>${preference}</var>
<value>@{list_prefs}</value>
<iter>
<var name="${preference}"/>
<kw name="Call Method" library="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>${preference}</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="NOT RUN" starttime="20240516 08:26:25.465" endtime="20240516 08:26:25.465"/>
</kw>
<status status="NOT RUN" starttime="20240516 08:26:25.465" endtime="20240516 08:26:25.465"/>
</iter>
<status status="NOT RUN" starttime="20240516 08:26:25.464" endtime="20240516 08:26:25.465"/>
</for>
<status status="PASS" starttime="20240516 08:26:25.463" endtime="20240516 08:26:25.465"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_experimental_option</arg>
<arg>prefs</arg>
<arg>${kw_prefs}</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240516 08:26:25.466" endtime="20240516 08:26:25.466"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${global_browser_options}</arg>
<arg>${chrome options}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240516 08:26:25.466" level="INFO">${global_browser_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x0000022E98D09C40&gt;</msg>
<status status="PASS" starttime="20240516 08:26:25.466" endtime="20240516 08:26:25.467"/>
</kw>
<status status="PASS" starttime="20240516 08:26:25.457" endtime="20240516 08:26:25.467"/>
</kw>
<status status="PASS" starttime="20240516 08:26:21.435" endtime="20240516 08:26:25.467"/>
</kw>
<status status="PASS" starttime="20240516 08:26:21.434" endtime="20240516 08:26:25.467"/>
</kw>
<status status="PASS" starttime="20240516 08:26:21.433" endtime="20240516 08:26:25.467"/>
</kw>
<kw name="Set Suite Metadata" library="BuiltIn">
<arg>environment</arg>
<arg>${test_server}</arg>
<doc>Sets metadata for the current test suite.</doc>
<msg timestamp="20240516 08:26:25.468" level="INFO">Set suite metadata 'environment' to value 'Dev'.</msg>
<status status="PASS" starttime="20240516 08:26:25.467" endtime="20240516 08:26:25.468"/>
</kw>
<status status="PASS" starttime="20240516 08:26:21.425" endtime="20240516 08:26:25.468"/>
</kw>
<suite id="s1-s1" name="Test Powerconnect" source="D:\RobotFramework\SAPtesting\Tests\Test_Powerconnect.robot">
<kw name="System Logon" library="powerconnect" type="SETUP">
<kw name="Start Process" library="Process">
<arg>${symvar('Nike_SAP')}</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20240516 08:26:25.551" level="INFO">Sym.Dev.Nike_SAP: C:\Program Files\SAP\FrontEnd\SAPGUI\saplogon.exe</msg>
<msg timestamp="20240516 08:26:25.551" level="INFO">Starting process:
"C:\Program Files\SAP\FrontEnd\SAPGUI\saplogon.exe"</msg>
<status status="PASS" starttime="20240516 08:26:25.550" endtime="20240516 08:26:25.560"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240516 08:26:30.562" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20240516 08:26:25.560" endtime="20240516 08:26:30.562"/>
</kw>
<kw name="Connect To Session" library="CustomSapGuiLibrary">
<doc>Connects to an open session SAP.</doc>
<status status="PASS" starttime="20240516 08:26:30.562" endtime="20240516 08:26:30.575"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240516 08:26:35.576" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20240516 08:26:30.575" endtime="20240516 08:26:35.576"/>
</kw>
<kw name="Open Connection" library="CustomSapGuiLibrary">
<arg>${symvar('Nike_connection')}</arg>
<doc>Opens a connection to the given connection name. Be sure to provide the full connection name, including the bracket part.</doc>
<msg timestamp="20240516 08:26:35.578" level="INFO">Sym.Dev.Nike_connection: CFG</msg>
<status status="PASS" starttime="20240516 08:26:35.576" endtime="20240516 08:26:36.255"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240516 08:26:41.257" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20240516 08:26:36.256" endtime="20240516 08:26:41.257"/>
</kw>
<kw name="Input Text" library="CustomSapGuiLibrary">
<arg>wnd[0]/usr/txtRSYST-MANDT</arg>
<arg>${symvar('CFG_CLIENT')}</arg>
<doc>Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.</doc>
<msg timestamp="20240516 08:26:41.259" level="INFO">Sym.Dev.CFG_CLIENT: 000</msg>
<msg timestamp="20240516 08:26:41.267" level="INFO">Typing text '000' into text field 'wnd[0]/usr/txtRSYST-MANDT'.</msg>
<status status="PASS" starttime="20240516 08:26:41.257" endtime="20240516 08:26:41.267"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240516 08:26:42.267" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20240516 08:26:41.267" endtime="20240516 08:26:42.267"/>
</kw>
<kw name="Input Text" library="CustomSapGuiLibrary">
<arg>wnd[0]/usr/txtRSYST-BNAME</arg>
<arg>${symvar('CFG_USER')}</arg>
<doc>Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.</doc>
<msg timestamp="20240516 08:26:42.269" level="INFO">Sym.Dev.CFG_USER: basisadmin</msg>
<msg timestamp="20240516 08:26:42.286" level="INFO">Typing text 'basisadmin' into text field 'wnd[0]/usr/txtRSYST-BNAME'.</msg>
<status status="PASS" starttime="20240516 08:26:42.267" endtime="20240516 08:26:42.286"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240516 08:26:43.287" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20240516 08:26:42.286" endtime="20240516 08:26:43.287"/>
</kw>
<kw name="Input Password" library="CustomSapGuiLibrary">
<arg>wnd[0]/usr/pwdRSYST-BCODE</arg>
<arg>${symvar('CFG_PASS')}</arg>
<doc>Inserts the given password into the text field identified by locator.
The password is not recorded in the log.</doc>
<msg timestamp="20240516 08:26:43.289" level="INFO">Sym.Dev.CFG_PASS: HP1nvent@@</msg>
<msg timestamp="20240516 08:26:43.296" level="INFO">Typing password into text field 'wnd[0]/usr/pwdRSYST-BCODE'.</msg>
<status status="PASS" starttime="20240516 08:26:43.287" endtime="20240516 08:26:43.296"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240516 08:26:45.297" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20240516 08:26:43.296" endtime="20240516 08:26:45.297"/>
</kw>
<kw name="Send Vkey" library="CustomSapGuiLibrary">
<arg>0</arg>
<doc>Sends a SAP virtual key combination to the window, not into an element.
If you want to send a value to a text field, use `input text` instead.</doc>
<status status="PASS" starttime="20240516 08:26:45.297" endtime="20240516 08:26:45.518"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240516 08:26:50.518" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20240516 08:26:45.518" endtime="20240516 08:26:50.518"/>
</kw>
<kw name="Take Screenshot" library="CustomSapGuiLibrary">
<arg>01_loginpage.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240516 08:26:50.611" level="INFO" html="true">&lt;a href="01_loginpage.jpg"&gt;&lt;img src="01_loginpage.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240516 08:26:50.518" endtime="20240516 08:26:50.611"/>
</kw>
<kw name="Multiple Logon Handling" library="CustomSapGuiLibrary">
<arg>wnd[1]</arg>
<arg>wnd[1]/usr/radMULTI_LOGON_OPT2</arg>
<arg>wnd[1]/tbar[0]/btn[0]</arg>
<msg timestamp="20240516 08:26:51.023" level="INFO">Multiple logon exists</msg>
<status status="PASS" starttime="20240516 08:26:50.611" endtime="20240516 08:26:51.023"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240516 08:26:52.023" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20240516 08:26:51.023" endtime="20240516 08:26:52.023"/>
</kw>
<status status="PASS" starttime="20240516 08:26:25.550" endtime="20240516 08:26:52.023"/>
</kw>
<test id="s1-s1-t1" name="Check_Saint Transation Code" line="9">
<kw name="Saint Transation Code" library="powerconnect">
<kw name="Run Transaction" library="CustomSapGuiLibrary">
<arg>Saint</arg>
<doc>Runs a Sap transaction. An error is given when an unknown transaction is specified.</doc>
<status status="PASS" starttime="20240516 08:26:52.025" endtime="20240516 08:26:53.076"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240516 08:26:55.077" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20240516 08:26:53.077" endtime="20240516 08:26:55.077"/>
</kw>
<kw name="Take Screenshot" library="CustomSapGuiLibrary">
<arg>02_saintfrontpage.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240516 08:26:55.146" level="INFO" html="true">&lt;a href="02_saintfrontpage.jpg"&gt;&lt;img src="02_saintfrontpage.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240516 08:26:55.077" endtime="20240516 08:26:55.146"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240516 08:26:56.148" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20240516 08:26:55.146" endtime="20240516 08:26:56.148"/>
</kw>
<kw name="Get Maintenance Certificate Text" library="CustomSapGuiLibrary">
<arg>${certificate_id}</arg>
<msg timestamp="20240516 08:26:56.152" level="INFO">License available to proceed further</msg>
<status status="PASS" starttime="20240516 08:26:56.148" endtime="20240516 08:26:56.152"/>
</kw>
<kw name="Take Screenshot" library="CustomSapGuiLibrary">
<arg>03_certificate.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240516 08:26:56.223" level="INFO" html="true">&lt;a href="03_certificate.jpg"&gt;&lt;img src="03_certificate.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240516 08:26:56.153" endtime="20240516 08:26:56.223"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240516 08:27:01.225" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20240516 08:26:56.223" endtime="20240516 08:27:01.225"/>
</kw>
<kw name="Click Element" library="CustomSapGuiLibrary">
<arg>wnd[0]/mbar/menu[0]/menu[0]/menu[1]</arg>
<doc>Performs a single click on a given element. Used only for buttons, tabs and menu items.</doc>
<status status="PASS" starttime="20240516 08:27:01.225" endtime="20240516 08:27:01.573"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240516 08:27:04.574" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20240516 08:27:01.574" endtime="20240516 08:27:04.574"/>
</kw>
<kw name="Click Element" library="CustomSapGuiLibrary">
<arg>wnd[1]/usr/btnBUTTON_1</arg>
<doc>Performs a single click on a given element. Used only for buttons, tabs and menu items.</doc>
<status status="PASS" starttime="20240516 08:27:04.574" endtime="20240516 08:27:06.649"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240516 08:27:09.650" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20240516 08:27:06.649" endtime="20240516 08:27:09.650"/>
</kw>
<kw name="Click Element" library="CustomSapGuiLibrary">
<arg>wnd[0]/tbar[0]/btn[3]</arg>
<doc>Performs a single click on a given element. Used only for buttons, tabs and menu items.</doc>
<status status="PASS" starttime="20240516 08:27:09.650" endtime="20240516 08:27:10.192"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>10</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240516 08:27:20.194" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20240516 08:27:10.193" endtime="20240516 08:27:20.194"/>
</kw>
<kw name="Take Screenshot" library="CustomSapGuiLibrary">
<arg>04_Saint1.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240516 08:27:20.247" level="INFO" html="true">&lt;a href="04_Saint1.jpg"&gt;&lt;img src="04_Saint1.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240516 08:27:20.194" endtime="20240516 08:27:20.247"/>
</kw>
<kw name="Click Element" library="CustomSapGuiLibrary">
<arg>wnd[0]/usr/btnBUTTON_NEXT</arg>
<doc>Performs a single click on a given element. Used only for buttons, tabs and menu items.</doc>
<status status="PASS" starttime="20240516 08:27:20.248" endtime="20240516 08:27:20.520"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240516 08:27:22.520" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20240516 08:27:20.520" endtime="20240516 08:27:22.520"/>
</kw>
<kw name="Take Screenshot" library="CustomSapGuiLibrary">
<arg>05_saint2.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240516 08:27:22.568" level="INFO" html="true">&lt;a href="05_saint2.jpg"&gt;&lt;img src="05_saint2.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240516 08:27:22.520" endtime="20240516 08:27:22.568"/>
</kw>
<status status="PASS" starttime="20240516 08:26:52.024" endtime="20240516 08:27:22.569"/>
</kw>
<kw name="Get Cell Text From SAP Table" library="powerconnect">
<kw name="Search And Select Addon Rows" library="CustomSapGuiLibrary">
<var>${foundRow}</var>
<arg>${symvar('addOn')}</arg>
<msg timestamp="20240516 08:27:22.570" level="INFO">Sym.Dev.addOn: BNWVS</msg>
<msg timestamp="20240516 08:27:22.576" level="INFO">${foundRow} = 2</msg>
<status status="PASS" starttime="20240516 08:27:22.569" endtime="20240516 08:27:22.576"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Found text in row: ${foundRow}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240516 08:27:22.577" level="INFO">Found text in row: 2</msg>
<status status="PASS" starttime="20240516 08:27:22.577" endtime="20240516 08:27:22.577"/>
</kw>
<kw name="Select Table Row" library="CustomSapGuiLibrary">
<arg>wnd[0]/usr/subLIST_AREA:SAPLSAINT_UI:0104/tblSAPLSAINT_UIADDON_TO_INSTALL</arg>
<arg>${foundRow}</arg>
<doc>Selects an entire row of a table. This can either be a TableControl or a GridView 'table_id'
which is contained within a shell object. The row is an index to select the row, starting from 0.</doc>
<status status="PASS" starttime="20240516 08:27:22.577" endtime="20240516 08:27:22.595"/>
</kw>
<kw name="Take Screenshot" library="CustomSapGuiLibrary">
<arg>06_saint4.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240516 08:27:22.661" level="INFO" html="true">&lt;a href="06_saint4.jpg"&gt;&lt;img src="06_saint4.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240516 08:27:22.595" endtime="20240516 08:27:22.662"/>
</kw>
<kw name="Click Element" library="CustomSapGuiLibrary">
<arg>wnd[0]/usr/btnBUTTON_NEXT</arg>
<doc>Performs a single click on a given element. Used only for buttons, tabs and menu items.</doc>
<status status="PASS" starttime="20240516 08:27:22.662" endtime="20240516 08:27:24.078"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>4</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240516 08:27:28.079" level="INFO">Slept 4 seconds</msg>
<status status="PASS" starttime="20240516 08:27:24.078" endtime="20240516 08:27:28.079"/>
</kw>
<status status="PASS" starttime="20240516 08:27:22.569" endtime="20240516 08:27:28.079"/>
</kw>
<tag>powerconnect</tag>
<tag>Regression</tag>
<status status="PASS" starttime="20240516 08:26:52.023" endtime="20240516 08:27:28.079"/>
</test>
<test id="s1-s1-t2" name="Selecting the path for the Addon" line="13">
<kw name="Patch selection for the Addon" library="powerconnect">
<kw name="Saint Select" library="CustomSapGuiLibrary">
<arg>wnd[0]/usr/subLIST_AREA:SAPLSAINT_UI:0300/tabsQUEUE_COMP/tabpQUEUE_COMP_FC2/ssubQUEUE_COMP_SCA:SAPLSAINT_UI:0303/cmbGV_01_PATCH_REQ</arg>
<arg>${symvar('Patch')}</arg>
<msg timestamp="20240516 08:27:28.082" level="INFO">Sym.Dev.Patch: SAPK-70001INBNWVS</msg>
<status status="PASS" starttime="20240516 08:27:28.081" endtime="20240516 08:27:28.197"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>10</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240516 08:27:38.199" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20240516 08:27:28.198" endtime="20240516 08:27:38.199"/>
</kw>
<kw name="Take Screenshot" library="CustomSapGuiLibrary">
<arg>07_saint5.1.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240516 08:27:38.266" level="INFO" html="true">&lt;a href="07_saint5.1.jpg"&gt;&lt;img src="07_saint5.1.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240516 08:27:38.199" endtime="20240516 08:27:38.266"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>10</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240516 08:27:48.266" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20240516 08:27:38.266" endtime="20240516 08:27:48.266"/>
</kw>
<kw name="Click Element" library="CustomSapGuiLibrary">
<arg>wnd[0]/usr/btnBUTTON_NEXT</arg>
<doc>Performs a single click on a given element. Used only for buttons, tabs and menu items.</doc>
<status status="PASS" starttime="20240516 08:27:48.266" endtime="20240516 08:27:48.655"/>
</kw>
<kw name="Take Screenshot" library="CustomSapGuiLibrary">
<arg>08_saint5.2.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240516 08:27:48.725" level="INFO" html="true">&lt;a href="08_saint5.2.jpg"&gt;&lt;img src="08_saint5.2.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240516 08:27:48.656" endtime="20240516 08:27:48.725"/>
</kw>
<kw name="Click Element" library="CustomSapGuiLibrary">
<arg>wnd[0]/usr/btnBUTTON_NEXT</arg>
<doc>Performs a single click on a given element. Used only for buttons, tabs and menu items.</doc>
<status status="PASS" starttime="20240516 08:27:48.725" endtime="20240516 08:27:49.515"/>
</kw>
<kw name="Take Screenshot" library="CustomSapGuiLibrary">
<arg>09_saint6.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240516 08:27:49.592" level="INFO" html="true">&lt;a href="09_saint6.jpg"&gt;&lt;img src="09_saint6.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240516 08:27:49.516" endtime="20240516 08:27:49.592"/>
</kw>
<kw name="Click Element" library="CustomSapGuiLibrary">
<arg>wnd[1]/usr/btnBUTTON_2</arg>
<doc>Performs a single click on a given element. Used only for buttons, tabs and menu items.</doc>
<status status="PASS" starttime="20240516 08:27:49.592" endtime="20240516 08:27:50.356"/>
</kw>
<kw name="Take Screenshot" library="CustomSapGuiLibrary">
<arg>10_saint7.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240516 08:27:50.429" level="INFO" html="true">&lt;a href="10_saint7.jpg"&gt;&lt;img src="10_saint7.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240516 08:27:50.356" endtime="20240516 08:27:50.429"/>
</kw>
<status status="PASS" starttime="20240516 08:27:28.081" endtime="20240516 08:27:50.429"/>
</kw>
<kw name="Important SAP note handling" library="powerconnect">
<kw name="Is Imp Notes Existing" library="CustomSapGuiLibrary">
<var>${content}</var>
<arg>wnd[1]</arg>
<arg>wnd[1]/tbar[0]/btn[0]</arg>
<msg timestamp="20240516 08:27:50.432" level="INFO">Modal window does not exist.</msg>
<msg timestamp="20240516 08:27:50.432" level="INFO">${content} = None</msg>
<status status="PASS" starttime="20240516 08:27:50.430" endtime="20240516 08:27:50.432"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>The window name is: ${content}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240516 08:27:50.433" level="INFO">The window name is: None</msg>
<status status="PASS" starttime="20240516 08:27:50.432" endtime="20240516 08:27:50.433"/>
</kw>
<status status="PASS" starttime="20240516 08:27:50.429" endtime="20240516 08:27:50.433"/>
</kw>
<kw name="FOR ST/BNWVS" library="powerconnect">
<kw name="Click Element" library="CustomSapGuiLibrary">
<arg>wnd[1]/tbar[0]/btn[27]</arg>
<doc>Performs a single click on a given element. Used only for buttons, tabs and menu items.</doc>
<status status="PASS" starttime="20240516 08:27:50.433" endtime="20240516 08:27:50.545"/>
</kw>
<kw name="Take Screenshot" library="CustomSapGuiLibrary">
<arg>11_saint8.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240516 08:27:50.617" level="INFO" html="true">&lt;a href="11_saint8.jpg"&gt;&lt;img src="11_saint8.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240516 08:27:50.545" endtime="20240516 08:27:50.617"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240516 08:27:51.618" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20240516 08:27:50.618" endtime="20240516 08:27:51.618"/>
</kw>
<kw name="Select Radio Button" library="CustomSapGuiLibrary">
<arg>wnd[1]/usr/tabsSTART_OPTIONS/tabpSTART_FC1/ssubSTART_OPTIONS_SCA:SAPLOCS_UI:0701/radLAY0700-RB1_DIA</arg>
<doc>Sets radio button to the specified value.</doc>
<status status="PASS" starttime="20240516 08:27:51.618" endtime="20240516 08:27:51.623"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>1</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240516 08:27:52.624" level="INFO">Slept 1 second</msg>
<status status="PASS" starttime="20240516 08:27:51.623" endtime="20240516 08:27:52.624"/>
</kw>
<kw name="Take Screenshot" library="CustomSapGuiLibrary">
<arg>12_saint9.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240516 08:27:52.685" level="INFO" html="true">&lt;a href="12_saint9.jpg"&gt;&lt;img src="12_saint9.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240516 08:27:52.624" endtime="20240516 08:27:52.685"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>4</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240516 08:27:56.685" level="INFO">Slept 4 seconds</msg>
<status status="PASS" starttime="20240516 08:27:52.685" endtime="20240516 08:27:56.685"/>
</kw>
<kw name="Click Element" library="CustomSapGuiLibrary">
<arg>wnd[0]/tbar[0]/btn[0]</arg>
<doc>Performs a single click on a given element. Used only for buttons, tabs and menu items.</doc>
<status status="PASS" starttime="20240516 08:27:56.685" endtime="20240516 08:27:56.797"/>
</kw>
<kw name="Take Screenshot" library="CustomSapGuiLibrary">
<arg>13_saint10.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240516 08:27:56.862" level="INFO" html="true">&lt;a href="13_saint10.jpg"&gt;&lt;img src="13_saint10.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240516 08:27:56.797" endtime="20240516 08:27:56.863"/>
</kw>
<kw name="Click Element" library="CustomSapGuiLibrary">
<arg>wnd[1]/tbar[0]/btn[25]</arg>
<doc>Performs a single click on a given element. Used only for buttons, tabs and menu items.</doc>
<status status="PASS" starttime="20240516 08:27:56.863" endtime="20240516 08:27:59.040"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240516 08:28:04.042" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20240516 08:27:59.040" endtime="20240516 08:28:04.042"/>
</kw>
<kw name="Take Screenshot" library="CustomSapGuiLibrary">
<arg>14_saint11.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240516 08:28:04.107" level="INFO" html="true">&lt;a href="14_saint11.jpg"&gt;&lt;img src="14_saint11.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240516 08:28:04.042" endtime="20240516 08:28:04.107"/>
</kw>
<kw name="Click Element" library="CustomSapGuiLibrary">
<arg>wnd[0]/tbar[1]/btn[20]</arg>
<doc>Performs a single click on a given element. Used only for buttons, tabs and menu items.</doc>
<status status="PASS" starttime="20240516 08:28:04.107" endtime="20240516 08:28:04.774"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240516 08:28:09.775" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20240516 08:28:04.774" endtime="20240516 08:28:09.775"/>
</kw>
<kw name="Take Screenshot" library="CustomSapGuiLibrary">
<arg>15_saint11.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240516 08:28:09.837" level="INFO" html="true">&lt;a href="15_saint11.jpg"&gt;&lt;img src="15_saint11.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240516 08:28:09.775" endtime="20240516 08:28:09.837"/>
</kw>
<status status="PASS" starttime="20240516 08:27:50.433" endtime="20240516 08:28:09.837"/>
</kw>
<tag>powerconnect</tag>
<tag>Regression</tag>
<status status="PASS" starttime="20240516 08:27:28.080" endtime="20240516 08:28:09.838"/>
</test>
<test id="s1-s1-t3" name="Process Until Finish Button Visible" line="18">
<kw name="Process Until Finish Button Visible" library="powerconnect">
<kw name="Get Finish Cell Text" library="CustomSapGuiLibrary">
<var>${cell_text_2}</var>
<arg>${finish_str}</arg>
<arg>${button_id}</arg>
<arg>${status_line}</arg>
<arg>${refresh_id}</arg>
<msg timestamp="20240516 08:35:10.607" level="INFO">Installation Successful</msg>
<msg timestamp="20240516 08:35:10.607" level="INFO">${cell_text_2} = The Add-on was successfully imported with the displayed queue</msg>
<status status="PASS" starttime="20240516 08:28:09.841" endtime="20240516 08:35:10.607"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${cell_text_2}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240516 08:35:10.608" level="INFO">The Add-on was successfully imported with the displayed queue</msg>
<status status="PASS" starttime="20240516 08:35:10.607" endtime="20240516 08:35:10.608"/>
</kw>
<kw name="Take Screenshot" library="CustomSapGuiLibrary">
<arg>16_saint12.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240516 08:35:10.666" level="INFO" html="true">&lt;a href="16_saint12.jpg"&gt;&lt;img src="16_saint12.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240516 08:35:10.608" endtime="20240516 08:35:10.666"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240516 08:35:12.667" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20240516 08:35:10.667" endtime="20240516 08:35:12.667"/>
</kw>
<kw name="Click Element" library="CustomSapGuiLibrary">
<arg>wnd[1]/tbar[0]/btn[27]</arg>
<doc>Performs a single click on a given element. Used only for buttons, tabs and menu items.</doc>
<status status="PASS" starttime="20240516 08:35:12.667" endtime="20240516 08:35:12.985"/>
</kw>
<kw name="Take Screenshot" library="CustomSapGuiLibrary">
<arg>17_saint13.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240516 08:35:13.051" level="INFO" html="true">&lt;a href="17_saint13.jpg"&gt;&lt;img src="17_saint13.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240516 08:35:12.986" endtime="20240516 08:35:13.051"/>
</kw>
<status status="PASS" starttime="20240516 08:28:09.840" endtime="20240516 08:35:13.052"/>
</kw>
<tag>powerconnect</tag>
<tag>Regression</tag>
<status status="PASS" starttime="20240516 08:28:09.840" endtime="20240516 08:35:13.052"/>
</test>
<kw name="System Logout" library="powerconnect" type="TEARDOWN">
<kw name="Run Transaction" library="CustomSapGuiLibrary">
<arg>/nex</arg>
<doc>Runs a Sap transaction. An error is given when an unknown transaction is specified.</doc>
<status status="PASS" starttime="20240516 08:35:13.053" endtime="20240516 08:35:13.100"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>5</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240516 08:35:18.102" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20240516 08:35:13.100" endtime="20240516 08:35:18.102"/>
</kw>
<kw name="Take Screenshot" library="CustomSapGuiLibrary">
<arg>18_logoutpage.jpg</arg>
<doc>Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.</doc>
<msg timestamp="20240516 08:35:18.156" level="INFO" html="true">&lt;a href="18_logoutpage.jpg"&gt;&lt;img src="18_logoutpage.jpg" width="800px"&gt;&lt;/a&gt;</msg>
<status status="PASS" starttime="20240516 08:35:18.102" endtime="20240516 08:35:18.156"/>
</kw>
<kw name="Create Pdf" library="PDF">
<arg>${screenshot_directory}</arg>
<arg>${output_pdf}</arg>
<status status="PASS" starttime="20240516 08:35:18.157" endtime="20240516 08:35:28.669"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>2</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240516 08:35:30.670" level="INFO">Slept 2 seconds</msg>
<status status="PASS" starttime="20240516 08:35:28.669" endtime="20240516 08:35:30.670"/>
</kw>
<status status="PASS" starttime="20240516 08:35:13.053" endtime="20240516 08:35:30.670"/>
</kw>
<status status="PASS" starttime="20240516 08:26:25.468" endtime="20240516 08:35:30.670"/>
</suite>
<doc>Testing functionality through Robot Framework</doc>
<meta name="environment">Dev</meta>
<meta name="test_browser_name">chrome</meta>
<meta name="test_browser_version">124.0.6367.119</meta>
<meta name="test_driver_version">124.0.6367.207 </meta>
<meta name="test_environment">Dev</meta>
<meta name="test_freeze_dependencies">astroid==3.1.0,attrs==23.2.0,beautifulsoup4==4.12.3,bs4==0.0.2,certifi==2024.2.2,cffi==1.16.0,chardet==5.2.0,charset-normalizer==3.3.2,click==8.1.7,colorama==0.4.6,cryptography==42.0.5,defusedxml==0.7.1,dill==0.3.8,docutils==0.21.2,exceptiongroup==1.2.1,gitdb==4.0.11,GitPython==3.1.43,h11==0.14.0,idna==3.7,isort==5.13.2,Jinja2==3.1.3,jira==3.8.0,jsonpath-ng==1.6.1,jsonschema==4.21.1,jsonschema-specifications==2023.12.1,lazy-object-proxy==1.10.0,lxml==5.2.1,markdown-it-py==3.0.0,MarkupSafe==2.1.5,mccabe==0.7.0,mdurl==0.1.2,natsort==8.4.0,oauthlib==3.2.2,outcome==1.3.0.post0,packaging==24.0,pathspec==0.11.2,pillow==10.3.0,pip==24.0,platformdirs==4.2.1,ply==3.11,pycparser==2.22,Pygments==2.17.2,pylint==3.1.0,PySocks==1.7.1,pywin32==306,PyYAML==6.0.1,referencing==0.35.0,reportlab==4.2.0,requests==2.31.0,requests-oauthlib==2.0.0,requests-toolbelt==1.0.0,rich==13.7.1,rich-click==1.6.1,robotframework==6.0.2,robotframework-datadriver==1.9.0,robotframework-jsonlibrary==0.5,robotframework-pabot==2.16.0,robotframework-pythonlibcore==4.2.0,robotframework-requests==0.9.2,robotframework-sapguilibrary==1.1,robotframework-seleniumlibrary==5.1.3,robotframework-stacktrace==0.4.1,robotframework-tidy==4.5.0,rpds-py==0.18.0,selenium==4.9.1,setuptools==69.5.1,smmap==5.0.1,sniffio==1.3.1,sortedcontainers==2.4.0,soupsieve==2.5,tomli==2.0.1,tomlkit==0.12.4,trio==0.25.0,trio-websocket==0.11.1,typing_extensions==4.11.0,urllib3==2.2.1,wheel==0.43.0,wrapt==1.16.0,wsproto==1.2.0</meta>
<status status="PASS" starttime="20240516 08:26:21.056" endtime="20240516 08:35:31.096"/>
</suite>
<statistics>
<total>
<stat pass="3" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="3" fail="0" skip="0">powerconnect</stat>
<stat pass="3" fail="0" skip="0">Regression</stat>
</tag>
<suite>
<stat pass="3" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1" name="Test Powerconnect">Tests.Test Powerconnect</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
