<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.12.4 on win32)" generated="20240910 18:09:36.608" rpa="false" schemaversion="3">
<suite id="s1" name="Tests" source="C:\RobotFramework\sap_testing\Tests">
<kw name="Setup highest level suite" type="SETUP">
<kw name="Set Variable" library="BuiltIn">
<var>${d.test_server}</var>
<arg>${test_server}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240910 18:09:37.468" level="INFO">${d.test_server} = Dev</msg>
<status status="PASS" starttime="20240910 18:09:37.468" endtime="20240910 18:09:37.468"/>
</kw>
<kw name="Reset screenshot count variable" library="Support">
<kw name="Set Variable" library="BuiltIn">
<var>${screenshotCount}</var>
<arg>${PABOTQUEUEINDEX}_1</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240910 18:09:37.468" level="INFO">${screenshotCount} = 0_1</msg>
<status status="PASS" starttime="20240910 18:09:37.468" endtime="20240910 18:09:37.468"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${screenshotCount}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240910 18:09:37.468" level="INFO">${screenshotCount} = 0_1</msg>
<status status="PASS" starttime="20240910 18:09:37.468" endtime="20240910 18:09:37.468"/>
</kw>
<kw name="Set up screenshot directory" library="Support">
<kw name="Create Directory" library="OperatingSystem">
<arg>${OUTPUTDIR}${/}${wvar('screenshot_dir')}</arg>
<doc>Creates the specified directory.</doc>
<msg timestamp="20240910 18:09:37.468" level="INFO">Web.Dev.screenshot_dir: Screenshot</msg>
<msg timestamp="20240910 18:09:37.491" level="INFO" html="true">Created directory '&lt;a href="file://C:\RobotFramework\sap_testing\Output\87999a26-95f8-4f01-92ef-550da14b7347\pabot_results\0\Screenshot"&gt;C:\RobotFramework\sap_testing\Output\87999a26-95f8-4f01-92ef-550da14b7347\pabot_results\0\Screenshot&lt;/a&gt;'.</msg>
<status status="PASS" starttime="20240910 18:09:37.468" endtime="20240910 18:09:37.491"/>
</kw>
<status status="PASS" starttime="20240910 18:09:37.468" endtime="20240910 18:09:37.491"/>
</kw>
<status status="PASS" starttime="20240910 18:09:37.468" endtime="20240910 18:09:37.491"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${screenshot_taking}</arg>
<arg>${True}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240910 18:09:37.491" level="INFO">${screenshot_taking} = True</msg>
<status status="PASS" starttime="20240910 18:09:37.491" endtime="20240910 18:09:37.491"/>
</kw>
<kw name="Setup linux execution" library="Support">
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${web_test_check}</var>
<arg>Variable Should Exist</arg>
<arg>${web_test}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Variable Should Exist" library="BuiltIn">
<arg>${web_test}</arg>
<doc>Fails unless the given variable exists within the current scope.</doc>
<status status="PASS" starttime="20240910 18:09:37.491" endtime="20240910 18:09:37.491"/>
</kw>
<msg timestamp="20240910 18:09:37.491" level="INFO">${web_test_check} = True</msg>
<status status="PASS" starttime="20240910 18:09:37.491" endtime="20240910 18:09:37.491"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>${web_test_check}</arg>
<arg>Setup Docker Execution Options</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup Docker Execution Options" library="Support_Web">
<kw name="Setup Suite Metadata" library="Support_Web">
<arg>${browser}</arg>
<kw name="Get Browser Metadata" library="BrowserSupport">
<var>&amp;{browser_information}</var>
<arg>browser=${browser}</arg>
<doc>Fetches browser metadata information
:param browser: Name of the browser for which information is fetched
:param reload: Re-read the metadata based on the browser
:return: Browser metadata information, dict of format
            {"browser_version": browser version value,
             "driver_version": driver version value}</doc>
<msg timestamp="20240910 18:09:40.788" level="INFO">&amp;{browser_information} = { browser_version=128.0.6613.120 | driver_version=128.0.6613.84  }</msg>
<status status="PASS" starttime="20240910 18:09:37.491" endtime="20240910 18:09:40.788"/>
</kw>
<kw name="Set Suite Metadata" library="BuiltIn">
<arg>test_browser_name</arg>
<arg>${browser}</arg>
<doc>Sets metadata for the current test suite.</doc>
<msg timestamp="20240910 18:09:40.789" level="INFO">Set suite metadata 'test_browser_name' to value 'chrome'.</msg>
<status status="PASS" starttime="20240910 18:09:40.789" endtime="20240910 18:09:40.789"/>
</kw>
<kw name="Set Suite Metadata" library="BuiltIn">
<arg>test_browser_version</arg>
<arg>${browser_information.browser_version}</arg>
<doc>Sets metadata for the current test suite.</doc>
<msg timestamp="20240910 18:09:40.791" level="INFO">Set suite metadata 'test_browser_version' to value '128.0.6613.120'.</msg>
<status status="PASS" starttime="20240910 18:09:40.790" endtime="20240910 18:09:40.791"/>
</kw>
<kw name="Set Suite Metadata" library="BuiltIn">
<arg>test_driver_version</arg>
<arg>${browser_information.driver_version}</arg>
<doc>Sets metadata for the current test suite.</doc>
<msg timestamp="20240910 18:09:40.793" level="INFO">Set suite metadata 'test_driver_version' to value '128.0.6613.84 '.</msg>
<status status="PASS" starttime="20240910 18:09:40.791" endtime="20240910 18:09:40.793"/>
</kw>
<status status="PASS" starttime="20240910 18:09:37.491" endtime="20240910 18:09:40.793"/>
</kw>
<kw name="Setup Global Docker Execution Options" library="Support_Web">
<kw name="Set Global Variable" library="BuiltIn">
<arg>${global_browser_options}</arg>
<arg>None</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240910 18:09:40.796" level="INFO">${global_browser_options} = None</msg>
<status status="PASS" starttime="20240910 18:09:40.794" endtime="20240910 18:09:40.796"/>
</kw>
<kw name="Get Environment Variable" library="OperatingSystem">
<var>${docker_check}</var>
<arg>EXECUTION_ENVIRONMENT</arg>
<arg>not_found</arg>
<doc>Returns the value of an environment variable with the given name.</doc>
<msg timestamp="20240910 18:09:40.796" level="INFO">${docker_check} = not_found</msg>
<status status="PASS" starttime="20240910 18:09:40.796" endtime="20240910 18:09:40.796"/>
</kw>
<kw name="Run Keyword And Return If" library="BuiltIn">
<arg>"${docker_check}"!="docker"</arg>
<arg>Log</arg>
<arg>Not executing on Docker</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Log" library="BuiltIn">
<arg>Not executing on Docker</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:09:40.798" level="INFO">Not executing on Docker</msg>
<status status="PASS" starttime="20240910 18:09:40.797" endtime="20240910 18:09:40.798"/>
</kw>
<msg timestamp="20240910 18:09:40.798" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:09:40.797" endtime="20240910 18:09:40.798"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{options}</var>
<arg>--headless</arg>
<arg>--no-sandbox</arg>
<arg>--disable-dev-shm-usage</arg>
<doc>Returns a list containing given items.</doc>
<status status="NOT RUN" starttime="20240910 18:09:40.798" endtime="20240910 18:09:40.799"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>@{docker_options}</arg>
<arg>@{options}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<status status="NOT RUN" starttime="20240910 18:09:40.799" endtime="20240910 18:09:40.799"/>
</kw>
<status status="PASS" starttime="20240910 18:09:40.793" endtime="20240910 18:09:40.799"/>
</kw>
<kw name="Create Webdriver for chrome preferences" library="Support_Web">
<kw name="Update Docker Execution Options" library="Support_Web">
<var>${list_prefs}</var>
<arg>${list_prefs}</arg>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${docker_check}</var>
<arg>Variable Should Exist</arg>
<arg>${docker_options}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Variable Should Exist" library="BuiltIn">
<arg>${docker_options}</arg>
<doc>Fails unless the given variable exists within the current scope.</doc>
<msg timestamp="20240910 18:09:40.804" level="FAIL">Variable '${docker_options}' does not exist.</msg>
<status status="FAIL" starttime="20240910 18:09:40.801" endtime="20240910 18:09:40.804"/>
</kw>
<msg timestamp="20240910 18:09:40.805" level="INFO">${docker_check} = False</msg>
<status status="PASS" starttime="20240910 18:09:40.800" endtime="20240910 18:09:40.805"/>
</kw>
<kw name="Get Length" library="BuiltIn">
<var>${list_prefs_length}</var>
<arg>${list_prefs}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<msg timestamp="20240910 18:09:40.805" level="INFO">Length is 1</msg>
<msg timestamp="20240910 18:09:40.805" level="INFO">${list_prefs_length} = 1</msg>
<status status="PASS" starttime="20240910 18:09:40.805" endtime="20240910 18:09:40.805"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${list_prefs}</var>
<arg>${docker_check} and ${list_prefs_length}&gt;0 and ${list_prefs}[0] != []</arg>
<arg>Combine Lists</arg>
<arg>${list_prefs}</arg>
<arg>${docker_options}</arg>
<arg>ELSE IF</arg>
<arg>${docker_check}</arg>
<arg>Set Variable</arg>
<arg>${docker_options}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${list_prefs}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${list_prefs}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20240910 18:09:40.807" endtime="20240910 18:09:40.807"/>
</kw>
<msg timestamp="20240910 18:09:40.807" level="INFO">${list_prefs} = [[]]</msg>
<status status="PASS" starttime="20240910 18:09:40.806" endtime="20240910 18:09:40.807"/>
</kw>
<msg timestamp="20240910 18:09:40.807" level="INFO">${list_prefs} = [[]]</msg>
<status status="PASS" starttime="20240910 18:09:40.800" endtime="20240910 18:09:40.808"/>
</kw>
<kw name="Create Chrome Options for download preferences" library="Support_Web">
<var>${chrome_options}</var>
<kw name="Evaluate" library="BuiltIn">
<var>${chrome_options}</var>
<arg>sys.modules['selenium.webdriver'].ChromeOptions()</arg>
<arg>sys</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20240910 18:09:40.809" level="INFO">${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x000002575C1AA8A0&gt;</msg>
<status status="PASS" starttime="20240910 18:09:40.808" endtime="20240910 18:09:40.809"/>
</kw>
<msg timestamp="20240910 18:09:40.809" level="INFO">${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x000002575C1AA8A0&gt;</msg>
<status status="PASS" starttime="20240910 18:09:40.808" endtime="20240910 18:09:40.809"/>
</kw>
<kw name="Update Preferences List" library="Support_Web">
<arg>${chrome_options}</arg>
<arg>@{list_prefs}</arg>
<kw name="Convert To String" library="BuiltIn">
<var>${string_prefs}</var>
<arg>${list_prefs}</arg>
<doc>Converts the given item to a Unicode string.</doc>
<msg timestamp="20240910 18:09:40.810" level="INFO">${string_prefs} = [[]]</msg>
<status status="PASS" starttime="20240910 18:09:40.810" endtime="20240910 18:09:40.810"/>
</kw>
<kw name="Return From Keyword If" library="BuiltIn">
<arg>${string_prefs} == [[]]</arg>
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<msg timestamp="20240910 18:09:40.811" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20240910 18:09:40.810" endtime="20240910 18:09:40.811"/>
</kw>
<for flavor="IN">
<var>${preference}</var>
<value>@{list_prefs}</value>
<iter>
<var name="${preference}"/>
<kw name="Call Method" library="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_argument</arg>
<arg>${preference}</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="NOT RUN" starttime="20240910 18:09:40.812" endtime="20240910 18:09:40.812"/>
</kw>
<status status="NOT RUN" starttime="20240910 18:09:40.811" endtime="20240910 18:09:40.812"/>
</iter>
<status status="NOT RUN" starttime="20240910 18:09:40.811" endtime="20240910 18:09:40.812"/>
</for>
<status status="PASS" starttime="20240910 18:09:40.809" endtime="20240910 18:09:40.812"/>
</kw>
<kw name="Call Method" library="BuiltIn">
<arg>${chrome_options}</arg>
<arg>add_experimental_option</arg>
<arg>prefs</arg>
<arg>${kw_prefs}</arg>
<doc>Calls the named method of the given object with the provided arguments.</doc>
<status status="PASS" starttime="20240910 18:09:40.813" endtime="20240910 18:09:40.813"/>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<arg>${global_browser_options}</arg>
<arg>${chrome options}</arg>
<doc>Makes a variable available globally in all tests and suites.</doc>
<msg timestamp="20240910 18:09:40.814" level="INFO">${global_browser_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x000002575C1AA8A0&gt;</msg>
<status status="PASS" starttime="20240910 18:09:40.813" endtime="20240910 18:09:40.814"/>
</kw>
<status status="PASS" starttime="20240910 18:09:40.799" endtime="20240910 18:09:40.814"/>
</kw>
<status status="PASS" starttime="20240910 18:09:37.491" endtime="20240910 18:09:40.814"/>
</kw>
<status status="PASS" starttime="20240910 18:09:37.491" endtime="20240910 18:09:40.814"/>
</kw>
<status status="PASS" starttime="20240910 18:09:37.491" endtime="20240910 18:09:40.815"/>
</kw>
<kw name="Set Suite Metadata" library="BuiltIn">
<arg>environment</arg>
<arg>${test_server}</arg>
<doc>Sets metadata for the current test suite.</doc>
<msg timestamp="20240910 18:09:40.815" level="INFO">Set suite metadata 'environment' to value 'Dev'.</msg>
<status status="PASS" starttime="20240910 18:09:40.815" endtime="20240910 18:09:40.815"/>
</kw>
<status status="PASS" starttime="20240910 18:09:37.461" endtime="20240910 18:09:40.816"/>
</kw>
<suite id="s1-s1" name="Test Certificate Check" source="C:\RobotFramework\sap_testing\Tests\Test_Certificate_Check.robot">
<kw name="System Logon" library="Certificate_Check" type="SETUP">
<kw name="Start Process" library="Process">
<arg>${symvar('ABAP_SAP_SERVER')}</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20240910 18:09:41.679" level="INFO">Sym.Dev.ABAP_SAP_SERVER: C:\Program Files (x86)\SAP\FrontEnd\SAPGUI\saplogon.exe</msg>
<msg timestamp="20240910 18:09:41.679" level="INFO">Starting process:
"C:\Program Files (x86)\SAP\FrontEnd\SAPGUI\saplogon.exe"</msg>
<status status="PASS" starttime="20240910 18:09:41.679" endtime="20240910 18:09:41.688"/>
</kw>
<kw name="Connect To Session" library="SAP_Tcode_Library">
<doc>Connects to an open session SAP.</doc>
<status status="PASS" starttime="20240910 18:09:41.688" endtime="20240910 18:09:41.708"/>
</kw>
<kw name="Open Connection" library="SAP_Tcode_Library">
<arg>${symvar('ABAP_Connection')}</arg>
<doc>Opens a connection to the given connection name. Be sure to provide the full connection name, including the bracket part.</doc>
<msg timestamp="20240910 18:09:41.711" level="INFO">Sym.Dev.ABAP_Connection: RBT</msg>
<status status="PASS" starttime="20240910 18:09:41.711" endtime="20240910 18:09:42.233"/>
</kw>
<kw name="Input Text" library="SAP_Tcode_Library">
<arg>wnd[0]/usr/txtRSYST-MANDT</arg>
<arg>${symvar('ABAP_CLIENT')}</arg>
<doc>Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.</doc>
<msg timestamp="20240910 18:09:42.233" level="INFO">Sym.Dev.ABAP_CLIENT: 200</msg>
<msg timestamp="20240910 18:09:42.304" level="INFO">Typing text '200' into text field 'wnd[0]/usr/txtRSYST-MANDT'.</msg>
<status status="PASS" starttime="20240910 18:09:42.233" endtime="20240910 18:09:42.304"/>
</kw>
<kw name="Input Text" library="SAP_Tcode_Library">
<arg>wnd[0]/usr/txtRSYST-BNAME</arg>
<arg>${symvar('ABAP_USER')}</arg>
<doc>Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.</doc>
<msg timestamp="20240910 18:09:42.306" level="INFO">Sym.Dev.ABAP_USER: BCSADMIN</msg>
<msg timestamp="20240910 18:09:42.324" level="INFO">Typing text 'BCSADMIN' into text field 'wnd[0]/usr/txtRSYST-BNAME'.</msg>
<status status="PASS" starttime="20240910 18:09:42.306" endtime="20240910 18:09:42.324"/>
</kw>
<kw name="Input Password" library="SAP_Tcode_Library">
<arg>wnd[0]/usr/pwdRSYST-BCODE</arg>
<arg>%{ABAP_PASSWORD}</arg>
<doc>Inserts the given password into the text field identified by locator.
The password is not recorded in the log.</doc>
<msg timestamp="20240910 18:09:42.329" level="INFO">Typing password into text field 'wnd[0]/usr/pwdRSYST-BCODE'.</msg>
<status status="PASS" starttime="20240910 18:09:42.324" endtime="20240910 18:09:42.329"/>
</kw>
<kw name="Send Vkey" library="SAP_Tcode_Library">
<arg>0</arg>
<doc>Sends a SAP virtual key combination to the window, not into an element.
If you want to send a value to a text field, use `input text` instead.</doc>
<status status="PASS" starttime="20240910 18:09:42.329" endtime="20240910 18:09:42.661"/>
</kw>
<kw name="Multiple Logon Handling" library="SAP_Tcode_Library">
<arg>wnd[1]</arg>
<arg>wnd[1]/usr/radMULTI_LOGON_OPT2</arg>
<arg>wnd[1]/tbar[0]/btn[0]</arg>
<status status="PASS" starttime="20240910 18:09:42.661" endtime="20240910 18:09:42.693"/>
</kw>
<status status="PASS" starttime="20240910 18:09:41.679" endtime="20240910 18:09:42.701"/>
</kw>
<test id="s1-s1-t1" name="Download Certificates" line="7">
<kw name="Download Certificates" library="Certificate_Check">
<for flavor="IN">
<var>${url}</var>
<value>@{URLS}</value>
<iter>
<var name="${url}">https://dl.cacerts.digicert.com/DigiCertGlobalRootCA.crt</var>
<kw name="Get File Name From URL" library="Certificate_Check">
<var>${file_name}</var>
<arg>${url}</arg>
<kw name="Get Substring" library="String">
<var>${path}</var>
<arg>${url}</arg>
<arg>${url.find('/') + 1}</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20240910 18:09:42.702" level="INFO">${path} = /dl.cacerts.digicert.com/DigiCertGlobalRootCA.crt</msg>
<status status="PASS" starttime="20240910 18:09:42.702" endtime="20240910 18:09:42.702"/>
</kw>
<kw name="Get Substring" library="String">
<var>${file_name}</var>
<arg>${path}</arg>
<arg>${path.rfind('/') + 1}</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20240910 18:09:42.702" level="INFO">${file_name} = DigiCertGlobalRootCA.crt</msg>
<status status="PASS" starttime="20240910 18:09:42.702" endtime="20240910 18:09:42.702"/>
</kw>
<msg timestamp="20240910 18:09:42.702" level="INFO">${file_name} = DigiCertGlobalRootCA.crt</msg>
<status status="PASS" starttime="20240910 18:09:42.702" endtime="20240910 18:09:42.702"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${destination}</var>
<arg>${DESTINATION_BASE}${file_name}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240910 18:09:42.702" level="INFO">${destination} = C:\tmp\DigiCertGlobalRootCA.crt</msg>
<status status="PASS" starttime="20240910 18:09:42.702" endtime="20240910 18:09:42.702"/>
</kw>
<kw name="Start Process" library="Process">
<arg>curl</arg>
<arg>${url}</arg>
<arg>-o</arg>
<arg>${destination}</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20240910 18:09:42.702" level="INFO">Starting process:
curl https://dl.cacerts.digicert.com/DigiCertGlobalRootCA.crt -o C:\tmp\DigiCertGlobalRootCA.crt</msg>
<status status="PASS" starttime="20240910 18:09:42.702" endtime="20240910 18:09:42.702"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Downloaded ${file_name} to ${destination}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:09:42.711" level="INFO">Downloaded DigiCertGlobalRootCA.crt to C:\tmp\DigiCertGlobalRootCA.crt</msg>
<status status="PASS" starttime="20240910 18:09:42.702" endtime="20240910 18:09:42.711"/>
</kw>
<status status="PASS" starttime="20240910 18:09:42.702" endtime="20240910 18:09:42.711"/>
</iter>
<iter>
<var name="${url}">https://cacerts.digicert.com/DigiCertGlobalRootG2.crt</var>
<kw name="Get File Name From URL" library="Certificate_Check">
<var>${file_name}</var>
<arg>${url}</arg>
<kw name="Get Substring" library="String">
<var>${path}</var>
<arg>${url}</arg>
<arg>${url.find('/') + 1}</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20240910 18:09:42.711" level="INFO">${path} = /cacerts.digicert.com/DigiCertGlobalRootG2.crt</msg>
<status status="PASS" starttime="20240910 18:09:42.711" endtime="20240910 18:09:42.711"/>
</kw>
<kw name="Get Substring" library="String">
<var>${file_name}</var>
<arg>${path}</arg>
<arg>${path.rfind('/') + 1}</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20240910 18:09:42.711" level="INFO">${file_name} = DigiCertGlobalRootG2.crt</msg>
<status status="PASS" starttime="20240910 18:09:42.711" endtime="20240910 18:09:42.711"/>
</kw>
<msg timestamp="20240910 18:09:42.711" level="INFO">${file_name} = DigiCertGlobalRootG2.crt</msg>
<status status="PASS" starttime="20240910 18:09:42.711" endtime="20240910 18:09:42.711"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${destination}</var>
<arg>${DESTINATION_BASE}${file_name}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240910 18:09:42.718" level="INFO">${destination} = C:\tmp\DigiCertGlobalRootG2.crt</msg>
<status status="PASS" starttime="20240910 18:09:42.718" endtime="20240910 18:09:42.718"/>
</kw>
<kw name="Start Process" library="Process">
<arg>curl</arg>
<arg>${url}</arg>
<arg>-o</arg>
<arg>${destination}</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20240910 18:09:42.718" level="INFO">Starting process:
curl https://cacerts.digicert.com/DigiCertGlobalRootG2.crt -o C:\tmp\DigiCertGlobalRootG2.crt</msg>
<status status="PASS" starttime="20240910 18:09:42.718" endtime="20240910 18:09:42.721"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Downloaded ${file_name} to ${destination}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:09:42.721" level="INFO">Downloaded DigiCertGlobalRootG2.crt to C:\tmp\DigiCertGlobalRootG2.crt</msg>
<status status="PASS" starttime="20240910 18:09:42.721" endtime="20240910 18:09:42.721"/>
</kw>
<status status="PASS" starttime="20240910 18:09:42.711" endtime="20240910 18:09:42.721"/>
</iter>
<iter>
<var name="${url}">https://cacerts.digicert.com/DigiCertRSA4096RootG5.crt</var>
<kw name="Get File Name From URL" library="Certificate_Check">
<var>${file_name}</var>
<arg>${url}</arg>
<kw name="Get Substring" library="String">
<var>${path}</var>
<arg>${url}</arg>
<arg>${url.find('/') + 1}</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20240910 18:09:42.727" level="INFO">${path} = /cacerts.digicert.com/DigiCertRSA4096RootG5.crt</msg>
<status status="PASS" starttime="20240910 18:09:42.727" endtime="20240910 18:09:42.727"/>
</kw>
<kw name="Get Substring" library="String">
<var>${file_name}</var>
<arg>${path}</arg>
<arg>${path.rfind('/') + 1}</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20240910 18:09:42.727" level="INFO">${file_name} = DigiCertRSA4096RootG5.crt</msg>
<status status="PASS" starttime="20240910 18:09:42.727" endtime="20240910 18:09:42.727"/>
</kw>
<msg timestamp="20240910 18:09:42.731" level="INFO">${file_name} = DigiCertRSA4096RootG5.crt</msg>
<status status="PASS" starttime="20240910 18:09:42.727" endtime="20240910 18:09:42.731"/>
</kw>
<kw name="Set Variable" library="BuiltIn">
<var>${destination}</var>
<arg>${DESTINATION_BASE}${file_name}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20240910 18:09:42.731" level="INFO">${destination} = C:\tmp\DigiCertRSA4096RootG5.crt</msg>
<status status="PASS" starttime="20240910 18:09:42.731" endtime="20240910 18:09:42.731"/>
</kw>
<kw name="Start Process" library="Process">
<arg>curl</arg>
<arg>${url}</arg>
<arg>-o</arg>
<arg>${destination}</arg>
<doc>Starts a new process on background.</doc>
<msg timestamp="20240910 18:09:42.732" level="INFO">Starting process:
curl https://cacerts.digicert.com/DigiCertRSA4096RootG5.crt -o C:\tmp\DigiCertRSA4096RootG5.crt</msg>
<status status="PASS" starttime="20240910 18:09:42.732" endtime="20240910 18:09:42.734"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Downloaded ${file_name} to ${destination}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240910 18:09:42.734" level="INFO">Downloaded DigiCertRSA4096RootG5.crt to C:\tmp\DigiCertRSA4096RootG5.crt</msg>
<status status="PASS" starttime="20240910 18:09:42.734" endtime="20240910 18:09:42.734"/>
</kw>
<status status="PASS" starttime="20240910 18:09:42.721" endtime="20240910 18:09:42.734"/>
</iter>
<status status="PASS" starttime="20240910 18:09:42.702" endtime="20240910 18:09:42.734"/>
</for>
<status status="PASS" starttime="20240910 18:09:42.701" endtime="20240910 18:09:42.734"/>
</kw>
<kw name="STRUST" library="Certificate_Check">
<kw name="Run Transaction" library="SAP_Tcode_Library">
<arg>/nSTRUST</arg>
<doc>Runs a Sap transaction. An error is given when an unknown transaction is specified.</doc>
<status status="PASS" starttime="20240910 18:09:42.734" endtime="20240910 18:09:43.003"/>
</kw>
<kw name="Click Element" library="SAP_Tcode_Library">
<arg>wnd[0]/tbar[1]/btn[25]</arg>
<doc>Performs a single click on a given element. Used only for buttons, tabs and menu items.</doc>
<status status="PASS" starttime="20240910 18:09:43.003" endtime="20240910 18:09:43.075"/>
</kw>
<status status="PASS" starttime="20240910 18:09:42.734" endtime="20240910 18:09:43.075"/>
</kw>
<kw name="STRUS_SSL_Client_Anonymous" library="Certificate_Check">
<kw name="Double Click On Tree Item" library="SAP_Tcode_Library">
<arg>wnd[0]/shellcont/shell</arg>
<arg>SSLCANONYM</arg>
<status status="PASS" starttime="20240910 18:09:43.075" endtime="20240910 18:09:43.206"/>
</kw>
<kw name="Get Value" library="SAP_Tcode_Library">
<var>${space}</var>
<arg>wnd[0]/usr/tblS_TRUSTMANAGERPK_CTRL/txtPSECERTLIST-SUBJECT[0,0]</arg>
<doc>Gets the value of the given element. The possible return values depend on the type of element (see Return values).</doc>
<msg timestamp="20240910 18:09:43.288" level="INFO">${space} = CN=DigiCert Global Root G2, OU=www.digicert.com, O=DigiCert Inc, C=US</msg>
<status status="PASS" starttime="20240910 18:09:43.206" endtime="20240910 18:09:43.288"/>
</kw>
<if>
<branch type="IF" condition="'${space}' != ''">
<for flavor="IN RANGE">
<var>${index}</var>
<value>0</value>
<value>3</value>
<iter>
<var name="${index}">0</var>
<kw name="Get Value" library="SAP_Tcode_Library">
<var>${value}</var>
<arg>wnd[0]/usr/tblS_TRUSTMANAGERPK_CTRL/txtPSECERTLIST-SUBJECT[0,${index}]</arg>
<doc>Gets the value of the given element. The possible return values depend on the type of element (see Return values).</doc>
<msg timestamp="20240910 18:09:43.304" level="INFO">${value} = CN=DigiCert Global Root G2, OU=www.digicert.com, O=DigiCert Inc, C=US</msg>
<status status="PASS" starttime="20240910 18:09:43.296" endtime="20240910 18:09:43.304"/>
</kw>
<if>
<branch type="IF" condition="'${value}' == 'CN=DigiCert Global Root G2, OU=www.digicert.com, O=DigiCert Inc, C=US'">
<kw name="Log To Console" library="BuiltIn">
<arg>Certificate already exists: DigiCert Global Root G2</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20240910 18:09:43.304" endtime="20240910 18:09:43.304"/>
</kw>
<status status="PASS" starttime="20240910 18:09:43.304" endtime="20240910 18:09:43.304"/>
</branch>
<branch type="ELSE IF" condition="'${value}' == 'CN=DigiCert Global Root CA, OU=www.digicert.com, O=DigiCert Inc, C=US'">
<kw name="Log To Console" library="BuiltIn">
<arg>Certificate already exists: DigiCert Global Root CA</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20240910 18:09:43.304" endtime="20240910 18:09:43.304"/>
</kw>
<status status="NOT RUN" starttime="20240910 18:09:43.304" endtime="20240910 18:09:43.304"/>
</branch>
<branch type="ELSE IF" condition="'${value}' == 'CN=DigiCert RSA4096 Root G5, O=&quot;DigiCert, Inc.&quot;, C=US'">
<kw name="Log To Console" library="BuiltIn">
<arg>Certificate already exists: DigiCert RSA4096 Root G5</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20240910 18:09:43.308" endtime="20240910 18:09:43.308"/>
</kw>
<status status="NOT RUN" starttime="20240910 18:09:43.304" endtime="20240910 18:09:43.308"/>
</branch>
<branch type="ELSE">
<kw name="upload_certificate_SSL_Client_Anonymous" library="Certificate_Check">
<status status="NOT RUN" starttime="20240910 18:09:43.308" endtime="20240910 18:09:43.308"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>**gbStart**copilot_status5**splitKeyValue**System ${symvar('ABAP_Connection')} client ${symvar('ABAP_CLIENT')} -- STRUS_SSL_Client_Anonymous SAP Cloud ALM Connection Certificate Added Successfully**gbEnd**</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20240910 18:09:43.308" endtime="20240910 18:09:43.308"/>
</kw>
<status status="NOT RUN" starttime="20240910 18:09:43.308" endtime="20240910 18:09:43.308"/>
</branch>
<status status="PASS" starttime="20240910 18:09:43.304" endtime="20240910 18:09:43.308"/>
</if>
<status status="PASS" starttime="20240910 18:09:43.296" endtime="20240910 18:09:43.308"/>
</iter>
<iter>
<var name="${index}">1</var>
<kw name="Get Value" library="SAP_Tcode_Library">
<var>${value}</var>
<arg>wnd[0]/usr/tblS_TRUSTMANAGERPK_CTRL/txtPSECERTLIST-SUBJECT[0,${index}]</arg>
<doc>Gets the value of the given element. The possible return values depend on the type of element (see Return values).</doc>
<msg timestamp="20240910 18:09:43.320" level="INFO">${value} = CN=DigiCert Global Root CA, OU=www.digicert.com, O=DigiCert Inc, C=US</msg>
<status status="PASS" starttime="20240910 18:09:43.308" endtime="20240910 18:09:43.320"/>
</kw>
<if>
<branch type="IF" condition="'${value}' == 'CN=DigiCert Global Root G2, OU=www.digicert.com, O=DigiCert Inc, C=US'">
<kw name="Log To Console" library="BuiltIn">
<arg>Certificate already exists: DigiCert Global Root G2</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20240910 18:09:43.329" endtime="20240910 18:09:43.329"/>
</kw>
<status status="NOT RUN" starttime="20240910 18:09:43.329" endtime="20240910 18:09:43.329"/>
</branch>
<branch type="ELSE IF" condition="'${value}' == 'CN=DigiCert Global Root CA, OU=www.digicert.com, O=DigiCert Inc, C=US'">
<kw name="Log To Console" library="BuiltIn">
<arg>Certificate already exists: DigiCert Global Root CA</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20240910 18:09:43.329" endtime="20240910 18:09:43.329"/>
</kw>
<status status="PASS" starttime="20240910 18:09:43.329" endtime="20240910 18:09:43.329"/>
</branch>
<branch type="ELSE IF" condition="'${value}' == 'CN=DigiCert RSA4096 Root G5, O=&quot;DigiCert, Inc.&quot;, C=US'">
<kw name="Log To Console" library="BuiltIn">
<arg>Certificate already exists: DigiCert RSA4096 Root G5</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20240910 18:09:43.329" endtime="20240910 18:09:43.329"/>
</kw>
<status status="NOT RUN" starttime="20240910 18:09:43.329" endtime="20240910 18:09:43.329"/>
</branch>
<branch type="ELSE">
<kw name="upload_certificate_SSL_Client_Anonymous" library="Certificate_Check">
<status status="NOT RUN" starttime="20240910 18:09:43.329" endtime="20240910 18:09:43.329"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>**gbStart**copilot_status5**splitKeyValue**System ${symvar('ABAP_Connection')} client ${symvar('ABAP_CLIENT')} -- STRUS_SSL_Client_Anonymous SAP Cloud ALM Connection Certificate Added Successfully**gbEnd**</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20240910 18:09:43.329" endtime="20240910 18:09:43.329"/>
</kw>
<status status="NOT RUN" starttime="20240910 18:09:43.329" endtime="20240910 18:09:43.329"/>
</branch>
<status status="PASS" starttime="20240910 18:09:43.329" endtime="20240910 18:09:43.329"/>
</if>
<status status="PASS" starttime="20240910 18:09:43.308" endtime="20240910 18:09:43.329"/>
</iter>
<iter>
<var name="${index}">2</var>
<kw name="Get Value" library="SAP_Tcode_Library">
<var>${value}</var>
<arg>wnd[0]/usr/tblS_TRUSTMANAGERPK_CTRL/txtPSECERTLIST-SUBJECT[0,${index}]</arg>
<doc>Gets the value of the given element. The possible return values depend on the type of element (see Return values).</doc>
<msg timestamp="20240910 18:09:43.349" level="INFO">${value} = CN=DigiCert RSA4096 Root G5, O="DigiCert, Inc.", C=US</msg>
<status status="PASS" starttime="20240910 18:09:43.329" endtime="20240910 18:09:43.349"/>
</kw>
<if>
<branch type="IF" condition="'${value}' == 'CN=DigiCert Global Root G2, OU=www.digicert.com, O=DigiCert Inc, C=US'">
<kw name="Log To Console" library="BuiltIn">
<arg>Certificate already exists: DigiCert Global Root G2</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20240910 18:09:43.349" endtime="20240910 18:09:43.349"/>
</kw>
<status status="NOT RUN" starttime="20240910 18:09:43.349" endtime="20240910 18:09:43.349"/>
</branch>
<branch type="ELSE IF" condition="'${value}' == 'CN=DigiCert Global Root CA, OU=www.digicert.com, O=DigiCert Inc, C=US'">
<kw name="Log To Console" library="BuiltIn">
<arg>Certificate already exists: DigiCert Global Root CA</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20240910 18:09:43.349" endtime="20240910 18:09:43.349"/>
</kw>
<status status="NOT RUN" starttime="20240910 18:09:43.349" endtime="20240910 18:09:43.349"/>
</branch>
<branch type="ELSE IF" condition="'${value}' == 'CN=DigiCert RSA4096 Root G5, O=&quot;DigiCert, Inc.&quot;, C=US'">
<kw name="Log To Console" library="BuiltIn">
<arg>Certificate already exists: DigiCert RSA4096 Root G5</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20240910 18:09:43.351" endtime="20240910 18:09:43.352"/>
</kw>
<status status="PASS" starttime="20240910 18:09:43.349" endtime="20240910 18:09:43.352"/>
</branch>
<branch type="ELSE">
<kw name="upload_certificate_SSL_Client_Anonymous" library="Certificate_Check">
<status status="NOT RUN" starttime="20240910 18:09:43.352" endtime="20240910 18:09:43.352"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>**gbStart**copilot_status5**splitKeyValue**System ${symvar('ABAP_Connection')} client ${symvar('ABAP_CLIENT')} -- STRUS_SSL_Client_Anonymous SAP Cloud ALM Connection Certificate Added Successfully**gbEnd**</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20240910 18:09:43.352" endtime="20240910 18:09:43.352"/>
</kw>
<status status="NOT RUN" starttime="20240910 18:09:43.352" endtime="20240910 18:09:43.352"/>
</branch>
<status status="PASS" starttime="20240910 18:09:43.349" endtime="20240910 18:09:43.352"/>
</if>
<status status="PASS" starttime="20240910 18:09:43.329" endtime="20240910 18:09:43.352"/>
</iter>
<status status="PASS" starttime="20240910 18:09:43.288" endtime="20240910 18:09:43.352"/>
</for>
<status status="PASS" starttime="20240910 18:09:43.288" endtime="20240910 18:09:43.352"/>
</branch>
<branch type="ELSE">
<kw name="upload_certificate_SSL_Client_Anonymous" library="Certificate_Check">
<status status="NOT RUN" starttime="20240910 18:09:43.360" endtime="20240910 18:09:43.360"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>**gbStart**copilot_status5**splitKeyValue**System ${symvar('ABAP_Connection')} client ${symvar('ABAP_CLIENT')} -- STRUS_SSL_Client_Anonymous SAP Cloud ALM Connection Certificate Added Successfully**gbEnd**</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20240910 18:09:43.360" endtime="20240910 18:09:43.360"/>
</kw>
<status status="NOT RUN" starttime="20240910 18:09:43.352" endtime="20240910 18:09:43.360"/>
</branch>
<status status="PASS" starttime="20240910 18:09:43.288" endtime="20240910 18:09:43.360"/>
</if>
<status status="PASS" starttime="20240910 18:09:43.075" endtime="20240910 18:09:43.360"/>
</kw>
<kw name="STRUSTS_SSL_Client_Standard" library="Certificate_Check">
<kw name="Double Click On Tree Item" library="SAP_Tcode_Library">
<arg>wnd[0]/shellcont/shell</arg>
<arg>SSLCDFAULT</arg>
<status status="PASS" starttime="20240910 18:09:43.360" endtime="20240910 18:09:43.411"/>
</kw>
<kw name="Get Value" library="SAP_Tcode_Library">
<var>${space}</var>
<arg>wnd[0]/usr/tblS_TRUSTMANAGERPK_CTRL/txtPSECERTLIST-SUBJECT[0,0]</arg>
<doc>Gets the value of the given element. The possible return values depend on the type of element (see Return values).</doc>
<msg timestamp="20240910 18:09:43.499" level="INFO">${space} = CN=DigiCert Global Root G2, OU=www.digicert.com, O=DigiCert Inc, C=US</msg>
<status status="PASS" starttime="20240910 18:09:43.411" endtime="20240910 18:09:43.499"/>
</kw>
<if>
<branch type="IF" condition="'${space}' != ''">
<for flavor="IN RANGE">
<var>${index}</var>
<value>0</value>
<value>3</value>
<iter>
<var name="${index}">0</var>
<kw name="Get Value" library="SAP_Tcode_Library">
<var>${value}</var>
<arg>wnd[0]/usr/tblS_TRUSTMANAGERPK_CTRL/txtPSECERTLIST-SUBJECT[0,${index}]</arg>
<doc>Gets the value of the given element. The possible return values depend on the type of element (see Return values).</doc>
<msg timestamp="20240910 18:09:43.512" level="INFO">${value} = CN=DigiCert Global Root G2, OU=www.digicert.com, O=DigiCert Inc, C=US</msg>
<status status="PASS" starttime="20240910 18:09:43.502" endtime="20240910 18:09:43.512"/>
</kw>
<if>
<branch type="IF" condition="'${value}' == 'CN=DigiCert Global Root G2, OU=www.digicert.com, O=DigiCert Inc, C=US'">
<kw name="Log To Console" library="BuiltIn">
<arg>Certificate already exists: DigiCert Global Root G2</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20240910 18:09:43.512" endtime="20240910 18:09:43.512"/>
</kw>
<status status="PASS" starttime="20240910 18:09:43.512" endtime="20240910 18:09:43.512"/>
</branch>
<branch type="ELSE IF" condition="'${value}' == 'CN=DigiCert Global Root CA, OU=www.digicert.com, O=DigiCert Inc, C=US'">
<kw name="Log To Console" library="BuiltIn">
<arg>Certificate already exists: DigiCert Global Root CA</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20240910 18:09:43.512" endtime="20240910 18:09:43.512"/>
</kw>
<status status="NOT RUN" starttime="20240910 18:09:43.512" endtime="20240910 18:09:43.512"/>
</branch>
<branch type="ELSE IF" condition="'${value}' == 'CN=DigiCert RSA4096 Root G5, O=&quot;DigiCert, Inc.&quot;, C=US'">
<kw name="Log To Console" library="BuiltIn">
<arg>Certificate already exists: DigiCert RSA4096 Root G5</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20240910 18:09:43.512" endtime="20240910 18:09:43.512"/>
</kw>
<status status="NOT RUN" starttime="20240910 18:09:43.512" endtime="20240910 18:09:43.512"/>
</branch>
<branch type="ELSE">
<kw name="upload_certificate_SSL_Client_Anonymous" library="Certificate_Check">
<status status="NOT RUN" starttime="20240910 18:09:43.512" endtime="20240910 18:09:43.512"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>**gbStart**copilot_status6**splitKeyValue**System ${symvar('ABAP_Connection')} client ${symvar('ABAP_CLIENT')} -- STRUSTS_SSL_Client_Standard SAP Cloud ALM Connection Certificate Uploaded successfully**gbEnd**</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20240910 18:09:43.512" endtime="20240910 18:09:43.512"/>
</kw>
<status status="NOT RUN" starttime="20240910 18:09:43.512" endtime="20240910 18:09:43.512"/>
</branch>
<status status="PASS" starttime="20240910 18:09:43.512" endtime="20240910 18:09:43.512"/>
</if>
<status status="PASS" starttime="20240910 18:09:43.502" endtime="20240910 18:09:43.512"/>
</iter>
<iter>
<var name="${index}">1</var>
<kw name="Get Value" library="SAP_Tcode_Library">
<var>${value}</var>
<arg>wnd[0]/usr/tblS_TRUSTMANAGERPK_CTRL/txtPSECERTLIST-SUBJECT[0,${index}]</arg>
<doc>Gets the value of the given element. The possible return values depend on the type of element (see Return values).</doc>
<msg timestamp="20240910 18:09:43.534" level="INFO">${value} = CN=DigiCert Global Root CA, OU=www.digicert.com, O=DigiCert Inc, C=US</msg>
<status status="PASS" starttime="20240910 18:09:43.512" endtime="20240910 18:09:43.534"/>
</kw>
<if>
<branch type="IF" condition="'${value}' == 'CN=DigiCert Global Root G2, OU=www.digicert.com, O=DigiCert Inc, C=US'">
<kw name="Log To Console" library="BuiltIn">
<arg>Certificate already exists: DigiCert Global Root G2</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20240910 18:09:43.534" endtime="20240910 18:09:43.534"/>
</kw>
<status status="NOT RUN" starttime="20240910 18:09:43.534" endtime="20240910 18:09:43.534"/>
</branch>
<branch type="ELSE IF" condition="'${value}' == 'CN=DigiCert Global Root CA, OU=www.digicert.com, O=DigiCert Inc, C=US'">
<kw name="Log To Console" library="BuiltIn">
<arg>Certificate already exists: DigiCert Global Root CA</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20240910 18:09:43.534" endtime="20240910 18:09:43.534"/>
</kw>
<status status="PASS" starttime="20240910 18:09:43.534" endtime="20240910 18:09:43.534"/>
</branch>
<branch type="ELSE IF" condition="'${value}' == 'CN=DigiCert RSA4096 Root G5, O=&quot;DigiCert, Inc.&quot;, C=US'">
<kw name="Log To Console" library="BuiltIn">
<arg>Certificate already exists: DigiCert RSA4096 Root G5</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20240910 18:09:43.534" endtime="20240910 18:09:43.534"/>
</kw>
<status status="NOT RUN" starttime="20240910 18:09:43.534" endtime="20240910 18:09:43.534"/>
</branch>
<branch type="ELSE">
<kw name="upload_certificate_SSL_Client_Anonymous" library="Certificate_Check">
<status status="NOT RUN" starttime="20240910 18:09:43.534" endtime="20240910 18:09:43.534"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>**gbStart**copilot_status6**splitKeyValue**System ${symvar('ABAP_Connection')} client ${symvar('ABAP_CLIENT')} -- STRUSTS_SSL_Client_Standard SAP Cloud ALM Connection Certificate Uploaded successfully**gbEnd**</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20240910 18:09:43.534" endtime="20240910 18:09:43.534"/>
</kw>
<status status="NOT RUN" starttime="20240910 18:09:43.534" endtime="20240910 18:09:43.534"/>
</branch>
<status status="PASS" starttime="20240910 18:09:43.534" endtime="20240910 18:09:43.534"/>
</if>
<status status="PASS" starttime="20240910 18:09:43.512" endtime="20240910 18:09:43.534"/>
</iter>
<iter>
<var name="${index}">2</var>
<kw name="Get Value" library="SAP_Tcode_Library">
<var>${value}</var>
<arg>wnd[0]/usr/tblS_TRUSTMANAGERPK_CTRL/txtPSECERTLIST-SUBJECT[0,${index}]</arg>
<doc>Gets the value of the given element. The possible return values depend on the type of element (see Return values).</doc>
<msg timestamp="20240910 18:09:43.553" level="INFO">${value} = CN=DigiCert RSA4096 Root G5, O="DigiCert, Inc.", C=US</msg>
<status status="PASS" starttime="20240910 18:09:43.534" endtime="20240910 18:09:43.553"/>
</kw>
<if>
<branch type="IF" condition="'${value}' == 'CN=DigiCert Global Root G2, OU=www.digicert.com, O=DigiCert Inc, C=US'">
<kw name="Log To Console" library="BuiltIn">
<arg>Certificate already exists: DigiCert Global Root G2</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20240910 18:09:43.553" endtime="20240910 18:09:43.553"/>
</kw>
<status status="NOT RUN" starttime="20240910 18:09:43.553" endtime="20240910 18:09:43.553"/>
</branch>
<branch type="ELSE IF" condition="'${value}' == 'CN=DigiCert Global Root CA, OU=www.digicert.com, O=DigiCert Inc, C=US'">
<kw name="Log To Console" library="BuiltIn">
<arg>Certificate already exists: DigiCert Global Root CA</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20240910 18:09:43.553" endtime="20240910 18:09:43.553"/>
</kw>
<status status="NOT RUN" starttime="20240910 18:09:43.553" endtime="20240910 18:09:43.553"/>
</branch>
<branch type="ELSE IF" condition="'${value}' == 'CN=DigiCert RSA4096 Root G5, O=&quot;DigiCert, Inc.&quot;, C=US'">
<kw name="Log To Console" library="BuiltIn">
<arg>Certificate already exists: DigiCert RSA4096 Root G5</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" starttime="20240910 18:09:43.553" endtime="20240910 18:09:43.558"/>
</kw>
<status status="PASS" starttime="20240910 18:09:43.553" endtime="20240910 18:09:43.558"/>
</branch>
<branch type="ELSE">
<kw name="upload_certificate_SSL_Client_Anonymous" library="Certificate_Check">
<status status="NOT RUN" starttime="20240910 18:09:43.558" endtime="20240910 18:09:43.558"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>**gbStart**copilot_status6**splitKeyValue**System ${symvar('ABAP_Connection')} client ${symvar('ABAP_CLIENT')} -- STRUSTS_SSL_Client_Standard SAP Cloud ALM Connection Certificate Uploaded successfully**gbEnd**</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20240910 18:09:43.558" endtime="20240910 18:09:43.558"/>
</kw>
<status status="NOT RUN" starttime="20240910 18:09:43.558" endtime="20240910 18:09:43.558"/>
</branch>
<status status="PASS" starttime="20240910 18:09:43.553" endtime="20240910 18:09:43.558"/>
</if>
<status status="PASS" starttime="20240910 18:09:43.534" endtime="20240910 18:09:43.558"/>
</iter>
<status status="PASS" starttime="20240910 18:09:43.502" endtime="20240910 18:09:43.558"/>
</for>
<status status="PASS" starttime="20240910 18:09:43.499" endtime="20240910 18:09:43.558"/>
</branch>
<branch type="ELSE">
<kw name="upload_certificate_SSL_Client_Standard" library="Certificate_Check">
<status status="NOT RUN" starttime="20240910 18:09:43.558" endtime="20240910 18:09:43.558"/>
</kw>
<kw name="Log To Console" library="BuiltIn">
<arg>**gbStart**copilot_status6**splitKeyValue**System ${symvar('ABAP_Connection')} client ${symvar('ABAP_CLIENT')} -- STRUSTS_SSL_Client_Standard SAP Cloud ALM Connection Certificate Uploaded successfully**gbEnd**</arg>
<doc>Logs the given message to the console.</doc>
<status status="NOT RUN" starttime="20240910 18:09:43.558" endtime="20240910 18:09:43.558"/>
</kw>
<status status="NOT RUN" starttime="20240910 18:09:43.558" endtime="20240910 18:09:43.558"/>
</branch>
<status status="PASS" starttime="20240910 18:09:43.499" endtime="20240910 18:09:43.558"/>
</if>
<status status="PASS" starttime="20240910 18:09:43.360" endtime="20240910 18:09:43.558"/>
</kw>
<tag>Certificate_Check_</tag>
<status status="PASS" starttime="20240910 18:09:42.701" endtime="20240910 18:09:43.558"/>
</test>
<kw name="System Logout" library="Certificate_Check" type="TEARDOWN">
<kw name="Run Transaction" library="SAP_Tcode_Library">
<arg>/nex</arg>
<doc>Runs a Sap transaction. An error is given when an unknown transaction is specified.</doc>
<status status="PASS" starttime="20240910 18:09:43.558" endtime="20240910 18:09:43.665"/>
</kw>
<status status="PASS" starttime="20240910 18:09:43.558" endtime="20240910 18:09:43.665"/>
</kw>
<status status="PASS" starttime="20240910 18:09:40.816" endtime="20240910 18:09:43.665"/>
</suite>
<doc>Testing functionality through Robot Framework</doc>
<meta name="environment">Dev</meta>
<meta name="test_browser_name">chrome</meta>
<meta name="test_browser_version">128.0.6613.120</meta>
<meta name="test_driver_version">128.0.6613.84 </meta>
<meta name="test_environment">Dev</meta>
<meta name="test_freeze_dependencies">astroid==3.2.3,attrs==23.2.0,beautifulsoup4==4.12.3,bs4==0.0.2,certifi==2024.7.4,cffi==1.16.0,chardet==5.2.0,charset-normalizer==3.3.2,click==8.1.7,colorama==0.4.6,cryptography==42.0.8,defusedxml==0.7.1,dill==0.3.8,docutils==0.21.2,et-xmlfile==1.1.0,exceptiongroup==1.2.2,gitdb==4.0.11,GitPython==3.1.43,h11==0.14.0,idna==3.7,isort==5.13.2,Jinja2==3.1.4,jira==3.8.0,jsonpath-ng==1.6.1,jsonschema==4.23.0,jsonschema-specifications==2023.12.1,lazy-object-proxy==1.10.0,lxml==5.2.2,markdown-it-py==3.0.0,MarkupSafe==2.1.5,mccabe==0.7.0,mdurl==0.1.2,natsort==8.4.0,numpy==2.0.0,oauthlib==3.2.2,openpyxl==3.1.5,outcome==1.3.0.post0,packaging==24.1,pandas==2.2.2,pathspec==0.11.2,pillow==10.4.0,pip==24.2,platformdirs==4.2.2,ply==3.11,pycparser==2.22,Pygments==2.18.0,pylint==3.2.5,PyPDF2==3.0.1,PySocks==1.7.1,python-dateutil==2.9.0.post0,pytz==2024.1,pywin32==306,PyYAML==6.0.1,referencing==0.35.1,reportlab==4.2.2,requests==2.32.3,requests-oauthlib==2.0.0,requests-toolbelt==1.0.0,rich==13.7.1,rich-click==1.6.1,robotframework==6.0.2,robotframework-datadriver==1.9.0,robotframework-excellib==2.0.1,robotframework-jsonlibrary==0.5,robotframework-pabot==2.16.0,robotframework-pythonlibcore==4.2.0,robotframework-requests==0.9.2,robotframework-sapguilibrary==1.1,robotframework-seleniumlibrary==5.1.3,robotframework-stacktrace==0.4.1,robotframework-tidy==4.5.0,rpds-py==0.19.0,selenium==4.9.1,setuptools==71.0.1,six==1.16.0,smmap==5.0.1,sniffio==1.3.1,sortedcontainers==2.4.0,soupsieve==2.5,tomli==2.0.1,tomlkit==0.13.0,trio==0.26.0,trio-websocket==0.11.1,typing_extensions==4.12.2,tzdata==2024.1,urllib3==2.2.2,wheel==0.43.0,wrapt==1.16.0,wsproto==1.2.0</meta>
<status status="PASS" starttime="20240910 18:09:37.115" endtime="20240910 18:09:43.736"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="0" skip="0">Certificate_Check_</stat>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1" name="Test Certificate Check">Tests.Test Certificate Check</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
