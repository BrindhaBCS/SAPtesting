<?xml version="1.0" encoding="utf-8"?>
<robot generated="20240912 17:07:31.552" generator="Rebot 6.0.2 (Python 3.12.1 on win32)" rpa="false" schemaversion="3">
 <suite id="s1" name="Tests" source="C:\SAP_Testing\SAPtesting\Tests">
  <kw name="Setup highest level suite" type="SETUP">
   <kw library="BuiltIn" name="Set Variable">
    <var>
     ${d.test_server}
    </var>
    <arg>
     ${test_server}
    </arg>
    <doc>
     Returns the given values which can then be assigned to a variables.
    </doc>
    <msg level="INFO" timestamp="20240912 17:07:04.209">
     ${d.test_server} = Dev
    </msg>
    <status endtime="20240912 17:07:04.209" starttime="20240912 17:07:04.208" status="PASS"/>
   </kw>
   <kw library="Support" name="Reset screenshot count variable">
    <kw library="BuiltIn" name="Set Variable">
     <var>
      ${screenshotCount}
     </var>
     <arg>
      ${PABOTQUEUEINDEX}_1
     </arg>
     <doc>
      Returns the given values which can then be assigned to a variables.
     </doc>
     <msg level="INFO" timestamp="20240912 17:07:04.209">
      ${screenshotCount} = 0_1
     </msg>
     <status endtime="20240912 17:07:04.210" starttime="20240912 17:07:04.209" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Set Global Variable">
     <arg>
      ${screenshotCount}
     </arg>
     <doc>
      Makes a variable available globally in all tests and suites.
     </doc>
     <msg level="INFO" timestamp="20240912 17:07:04.210">
      ${screenshotCount} = 0_1
     </msg>
     <status endtime="20240912 17:07:04.210" starttime="20240912 17:07:04.210" status="PASS"/>
    </kw>
    <kw library="Support" name="Set up screenshot directory">
     <kw library="OperatingSystem" name="Create Directory">
      <arg>
       ${OUTPUTDIR}${/}${wvar('screenshot_dir')}
      </arg>
      <doc>
       Creates the specified directory.
      </doc>
      <msg level="INFO" timestamp="20240912 17:07:04.211">
       Web.Dev.screenshot_dir: Screenshot
      </msg>
      <msg html="true" level="INFO" timestamp="20240912 17:07:04.216">
       Created directory '&lt;a href="file://C:\SAP_Testing\SAPtesting\Output\pabot_results\0\Screenshot"&gt;C:\SAP_Testing\SAPtesting\Output\pabot_results\0\Screenshot&lt;/a&gt;'.
      </msg>
      <status endtime="20240912 17:07:04.216" starttime="20240912 17:07:04.210" status="PASS"/>
     </kw>
     <status endtime="20240912 17:07:04.216" starttime="20240912 17:07:04.210" status="PASS"/>
    </kw>
    <status endtime="20240912 17:07:04.216" starttime="20240912 17:07:04.209" status="PASS"/>
   </kw>
   <kw library="BuiltIn" name="Set Global Variable">
    <arg>
     ${screenshot_taking}
    </arg>
    <arg>
     ${True}
    </arg>
    <doc>
     Makes a variable available globally in all tests and suites.
    </doc>
    <msg level="INFO" timestamp="20240912 17:07:04.217">
     ${screenshot_taking} = True
    </msg>
    <status endtime="20240912 17:07:04.217" starttime="20240912 17:07:04.217" status="PASS"/>
   </kw>
   <kw library="Support" name="Setup linux execution">
    <kw library="BuiltIn" name="Run Keyword And Return Status">
     <var>
      ${web_test_check}
     </var>
     <arg>
      Variable Should Exist
     </arg>
     <arg>
      ${web_test}
     </arg>
     <doc>
      Runs the given keyword with given arguments and returns the status as a Boolean value.
     </doc>
     <kw library="BuiltIn" name="Variable Should Exist">
      <arg>
       ${web_test}
      </arg>
      <doc>
       Fails unless the given variable exists within the current scope.
      </doc>
      <status endtime="20240912 17:07:04.218" starttime="20240912 17:07:04.218" status="PASS"/>
     </kw>
     <msg level="INFO" timestamp="20240912 17:07:04.218">
      ${web_test_check} = True
     </msg>
     <status endtime="20240912 17:07:04.218" starttime="20240912 17:07:04.217" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Run Keyword If">
     <arg>
      ${web_test_check}
     </arg>
     <arg>
      Setup Docker Execution Options
     </arg>
     <doc>
      Runs the given keyword with the given arguments, if ``condition`` is true.
     </doc>
     <kw library="Support_Web" name="Setup Docker Execution Options">
      <kw library="Support_Web" name="Setup Suite Metadata">
       <arg>
        ${browser}
       </arg>
       <kw library="BrowserSupport" name="Get Browser Metadata">
        <var>
         &amp;{browser_information}
        </var>
        <arg>
         browser=${browser}
        </arg>
        <doc>
         Fetches browser metadata information
:param browser: Name of the browser for which information is fetched
:param reload: Re-read the metadata based on the browser
:return: Browser metadata information, dict of format
            {"browser_version": browser version value,
             "driver_version": driver version value}
        </doc>
        <msg level="INFO" timestamp="20240912 17:07:07.725">
         &amp;{browser_information} = { browser_version=128.0.6613.138 | driver_version=128.0.6613.137  }
        </msg>
        <status endtime="20240912 17:07:07.725" starttime="20240912 17:07:04.219" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Suite Metadata">
        <arg>
         test_browser_name
        </arg>
        <arg>
         ${browser}
        </arg>
        <doc>
         Sets metadata for the current test suite.
        </doc>
        <msg level="INFO" timestamp="20240912 17:07:07.725">
         Set suite metadata 'test_browser_name' to value 'chrome'.
        </msg>
        <status endtime="20240912 17:07:07.725" starttime="20240912 17:07:07.725" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Suite Metadata">
        <arg>
         test_browser_version
        </arg>
        <arg>
         ${browser_information.browser_version}
        </arg>
        <doc>
         Sets metadata for the current test suite.
        </doc>
        <msg level="INFO" timestamp="20240912 17:07:07.725">
         Set suite metadata 'test_browser_version' to value '128.0.6613.138'.
        </msg>
        <status endtime="20240912 17:07:07.725" starttime="20240912 17:07:07.725" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Suite Metadata">
        <arg>
         test_driver_version
        </arg>
        <arg>
         ${browser_information.driver_version}
        </arg>
        <doc>
         Sets metadata for the current test suite.
        </doc>
        <msg level="INFO" timestamp="20240912 17:07:07.725">
         Set suite metadata 'test_driver_version' to value '128.0.6613.137 '.
        </msg>
        <status endtime="20240912 17:07:07.725" starttime="20240912 17:07:07.725" status="PASS"/>
       </kw>
       <status endtime="20240912 17:07:07.725" starttime="20240912 17:07:04.218" status="PASS"/>
      </kw>
      <kw library="Support_Web" name="Setup Global Docker Execution Options">
       <kw library="BuiltIn" name="Set Global Variable">
        <arg>
         ${global_browser_options}
        </arg>
        <arg>
         None
        </arg>
        <doc>
         Makes a variable available globally in all tests and suites.
        </doc>
        <msg level="INFO" timestamp="20240912 17:07:07.725">
         ${global_browser_options} = None
        </msg>
        <status endtime="20240912 17:07:07.725" starttime="20240912 17:07:07.725" status="PASS"/>
       </kw>
       <kw library="OperatingSystem" name="Get Environment Variable">
        <var>
         ${docker_check}
        </var>
        <arg>
         EXECUTION_ENVIRONMENT
        </arg>
        <arg>
         not_found
        </arg>
        <doc>
         Returns the value of an environment variable with the given name.
        </doc>
        <msg level="INFO" timestamp="20240912 17:07:07.725">
         ${docker_check} = not_found
        </msg>
        <status endtime="20240912 17:07:07.725" starttime="20240912 17:07:07.725" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Run Keyword And Return If">
        <arg>
         "${docker_check}"!="docker"
        </arg>
        <arg>
         Log
        </arg>
        <arg>
         Not executing on Docker
        </arg>
        <doc>
         Runs the specified keyword and returns from the enclosing user keyword.
        </doc>
        <kw library="BuiltIn" name="Log">
         <arg>
          Not executing on Docker
         </arg>
         <doc>
          Logs the given message with the given level.
         </doc>
         <msg level="INFO" timestamp="20240912 17:07:07.725">
          Not executing on Docker
         </msg>
         <status endtime="20240912 17:07:07.725" starttime="20240912 17:07:07.725" status="PASS"/>
        </kw>
        <msg level="INFO" timestamp="20240912 17:07:07.725">
         Returning from the enclosing user keyword.
        </msg>
        <status endtime="20240912 17:07:07.725" starttime="20240912 17:07:07.725" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Create List">
        <var>
         @{options}
        </var>
        <arg>
         --headless
        </arg>
        <arg>
         --no-sandbox
        </arg>
        <arg>
         --disable-dev-shm-usage
        </arg>
        <doc>
         Returns a list containing given items.
        </doc>
        <status endtime="20240912 17:07:07.725" starttime="20240912 17:07:07.725" status="NOT RUN"/>
       </kw>
       <kw library="BuiltIn" name="Set Global Variable">
        <arg>
         @{docker_options}
        </arg>
        <arg>
         @{options}
        </arg>
        <doc>
         Makes a variable available globally in all tests and suites.
        </doc>
        <status endtime="20240912 17:07:07.725" starttime="20240912 17:07:07.725" status="NOT RUN"/>
       </kw>
       <status endtime="20240912 17:07:07.725" starttime="20240912 17:07:07.725" status="PASS"/>
      </kw>
      <kw library="Support_Web" name="Create Webdriver for chrome preferences">
       <kw library="Support_Web" name="Update Docker Execution Options">
        <var>
         ${list_prefs}
        </var>
        <arg>
         ${list_prefs}
        </arg>
        <kw library="BuiltIn" name="Run Keyword And Return Status">
         <var>
          ${docker_check}
         </var>
         <arg>
          Variable Should Exist
         </arg>
         <arg>
          ${docker_options}
         </arg>
         <doc>
          Runs the given keyword with given arguments and returns the status as a Boolean value.
         </doc>
         <kw library="BuiltIn" name="Variable Should Exist">
          <arg>
           ${docker_options}
          </arg>
          <doc>
           Fails unless the given variable exists within the current scope.
          </doc>
          <msg level="FAIL" timestamp="20240912 17:07:07.725">
           Variable '${docker_options}' does not exist.
          </msg>
          <status endtime="20240912 17:07:07.725" starttime="20240912 17:07:07.725" status="FAIL"/>
         </kw>
         <msg level="INFO" timestamp="20240912 17:07:07.725">
          ${docker_check} = False
         </msg>
         <status endtime="20240912 17:07:07.725" starttime="20240912 17:07:07.725" status="PASS"/>
        </kw>
        <kw library="BuiltIn" name="Get Length">
         <var>
          ${list_prefs_length}
         </var>
         <arg>
          ${list_prefs}
         </arg>
         <doc>
          Returns and logs the length of the given item as an integer.
         </doc>
         <msg level="INFO" timestamp="20240912 17:07:07.725">
          Length is 1
         </msg>
         <msg level="INFO" timestamp="20240912 17:07:07.725">
          ${list_prefs_length} = 1
         </msg>
         <status endtime="20240912 17:07:07.725" starttime="20240912 17:07:07.725" status="PASS"/>
        </kw>
        <kw library="BuiltIn" name="Run Keyword If">
         <var>
          ${list_prefs}
         </var>
         <arg>
          ${docker_check} and ${list_prefs_length}&gt;0 and ${list_prefs}[0] != []
         </arg>
         <arg>
          Combine Lists
         </arg>
         <arg>
          ${list_prefs}
         </arg>
         <arg>
          ${docker_options}
         </arg>
         <arg>
          ELSE IF
         </arg>
         <arg>
          ${docker_check}
         </arg>
         <arg>
          Set Variable
         </arg>
         <arg>
          ${docker_options}
         </arg>
         <arg>
          ELSE
         </arg>
         <arg>
          Set Variable
         </arg>
         <arg>
          ${list_prefs}
         </arg>
         <doc>
          Runs the given keyword with the given arguments, if ``condition`` is true.
         </doc>
         <kw library="BuiltIn" name="Set Variable">
          <arg>
           ${list_prefs}
          </arg>
          <doc>
           Returns the given values which can then be assigned to a variables.
          </doc>
          <status endtime="20240912 17:07:07.725" starttime="20240912 17:07:07.725" status="PASS"/>
         </kw>
         <msg level="INFO" timestamp="20240912 17:07:07.725">
          ${list_prefs} = [[]]
         </msg>
         <status endtime="20240912 17:07:07.725" starttime="20240912 17:07:07.725" status="PASS"/>
        </kw>
        <msg level="INFO" timestamp="20240912 17:07:07.725">
         ${list_prefs} = [[]]
        </msg>
        <status endtime="20240912 17:07:07.725" starttime="20240912 17:07:07.725" status="PASS"/>
       </kw>
       <kw library="Support_Web" name="Create Chrome Options for download preferences">
        <var>
         ${chrome_options}
        </var>
        <kw library="BuiltIn" name="Evaluate">
         <var>
          ${chrome_options}
         </var>
         <arg>
          sys.modules['selenium.webdriver'].ChromeOptions()
         </arg>
         <arg>
          sys
         </arg>
         <doc>
          Evaluates the given expression in Python and returns the result.
         </doc>
         <msg level="INFO" timestamp="20240912 17:07:07.725">
          ${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x00000200A01F6C30&gt;
         </msg>
         <status endtime="20240912 17:07:07.725" starttime="20240912 17:07:07.725" status="PASS"/>
        </kw>
        <msg level="INFO" timestamp="20240912 17:07:07.725">
         ${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x00000200A01F6C30&gt;
        </msg>
        <status endtime="20240912 17:07:07.725" starttime="20240912 17:07:07.725" status="PASS"/>
       </kw>
       <kw library="Support_Web" name="Update Preferences List">
        <arg>
         ${chrome_options}
        </arg>
        <arg>
         @{list_prefs}
        </arg>
        <kw library="BuiltIn" name="Convert To String">
         <var>
          ${string_prefs}
         </var>
         <arg>
          ${list_prefs}
         </arg>
         <doc>
          Converts the given item to a Unicode string.
         </doc>
         <msg level="INFO" timestamp="20240912 17:07:07.725">
          ${string_prefs} = [[]]
         </msg>
         <status endtime="20240912 17:07:07.725" starttime="20240912 17:07:07.725" status="PASS"/>
        </kw>
        <kw library="BuiltIn" name="Return From Keyword If">
         <arg>
          ${string_prefs} == [[]]
         </arg>
         <doc>
          Returns from the enclosing user keyword if ``condition`` is true.
         </doc>
         <msg level="INFO" timestamp="20240912 17:07:07.725">
          Returning from the enclosing user keyword.
         </msg>
         <status endtime="20240912 17:07:07.725" starttime="20240912 17:07:07.725" status="PASS"/>
        </kw>
        <for flavor="IN">
         <var>
          ${preference}
         </var>
         <value>
          @{list_prefs}
         </value>
         <iter>
          <var name="${preference}"/>
          <kw library="BuiltIn" name="Call Method">
           <arg>
            ${chrome_options}
           </arg>
           <arg>
            add_argument
           </arg>
           <arg>
            ${preference}
           </arg>
           <doc>
            Calls the named method of the given object with the provided arguments.
           </doc>
           <status endtime="20240912 17:07:07.725" starttime="20240912 17:07:07.725" status="NOT RUN"/>
          </kw>
          <status endtime="20240912 17:07:07.725" starttime="20240912 17:07:07.725" status="NOT RUN"/>
         </iter>
         <status endtime="20240912 17:07:07.725" starttime="20240912 17:07:07.725" status="NOT RUN"/>
        </for>
        <status endtime="20240912 17:07:07.725" starttime="20240912 17:07:07.725" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Call Method">
        <arg>
         ${chrome_options}
        </arg>
        <arg>
         add_experimental_option
        </arg>
        <arg>
         prefs
        </arg>
        <arg>
         ${kw_prefs}
        </arg>
        <doc>
         Calls the named method of the given object with the provided arguments.
        </doc>
        <status endtime="20240912 17:07:07.725" starttime="20240912 17:07:07.725" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Global Variable">
        <arg>
         ${global_browser_options}
        </arg>
        <arg>
         ${chrome options}
        </arg>
        <doc>
         Makes a variable available globally in all tests and suites.
        </doc>
        <msg level="INFO" timestamp="20240912 17:07:07.725">
         ${global_browser_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x00000200A01F6C30&gt;
        </msg>
        <status endtime="20240912 17:07:07.725" starttime="20240912 17:07:07.725" status="PASS"/>
       </kw>
       <status endtime="20240912 17:07:07.725" starttime="20240912 17:07:07.725" status="PASS"/>
      </kw>
      <status endtime="20240912 17:07:07.725" starttime="20240912 17:07:04.218" status="PASS"/>
     </kw>
     <status endtime="20240912 17:07:07.725" starttime="20240912 17:07:04.218" status="PASS"/>
    </kw>
    <status endtime="20240912 17:07:07.725" starttime="20240912 17:07:04.217" status="PASS"/>
   </kw>
   <kw library="BuiltIn" name="Set Suite Metadata">
    <arg>
     environment
    </arg>
    <arg>
     ${test_server}
    </arg>
    <doc>
     Sets metadata for the current test suite.
    </doc>
    <msg level="INFO" timestamp="20240912 17:07:07.725">
     Set suite metadata 'environment' to value 'Dev'.
    </msg>
    <status endtime="20240912 17:07:07.725" starttime="20240912 17:07:07.725" status="PASS"/>
   </kw>
   <status endtime="20240912 17:07:07.725" starttime="20240912 17:07:04.208" status="PASS"/>
  </kw>
  <suite id="s1-s1" name="Test STRUST" source="C:\SAP_Testing\SAPtesting\Tests\Test_STRUST.robot">
   <kw library="STRUST" name="System Logon" type="SETUP">
    <kw library="Process" name="Start Process">
     <arg>
      ${symvar('SAP_SERVER')}
     </arg>
     <doc>
      Starts a new process on background.
     </doc>
     <msg level="INFO" timestamp="20240912 17:07:07.841">
      Sym.Dev.SAP_SERVER: C:\Program Files\SAP\FrontEnd\SAPGUI\saplogon.exe
     </msg>
     <msg level="INFO" timestamp="20240912 17:07:07.841">
      Starting process:
"C:\Program Files\SAP\FrontEnd\SAPGUI\saplogon.exe"
     </msg>
     <status endtime="20240912 17:07:07.841" starttime="20240912 17:07:07.841" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      2s
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240912 17:07:09.842">
      Slept 2 seconds
     </msg>
     <status endtime="20240912 17:07:09.842" starttime="20240912 17:07:07.841" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Connect To Session">
     <doc>
      Connects to an open session SAP.
     </doc>
     <status endtime="20240912 17:07:09.842" starttime="20240912 17:07:09.842" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Open Connection">
     <arg>
      ${symvar('SAP_connection')}
     </arg>
     <doc>
      Opens a connection to the given connection name. Be sure to provide the full connection name, including the bracket part.
     </doc>
     <msg level="INFO" timestamp="20240912 17:07:09.842">
      Sym.Dev.SAP_connection: BIS
     </msg>
     <status endtime="20240912 17:07:10.692" starttime="20240912 17:07:09.842" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Input Text">
     <arg>
      wnd[0]/usr/txtRSYST-MANDT
     </arg>
     <arg>
      ${symvar('Client_Id')}
     </arg>
     <doc>
      Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.
     </doc>
     <msg level="INFO" timestamp="20240912 17:07:10.695">
      Sym.Dev.Client_Id: 001
     </msg>
     <msg level="INFO" timestamp="20240912 17:07:10.728">
      Typing text '001' into text field 'wnd[0]/usr/txtRSYST-MANDT'.
     </msg>
     <status endtime="20240912 17:07:10.728" starttime="20240912 17:07:10.694" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Input Text">
     <arg>
      wnd[0]/usr/txtRSYST-BNAME
     </arg>
     <arg>
      ${symvar('User_Name')}
     </arg>
     <doc>
      Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.
     </doc>
     <msg level="INFO" timestamp="20240912 17:07:10.729">
      Sym.Dev.User_Name: SELENIUM
     </msg>
     <msg level="INFO" timestamp="20240912 17:07:10.741">
      Typing text 'SELENIUM' into text field 'wnd[0]/usr/txtRSYST-BNAME'.
     </msg>
     <status endtime="20240912 17:07:10.741" starttime="20240912 17:07:10.729" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Input Password">
     <arg>
      wnd[0]/usr/pwdRSYST-BCODE
     </arg>
     <arg>
      %{SAP_PASSWORD}
     </arg>
     <doc>
      Inserts the given password into the text field identified by locator.
The password is not recorded in the log.
     </doc>
     <msg level="INFO" timestamp="20240912 17:07:10.746">
      Typing password into text field 'wnd[0]/usr/pwdRSYST-BCODE'.
     </msg>
     <status endtime="20240912 17:07:10.746" starttime="20240912 17:07:10.741" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Send Vkey">
     <arg>
      0
     </arg>
     <doc>
      Sends a SAP virtual key combination to the window, not into an element.
If you want to send a value to a text field, use `input text` instead.
     </doc>
     <status endtime="20240912 17:07:11.462" starttime="20240912 17:07:10.746" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Multiple Logon Handling">
     <arg>
      wnd[1]
     </arg>
     <arg>
      wnd[1]/usr/radMULTI_LOGON_OPT2
     </arg>
     <arg>
      wnd[1]/tbar[0]/btn[0]
     </arg>
     <status endtime="20240912 17:07:11.500" starttime="20240912 17:07:11.462" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      1
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240912 17:07:12.501">
      Slept 1 second
     </msg>
     <status endtime="20240912 17:07:12.501" starttime="20240912 17:07:11.500" status="PASS"/>
    </kw>
    <status endtime="20240912 17:07:12.501" starttime="20240912 17:07:07.841" status="PASS"/>
   </kw>
   <test id="s1-s1-t1" line="9" name="Executing STRUST">
    <kw library="STRUST" name="Transaction STRUST">
     <kw library="SAP_Tcode_Library" name="Run Transaction">
      <arg>
       /nstrust
      </arg>
      <doc>
       Runs a Sap transaction. An error is given when an unknown transaction is specified.
      </doc>
      <status endtime="20240912 17:07:13.324" starttime="20240912 17:07:12.501" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Send Vkey">
      <arg>
       0
      </arg>
      <doc>
       Sends a SAP virtual key combination to the window, not into an element.
If you want to send a value to a text field, use `input text` instead.
      </doc>
      <status endtime="20240912 17:07:13.757" starttime="20240912 17:07:13.324" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       029_PSE.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240912 17:07:13.842">
       &lt;a href="pabot_results%5C0%5C029_PSE.jpg"&gt;&lt;img src="pabot_results%5C0%5C029_PSE.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240912 17:07:13.842" starttime="20240912 17:07:13.757" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240912 17:07:15.842">
       Slept 2 seconds
      </msg>
      <status endtime="20240912 17:07:15.842" starttime="20240912 17:07:13.842" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Scroll Pagedown">
      <arg>
       wnd[0]/usr/btnCERTDETAIL
      </arg>
      <status endtime="20240912 17:07:15.874" starttime="20240912 17:07:15.842" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240912 17:07:17.874">
       Slept 2 seconds
      </msg>
      <status endtime="20240912 17:07:17.874" starttime="20240912 17:07:15.874" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       030_PSE.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240912 17:07:17.929">
       &lt;a href="pabot_results%5C0%5C030_PSE.jpg"&gt;&lt;img src="pabot_results%5C0%5C030_PSE.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240912 17:07:17.929" starttime="20240912 17:07:17.874" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240912 17:07:19.929">
       Slept 2 seconds
      </msg>
      <status endtime="20240912 17:07:19.929" starttime="20240912 17:07:17.929" status="PASS"/>
     </kw>
     <status endtime="20240912 17:07:19.929" starttime="20240912 17:07:12.501" status="PASS"/>
    </kw>
    <kw library="STRUST" name="SSF Logon Ticket">
     <kw library="SAP_Tcode_Library" name="Double Click On Tree Item">
      <arg>
       wnd[0]/shellcont/shell
      </arg>
      <arg>
       SSFASSO2
      </arg>
      <status endtime="20240912 17:07:20.387" starttime="20240912 17:07:19.929" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240912 17:07:22.388">
       Slept 2 seconds
      </msg>
      <status endtime="20240912 17:07:22.388" starttime="20240912 17:07:20.387" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       039_SSFASSO2.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240912 17:07:22.435">
       &lt;a href="pabot_results%5C0%5C039_SSFASSO2.jpg"&gt;&lt;img src="pabot_results%5C0%5C039_SSFASSO2.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240912 17:07:22.435" starttime="20240912 17:07:22.388" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240912 17:07:24.435">
       Slept 2 seconds
      </msg>
      <status endtime="20240912 17:07:24.435" starttime="20240912 17:07:22.435" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Scroll Pagedown">
      <arg>
       wnd[0]/usr/btnCERTDETAIL
      </arg>
      <status endtime="20240912 17:07:24.466" starttime="20240912 17:07:24.435" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240912 17:07:26.466">
       Slept 2 seconds
      </msg>
      <status endtime="20240912 17:07:26.466" starttime="20240912 17:07:24.466" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       040_SSFASSO2.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240912 17:07:26.498">
       &lt;a href="pabot_results%5C0%5C040_SSFASSO2.jpg"&gt;&lt;img src="pabot_results%5C0%5C040_SSFASSO2.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240912 17:07:26.498" starttime="20240912 17:07:26.466" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Log">
      <arg>
       ${SCREENSHOT_PATH}
      </arg>
      <doc>
       Logs the given message with the given level.
      </doc>
      <msg level="INFO" timestamp="20240912 17:07:26.498">
       C:\SAP_Testing\SAPtesting\Output\pabot_results\0
      </msg>
      <status endtime="20240912 17:07:26.498" starttime="20240912 17:07:26.498" status="PASS"/>
     </kw>
     <kw library="Merger" name="Create Pdf">
      <arg>
       ${symvar('symphony_job_id')}
      </arg>
      <arg>
       ${SCREENSHOT_PATH}
      </arg>
      <msg level="INFO" timestamp="20240912 17:07:26.498">
       Sym.Dev.symphony_job_id: 3456
      </msg>
      <msg level="INFO" timestamp="20240912 17:07:29.629">
       Test case file: C:\SAP_Testing\SAPtesting\Tests\Test_STRUST.robot
Symphony Job ID: 3456
Screenshot directory: C:\SAP_Testing\SAPtesting\Output\pabot_results\0
Reports directory found: C:\SAP_Testing\SAPtesting\Reports
Output PDF path: C:\SAP_Testing\SAPtesting\Reports\3456\Test_STRUST.pdf
PDF created successfully: C:\SAP_Testing\SAPtesting\Reports\3456\Test_STRUST.pdf
      </msg>
      <status endtime="20240912 17:07:29.629" starttime="20240912 17:07:26.498" status="PASS"/>
     </kw>
     <status endtime="20240912 17:07:29.629" starttime="20240912 17:07:19.929" status="PASS"/>
    </kw>
    <tag>
     STRUST
    </tag>
    <status endtime="20240912 17:07:29.629" starttime="20240912 17:07:12.501" status="PASS"/>
   </test>
   <kw library="STRUST" name="System Logout" type="TEARDOWN">
    <kw library="SAP_Tcode_Library" name="Run Transaction">
     <arg>
      /nex
     </arg>
     <doc>
      Runs a Sap transaction. An error is given when an unknown transaction is specified.
     </doc>
     <status endtime="20240912 17:07:29.845" starttime="20240912 17:07:29.629" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      1
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240912 17:07:30.846">
      Slept 1 second
     </msg>
     <status endtime="20240912 17:07:30.846" starttime="20240912 17:07:29.845" status="PASS"/>
    </kw>
    <status endtime="20240912 17:07:30.846" starttime="20240912 17:07:29.629" status="PASS"/>
   </kw>
   <status endtime="20240912 17:07:30.846" starttime="20240912 17:07:07.725" status="PASS"/>
  </suite>
  <doc>
   Testing functionality through Robot Framework
  </doc>
  <meta name="environment">
   Dev
  </meta>
  <meta name="test_browser_name">
   chrome
  </meta>
  <meta name="test_browser_version">
   128.0.6613.138
  </meta>
  <meta name="test_driver_version">
   128.0.6613.137
  </meta>
  <meta name="test_environment">
   Dev
  </meta>
  <meta name="test_freeze_dependencies">
   astroid==3.1.0,attrs==23.2.0,beautifulsoup4==4.12.3,bs4==0.0.2,certifi==2024.2.2,cffi==1.16.0,chardet==5.2.0,charset-normalizer==3.3.2,click==8.1.7,colorama==0.4.6,cryptography==42.0.5,defusedxml==0.7.1,dill==0.3.8,docutils==0.20.1,docx==0.2.4,docx2pdf==0.1.8,et-xmlfile==1.1.0,exceptiongroup==1.2.0,fsspec==2024.5.0,gitdb==4.0.11,GitPython==3.1.42,h11==0.14.0,idna==3.6,isort==5.13.2,Jinja2==3.1.3,jira==3.6.0,jsonpath-ng==1.6.1,jsonschema==4.21.1,jsonschema-specifications==2023.12.1,lazy-object-proxy==1.10.0,lxml==5.1.0,markdown-it-py==3.0.0,MarkupSafe==2.1.5,mccabe==0.7.0,mdurl==0.1.2,natsort==8.4.0,numpy==1.26.4,oauthlib==3.2.2,openpyxl==3.1.2,outcome==1.3.0.post0,packaging==24.0,pandas==2.2.2,pathspec==0.11.2,pillow==10.2.0,pip==24.0,platformdirs==4.2.0,ply==3.11,pycparser==2.21,Pygments==2.17.2,pylint==3.1.0,PyPDF2==3.0.1,PySocks==1.7.1,python-dateutil==2.9.0.post0,python-docx==1.1.2,pytz==2024.1,pywin32==306,PyYAML==6.0.1,referencing==0.33.0,reportlab==4.2.0,requests==2.31.0,requests-oauthlib==1.4.0,requests-toolbelt==1.0.0,rich==13.7.1,rich-click==1.6.1,robotframework==6.0.2,robotframework-datadriver==1.9.0,robotframework-jsonlibrary==0.5,robotframework-pabot==2.16.0,robotframework-pythonlibcore==4.2.0,robotframework-requests==0.9.2,robotframework-sapguilibrary==1.1,robotframework-seleniumlibrary==5.1.3,robotframework-stacktrace==0.4.1,robotframework-tidy==4.5.0,rpds-py==0.18.0,selenium==4.9.1,setuptools==69.2.0,six==1.16.0,smmap==5.0.1,sniffio==1.3.1,sortedcontainers==2.4.0,soupsieve==2.5,tomli==2.0.1,tomlkit==0.12.4,tqdm==4.66.4,trio==0.24.0,trio-websocket==0.11.1,typing_extensions==4.10.0,tzdata==2024.1,urllib3==2.2.1,wheel==0.43.0,wrapt==1.16.0,wsproto==1.2.0
  </meta>
  <status endtime="20240912 17:07:31.166" starttime="20240912 17:07:03.951" status="PASS"/>
 </suite>
 <statistics>
  <total>
   <stat fail="0" pass="1" skip="0">
    All Tests
   </stat>
  </total>
  <tag>
   <stat fail="0" pass="1" skip="0">
    STRUST
   </stat>
  </tag>
  <suite>
   <stat fail="0" id="s1" name="Tests" pass="1" skip="0">
    Tests
   </stat>
   <stat fail="0" id="s1-s1" name="Test STRUST" pass="1" skip="0">
    Tests.Test STRUST
   </stat>
  </suite>
 </statistics>
 <errors>
 </errors>
</robot>
