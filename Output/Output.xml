<?xml version="1.0" encoding="utf-8"?>
<robot generated="20240222 13:59:35.421" generator="Rebot 6.0.2 (Python 3.12.1 on win32)" rpa="false" schemaversion="3">
 <suite id="s1" name="Tests" source="C:\SAP_Testing\SAPtesting\Tests">
  <kw name="Setup highest level suite" type="SETUP">
   <kw library="BuiltIn" name="Set Variable">
    <var>
     ${d.test_server}
    </var>
    <arg>
     ${test_server}
    </arg>
    <doc>
     Returns the given values which can then be assigned to a variables.
    </doc>
    <msg level="INFO" timestamp="20240222 13:57:52.848">
     ${d.test_server} = Dev
    </msg>
    <status endtime="20240222 13:57:52.848" starttime="20240222 13:57:52.847" status="PASS"/>
   </kw>
   <kw library="Support" name="Reset screenshot count variable">
    <kw library="BuiltIn" name="Set Variable">
     <var>
      ${screenshotCount}
     </var>
     <arg>
      ${PABOTQUEUEINDEX}_1
     </arg>
     <doc>
      Returns the given values which can then be assigned to a variables.
     </doc>
     <msg level="INFO" timestamp="20240222 13:57:52.849">
      ${screenshotCount} = 0_1
     </msg>
     <status endtime="20240222 13:57:52.849" starttime="20240222 13:57:52.848" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Set Global Variable">
     <arg>
      ${screenshotCount}
     </arg>
     <doc>
      Makes a variable available globally in all tests and suites.
     </doc>
     <msg level="INFO" timestamp="20240222 13:57:52.850">
      ${screenshotCount} = 0_1
     </msg>
     <status endtime="20240222 13:57:52.850" starttime="20240222 13:57:52.849" status="PASS"/>
    </kw>
    <kw library="Support" name="Set up screenshot directory">
     <kw library="OperatingSystem" name="Create Directory">
      <arg>
       ${OUTPUTDIR}${/}${wvar('screenshot_dir')}
      </arg>
      <doc>
       Creates the specified directory.
      </doc>
      <msg level="INFO" timestamp="20240222 13:57:52.851">
       Web.Dev.screenshot_dir: Screenshot
      </msg>
      <msg html="true" level="INFO" timestamp="20240222 13:57:52.856">
       Created directory '&lt;a href="file://C:\SAP_Testing\SAPtesting\Output\pabot_results\0\Screenshot"&gt;C:\SAP_Testing\SAPtesting\Output\pabot_results\0\Screenshot&lt;/a&gt;'.
      </msg>
      <status endtime="20240222 13:57:52.856" starttime="20240222 13:57:52.850" status="PASS"/>
     </kw>
     <status endtime="20240222 13:57:52.856" starttime="20240222 13:57:52.850" status="PASS"/>
    </kw>
    <status endtime="20240222 13:57:52.857" starttime="20240222 13:57:52.848" status="PASS"/>
   </kw>
   <kw library="BuiltIn" name="Set Global Variable">
    <arg>
     ${screenshot_taking}
    </arg>
    <arg>
     ${True}
    </arg>
    <doc>
     Makes a variable available globally in all tests and suites.
    </doc>
    <msg level="INFO" timestamp="20240222 13:57:52.857">
     ${screenshot_taking} = True
    </msg>
    <status endtime="20240222 13:57:52.857" starttime="20240222 13:57:52.857" status="PASS"/>
   </kw>
   <kw library="Support" name="Setup linux execution">
    <kw library="BuiltIn" name="Run Keyword And Return Status">
     <var>
      ${web_test_check}
     </var>
     <arg>
      Variable Should Exist
     </arg>
     <arg>
      ${web_test}
     </arg>
     <doc>
      Runs the given keyword with given arguments and returns the status as a Boolean value.
     </doc>
     <kw library="BuiltIn" name="Variable Should Exist">
      <arg>
       ${web_test}
      </arg>
      <doc>
       Fails unless the given variable exists within the current scope.
      </doc>
      <status endtime="20240222 13:57:52.858" starttime="20240222 13:57:52.858" status="PASS"/>
     </kw>
     <msg level="INFO" timestamp="20240222 13:57:52.859">
      ${web_test_check} = True
     </msg>
     <status endtime="20240222 13:57:52.859" starttime="20240222 13:57:52.858" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Run Keyword If">
     <arg>
      ${web_test_check}
     </arg>
     <arg>
      Setup Docker Execution Options
     </arg>
     <doc>
      Runs the given keyword with the given arguments, if ``condition`` is true.
     </doc>
     <kw library="Support_Web" name="Setup Docker Execution Options">
      <kw library="Support_Web" name="Setup Suite Metadata">
       <arg>
        ${browser}
       </arg>
       <kw library="BrowserSupport" name="Get Browser Metadata">
        <var>
         &amp;{browser_information}
        </var>
        <arg>
         browser=${browser}
        </arg>
        <doc>
         Fetches browser metadata information
:param browser: Name of the browser for which information is fetched
:param reload: Re-read the metadata based on the browser
:return: Browser metadata information, dict of format
            {"browser_version": browser version value,
             "driver_version": driver version value}
        </doc>
        <msg level="INFO" timestamp="20240222 13:57:56.130">
         &amp;{browser_information} = { browser_version=122.0.6261.57 | driver_version=121.0.6167.85  }
        </msg>
        <status endtime="20240222 13:57:56.130" starttime="20240222 13:57:52.860" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Suite Metadata">
        <arg>
         test_browser_name
        </arg>
        <arg>
         ${browser}
        </arg>
        <doc>
         Sets metadata for the current test suite.
        </doc>
        <msg level="INFO" timestamp="20240222 13:57:56.130">
         Set suite metadata 'test_browser_name' to value 'chrome'.
        </msg>
        <status endtime="20240222 13:57:56.130" starttime="20240222 13:57:56.130" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Suite Metadata">
        <arg>
         test_browser_version
        </arg>
        <arg>
         ${browser_information.browser_version}
        </arg>
        <doc>
         Sets metadata for the current test suite.
        </doc>
        <msg level="INFO" timestamp="20240222 13:57:56.130">
         Set suite metadata 'test_browser_version' to value '122.0.6261.57'.
        </msg>
        <status endtime="20240222 13:57:56.130" starttime="20240222 13:57:56.130" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Suite Metadata">
        <arg>
         test_driver_version
        </arg>
        <arg>
         ${browser_information.driver_version}
        </arg>
        <doc>
         Sets metadata for the current test suite.
        </doc>
        <msg level="INFO" timestamp="20240222 13:57:56.130">
         Set suite metadata 'test_driver_version' to value '121.0.6167.85 '.
        </msg>
        <status endtime="20240222 13:57:56.130" starttime="20240222 13:57:56.130" status="PASS"/>
       </kw>
       <status endtime="20240222 13:57:56.130" starttime="20240222 13:57:52.859" status="PASS"/>
      </kw>
      <kw library="Support_Web" name="Setup Global Docker Execution Options">
       <kw library="BuiltIn" name="Set Global Variable">
        <arg>
         ${global_browser_options}
        </arg>
        <arg>
         None
        </arg>
        <doc>
         Makes a variable available globally in all tests and suites.
        </doc>
        <msg level="INFO" timestamp="20240222 13:57:56.130">
         ${global_browser_options} = None
        </msg>
        <status endtime="20240222 13:57:56.130" starttime="20240222 13:57:56.130" status="PASS"/>
       </kw>
       <kw library="OperatingSystem" name="Get Environment Variable">
        <var>
         ${docker_check}
        </var>
        <arg>
         EXECUTION_ENVIRONMENT
        </arg>
        <arg>
         not_found
        </arg>
        <doc>
         Returns the value of an environment variable with the given name.
        </doc>
        <msg level="INFO" timestamp="20240222 13:57:56.130">
         ${docker_check} = not_found
        </msg>
        <status endtime="20240222 13:57:56.130" starttime="20240222 13:57:56.130" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Run Keyword And Return If">
        <arg>
         "${docker_check}"!="docker"
        </arg>
        <arg>
         Log
        </arg>
        <arg>
         Not executing on Docker
        </arg>
        <doc>
         Runs the specified keyword and returns from the enclosing user keyword.
        </doc>
        <kw library="BuiltIn" name="Log">
         <arg>
          Not executing on Docker
         </arg>
         <doc>
          Logs the given message with the given level.
         </doc>
         <msg level="INFO" timestamp="20240222 13:57:56.130">
          Not executing on Docker
         </msg>
         <status endtime="20240222 13:57:56.130" starttime="20240222 13:57:56.130" status="PASS"/>
        </kw>
        <msg level="INFO" timestamp="20240222 13:57:56.130">
         Returning from the enclosing user keyword.
        </msg>
        <status endtime="20240222 13:57:56.130" starttime="20240222 13:57:56.130" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Create List">
        <var>
         @{options}
        </var>
        <arg>
         --headless
        </arg>
        <arg>
         --no-sandbox
        </arg>
        <arg>
         --disable-dev-shm-usage
        </arg>
        <doc>
         Returns a list containing given items.
        </doc>
        <status endtime="20240222 13:57:56.130" starttime="20240222 13:57:56.130" status="NOT RUN"/>
       </kw>
       <kw library="BuiltIn" name="Set Global Variable">
        <arg>
         @{docker_options}
        </arg>
        <arg>
         @{options}
        </arg>
        <doc>
         Makes a variable available globally in all tests and suites.
        </doc>
        <status endtime="20240222 13:57:56.130" starttime="20240222 13:57:56.130" status="NOT RUN"/>
       </kw>
       <status endtime="20240222 13:57:56.130" starttime="20240222 13:57:56.130" status="PASS"/>
      </kw>
      <kw library="Support_Web" name="Create Webdriver for chrome preferences">
       <kw library="Support_Web" name="Update Docker Execution Options">
        <var>
         ${list_prefs}
        </var>
        <arg>
         ${list_prefs}
        </arg>
        <kw library="BuiltIn" name="Run Keyword And Return Status">
         <var>
          ${docker_check}
         </var>
         <arg>
          Variable Should Exist
         </arg>
         <arg>
          ${docker_options}
         </arg>
         <doc>
          Runs the given keyword with given arguments and returns the status as a Boolean value.
         </doc>
         <kw library="BuiltIn" name="Variable Should Exist">
          <arg>
           ${docker_options}
          </arg>
          <doc>
           Fails unless the given variable exists within the current scope.
          </doc>
          <msg level="FAIL" timestamp="20240222 13:57:56.130">
           Variable '${docker_options}' does not exist.
          </msg>
          <status endtime="20240222 13:57:56.130" starttime="20240222 13:57:56.130" status="FAIL"/>
         </kw>
         <msg level="INFO" timestamp="20240222 13:57:56.130">
          ${docker_check} = False
         </msg>
         <status endtime="20240222 13:57:56.130" starttime="20240222 13:57:56.130" status="PASS"/>
        </kw>
        <kw library="BuiltIn" name="Get Length">
         <var>
          ${list_prefs_length}
         </var>
         <arg>
          ${list_prefs}
         </arg>
         <doc>
          Returns and logs the length of the given item as an integer.
         </doc>
         <msg level="INFO" timestamp="20240222 13:57:56.130">
          Length is 1
         </msg>
         <msg level="INFO" timestamp="20240222 13:57:56.130">
          ${list_prefs_length} = 1
         </msg>
         <status endtime="20240222 13:57:56.130" starttime="20240222 13:57:56.130" status="PASS"/>
        </kw>
        <kw library="BuiltIn" name="Run Keyword If">
         <var>
          ${list_prefs}
         </var>
         <arg>
          ${docker_check} and ${list_prefs_length}&gt;0 and ${list_prefs}[0] != []
         </arg>
         <arg>
          Combine Lists
         </arg>
         <arg>
          ${list_prefs}
         </arg>
         <arg>
          ${docker_options}
         </arg>
         <arg>
          ELSE IF
         </arg>
         <arg>
          ${docker_check}
         </arg>
         <arg>
          Set Variable
         </arg>
         <arg>
          ${docker_options}
         </arg>
         <arg>
          ELSE
         </arg>
         <arg>
          Set Variable
         </arg>
         <arg>
          ${list_prefs}
         </arg>
         <doc>
          Runs the given keyword with the given arguments, if ``condition`` is true.
         </doc>
         <kw library="BuiltIn" name="Set Variable">
          <arg>
           ${list_prefs}
          </arg>
          <doc>
           Returns the given values which can then be assigned to a variables.
          </doc>
          <status endtime="20240222 13:57:56.143" starttime="20240222 13:57:56.143" status="PASS"/>
         </kw>
         <msg level="INFO" timestamp="20240222 13:57:56.143">
          ${list_prefs} = [[]]
         </msg>
         <status endtime="20240222 13:57:56.143" starttime="20240222 13:57:56.143" status="PASS"/>
        </kw>
        <msg level="INFO" timestamp="20240222 13:57:56.143">
         ${list_prefs} = [[]]
        </msg>
        <status endtime="20240222 13:57:56.143" starttime="20240222 13:57:56.130" status="PASS"/>
       </kw>
       <kw library="Support_Web" name="Create Chrome Options for download preferences">
        <var>
         ${chrome_options}
        </var>
        <kw library="BuiltIn" name="Evaluate">
         <var>
          ${chrome_options}
         </var>
         <arg>
          sys.modules['selenium.webdriver'].ChromeOptions()
         </arg>
         <arg>
          sys
         </arg>
         <doc>
          Evaluates the given expression in Python and returns the result.
         </doc>
         <msg level="INFO" timestamp="20240222 13:57:56.143">
          ${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x000001E452C49460&gt;
         </msg>
         <status endtime="20240222 13:57:56.143" starttime="20240222 13:57:56.143" status="PASS"/>
        </kw>
        <msg level="INFO" timestamp="20240222 13:57:56.143">
         ${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x000001E452C49460&gt;
        </msg>
        <status endtime="20240222 13:57:56.143" starttime="20240222 13:57:56.143" status="PASS"/>
       </kw>
       <kw library="Support_Web" name="Update Preferences List">
        <arg>
         ${chrome_options}
        </arg>
        <arg>
         @{list_prefs}
        </arg>
        <kw library="BuiltIn" name="Convert To String">
         <var>
          ${string_prefs}
         </var>
         <arg>
          ${list_prefs}
         </arg>
         <doc>
          Converts the given item to a Unicode string.
         </doc>
         <msg level="INFO" timestamp="20240222 13:57:56.145">
          ${string_prefs} = [[]]
         </msg>
         <status endtime="20240222 13:57:56.145" starttime="20240222 13:57:56.145" status="PASS"/>
        </kw>
        <kw library="BuiltIn" name="Return From Keyword If">
         <arg>
          ${string_prefs} == [[]]
         </arg>
         <doc>
          Returns from the enclosing user keyword if ``condition`` is true.
         </doc>
         <msg level="INFO" timestamp="20240222 13:57:56.145">
          Returning from the enclosing user keyword.
         </msg>
         <status endtime="20240222 13:57:56.145" starttime="20240222 13:57:56.145" status="PASS"/>
        </kw>
        <for flavor="IN">
         <var>
          ${preference}
         </var>
         <value>
          @{list_prefs}
         </value>
         <iter>
          <var name="${preference}"/>
          <kw library="BuiltIn" name="Call Method">
           <arg>
            ${chrome_options}
           </arg>
           <arg>
            add_argument
           </arg>
           <arg>
            ${preference}
           </arg>
           <doc>
            Calls the named method of the given object with the provided arguments.
           </doc>
           <status endtime="20240222 13:57:56.145" starttime="20240222 13:57:56.145" status="NOT RUN"/>
          </kw>
          <status endtime="20240222 13:57:56.145" starttime="20240222 13:57:56.145" status="NOT RUN"/>
         </iter>
         <status endtime="20240222 13:57:56.145" starttime="20240222 13:57:56.145" status="NOT RUN"/>
        </for>
        <status endtime="20240222 13:57:56.145" starttime="20240222 13:57:56.143" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Call Method">
        <arg>
         ${chrome_options}
        </arg>
        <arg>
         add_experimental_option
        </arg>
        <arg>
         prefs
        </arg>
        <arg>
         ${kw_prefs}
        </arg>
        <doc>
         Calls the named method of the given object with the provided arguments.
        </doc>
        <status endtime="20240222 13:57:56.145" starttime="20240222 13:57:56.145" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Global Variable">
        <arg>
         ${global_browser_options}
        </arg>
        <arg>
         ${chrome options}
        </arg>
        <doc>
         Makes a variable available globally in all tests and suites.
        </doc>
        <msg level="INFO" timestamp="20240222 13:57:56.145">
         ${global_browser_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x000001E452C49460&gt;
        </msg>
        <status endtime="20240222 13:57:56.145" starttime="20240222 13:57:56.145" status="PASS"/>
       </kw>
       <status endtime="20240222 13:57:56.145" starttime="20240222 13:57:56.130" status="PASS"/>
      </kw>
      <status endtime="20240222 13:57:56.145" starttime="20240222 13:57:52.859" status="PASS"/>
     </kw>
     <status endtime="20240222 13:57:56.145" starttime="20240222 13:57:52.859" status="PASS"/>
    </kw>
    <status endtime="20240222 13:57:56.145" starttime="20240222 13:57:52.857" status="PASS"/>
   </kw>
   <kw library="BuiltIn" name="Set Suite Metadata">
    <arg>
     environment
    </arg>
    <arg>
     ${test_server}
    </arg>
    <doc>
     Sets metadata for the current test suite.
    </doc>
    <msg level="INFO" timestamp="20240222 13:57:56.145">
     Set suite metadata 'environment' to value 'Dev'.
    </msg>
    <status endtime="20240222 13:57:56.145" starttime="20240222 13:57:56.145" status="PASS"/>
   </kw>
   <status endtime="20240222 13:57:56.145" starttime="20240222 13:57:52.847" status="PASS"/>
  </kw>
  <suite id="s1-s1" name="Test spam patch enhance" source="C:\SAP_Testing\SAPtesting\Tests\Test_spam_patch_enhance.robot">
   <test id="s1-s1-t1" line="6" name="Check RBT Logon">
    <kw library="Spam_Patch_enhance" name="RBT Logon">
     <kw library="Process" name="Start Process">
      <arg>
       ${EXE_PAD}
      </arg>
      <doc>
       Starts a new process on background.
      </doc>
      <msg level="INFO" timestamp="20240222 13:57:56.161">
       Starting process:
"C:\Program Files (x86)\SAP\FrontEnd\SAPgui\saplogon.exe"
      </msg>
      <status endtime="20240222 13:57:56.161" starttime="20240222 13:57:56.161" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       5s
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240222 13:58:01.161">
       Slept 5 seconds
      </msg>
      <status endtime="20240222 13:58:01.161" starttime="20240222 13:57:56.161" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Connect To Session">
      <doc>
       Connects to an open session SAP.
      </doc>
      <status endtime="20240222 13:58:01.167" starttime="20240222 13:58:01.161" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       5
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240222 13:58:06.167">
       Slept 5 seconds
      </msg>
      <status endtime="20240222 13:58:06.167" starttime="20240222 13:58:01.167" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Open Connection">
      <arg>
       ${Connection_Name}
      </arg>
      <doc>
       Opens a connection to the given connection name. Be sure to provide the full connection name, including the bracket part.
      </doc>
      <status endtime="20240222 13:58:07.819" starttime="20240222 13:58:06.167" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       5
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240222 13:58:12.819">
       Slept 5 seconds
      </msg>
      <status endtime="20240222 13:58:12.819" starttime="20240222 13:58:07.819" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Input Text">
      <arg>
       wnd[0]/usr/txtRSYST-MANDT
      </arg>
      <arg>
       ${SAP_CLIENT}
      </arg>
      <doc>
       Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.
      </doc>
      <msg level="INFO" timestamp="20240222 13:58:12.823">
       Typing text '000' into text field 'wnd[0]/usr/txtRSYST-MANDT'.
      </msg>
      <status endtime="20240222 13:58:12.823" starttime="20240222 13:58:12.820" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240222 13:58:13.824">
       Slept 1 second
      </msg>
      <status endtime="20240222 13:58:13.824" starttime="20240222 13:58:12.823" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Input Text">
      <arg>
       wnd[0]/usr/txtRSYST-BNAME
      </arg>
      <arg>
       ${SAP_USER}
      </arg>
      <doc>
       Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.
      </doc>
      <msg level="INFO" timestamp="20240222 13:58:13.837">
       Typing text 'DDIC' into text field 'wnd[0]/usr/txtRSYST-BNAME'.
      </msg>
      <status endtime="20240222 13:58:13.837" starttime="20240222 13:58:13.824" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240222 13:58:14.838">
       Slept 1 second
      </msg>
      <status endtime="20240222 13:58:14.838" starttime="20240222 13:58:13.837" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Input Password">
      <arg>
       wnd[0]/usr/pwdRSYST-BCODE
      </arg>
      <arg>
       ${SAP_PASSWORD}
      </arg>
      <doc>
       Inserts the given password into the text field identified by locator.
The password is not recorded in the log.
      </doc>
      <msg level="INFO" timestamp="20240222 13:58:14.844">
       Typing password into text field 'wnd[0]/usr/pwdRSYST-BCODE'.
      </msg>
      <status endtime="20240222 13:58:14.844" starttime="20240222 13:58:14.838" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240222 13:58:16.844">
       Slept 2 seconds
      </msg>
      <status endtime="20240222 13:58:16.844" starttime="20240222 13:58:14.844" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Send Vkey">
      <arg>
       0
      </arg>
      <doc>
       Sends a SAP virtual key combination to the window, not into an element.
If you want to send a value to a text field, use `input text` instead.
      </doc>
      <status endtime="20240222 13:58:17.357" starttime="20240222 13:58:16.844" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       5
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240222 13:58:22.373">
       Slept 5 seconds
      </msg>
      <status endtime="20240222 13:58:22.373" starttime="20240222 13:58:17.357" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       A01_loginpage.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240222 13:58:22.443">
       &lt;a href="pabot_results%5C0%5CA01_loginpage.jpg"&gt;&lt;img src="pabot_results%5C0%5CA01_loginpage.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240222 13:58:22.443" starttime="20240222 13:58:22.373" status="PASS"/>
     </kw>
     <status endtime="20240222 13:58:22.443" starttime="20240222 13:57:56.161" status="PASS"/>
    </kw>
    <tag>
     Regression
    </tag>
    <tag>
     spampatchenhance
    </tag>
    <status endtime="20240222 13:58:22.443" starttime="20240222 13:57:56.161" status="PASS"/>
   </test>
   <test id="s1-s1-t2" line="9" name="Check_Spam_update">
    <kw library="Spam_Patch_enhance" name="Spam Transaction">
     <kw library="CustomSapGuiLibrary" name="Run Transaction">
      <arg>
       spam
      </arg>
      <doc>
       Runs a Sap transaction. An error is given when an unknown transaction is specified.
      </doc>
      <status endtime="20240222 13:58:22.646" starttime="20240222 13:58:22.461" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       5
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240222 13:58:27.646">
       Slept 5 seconds
      </msg>
      <status endtime="20240222 13:58:27.646" starttime="20240222 13:58:22.646" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       B01_spam.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240222 13:58:27.712">
       &lt;a href="pabot_results%5C0%5CB01_spam.jpg"&gt;&lt;img src="pabot_results%5C0%5CB01_spam.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240222 13:58:27.712" starttime="20240222 13:58:27.646" status="PASS"/>
     </kw>
     <status endtime="20240222 13:58:27.712" starttime="20240222 13:58:22.457" status="PASS"/>
    </kw>
    <kw library="Spam_Patch_enhance" name="Certificate Verification">
     <kw library="CustomSapGuiLibrary" name="Get Maintenance Certificate Text">
      <arg>
       wnd[0]/sbar/pane[0]
      </arg>
      <msg level="INFO" timestamp="20240222 13:58:27.712">
       License available to proceed further
      </msg>
      <status endtime="20240222 13:58:27.712" starttime="20240222 13:58:27.712" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240222 13:58:29.712">
       Slept 2 seconds
      </msg>
      <status endtime="20240222 13:58:29.712" starttime="20240222 13:58:27.712" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       C01_Certificate.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240222 13:58:29.767">
       &lt;a href="pabot_results%5C0%5CC01_Certificate.jpg"&gt;&lt;img src="pabot_results%5C0%5CC01_Certificate.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240222 13:58:29.767" starttime="20240222 13:58:29.712" status="PASS"/>
     </kw>
     <status endtime="20240222 13:58:29.767" starttime="20240222 13:58:27.712" status="PASS"/>
    </kw>
    <kw library="Spam_Patch_enhance" name="Loading package">
     <kw library="CustomSapGuiLibrary" name="Click Element">
      <arg>
       wnd[0]/mbar/menu[0]/menu[0]/menu[1]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240222 13:58:29.912" starttime="20240222 13:58:29.767" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240222 13:58:31.912">
       Slept 2 seconds
      </msg>
      <status endtime="20240222 13:58:31.912" starttime="20240222 13:58:29.912" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       D01_Load_1.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240222 13:58:31.991">
       &lt;a href="pabot_results%5C0%5CD01_Load_1.jpg"&gt;&lt;img src="pabot_results%5C0%5CD01_Load_1.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240222 13:58:31.991" starttime="20240222 13:58:31.912" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Click Element">
      <arg>
       wnd[1]/usr/btnSPOP-OPTION1
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240222 13:58:35.609" starttime="20240222 13:58:31.991" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240222 13:58:37.609">
       Slept 2 seconds
      </msg>
      <status endtime="20240222 13:58:37.609" starttime="20240222 13:58:35.609" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       D02_Load_2.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240222 13:58:37.677">
       &lt;a href="pabot_results%5C0%5CD02_Load_2.jpg"&gt;&lt;img src="pabot_results%5C0%5CD02_Load_2.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240222 13:58:37.677" starttime="20240222 13:58:37.609" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Click Element">
      <arg>
       wnd[0]/tbar[0]/btn[3]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240222 13:58:37.803" starttime="20240222 13:58:37.677" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240222 13:58:39.803">
       Slept 2 seconds
      </msg>
      <status endtime="20240222 13:58:39.803" starttime="20240222 13:58:37.803" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       D03_Load_3.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240222 13:58:39.865">
       &lt;a href="pabot_results%5C0%5CD03_Load_3.jpg"&gt;&lt;img src="pabot_results%5C0%5CD03_Load_3.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240222 13:58:39.865" starttime="20240222 13:58:39.803" status="PASS"/>
     </kw>
     <status endtime="20240222 13:58:39.865" starttime="20240222 13:58:29.767" status="PASS"/>
    </kw>
    <kw library="Spam_Patch_enhance" name="Display/Define">
     <kw library="CustomSapGuiLibrary" name="Click Element">
      <arg>
       wnd[0]/usr/btnPAT100-QUEUE
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240222 13:58:40.178" starttime="20240222 13:58:39.865" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240222 13:58:42.178">
       Slept 2 seconds
      </msg>
      <status endtime="20240222 13:58:42.178" starttime="20240222 13:58:40.178" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       E01_Display.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240222 13:58:42.240">
       &lt;a href="pabot_results%5C0%5CE01_Display.jpg"&gt;&lt;img src="pabot_results%5C0%5CE01_Display.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240222 13:58:42.240" starttime="20240222 13:58:42.178" status="PASS"/>
     </kw>
     <status endtime="20240222 13:58:42.240" starttime="20240222 13:58:39.865" status="PASS"/>
    </kw>
    <kw library="Spam_Patch_enhance" name="Spam software selection">
     <kw library="CustomSapGuiLibrary" name="Click Element">
      <arg>
       wnd[1]/tbar[0]/btn[7]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240222 13:58:42.584" starttime="20240222 13:58:42.246" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240222 13:58:44.585">
       Slept 2 seconds
      </msg>
      <status endtime="20240222 13:58:44.585" starttime="20240222 13:58:42.584" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       F01_patch_1.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240222 13:58:44.644">
       &lt;a href="pabot_results%5C0%5CF01_patch_1.jpg"&gt;&lt;img src="pabot_results%5C0%5CF01_patch_1.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240222 13:58:44.644" starttime="20240222 13:58:44.585" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Spam Multiple Patch Version Select">
      <arg>
       ${comp_id}
      </arg>
      <arg>
       ${search_comp}
      </arg>
      <arg>
       ${search_patch}
      </arg>
      <msg level="INFO" timestamp="20240222 13:58:44.676">
       (-2147352567, 'Exception occurred.', (0, 'SAP Frontend Server', '', None, 0, -2147024809), None)
(-2147352567, 'Exception occurred.', (0, 'SAP Frontend Server', '', None, 0, -2147024809), None)
(-2147352567, 'Exception occurred.', (0, 'SAP Frontend Server', '', None, 0, -2147024809), None)
      </msg>
      <status endtime="20240222 13:58:44.676" starttime="20240222 13:58:44.644" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       4
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240222 13:58:48.676">
       Slept 4 seconds
      </msg>
      <status endtime="20240222 13:58:48.676" starttime="20240222 13:58:44.676" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       F02_patch_2.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240222 13:58:48.728">
       &lt;a href="pabot_results%5C0%5CF02_patch_2.jpg"&gt;&lt;img src="pabot_results%5C0%5CF02_patch_2.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240222 13:58:48.728" starttime="20240222 13:58:48.676" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Click Element">
      <arg>
       wnd[1]/tbar[0]/btn[0]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240222 13:58:48.887" starttime="20240222 13:58:48.728" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240222 13:58:50.888">
       Slept 2 seconds
      </msg>
      <status endtime="20240222 13:58:50.888" starttime="20240222 13:58:48.887" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       F03_patch_3.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240222 13:58:50.958">
       &lt;a href="pabot_results%5C0%5CF03_patch_3.jpg"&gt;&lt;img src="pabot_results%5C0%5CF03_patch_3.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240222 13:58:50.958" starttime="20240222 13:58:50.888" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Click Element">
      <arg>
       wnd[1]/tbar[0]/btn[0]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240222 13:58:51.319" starttime="20240222 13:58:50.958" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240222 13:58:53.319">
       Slept 2 seconds
      </msg>
      <status endtime="20240222 13:58:53.319" starttime="20240222 13:58:51.319" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       F04_patch_4.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240222 13:58:53.392">
       &lt;a href="pabot_results%5C0%5CF04_patch_4.jpg"&gt;&lt;img src="pabot_results%5C0%5CF04_patch_4.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240222 13:58:53.392" starttime="20240222 13:58:53.319" status="PASS"/>
     </kw>
     <status endtime="20240222 13:58:53.392" starttime="20240222 13:58:42.246" status="PASS"/>
    </kw>
    <kw library="Spam_Patch_enhance" name="Important SAP note handling">
     <kw library="CustomSapGuiLibrary" name="Is Imp Notes Existing">
      <arg>
       wnd[1]
      </arg>
      <arg>
       wnd[1]/tbar[0]/btn[0]
      </arg>
      <msg level="INFO" timestamp="20240222 13:58:53.407">
       Modal window does not exist.
      </msg>
      <status endtime="20240222 13:58:53.407" starttime="20240222 13:58:53.392" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       G01_SAP_note.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240222 13:58:53.455">
       &lt;a href="pabot_results%5C0%5CG01_SAP_note.jpg"&gt;&lt;img src="pabot_results%5C0%5CG01_SAP_note.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240222 13:58:53.455" starttime="20240222 13:58:53.407" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Click Element">
      <arg>
       wnd[2]/tbar[0]/btn[0]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240222 13:58:54.111" starttime="20240222 13:58:53.455" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Click Element">
      <arg>
       wnd[1]/usr/btnBUTTON_2
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240222 13:58:54.287" starttime="20240222 13:58:54.111" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       G02_Modification.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240222 13:58:54.361">
       &lt;a href="pabot_results%5C0%5CG02_Modification.jpg"&gt;&lt;img src="pabot_results%5C0%5CG02_Modification.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240222 13:58:54.361" starttime="20240222 13:58:54.287" status="PASS"/>
     </kw>
     <status endtime="20240222 13:58:54.361" starttime="20240222 13:58:53.392" status="PASS"/>
    </kw>
    <tag>
     Regression
    </tag>
    <tag>
     spampatchenhance
    </tag>
    <status endtime="20240222 13:58:54.361" starttime="20240222 13:58:22.443" status="PASS"/>
   </test>
   <test id="s1-s1-t3" line="17" name="Import Queue">
    <kw library="Spam_Patch_enhance" name="Importing queue from support package">
     <kw library="CustomSapGuiLibrary" name="Click Element">
      <arg>
       wnd[0]/mbar/menu[0]/menu[3]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240222 13:58:54.488" starttime="20240222 13:58:54.361" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Click Element">
      <arg>
       wnd[1]/tbar[0]/btn[0]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240222 13:58:54.684" starttime="20240222 13:58:54.488" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       H01_Imp_que_1.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240222 13:58:54.740">
       &lt;a href="pabot_results%5C0%5CH01_Imp_que_1.jpg"&gt;&lt;img src="pabot_results%5C0%5CH01_Imp_que_1.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240222 13:58:54.740" starttime="20240222 13:58:54.684" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Click Element">
      <arg>
       wnd[1]/tbar[0]/btn[27]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240222 13:58:55.516" starttime="20240222 13:58:54.740" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       H02_Start_options.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240222 13:58:55.595">
       &lt;a href="pabot_results%5C0%5CH02_Start_options.jpg"&gt;&lt;img src="pabot_results%5C0%5CH02_Start_options.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240222 13:58:55.595" starttime="20240222 13:58:55.516" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240222 13:58:56.599">
       Slept 1 second
      </msg>
      <status endtime="20240222 13:58:56.599" starttime="20240222 13:58:55.599" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Select Radio Button">
      <arg>
       wnd[1]/usr/tabsSTART_OPTIONS/tabpSTART_FC1/ssubSTART_OPTIONS_SCA:SAPLOCS_UI:0701/radLAY0700-RB1_BTCHIM
      </arg>
      <doc>
       Sets radio button to the specified value.
      </doc>
      <status endtime="20240222 13:58:56.662" starttime="20240222 13:58:56.600" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240222 13:58:57.662">
       Slept 1 second
      </msg>
      <status endtime="20240222 13:58:57.662" starttime="20240222 13:58:56.662" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       H03_Start_bkgd.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240222 13:58:57.741">
       &lt;a href="pabot_results%5C0%5CH03_Start_bkgd.jpg"&gt;&lt;img src="pabot_results%5C0%5CH03_Start_bkgd.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240222 13:58:57.741" starttime="20240222 13:58:57.662" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Click Element">
      <arg>
       wnd[1]/tbar[0]/btn[0]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240222 13:58:57.850" starttime="20240222 13:58:57.741" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240222 13:58:58.850">
       Slept 1 second
      </msg>
      <status endtime="20240222 13:58:58.850" starttime="20240222 13:58:57.850" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       H04_Start_bkgd_2.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240222 13:58:58.928">
       &lt;a href="pabot_results%5C0%5CH04_Start_bkgd_2.jpg"&gt;&lt;img src="pabot_results%5C0%5CH04_Start_bkgd_2.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240222 13:58:58.928" starttime="20240222 13:58:58.850" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Click Element">
      <arg>
       wnd[1]/tbar[0]/btn[25]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240222 13:59:03.271" starttime="20240222 13:58:58.928" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       H05_Start_bkgd_3.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240222 13:59:03.365">
       &lt;a href="pabot_results%5C0%5CH05_Start_bkgd_3.jpg"&gt;&lt;img src="pabot_results%5C0%5CH05_Start_bkgd_3.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240222 13:59:03.365" starttime="20240222 13:59:03.271" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240222 13:59:04.365">
       Slept 1 second
      </msg>
      <status endtime="20240222 13:59:04.365" starttime="20240222 13:59:03.365" status="PASS"/>
     </kw>
     <status endtime="20240222 13:59:04.365" starttime="20240222 13:58:54.361" status="PASS"/>
    </kw>
    <kw library="Spam_Patch_enhance" name="Confirm Queue">
     <kw library="CustomSapGuiLibrary" name="Get Finish Cell Text1">
      <var>
       ${cell_text_1}
      </var>
      <arg>
       ${finish_str}
      </arg>
      <arg>
       ${button_id}
      </arg>
      <arg>
       ${status_line}
      </arg>
      <arg>
       ${refresh_id}
      </arg>
      <msg level="INFO" timestamp="20240222 13:59:34.452">
       ${cell_text_1} = Error: (-2147417848, 'The object invoked has disconnected from its clients.', None, None)
      </msg>
      <status endtime="20240222 13:59:34.452" starttime="20240222 13:59:04.365" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Log">
      <arg>
       ${cell_text_1}
      </arg>
      <doc>
       Logs the given message with the given level.
      </doc>
      <msg level="INFO" timestamp="20240222 13:59:34.453">
       Error: (-2147417848, 'The object invoked has disconnected from its clients.', None, None)
      </msg>
      <status endtime="20240222 13:59:34.453" starttime="20240222 13:59:34.453" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       G01_Confirmed_queue.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240222 13:59:34.526">
       &lt;a href="pabot_results%5C0%5CG01_Confirmed_queue.jpg"&gt;&lt;img src="pabot_results%5C0%5CG01_Confirmed_queue.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240222 13:59:34.526" starttime="20240222 13:59:34.453" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="No Queue Pending">
      <arg>
       ${no_Queue_id}
      </arg>
      <msg level="INFO" timestamp="20240222 13:59:34.527">
       Error: (-2147417848, 'The object invoked has disconnected from its clients.', None, None)
      </msg>
      <status endtime="20240222 13:59:34.527" starttime="20240222 13:59:34.526" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       G02_Status_Confirmed_queue1.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240222 13:59:34.580">
       &lt;a href="pabot_results%5C0%5CG02_Status_Confirmed_queue1.jpg"&gt;&lt;img src="pabot_results%5C0%5CG02_Status_Confirmed_queue1.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240222 13:59:34.580" starttime="20240222 13:59:34.527" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Click Element">
      <arg>
       wnd[1]/tbar[0]/btn[27]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <msg html="true" level="INFO" timestamp="20240222 13:59:34.631">
       &lt;a href="pabot_results%5C0%5Csap-screenshot_1.jpg"&gt;&lt;img src="pabot_results%5C0%5Csap-screenshot_1.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <msg level="FAIL" timestamp="20240222 13:59:34.631">
       ValueError: Cannot find element with id 'wnd[1]/tbar[0]/btn[27]'
      </msg>
      <status endtime="20240222 13:59:34.631" starttime="20240222 13:59:34.580" status="FAIL"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       G03_Status_Confirmed_queue2.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <status endtime="20240222 13:59:34.631" starttime="20240222 13:59:34.631" status="NOT RUN"/>
     </kw>
     <status endtime="20240222 13:59:34.647" starttime="20240222 13:59:04.365" status="FAIL"/>
    </kw>
    <tag>
     Regression
    </tag>
    <tag>
     spampatchenhance
    </tag>
    <status endtime="20240222 13:59:34.647" starttime="20240222 13:58:54.361" status="FAIL">
     ValueError: Cannot find element with id 'wnd[1]/tbar[0]/btn[27]'
    </status>
   </test>
   <status endtime="20240222 13:59:34.647" starttime="20240222 13:57:56.145" status="FAIL"/>
  </suite>
  <doc>
   Testing functionality through Robot Framework
  </doc>
  <meta name="environment">
   Dev
  </meta>
  <meta name="test_browser_name">
   chrome
  </meta>
  <meta name="test_browser_version">
   122.0.6261.57
  </meta>
  <meta name="test_driver_version">
   121.0.6167.85
  </meta>
  <meta name="test_environment">
   Dev
  </meta>
  <meta name="test_freeze_dependencies">
   astroid==3.0.3,attrs==23.2.0,beautifulsoup4==4.12.3,bs4==0.0.2,certifi==2024.2.2,cffi==1.16.0,chardet==5.2.0,charset-normalizer==3.3.2,click==8.1.7,colorama==0.4.6,cryptography==42.0.2,defusedxml==0.7.1,dill==0.3.8,docutils==0.20.1,et-xmlfile==1.1.0,exceptiongroup==1.2.0,gitdb==4.0.11,GitPython==3.1.41,h11==0.14.0,idna==3.6,isort==5.13.2,Jinja2==3.1.3,jira==3.6.0,jsonpath-ng==1.6.1,jsonschema==4.21.1,jsonschema-specifications==2023.12.1,lazy-object-proxy==1.10.0,lxml==5.1.0,markdown-it-py==3.0.0,MarkupSafe==2.1.5,mccabe==0.7.0,mdurl==0.1.2,natsort==8.4.0,oauthlib==3.2.2,openpyxl==3.1.2,outcome==1.3.0.post0,packaging==23.2,pathspec==0.11.2,pillow==10.2.0,pip==24.0,platformdirs==4.2.0,ply==3.11,pycparser==2.21,Pygments==2.17.2,pylint==3.0.3,PySocks==1.7.1,pywin32==306,PyYAML==6.0.1,referencing==0.33.0,reportlab==4.1.0,requests==2.31.0,requests-oauthlib==1.3.1,requests-toolbelt==1.0.0,rich==13.7.0,rich-click==1.6.1,robotframework==6.0.2,robotframework-datadriver==1.9.0,robotframework-excellib==2.0.1,robotframework-jsonlibrary==0.5,robotframework-pabot==2.16.0,robotframework-pythonlibcore==4.2.0,robotframework-requests==0.9.2,robotframework-sapguilibrary==1.1,robotframework-seleniumlibrary==5.1.3,robotframework-stacktrace==0.4.1,robotframework-tidy==4.5.0,rpds-py==0.17.1,selenium==4.9.1,setuptools==69.0.3,smmap==5.0.1,sniffio==1.3.0,sortedcontainers==2.4.0,soupsieve==2.5,tomli==2.0.1,tomlkit==0.12.3,trio==0.24.0,trio-websocket==0.11.1,typing_extensions==4.9.0,urllib3==2.2.0,wheel==0.42.0,wrapt==1.16.0,wsproto==1.2.0
  </meta>
  <status endtime="20240222 13:59:35.090" starttime="20240222 13:57:52.494" status="FAIL"/>
 </suite>
 <statistics>
  <total>
   <stat fail="1" pass="2" skip="0">
    All Tests
   </stat>
  </total>
  <tag>
   <stat fail="1" pass="2" skip="0">
    Regression
   </stat>
   <stat fail="1" pass="2" skip="0">
    spampatchenhance
   </stat>
  </tag>
  <suite>
   <stat fail="1" id="s1" name="Tests" pass="2" skip="0">
    Tests
   </stat>
   <stat fail="1" id="s1-s1" name="Test spam patch enhance" pass="2" skip="0">
    Tests.Test spam patch enhance
   </stat>
  </suite>
 </statistics>
 <errors>
 </errors>
</robot>
