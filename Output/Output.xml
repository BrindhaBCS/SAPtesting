<?xml version="1.0" encoding="utf-8"?>
<robot generated="20240517 09:49:10.907" generator="Rebot 6.0.2 (Python 3.12.3 on win32)" rpa="false" schemaversion="3">
 <suite id="s1" name="Tests" source="D:\RobotFramework\SAPtesting\Tests">
  <kw name="Setup highest level suite" type="SETUP">
   <kw library="BuiltIn" name="Set Variable">
    <var>
     ${d.test_server}
    </var>
    <arg>
     ${test_server}
    </arg>
    <doc>
     Returns the given values which can then be assigned to a variables.
    </doc>
    <msg level="INFO" timestamp="20240517 09:46:40.745">
     ${d.test_server} = Dev
    </msg>
    <status endtime="20240517 09:46:40.745" starttime="20240517 09:46:40.745" status="PASS"/>
   </kw>
   <kw library="Support" name="Reset screenshot count variable">
    <kw library="BuiltIn" name="Set Variable">
     <var>
      ${screenshotCount}
     </var>
     <arg>
      ${PABOTQUEUEINDEX}_1
     </arg>
     <doc>
      Returns the given values which can then be assigned to a variables.
     </doc>
     <msg level="INFO" timestamp="20240517 09:46:40.746">
      ${screenshotCount} = 0_1
     </msg>
     <status endtime="20240517 09:46:40.746" starttime="20240517 09:46:40.746" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Set Global Variable">
     <arg>
      ${screenshotCount}
     </arg>
     <doc>
      Makes a variable available globally in all tests and suites.
     </doc>
     <msg level="INFO" timestamp="20240517 09:46:40.747">
      ${screenshotCount} = 0_1
     </msg>
     <status endtime="20240517 09:46:40.747" starttime="20240517 09:46:40.746" status="PASS"/>
    </kw>
    <kw library="Support" name="Set up screenshot directory">
     <kw library="OperatingSystem" name="Create Directory">
      <arg>
       ${OUTPUTDIR}${/}${wvar('screenshot_dir')}
      </arg>
      <doc>
       Creates the specified directory.
      </doc>
      <msg level="INFO" timestamp="20240517 09:46:40.748">
       Web.Dev.screenshot_dir: Screenshot
      </msg>
      <msg html="true" level="INFO" timestamp="20240517 09:46:40.750">
       Created directory '&lt;a href="file://D:\RobotFramework\SAPtesting\Output\pabot_results\0\Screenshot"&gt;D:\RobotFramework\SAPtesting\Output\pabot_results\0\Screenshot&lt;/a&gt;'.
      </msg>
      <status endtime="20240517 09:46:40.750" starttime="20240517 09:46:40.747" status="PASS"/>
     </kw>
     <status endtime="20240517 09:46:40.750" starttime="20240517 09:46:40.747" status="PASS"/>
    </kw>
    <status endtime="20240517 09:46:40.750" starttime="20240517 09:46:40.745" status="PASS"/>
   </kw>
   <kw library="BuiltIn" name="Set Global Variable">
    <arg>
     ${screenshot_taking}
    </arg>
    <arg>
     ${True}
    </arg>
    <doc>
     Makes a variable available globally in all tests and suites.
    </doc>
    <msg level="INFO" timestamp="20240517 09:46:40.751">
     ${screenshot_taking} = True
    </msg>
    <status endtime="20240517 09:46:40.751" starttime="20240517 09:46:40.751" status="PASS"/>
   </kw>
   <kw library="Support" name="Setup linux execution">
    <kw library="BuiltIn" name="Run Keyword And Return Status">
     <var>
      ${web_test_check}
     </var>
     <arg>
      Variable Should Exist
     </arg>
     <arg>
      ${web_test}
     </arg>
     <doc>
      Runs the given keyword with given arguments and returns the status as a Boolean value.
     </doc>
     <kw library="BuiltIn" name="Variable Should Exist">
      <arg>
       ${web_test}
      </arg>
      <doc>
       Fails unless the given variable exists within the current scope.
      </doc>
      <status endtime="20240517 09:46:40.752" starttime="20240517 09:46:40.752" status="PASS"/>
     </kw>
     <msg level="INFO" timestamp="20240517 09:46:40.752">
      ${web_test_check} = True
     </msg>
     <status endtime="20240517 09:46:40.753" starttime="20240517 09:46:40.751" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Run Keyword If">
     <arg>
      ${web_test_check}
     </arg>
     <arg>
      Setup Docker Execution Options
     </arg>
     <doc>
      Runs the given keyword with the given arguments, if ``condition`` is true.
     </doc>
     <kw library="Support_Web" name="Setup Docker Execution Options">
      <kw library="Support_Web" name="Setup Suite Metadata">
       <arg>
        ${browser}
       </arg>
       <kw library="BrowserSupport" name="Get Browser Metadata">
        <var>
         &amp;{browser_information}
        </var>
        <arg>
         browser=${browser}
        </arg>
        <doc>
         Fetches browser metadata information
:param browser: Name of the browser for which information is fetched
:param reload: Re-read the metadata based on the browser
:return: Browser metadata information, dict of format
            {"browser_version": browser version value,
             "driver_version": driver version value}
        </doc>
        <msg level="INFO" timestamp="20240517 09:46:44.791">
         &amp;{browser_information} = { browser_version=124.0.6367.119 | driver_version=124.0.6367.207  }
        </msg>
        <status endtime="20240517 09:46:44.791" starttime="20240517 09:46:40.753" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Suite Metadata">
        <arg>
         test_browser_name
        </arg>
        <arg>
         ${browser}
        </arg>
        <doc>
         Sets metadata for the current test suite.
        </doc>
        <msg level="INFO" timestamp="20240517 09:46:44.792">
         Set suite metadata 'test_browser_name' to value 'chrome'.
        </msg>
        <status endtime="20240517 09:46:44.792" starttime="20240517 09:46:44.791" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Suite Metadata">
        <arg>
         test_browser_version
        </arg>
        <arg>
         ${browser_information.browser_version}
        </arg>
        <doc>
         Sets metadata for the current test suite.
        </doc>
        <msg level="INFO" timestamp="20240517 09:46:44.793">
         Set suite metadata 'test_browser_version' to value '124.0.6367.119'.
        </msg>
        <status endtime="20240517 09:46:44.793" starttime="20240517 09:46:44.792" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Suite Metadata">
        <arg>
         test_driver_version
        </arg>
        <arg>
         ${browser_information.driver_version}
        </arg>
        <doc>
         Sets metadata for the current test suite.
        </doc>
        <msg level="INFO" timestamp="20240517 09:46:44.795">
         Set suite metadata 'test_driver_version' to value '124.0.6367.207 '.
        </msg>
        <status endtime="20240517 09:46:44.795" starttime="20240517 09:46:44.794" status="PASS"/>
       </kw>
       <status endtime="20240517 09:46:44.795" starttime="20240517 09:46:40.753" status="PASS"/>
      </kw>
      <kw library="Support_Web" name="Setup Global Docker Execution Options">
       <kw library="BuiltIn" name="Set Global Variable">
        <arg>
         ${global_browser_options}
        </arg>
        <arg>
         None
        </arg>
        <doc>
         Makes a variable available globally in all tests and suites.
        </doc>
        <msg level="INFO" timestamp="20240517 09:46:44.797">
         ${global_browser_options} = None
        </msg>
        <status endtime="20240517 09:46:44.797" starttime="20240517 09:46:44.796" status="PASS"/>
       </kw>
       <kw library="OperatingSystem" name="Get Environment Variable">
        <var>
         ${docker_check}
        </var>
        <arg>
         EXECUTION_ENVIRONMENT
        </arg>
        <arg>
         not_found
        </arg>
        <doc>
         Returns the value of an environment variable with the given name.
        </doc>
        <msg level="INFO" timestamp="20240517 09:46:44.798">
         ${docker_check} = not_found
        </msg>
        <status endtime="20240517 09:46:44.798" starttime="20240517 09:46:44.798" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Run Keyword And Return If">
        <arg>
         "${docker_check}"!="docker"
        </arg>
        <arg>
         Log
        </arg>
        <arg>
         Not executing on Docker
        </arg>
        <doc>
         Runs the specified keyword and returns from the enclosing user keyword.
        </doc>
        <kw library="BuiltIn" name="Log">
         <arg>
          Not executing on Docker
         </arg>
         <doc>
          Logs the given message with the given level.
         </doc>
         <msg level="INFO" timestamp="20240517 09:46:44.799">
          Not executing on Docker
         </msg>
         <status endtime="20240517 09:46:44.799" starttime="20240517 09:46:44.799" status="PASS"/>
        </kw>
        <msg level="INFO" timestamp="20240517 09:46:44.799">
         Returning from the enclosing user keyword.
        </msg>
        <status endtime="20240517 09:46:44.799" starttime="20240517 09:46:44.798" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Create List">
        <var>
         @{options}
        </var>
        <arg>
         --headless
        </arg>
        <arg>
         --no-sandbox
        </arg>
        <arg>
         --disable-dev-shm-usage
        </arg>
        <doc>
         Returns a list containing given items.
        </doc>
        <status endtime="20240517 09:46:44.800" starttime="20240517 09:46:44.800" status="NOT RUN"/>
       </kw>
       <kw library="BuiltIn" name="Set Global Variable">
        <arg>
         @{docker_options}
        </arg>
        <arg>
         @{options}
        </arg>
        <doc>
         Makes a variable available globally in all tests and suites.
        </doc>
        <status endtime="20240517 09:46:44.800" starttime="20240517 09:46:44.800" status="NOT RUN"/>
       </kw>
       <status endtime="20240517 09:46:44.800" starttime="20240517 09:46:44.795" status="PASS"/>
      </kw>
      <kw library="Support_Web" name="Create Webdriver for chrome preferences">
       <kw library="Support_Web" name="Update Docker Execution Options">
        <var>
         ${list_prefs}
        </var>
        <arg>
         ${list_prefs}
        </arg>
        <kw library="BuiltIn" name="Run Keyword And Return Status">
         <var>
          ${docker_check}
         </var>
         <arg>
          Variable Should Exist
         </arg>
         <arg>
          ${docker_options}
         </arg>
         <doc>
          Runs the given keyword with given arguments and returns the status as a Boolean value.
         </doc>
         <kw library="BuiltIn" name="Variable Should Exist">
          <arg>
           ${docker_options}
          </arg>
          <doc>
           Fails unless the given variable exists within the current scope.
          </doc>
          <msg level="FAIL" timestamp="20240517 09:46:44.804">
           Variable '${docker_options}' does not exist.
          </msg>
          <status endtime="20240517 09:46:44.804" starttime="20240517 09:46:44.802" status="FAIL"/>
         </kw>
         <msg level="INFO" timestamp="20240517 09:46:44.804">
          ${docker_check} = False
         </msg>
         <status endtime="20240517 09:46:44.804" starttime="20240517 09:46:44.802" status="PASS"/>
        </kw>
        <kw library="BuiltIn" name="Get Length">
         <var>
          ${list_prefs_length}
         </var>
         <arg>
          ${list_prefs}
         </arg>
         <doc>
          Returns and logs the length of the given item as an integer.
         </doc>
         <msg level="INFO" timestamp="20240517 09:46:44.805">
          Length is 1
         </msg>
         <msg level="INFO" timestamp="20240517 09:46:44.805">
          ${list_prefs_length} = 1
         </msg>
         <status endtime="20240517 09:46:44.805" starttime="20240517 09:46:44.804" status="PASS"/>
        </kw>
        <kw library="BuiltIn" name="Run Keyword If">
         <var>
          ${list_prefs}
         </var>
         <arg>
          ${docker_check} and ${list_prefs_length}&gt;0 and ${list_prefs}[0] != []
         </arg>
         <arg>
          Combine Lists
         </arg>
         <arg>
          ${list_prefs}
         </arg>
         <arg>
          ${docker_options}
         </arg>
         <arg>
          ELSE IF
         </arg>
         <arg>
          ${docker_check}
         </arg>
         <arg>
          Set Variable
         </arg>
         <arg>
          ${docker_options}
         </arg>
         <arg>
          ELSE
         </arg>
         <arg>
          Set Variable
         </arg>
         <arg>
          ${list_prefs}
         </arg>
         <doc>
          Runs the given keyword with the given arguments, if ``condition`` is true.
         </doc>
         <kw library="BuiltIn" name="Set Variable">
          <arg>
           ${list_prefs}
          </arg>
          <doc>
           Returns the given values which can then be assigned to a variables.
          </doc>
          <status endtime="20240517 09:46:44.806" starttime="20240517 09:46:44.805" status="PASS"/>
         </kw>
         <msg level="INFO" timestamp="20240517 09:46:44.806">
          ${list_prefs} = [[]]
         </msg>
         <status endtime="20240517 09:46:44.806" starttime="20240517 09:46:44.805" status="PASS"/>
        </kw>
        <msg level="INFO" timestamp="20240517 09:46:44.806">
         ${list_prefs} = [[]]
        </msg>
        <status endtime="20240517 09:46:44.806" starttime="20240517 09:46:44.801" status="PASS"/>
       </kw>
       <kw library="Support_Web" name="Create Chrome Options for download preferences">
        <var>
         ${chrome_options}
        </var>
        <kw library="BuiltIn" name="Evaluate">
         <var>
          ${chrome_options}
         </var>
         <arg>
          sys.modules['selenium.webdriver'].ChromeOptions()
         </arg>
         <arg>
          sys
         </arg>
         <doc>
          Evaluates the given expression in Python and returns the result.
         </doc>
         <msg level="INFO" timestamp="20240517 09:46:44.807">
          ${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x000002AA5A9B5DC0&gt;
         </msg>
         <status endtime="20240517 09:46:44.807" starttime="20240517 09:46:44.807" status="PASS"/>
        </kw>
        <msg level="INFO" timestamp="20240517 09:46:44.807">
         ${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x000002AA5A9B5DC0&gt;
        </msg>
        <status endtime="20240517 09:46:44.807" starttime="20240517 09:46:44.806" status="PASS"/>
       </kw>
       <kw library="Support_Web" name="Update Preferences List">
        <arg>
         ${chrome_options}
        </arg>
        <arg>
         @{list_prefs}
        </arg>
        <kw library="BuiltIn" name="Convert To String">
         <var>
          ${string_prefs}
         </var>
         <arg>
          ${list_prefs}
         </arg>
         <doc>
          Converts the given item to a Unicode string.
         </doc>
         <msg level="INFO" timestamp="20240517 09:46:44.808">
          ${string_prefs} = [[]]
         </msg>
         <status endtime="20240517 09:46:44.808" starttime="20240517 09:46:44.808" status="PASS"/>
        </kw>
        <kw library="BuiltIn" name="Return From Keyword If">
         <arg>
          ${string_prefs} == [[]]
         </arg>
         <doc>
          Returns from the enclosing user keyword if ``condition`` is true.
         </doc>
         <msg level="INFO" timestamp="20240517 09:46:44.809">
          Returning from the enclosing user keyword.
         </msg>
         <status endtime="20240517 09:46:44.809" starttime="20240517 09:46:44.808" status="PASS"/>
        </kw>
        <for flavor="IN">
         <var>
          ${preference}
         </var>
         <value>
          @{list_prefs}
         </value>
         <iter>
          <var name="${preference}"/>
          <kw library="BuiltIn" name="Call Method">
           <arg>
            ${chrome_options}
           </arg>
           <arg>
            add_argument
           </arg>
           <arg>
            ${preference}
           </arg>
           <doc>
            Calls the named method of the given object with the provided arguments.
           </doc>
           <status endtime="20240517 09:46:44.810" starttime="20240517 09:46:44.809" status="NOT RUN"/>
          </kw>
          <status endtime="20240517 09:46:44.810" starttime="20240517 09:46:44.809" status="NOT RUN"/>
         </iter>
         <status endtime="20240517 09:46:44.810" starttime="20240517 09:46:44.809" status="NOT RUN"/>
        </for>
        <status endtime="20240517 09:46:44.810" starttime="20240517 09:46:44.807" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Call Method">
        <arg>
         ${chrome_options}
        </arg>
        <arg>
         add_experimental_option
        </arg>
        <arg>
         prefs
        </arg>
        <arg>
         ${kw_prefs}
        </arg>
        <doc>
         Calls the named method of the given object with the provided arguments.
        </doc>
        <status endtime="20240517 09:46:44.810" starttime="20240517 09:46:44.810" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Global Variable">
        <arg>
         ${global_browser_options}
        </arg>
        <arg>
         ${chrome options}
        </arg>
        <doc>
         Makes a variable available globally in all tests and suites.
        </doc>
        <msg level="INFO" timestamp="20240517 09:46:44.811">
         ${global_browser_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x000002AA5A9B5DC0&gt;
        </msg>
        <status endtime="20240517 09:46:44.811" starttime="20240517 09:46:44.810" status="PASS"/>
       </kw>
       <status endtime="20240517 09:46:44.811" starttime="20240517 09:46:44.801" status="PASS"/>
      </kw>
      <status endtime="20240517 09:46:44.811" starttime="20240517 09:46:40.753" status="PASS"/>
     </kw>
     <status endtime="20240517 09:46:44.811" starttime="20240517 09:46:40.753" status="PASS"/>
    </kw>
    <status endtime="20240517 09:46:44.811" starttime="20240517 09:46:40.751" status="PASS"/>
   </kw>
   <kw library="BuiltIn" name="Set Suite Metadata">
    <arg>
     environment
    </arg>
    <arg>
     ${test_server}
    </arg>
    <doc>
     Sets metadata for the current test suite.
    </doc>
    <msg level="INFO" timestamp="20240517 09:46:44.812">
     Set suite metadata 'environment' to value 'Dev'.
    </msg>
    <status endtime="20240517 09:46:44.812" starttime="20240517 09:46:44.812" status="PASS"/>
   </kw>
   <status endtime="20240517 09:46:44.812" starttime="20240517 09:46:40.744" status="PASS"/>
  </kw>
  <suite id="s1-s1" name="Test Spampatch" source="D:\RobotFramework\SAPtesting\Tests\Test_Spampatch.robot">
   <kw library="Spampatch" name="System Logon" type="SETUP">
    <kw library="Process" name="Start Process">
     <arg>
      ${symvar('Nike_SAP')}
     </arg>
     <doc>
      Starts a new process on background.
     </doc>
     <msg level="INFO" timestamp="20240517 09:46:44.920">
      Sym.Dev.Nike_SAP: C:\Program Files\SAP\FrontEnd\SAPGUI\saplogon.exe
     </msg>
     <msg level="INFO" timestamp="20240517 09:46:44.920">
      Starting process:
"C:\Program Files\SAP\FrontEnd\SAPGUI\saplogon.exe"
     </msg>
     <status endtime="20240517 09:46:44.928" starttime="20240517 09:46:44.919" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      5
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240517 09:46:49.930">
      Slept 5 seconds
     </msg>
     <status endtime="20240517 09:46:49.930" starttime="20240517 09:46:44.929" status="PASS"/>
    </kw>
    <kw library="CustomSapGuiLibrary" name="Connect To Session">
     <doc>
      Connects to an open session SAP.
     </doc>
     <status endtime="20240517 09:46:49.943" starttime="20240517 09:46:49.930" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      5
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240517 09:46:54.945">
      Slept 5 seconds
     </msg>
     <status endtime="20240517 09:46:54.945" starttime="20240517 09:46:49.944" status="PASS"/>
    </kw>
    <kw library="CustomSapGuiLibrary" name="Open Connection">
     <arg>
      ${symvar('Nike_connection')}
     </arg>
     <doc>
      Opens a connection to the given connection name. Be sure to provide the full connection name, including the bracket part.
     </doc>
     <msg level="INFO" timestamp="20240517 09:46:54.947">
      Sym.Dev.Nike_connection: CFG
     </msg>
     <status endtime="20240517 09:46:55.743" starttime="20240517 09:46:54.946" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      5
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240517 09:47:00.744">
      Slept 5 seconds
     </msg>
     <status endtime="20240517 09:47:00.744" starttime="20240517 09:46:55.744" status="PASS"/>
    </kw>
    <kw library="CustomSapGuiLibrary" name="Input Text">
     <arg>
      wnd[0]/usr/txtRSYST-MANDT
     </arg>
     <arg>
      ${symvar('CFG_CLIENT')}
     </arg>
     <doc>
      Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.
     </doc>
     <msg level="INFO" timestamp="20240517 09:47:00.746">
      Sym.Dev.CFG_CLIENT: 000
     </msg>
     <msg level="INFO" timestamp="20240517 09:47:00.753">
      Typing text '000' into text field 'wnd[0]/usr/txtRSYST-MANDT'.
     </msg>
     <status endtime="20240517 09:47:00.754" starttime="20240517 09:47:00.744" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      1
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240517 09:47:01.754">
      Slept 1 second
     </msg>
     <status endtime="20240517 09:47:01.754" starttime="20240517 09:47:00.754" status="PASS"/>
    </kw>
    <kw library="CustomSapGuiLibrary" name="Input Text">
     <arg>
      wnd[0]/usr/txtRSYST-BNAME
     </arg>
     <arg>
      ${symvar('CFG_USER')}
     </arg>
     <doc>
      Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.
     </doc>
     <msg level="INFO" timestamp="20240517 09:47:01.756">
      Sym.Dev.CFG_USER: basisadmin
     </msg>
     <msg level="INFO" timestamp="20240517 09:47:01.772">
      Typing text 'basisadmin' into text field 'wnd[0]/usr/txtRSYST-BNAME'.
     </msg>
     <status endtime="20240517 09:47:01.772" starttime="20240517 09:47:01.754" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      1
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240517 09:47:02.773">
      Slept 1 second
     </msg>
     <status endtime="20240517 09:47:02.773" starttime="20240517 09:47:01.772" status="PASS"/>
    </kw>
    <kw library="CustomSapGuiLibrary" name="Input Password">
     <arg>
      wnd[0]/usr/pwdRSYST-BCODE
     </arg>
     <arg>
      %{CFG_PASS}
     </arg>
     <doc>
      Inserts the given password into the text field identified by locator.
The password is not recorded in the log.
     </doc>
     <msg level="INFO" timestamp="20240517 09:47:02.780">
      Typing password into text field 'wnd[0]/usr/pwdRSYST-BCODE'.
     </msg>
     <status endtime="20240517 09:47:02.781" starttime="20240517 09:47:02.773" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      2
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240517 09:47:04.782">
      Slept 2 seconds
     </msg>
     <status endtime="20240517 09:47:04.782" starttime="20240517 09:47:02.781" status="PASS"/>
    </kw>
    <kw library="CustomSapGuiLibrary" name="Send Vkey">
     <arg>
      0
     </arg>
     <doc>
      Sends a SAP virtual key combination to the window, not into an element.
If you want to send a value to a text field, use `input text` instead.
     </doc>
     <status endtime="20240517 09:47:05.367" starttime="20240517 09:47:04.782" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      5
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240517 09:47:10.369">
      Slept 5 seconds
     </msg>
     <status endtime="20240517 09:47:10.369" starttime="20240517 09:47:05.368" status="PASS"/>
    </kw>
    <kw library="CustomSapGuiLibrary" name="Take Screenshot">
     <arg>
      01_loginpage.jpg
     </arg>
     <doc>
      Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
     </doc>
     <msg html="true" level="INFO" timestamp="20240517 09:47:10.467">
      &lt;a href="pabot_results%5C0%5C01_loginpage.jpg"&gt;&lt;img src="pabot_results%5C0%5C01_loginpage.jpg" width="800px"&gt;&lt;/a&gt;
     </msg>
     <status endtime="20240517 09:47:10.467" starttime="20240517 09:47:10.369" status="PASS"/>
    </kw>
    <kw library="CustomSapGuiLibrary" name="Multiple Logon Handling">
     <arg>
      wnd[1]
     </arg>
     <arg>
      wnd[1]/usr/radMULTI_LOGON_OPT2
     </arg>
     <arg>
      wnd[1]/tbar[0]/btn[0]
     </arg>
     <status endtime="20240517 09:47:10.468" starttime="20240517 09:47:10.467" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      1
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240517 09:47:11.470">
      Slept 1 second
     </msg>
     <status endtime="20240517 09:47:11.470" starttime="20240517 09:47:10.468" status="PASS"/>
    </kw>
    <kw library="CustomSapGuiLibrary" name="Take Screenshot">
     <arg>
      00_multi_logon_handling.jpg
     </arg>
     <doc>
      Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
     </doc>
     <msg html="true" level="INFO" timestamp="20240517 09:47:11.527">
      &lt;a href="pabot_results%5C0%5C00_multi_logon_handling.jpg"&gt;&lt;img src="pabot_results%5C0%5C00_multi_logon_handling.jpg" width="800px"&gt;&lt;/a&gt;
     </msg>
     <status endtime="20240517 09:47:11.527" starttime="20240517 09:47:11.471" status="PASS"/>
    </kw>
    <status endtime="20240517 09:47:11.527" starttime="20240517 09:46:44.918" status="PASS"/>
   </kw>
   <test id="s1-s1-t1" line="10" name="Check_Spam_update">
    <kw library="Spampatch" name="Spam Transaction">
     <kw library="CustomSapGuiLibrary" name="Run Transaction">
      <arg>
       spam
      </arg>
      <doc>
       Runs a Sap transaction. An error is given when an unknown transaction is specified.
      </doc>
      <status endtime="20240517 09:47:12.513" starttime="20240517 09:47:11.528" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       5
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240517 09:47:17.514">
       Slept 5 seconds
      </msg>
      <status endtime="20240517 09:47:17.514" starttime="20240517 09:47:12.514" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       001_spam.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240517 09:47:17.561">
       &lt;a href="pabot_results%5C0%5C001_spam.jpg"&gt;&lt;img src="pabot_results%5C0%5C001_spam.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240517 09:47:17.561" starttime="20240517 09:47:17.514" status="PASS"/>
     </kw>
     <status endtime="20240517 09:47:17.561" starttime="20240517 09:47:11.528" status="PASS"/>
    </kw>
    <kw library="Spampatch" name="Certificate Verification">
     <kw library="CustomSapGuiLibrary" name="Get Maintenance Certificate Text">
      <arg>
       wnd[0]/sbar/pane[0]
      </arg>
      <msg level="INFO" timestamp="20240517 09:47:17.564">
       License available to proceed further
      </msg>
      <status endtime="20240517 09:47:17.564" starttime="20240517 09:47:17.562" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240517 09:47:19.566">
       Slept 2 seconds
      </msg>
      <status endtime="20240517 09:47:19.566" starttime="20240517 09:47:17.564" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       002_Certificate.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240517 09:47:19.629">
       &lt;a href="pabot_results%5C0%5C002_Certificate.jpg"&gt;&lt;img src="pabot_results%5C0%5C002_Certificate.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240517 09:47:19.629" starttime="20240517 09:47:19.566" status="PASS"/>
     </kw>
     <status endtime="20240517 09:47:19.629" starttime="20240517 09:47:17.561" status="PASS"/>
    </kw>
    <kw library="Spampatch" name="Loading package">
     <kw library="CustomSapGuiLibrary" name="Click Element">
      <arg>
       wnd[0]/mbar/menu[0]/menu[0]/menu[1]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240517 09:47:19.763" starttime="20240517 09:47:19.630" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240517 09:47:21.764">
       Slept 2 seconds
      </msg>
      <status endtime="20240517 09:47:21.764" starttime="20240517 09:47:19.763" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       003_Load_1.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240517 09:47:21.830">
       &lt;a href="pabot_results%5C0%5C003_Load_1.jpg"&gt;&lt;img src="pabot_results%5C0%5C003_Load_1.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240517 09:47:21.830" starttime="20240517 09:47:21.765" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Click Element">
      <arg>
       wnd[1]/usr/btnSPOP-OPTION1
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240517 09:47:24.036" starttime="20240517 09:47:21.830" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240517 09:47:26.037">
       Slept 2 seconds
      </msg>
      <status endtime="20240517 09:47:26.037" starttime="20240517 09:47:24.036" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       004_Load_2.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240517 09:47:26.108">
       &lt;a href="pabot_results%5C0%5C004_Load_2.jpg"&gt;&lt;img src="pabot_results%5C0%5C004_Load_2.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240517 09:47:26.108" starttime="20240517 09:47:26.037" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Click Element">
      <arg>
       wnd[0]/tbar[0]/btn[3]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240517 09:47:26.483" starttime="20240517 09:47:26.108" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240517 09:47:28.483">
       Slept 2 seconds
      </msg>
      <status endtime="20240517 09:47:28.483" starttime="20240517 09:47:26.483" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       005_Load_3.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240517 09:47:28.552">
       &lt;a href="pabot_results%5C0%5C005_Load_3.jpg"&gt;&lt;img src="pabot_results%5C0%5C005_Load_3.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240517 09:47:28.552" starttime="20240517 09:47:28.483" status="PASS"/>
     </kw>
     <status endtime="20240517 09:47:28.553" starttime="20240517 09:47:19.630" status="PASS"/>
    </kw>
    <kw library="Spampatch" name="Display/Define">
     <kw library="CustomSapGuiLibrary" name="Click Element">
      <arg>
       wnd[0]/usr/btnPAT100-QUEUE
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240517 09:47:29.569" starttime="20240517 09:47:28.553" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240517 09:47:31.571">
       Slept 2 seconds
      </msg>
      <status endtime="20240517 09:47:31.571" starttime="20240517 09:47:29.571" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       006_Display.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240517 09:47:31.619">
       &lt;a href="pabot_results%5C0%5C006_Display.jpg"&gt;&lt;img src="pabot_results%5C0%5C006_Display.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240517 09:47:31.619" starttime="20240517 09:47:31.571" status="PASS"/>
     </kw>
     <status endtime="20240517 09:47:31.619" starttime="20240517 09:47:28.553" status="PASS"/>
    </kw>
    <kw library="Spampatch" name="Spam Component selection">
     <kw library="CustomSapGuiLibrary" name="Select Spam Based On Text">
      <var>
       ${row}
      </var>
      <arg>
       wnd[1]/usr/cntlCOMP_ONLY_CONTROL/shellcont/shell
      </arg>
      <arg>
       ${symvar('patch_comp')}
      </arg>
      <msg level="INFO" timestamp="20240517 09:47:31.620">
       Sym.Dev.patch_comp: BNWVS
      </msg>
      <msg level="INFO" timestamp="20240517 09:47:31.634">
       33
0
SAP_BASIS
not found
1
SAP_ABA
not found
2
SAP_GWFND
not found
3
SAP_UI
not found
4
ST-PI
not found
5
SAP_BW
not found
6
UIBAS001
not found
7
GRCPINW
not found
8
MDG_FND
not found
9
S4FND
not found
10
MDG_APPL
not found
11
S4CEXT
not found
12
S4CORE
not found
13
S4HCM
not found
14
EA-DFPS
not found
15
EA-PS
not found
16
FI-CAX
not found
17
IS-OIL
not found
18
IS-PRA
not found
19
IS-PS-CA
not found
20
IS-UT
not found
21
S4COREOP
not found
22
S4DEPREC
not found
23
GBX01HR5
not found
24
UIAPFI70
not found
25
UIS4HOP1
not found
26
AIFGEN
not found
27
BNWVS
Text Found in ${row}
      </msg>
      <msg level="INFO" timestamp="20240517 09:47:31.635">
       ${row} = 27
      </msg>
      <status endtime="20240517 09:47:31.635" starttime="20240517 09:47:31.619" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Log">
      <arg>
       ${row}
      </arg>
      <doc>
       Logs the given message with the given level.
      </doc>
      <msg level="INFO" timestamp="20240517 09:47:31.635">
       27
      </msg>
      <status endtime="20240517 09:47:31.635" starttime="20240517 09:47:31.635" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       007_Spam_component1.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240517 09:47:31.708">
       &lt;a href="pabot_results%5C0%5C007_Spam_component1.jpg"&gt;&lt;img src="pabot_results%5C0%5C007_Spam_component1.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240517 09:47:31.708" starttime="20240517 09:47:31.635" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Select Table Row">
      <arg>
       wnd[1]/usr/cntlCOMP_ONLY_CONTROL/shellcont/shell
      </arg>
      <arg>
       ${row}
      </arg>
      <doc>
       Selects an entire row of a table. This can either be a TableControl or a GridView 'table_id'
which is contained within a shell object. The row is an index to select the row, starting from 0.
      </doc>
      <status endtime="20240517 09:47:31.720" starttime="20240517 09:47:31.708" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240517 09:47:33.722">
       Slept 2 seconds
      </msg>
      <status endtime="20240517 09:47:33.722" starttime="20240517 09:47:31.720" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       008_Spam_component2.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240517 09:47:33.784">
       &lt;a href="pabot_results%5C0%5C008_Spam_component2.jpg"&gt;&lt;img src="pabot_results%5C0%5C008_Spam_component2.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240517 09:47:33.784" starttime="20240517 09:47:33.722" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Click Element">
      <arg>
       wnd[1]/tbar[0]/btn[0]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240517 09:47:33.946" starttime="20240517 09:47:33.784" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240517 09:47:35.947">
       Slept 2 seconds
      </msg>
      <status endtime="20240517 09:47:35.947" starttime="20240517 09:47:33.946" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       009_Spam_component3.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240517 09:47:36.012">
       &lt;a href="pabot_results%5C0%5C009_Spam_component3.jpg"&gt;&lt;img src="pabot_results%5C0%5C009_Spam_component3.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240517 09:47:36.012" starttime="20240517 09:47:35.947" status="PASS"/>
     </kw>
     <status endtime="20240517 09:47:36.012" starttime="20240517 09:47:31.619" status="PASS"/>
    </kw>
    <kw library="Spampatch" name="Spam Patch selection">
     <kw library="CustomSapGuiLibrary" name="Spam Search And Select Label">
      <var>
       ${patch_value}
      </var>
      <arg>
       wnd[1]/usr
      </arg>
      <arg>
       ${symvar('patch_vers')}
      </arg>
      <msg level="INFO" timestamp="20240517 09:47:36.013">
       Sym.Dev.patch_vers: SAPK-70A03INBNWVS
      </msg>
      <msg level="INFO" timestamp="20240517 09:48:30.417">
       0
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
Text not found after scrolling through all pages.
      </msg>
      <msg level="INFO" timestamp="20240517 09:48:30.417">
       ${patch_value} = None
      </msg>
      <status endtime="20240517 09:48:30.417" starttime="20240517 09:47:36.013" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Log">
      <arg>
       ${patch_value}
      </arg>
      <doc>
       Logs the given message with the given level.
      </doc>
      <msg level="INFO" timestamp="20240517 09:48:30.418">
       None
      </msg>
      <status endtime="20240517 09:48:30.418" starttime="20240517 09:48:30.418" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240517 09:48:32.419">
       Slept 2 seconds
      </msg>
      <status endtime="20240517 09:48:32.419" starttime="20240517 09:48:30.418" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       010_patch_select1.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240517 09:48:32.469">
       &lt;a href="pabot_results%5C0%5C010_patch_select1.jpg"&gt;&lt;img src="pabot_results%5C0%5C010_patch_select1.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240517 09:48:32.469" starttime="20240517 09:48:32.419" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Click Element">
      <arg>
       wnd[1]/tbar[0]/btn[0]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240517 09:48:34.936" starttime="20240517 09:48:32.469" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240517 09:48:36.938">
       Slept 2 seconds
      </msg>
      <status endtime="20240517 09:48:36.938" starttime="20240517 09:48:34.936" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       011_patch_select2.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240517 09:48:36.994">
       &lt;a href="pabot_results%5C0%5C011_patch_select2.jpg"&gt;&lt;img src="pabot_results%5C0%5C011_patch_select2.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240517 09:48:36.994" starttime="20240517 09:48:36.938" status="PASS"/>
     </kw>
     <status endtime="20240517 09:48:36.995" starttime="20240517 09:47:36.012" status="PASS"/>
    </kw>
    <kw library="Spampatch" name="Important SAP note handling">
     <kw library="CustomSapGuiLibrary" name="Is Imp Notes Existing">
      <arg>
       wnd[1]
      </arg>
      <arg>
       wnd[1]/tbar[0]/btn[0]
      </arg>
      <msg level="INFO" timestamp="20240517 09:48:36.998">
       Modal window does not exist.
      </msg>
      <status endtime="20240517 09:48:36.998" starttime="20240517 09:48:36.995" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240517 09:48:38.998">
       Slept 2 seconds
      </msg>
      <status endtime="20240517 09:48:38.998" starttime="20240517 09:48:36.998" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       012_SAP_note.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240517 09:48:39.070">
       &lt;a href="pabot_results%5C0%5C012_SAP_note.jpg"&gt;&lt;img src="pabot_results%5C0%5C012_SAP_note.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240517 09:48:39.070" starttime="20240517 09:48:38.998" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Click Element">
      <arg>
       wnd[1]/usr/btnBUTTON_2
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240517 09:48:39.282" starttime="20240517 09:48:39.070" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240517 09:48:41.284">
       Slept 2 seconds
      </msg>
      <status endtime="20240517 09:48:41.284" starttime="20240517 09:48:39.282" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       013_Modification.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240517 09:48:41.364">
       &lt;a href="pabot_results%5C0%5C013_Modification.jpg"&gt;&lt;img src="pabot_results%5C0%5C013_Modification.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240517 09:48:41.364" starttime="20240517 09:48:41.284" status="PASS"/>
     </kw>
     <status endtime="20240517 09:48:41.364" starttime="20240517 09:48:36.995" status="PASS"/>
    </kw>
    <tag>
     Regression
    </tag>
    <tag>
     spampatch
    </tag>
    <status endtime="20240517 09:48:41.364" starttime="20240517 09:47:11.528" status="PASS"/>
   </test>
   <test id="s1-s1-t2" line="19" name="Import Queue">
    <kw library="Spampatch" name="Importing queue from support package">
     <kw library="CustomSapGuiLibrary" name="Click Element">
      <arg>
       wnd[0]/mbar/menu[0]/menu[3]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240517 09:48:41.552" starttime="20240517 09:48:41.367" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240517 09:48:43.554">
       Slept 2 seconds
      </msg>
      <status endtime="20240517 09:48:43.554" starttime="20240517 09:48:41.552" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       014_Imp_que_1.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240517 09:48:43.621">
       &lt;a href="pabot_results%5C0%5C014_Imp_que_1.jpg"&gt;&lt;img src="pabot_results%5C0%5C014_Imp_que_1.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240517 09:48:43.621" starttime="20240517 09:48:43.554" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Click Element">
      <arg>
       wnd[1]/tbar[0]/btn[27]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240517 09:48:43.746" starttime="20240517 09:48:43.621" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240517 09:48:45.747">
       Slept 2 seconds
      </msg>
      <status endtime="20240517 09:48:45.747" starttime="20240517 09:48:43.746" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       015_Imp_que_2.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240517 09:48:45.817">
       &lt;a href="pabot_results%5C0%5C015_Imp_que_2.jpg"&gt;&lt;img src="pabot_results%5C0%5C015_Imp_que_2.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240517 09:48:45.817" starttime="20240517 09:48:45.747" status="PASS"/>
     </kw>
     <status endtime="20240517 09:48:45.818" starttime="20240517 09:48:41.366" status="PASS"/>
    </kw>
    <kw library="Spampatch" name="Start Options">
     <kw library="CustomSapGuiLibrary" name="Select Radio Button">
      <arg>
       wnd[1]/usr/tabsSTART_OPTIONS/tabpSTART_FC1/ssubSTART_OPTIONS_SCA:SAPLOCS_UI:0701/radLAY0700-RB1_DIA
      </arg>
      <doc>
       Sets radio button to the specified value.
      </doc>
      <status endtime="20240517 09:48:45.824" starttime="20240517 09:48:45.818" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240517 09:48:47.825">
       Slept 2 seconds
      </msg>
      <status endtime="20240517 09:48:47.825" starttime="20240517 09:48:45.825" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       016_prep_dial.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240517 09:48:47.893">
       &lt;a href="pabot_results%5C0%5C016_prep_dial.jpg"&gt;&lt;img src="pabot_results%5C0%5C016_prep_dial.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240517 09:48:47.893" starttime="20240517 09:48:47.825" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Click Element">
      <arg>
       wnd[1]/usr/tabsSTART_OPTIONS/tabpSTART_FC2
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240517 09:48:47.963" starttime="20240517 09:48:47.893" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240517 09:48:49.964">
       Slept 2 seconds
      </msg>
      <status endtime="20240517 09:48:49.964" starttime="20240517 09:48:47.963" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       017_import_select.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240517 09:48:50.026">
       &lt;a href="pabot_results%5C0%5C017_import_select.jpg"&gt;&lt;img src="pabot_results%5C0%5C017_import_select.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240517 09:48:50.026" starttime="20240517 09:48:49.964" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Select Radio Button">
      <arg>
       wnd[1]/usr/tabsSTART_OPTIONS/tabpSTART_FC2/ssubSTART_OPTIONS_SCA:SAPLOCS_UI:0702/radLAY0700-RB2_BTCHIM
      </arg>
      <doc>
       Sets radio button to the specified value.
      </doc>
      <status endtime="20240517 09:48:50.116" starttime="20240517 09:48:50.026" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240517 09:48:52.118">
       Slept 2 seconds
      </msg>
      <status endtime="20240517 09:48:52.118" starttime="20240517 09:48:50.117" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       018_import_bkgd.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240517 09:48:52.195">
       &lt;a href="pabot_results%5C0%5C018_import_bkgd.jpg"&gt;&lt;img src="pabot_results%5C0%5C018_import_bkgd.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240517 09:48:52.196" starttime="20240517 09:48:52.118" status="PASS"/>
     </kw>
     <status endtime="20240517 09:48:52.196" starttime="20240517 09:48:45.818" status="PASS"/>
    </kw>
    <kw library="Spampatch" name="Import Option">
     <kw library="CustomSapGuiLibrary" name="Click Element">
      <arg>
       wnd[1]/tbar[0]/btn[0]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240517 09:48:52.325" starttime="20240517 09:48:52.196" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240517 09:48:53.325">
       Slept 1 second
      </msg>
      <status endtime="20240517 09:48:53.325" starttime="20240517 09:48:52.325" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       019_import1.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240517 09:48:53.372">
       &lt;a href="pabot_results%5C0%5C019_import1.jpg"&gt;&lt;img src="pabot_results%5C0%5C019_import1.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240517 09:48:53.372" starttime="20240517 09:48:53.325" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Click Element">
      <arg>
       wnd[1]/tbar[0]/btn[25]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240517 09:48:53.547" starttime="20240517 09:48:53.372" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       020_import2.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240517 09:48:53.630">
       &lt;a href="pabot_results%5C0%5C020_import2.jpg"&gt;&lt;img src="pabot_results%5C0%5C020_import2.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240517 09:48:53.630" starttime="20240517 09:48:53.547" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       3
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240517 09:48:56.634">
       Slept 3 seconds
      </msg>
      <status endtime="20240517 09:48:56.634" starttime="20240517 09:48:53.630" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Is Errors During Disassembling Existing">
      <arg>
       wnd[0]
      </arg>
      <arg>
       wnd[0]/tbar[1]/btn[20]
      </arg>
      <msg level="INFO" timestamp="20240517 09:48:57.305">
       Window exists
      </msg>
      <status endtime="20240517 09:48:57.305" starttime="20240517 09:48:56.634" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240517 09:48:59.306">
       Slept 2 seconds
      </msg>
      <status endtime="20240517 09:48:59.306" starttime="20240517 09:48:57.306" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       021_ignore.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240517 09:48:59.378">
       &lt;a href="pabot_results%5C0%5C021_ignore.jpg"&gt;&lt;img src="pabot_results%5C0%5C021_ignore.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240517 09:48:59.378" starttime="20240517 09:48:59.306" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Is User Defined Existing">
      <arg>
       wnd[1]
      </arg>
      <arg>
       wnd[1]/tbar[0]/btn[0]
      </arg>
      <msg level="INFO" timestamp="20240517 09:49:08.096">
       Window exists
Error: name 'modal_continue_id' is not defined
      </msg>
      <status endtime="20240517 09:49:08.096" starttime="20240517 09:48:59.378" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240517 09:49:10.097">
       Slept 2 seconds
      </msg>
      <status endtime="20240517 09:49:10.097" starttime="20240517 09:49:08.096" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       022_User_defined.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240517 09:49:10.157">
       &lt;a href="pabot_results%5C0%5C022_User_defined.jpg"&gt;&lt;img src="pabot_results%5C0%5C022_User_defined.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240517 09:49:10.158" starttime="20240517 09:49:10.097" status="PASS"/>
     </kw>
     <status endtime="20240517 09:49:10.158" starttime="20240517 09:48:52.196" status="PASS"/>
    </kw>
    <tag>
     Regression
    </tag>
    <tag>
     spampatch
    </tag>
    <status endtime="20240517 09:49:10.158" starttime="20240517 09:48:41.365" status="PASS"/>
   </test>
   <status endtime="20240517 09:49:10.161" starttime="20240517 09:46:44.812" status="PASS"/>
  </suite>
  <doc>
   Testing functionality through Robot Framework
  </doc>
  <meta name="environment">
   Dev
  </meta>
  <meta name="test_browser_name">
   chrome
  </meta>
  <meta name="test_browser_version">
   124.0.6367.119
  </meta>
  <meta name="test_driver_version">
   124.0.6367.207
  </meta>
  <meta name="test_environment">
   Dev
  </meta>
  <meta name="test_freeze_dependencies">
   astroid==3.1.0,attrs==23.2.0,beautifulsoup4==4.12.3,bs4==0.0.2,certifi==2024.2.2,cffi==1.16.0,chardet==5.2.0,charset-normalizer==3.3.2,click==8.1.7,colorama==0.4.6,cryptography==42.0.5,defusedxml==0.7.1,dill==0.3.8,docutils==0.21.2,exceptiongroup==1.2.1,gitdb==4.0.11,GitPython==3.1.43,h11==0.14.0,idna==3.7,isort==5.13.2,Jinja2==3.1.3,jira==3.8.0,jsonpath-ng==1.6.1,jsonschema==4.21.1,jsonschema-specifications==2023.12.1,lazy-object-proxy==1.10.0,lxml==5.2.1,markdown-it-py==3.0.0,MarkupSafe==2.1.5,mccabe==0.7.0,mdurl==0.1.2,natsort==8.4.0,oauthlib==3.2.2,outcome==1.3.0.post0,packaging==24.0,pathspec==0.11.2,pillow==10.3.0,pip==24.0,platformdirs==4.2.1,ply==3.11,pycparser==2.22,Pygments==2.17.2,pylint==3.1.0,PySocks==1.7.1,pywin32==306,PyYAML==6.0.1,referencing==0.35.0,reportlab==4.2.0,requests==2.31.0,requests-oauthlib==2.0.0,requests-toolbelt==1.0.0,rich==13.7.1,rich-click==1.6.1,robotframework==6.0.2,robotframework-datadriver==1.9.0,robotframework-jsonlibrary==0.5,robotframework-pabot==2.16.0,robotframework-pythonlibcore==4.2.0,robotframework-requests==0.9.2,robotframework-sapguilibrary==1.1,robotframework-seleniumlibrary==5.1.3,robotframework-stacktrace==0.4.1,robotframework-tidy==4.5.0,rpds-py==0.18.0,selenium==4.9.1,setuptools==69.5.1,smmap==5.0.1,sniffio==1.3.1,sortedcontainers==2.4.0,soupsieve==2.5,tomli==2.0.1,tomlkit==0.12.4,trio==0.25.0,trio-websocket==0.11.1,typing_extensions==4.11.0,urllib3==2.2.1,wheel==0.43.0,wrapt==1.16.0,wsproto==1.2.0
  </meta>
  <status endtime="20240517 09:49:10.658" starttime="20240517 09:46:40.372" status="PASS"/>
 </suite>
 <statistics>
  <total>
   <stat fail="0" pass="2" skip="0">
    All Tests
   </stat>
  </total>
  <tag>
   <stat fail="0" pass="2" skip="0">
    Regression
   </stat>
   <stat fail="0" pass="2" skip="0">
    spampatch
   </stat>
  </tag>
  <suite>
   <stat fail="0" id="s1" name="Tests" pass="2" skip="0">
    Tests
   </stat>
   <stat fail="0" id="s1-s1" name="Test Spampatch" pass="2" skip="0">
    Tests.Test Spampatch
   </stat>
  </suite>
 </statistics>
 <errors>
 </errors>
</robot>
