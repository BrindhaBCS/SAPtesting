<?xml version="1.0" encoding="utf-8"?>
<robot generated="20240826 05:20:05.923" generator="Rebot 6.0.2 (Python 3.12.4 on win32)" rpa="false" schemaversion="3">
 <suite id="s1" name="Tests" source="C:\SAP_Testing\SAPtesting\Tests">
  <kw name="Setup highest level suite" type="SETUP">
   <kw library="BuiltIn" name="Set Variable">
    <var>
     ${d.test_server}
    </var>
    <arg>
     ${test_server}
    </arg>
    <doc>
     Returns the given values which can then be assigned to a variables.
    </doc>
    <msg level="INFO" timestamp="20240826 05:14:06.254">
     ${d.test_server} = Dev
    </msg>
    <status endtime="20240826 05:14:06.254" starttime="20240826 05:14:06.250" status="PASS"/>
   </kw>
   <kw library="Support" name="Reset screenshot count variable">
    <kw library="BuiltIn" name="Set Variable">
     <var>
      ${screenshotCount}
     </var>
     <arg>
      ${PABOTQUEUEINDEX}_1
     </arg>
     <doc>
      Returns the given values which can then be assigned to a variables.
     </doc>
     <msg level="INFO" timestamp="20240826 05:14:06.254">
      ${screenshotCount} = 0_1
     </msg>
     <status endtime="20240826 05:14:06.255" starttime="20240826 05:14:06.254" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Set Global Variable">
     <arg>
      ${screenshotCount}
     </arg>
     <doc>
      Makes a variable available globally in all tests and suites.
     </doc>
     <msg level="INFO" timestamp="20240826 05:14:06.255">
      ${screenshotCount} = 0_1
     </msg>
     <status endtime="20240826 05:14:06.255" starttime="20240826 05:14:06.255" status="PASS"/>
    </kw>
    <kw library="Support" name="Set up screenshot directory">
     <kw library="OperatingSystem" name="Create Directory">
      <arg>
       ${OUTPUTDIR}${/}${wvar('screenshot_dir')}
      </arg>
      <doc>
       Creates the specified directory.
      </doc>
      <msg level="INFO" timestamp="20240826 05:14:06.256">
       Web.Dev.screenshot_dir: Screenshot
      </msg>
      <msg html="true" level="INFO" timestamp="20240826 05:14:06.260">
       Created directory '&lt;a href="file://C:\SAP_Testing\SAPtesting\Output\pabot_results\0\Screenshot"&gt;C:\SAP_Testing\SAPtesting\Output\pabot_results\0\Screenshot&lt;/a&gt;'.
      </msg>
      <status endtime="20240826 05:14:06.260" starttime="20240826 05:14:06.255" status="PASS"/>
     </kw>
     <status endtime="20240826 05:14:06.261" starttime="20240826 05:14:06.255" status="PASS"/>
    </kw>
    <status endtime="20240826 05:14:06.261" starttime="20240826 05:14:06.254" status="PASS"/>
   </kw>
   <kw library="BuiltIn" name="Set Global Variable">
    <arg>
     ${screenshot_taking}
    </arg>
    <arg>
     ${True}
    </arg>
    <doc>
     Makes a variable available globally in all tests and suites.
    </doc>
    <msg level="INFO" timestamp="20240826 05:14:06.261">
     ${screenshot_taking} = True
    </msg>
    <status endtime="20240826 05:14:06.261" starttime="20240826 05:14:06.261" status="PASS"/>
   </kw>
   <kw library="Support" name="Setup linux execution">
    <kw library="BuiltIn" name="Run Keyword And Return Status">
     <var>
      ${web_test_check}
     </var>
     <arg>
      Variable Should Exist
     </arg>
     <arg>
      ${web_test}
     </arg>
     <doc>
      Runs the given keyword with given arguments and returns the status as a Boolean value.
     </doc>
     <kw library="BuiltIn" name="Variable Should Exist">
      <arg>
       ${web_test}
      </arg>
      <doc>
       Fails unless the given variable exists within the current scope.
      </doc>
      <status endtime="20240826 05:14:06.262" starttime="20240826 05:14:06.262" status="PASS"/>
     </kw>
     <msg level="INFO" timestamp="20240826 05:14:06.262">
      ${web_test_check} = True
     </msg>
     <status endtime="20240826 05:14:06.262" starttime="20240826 05:14:06.262" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Run Keyword If">
     <arg>
      ${web_test_check}
     </arg>
     <arg>
      Setup Docker Execution Options
     </arg>
     <doc>
      Runs the given keyword with the given arguments, if ``condition`` is true.
     </doc>
     <kw library="Support_Web" name="Setup Docker Execution Options">
      <kw library="Support_Web" name="Setup Suite Metadata">
       <arg>
        ${browser}
       </arg>
       <kw library="BrowserSupport" name="Get Browser Metadata">
        <var>
         &amp;{browser_information}
        </var>
        <arg>
         browser=${browser}
        </arg>
        <doc>
         Fetches browser metadata information
:param browser: Name of the browser for which information is fetched
:param reload: Re-read the metadata based on the browser
:return: Browser metadata information, dict of format
            {"browser_version": browser version value,
             "driver_version": driver version value}
        </doc>
        <msg level="INFO" timestamp="20240826 05:14:09.463">
         &amp;{browser_information} = { browser_version=127.0.6533.120 | driver_version=126.0.6478.182  }
        </msg>
        <status endtime="20240826 05:14:09.463" starttime="20240826 05:14:06.263" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Suite Metadata">
        <arg>
         test_browser_name
        </arg>
        <arg>
         ${browser}
        </arg>
        <doc>
         Sets metadata for the current test suite.
        </doc>
        <msg level="INFO" timestamp="20240826 05:14:09.463">
         Set suite metadata 'test_browser_name' to value 'chrome'.
        </msg>
        <status endtime="20240826 05:14:09.463" starttime="20240826 05:14:09.463" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Suite Metadata">
        <arg>
         test_browser_version
        </arg>
        <arg>
         ${browser_information.browser_version}
        </arg>
        <doc>
         Sets metadata for the current test suite.
        </doc>
        <msg level="INFO" timestamp="20240826 05:14:09.463">
         Set suite metadata 'test_browser_version' to value '127.0.6533.120'.
        </msg>
        <status endtime="20240826 05:14:09.463" starttime="20240826 05:14:09.463" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Suite Metadata">
        <arg>
         test_driver_version
        </arg>
        <arg>
         ${browser_information.driver_version}
        </arg>
        <doc>
         Sets metadata for the current test suite.
        </doc>
        <msg level="INFO" timestamp="20240826 05:14:09.463">
         Set suite metadata 'test_driver_version' to value '126.0.6478.182 '.
        </msg>
        <status endtime="20240826 05:14:09.463" starttime="20240826 05:14:09.463" status="PASS"/>
       </kw>
       <status endtime="20240826 05:14:09.463" starttime="20240826 05:14:06.263" status="PASS"/>
      </kw>
      <kw library="Support_Web" name="Setup Global Docker Execution Options">
       <kw library="BuiltIn" name="Set Global Variable">
        <arg>
         ${global_browser_options}
        </arg>
        <arg>
         None
        </arg>
        <doc>
         Makes a variable available globally in all tests and suites.
        </doc>
        <msg level="INFO" timestamp="20240826 05:14:09.463">
         ${global_browser_options} = None
        </msg>
        <status endtime="20240826 05:14:09.463" starttime="20240826 05:14:09.463" status="PASS"/>
       </kw>
       <kw library="OperatingSystem" name="Get Environment Variable">
        <var>
         ${docker_check}
        </var>
        <arg>
         EXECUTION_ENVIRONMENT
        </arg>
        <arg>
         not_found
        </arg>
        <doc>
         Returns the value of an environment variable with the given name.
        </doc>
        <msg level="INFO" timestamp="20240826 05:14:09.463">
         ${docker_check} = not_found
        </msg>
        <status endtime="20240826 05:14:09.463" starttime="20240826 05:14:09.463" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Run Keyword And Return If">
        <arg>
         "${docker_check}"!="docker"
        </arg>
        <arg>
         Log
        </arg>
        <arg>
         Not executing on Docker
        </arg>
        <doc>
         Runs the specified keyword and returns from the enclosing user keyword.
        </doc>
        <kw library="BuiltIn" name="Log">
         <arg>
          Not executing on Docker
         </arg>
         <doc>
          Logs the given message with the given level.
         </doc>
         <msg level="INFO" timestamp="20240826 05:14:09.463">
          Not executing on Docker
         </msg>
         <status endtime="20240826 05:14:09.463" starttime="20240826 05:14:09.463" status="PASS"/>
        </kw>
        <msg level="INFO" timestamp="20240826 05:14:09.463">
         Returning from the enclosing user keyword.
        </msg>
        <status endtime="20240826 05:14:09.463" starttime="20240826 05:14:09.463" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Create List">
        <var>
         @{options}
        </var>
        <arg>
         --headless
        </arg>
        <arg>
         --no-sandbox
        </arg>
        <arg>
         --disable-dev-shm-usage
        </arg>
        <doc>
         Returns a list containing given items.
        </doc>
        <status endtime="20240826 05:14:09.463" starttime="20240826 05:14:09.463" status="NOT RUN"/>
       </kw>
       <kw library="BuiltIn" name="Set Global Variable">
        <arg>
         @{docker_options}
        </arg>
        <arg>
         @{options}
        </arg>
        <doc>
         Makes a variable available globally in all tests and suites.
        </doc>
        <status endtime="20240826 05:14:09.463" starttime="20240826 05:14:09.463" status="NOT RUN"/>
       </kw>
       <status endtime="20240826 05:14:09.463" starttime="20240826 05:14:09.463" status="PASS"/>
      </kw>
      <kw library="Support_Web" name="Create Webdriver for chrome preferences">
       <kw library="Support_Web" name="Update Docker Execution Options">
        <var>
         ${list_prefs}
        </var>
        <arg>
         ${list_prefs}
        </arg>
        <kw library="BuiltIn" name="Run Keyword And Return Status">
         <var>
          ${docker_check}
         </var>
         <arg>
          Variable Should Exist
         </arg>
         <arg>
          ${docker_options}
         </arg>
         <doc>
          Runs the given keyword with given arguments and returns the status as a Boolean value.
         </doc>
         <kw library="BuiltIn" name="Variable Should Exist">
          <arg>
           ${docker_options}
          </arg>
          <doc>
           Fails unless the given variable exists within the current scope.
          </doc>
          <msg level="FAIL" timestamp="20240826 05:14:09.463">
           Variable '${docker_options}' does not exist.
          </msg>
          <status endtime="20240826 05:14:09.463" starttime="20240826 05:14:09.463" status="FAIL"/>
         </kw>
         <msg level="INFO" timestamp="20240826 05:14:09.463">
          ${docker_check} = False
         </msg>
         <status endtime="20240826 05:14:09.463" starttime="20240826 05:14:09.463" status="PASS"/>
        </kw>
        <kw library="BuiltIn" name="Get Length">
         <var>
          ${list_prefs_length}
         </var>
         <arg>
          ${list_prefs}
         </arg>
         <doc>
          Returns and logs the length of the given item as an integer.
         </doc>
         <msg level="INFO" timestamp="20240826 05:14:09.463">
          Length is 1
         </msg>
         <msg level="INFO" timestamp="20240826 05:14:09.463">
          ${list_prefs_length} = 1
         </msg>
         <status endtime="20240826 05:14:09.463" starttime="20240826 05:14:09.463" status="PASS"/>
        </kw>
        <kw library="BuiltIn" name="Run Keyword If">
         <var>
          ${list_prefs}
         </var>
         <arg>
          ${docker_check} and ${list_prefs_length}&gt;0 and ${list_prefs}[0] != []
         </arg>
         <arg>
          Combine Lists
         </arg>
         <arg>
          ${list_prefs}
         </arg>
         <arg>
          ${docker_options}
         </arg>
         <arg>
          ELSE IF
         </arg>
         <arg>
          ${docker_check}
         </arg>
         <arg>
          Set Variable
         </arg>
         <arg>
          ${docker_options}
         </arg>
         <arg>
          ELSE
         </arg>
         <arg>
          Set Variable
         </arg>
         <arg>
          ${list_prefs}
         </arg>
         <doc>
          Runs the given keyword with the given arguments, if ``condition`` is true.
         </doc>
         <kw library="BuiltIn" name="Set Variable">
          <arg>
           ${list_prefs}
          </arg>
          <doc>
           Returns the given values which can then be assigned to a variables.
          </doc>
          <status endtime="20240826 05:14:09.463" starttime="20240826 05:14:09.463" status="PASS"/>
         </kw>
         <msg level="INFO" timestamp="20240826 05:14:09.463">
          ${list_prefs} = [[]]
         </msg>
         <status endtime="20240826 05:14:09.463" starttime="20240826 05:14:09.463" status="PASS"/>
        </kw>
        <msg level="INFO" timestamp="20240826 05:14:09.463">
         ${list_prefs} = [[]]
        </msg>
        <status endtime="20240826 05:14:09.463" starttime="20240826 05:14:09.463" status="PASS"/>
       </kw>
       <kw library="Support_Web" name="Create Chrome Options for download preferences">
        <var>
         ${chrome_options}
        </var>
        <kw library="BuiltIn" name="Evaluate">
         <var>
          ${chrome_options}
         </var>
         <arg>
          sys.modules['selenium.webdriver'].ChromeOptions()
         </arg>
         <arg>
          sys
         </arg>
         <doc>
          Evaluates the given expression in Python and returns the result.
         </doc>
         <msg level="INFO" timestamp="20240826 05:14:09.463">
          ${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x0000020FF6981550&gt;
         </msg>
         <status endtime="20240826 05:14:09.463" starttime="20240826 05:14:09.463" status="PASS"/>
        </kw>
        <msg level="INFO" timestamp="20240826 05:14:09.463">
         ${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x0000020FF6981550&gt;
        </msg>
        <status endtime="20240826 05:14:09.463" starttime="20240826 05:14:09.463" status="PASS"/>
       </kw>
       <kw library="Support_Web" name="Update Preferences List">
        <arg>
         ${chrome_options}
        </arg>
        <arg>
         @{list_prefs}
        </arg>
        <kw library="BuiltIn" name="Convert To String">
         <var>
          ${string_prefs}
         </var>
         <arg>
          ${list_prefs}
         </arg>
         <doc>
          Converts the given item to a Unicode string.
         </doc>
         <msg level="INFO" timestamp="20240826 05:14:09.463">
          ${string_prefs} = [[]]
         </msg>
         <status endtime="20240826 05:14:09.463" starttime="20240826 05:14:09.463" status="PASS"/>
        </kw>
        <kw library="BuiltIn" name="Return From Keyword If">
         <arg>
          ${string_prefs} == [[]]
         </arg>
         <doc>
          Returns from the enclosing user keyword if ``condition`` is true.
         </doc>
         <msg level="INFO" timestamp="20240826 05:14:09.463">
          Returning from the enclosing user keyword.
         </msg>
         <status endtime="20240826 05:14:09.463" starttime="20240826 05:14:09.463" status="PASS"/>
        </kw>
        <for flavor="IN">
         <var>
          ${preference}
         </var>
         <value>
          @{list_prefs}
         </value>
         <iter>
          <var name="${preference}"/>
          <kw library="BuiltIn" name="Call Method">
           <arg>
            ${chrome_options}
           </arg>
           <arg>
            add_argument
           </arg>
           <arg>
            ${preference}
           </arg>
           <doc>
            Calls the named method of the given object with the provided arguments.
           </doc>
           <status endtime="20240826 05:14:09.463" starttime="20240826 05:14:09.463" status="NOT RUN"/>
          </kw>
          <status endtime="20240826 05:14:09.463" starttime="20240826 05:14:09.463" status="NOT RUN"/>
         </iter>
         <status endtime="20240826 05:14:09.463" starttime="20240826 05:14:09.463" status="NOT RUN"/>
        </for>
        <status endtime="20240826 05:14:09.463" starttime="20240826 05:14:09.463" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Call Method">
        <arg>
         ${chrome_options}
        </arg>
        <arg>
         add_experimental_option
        </arg>
        <arg>
         prefs
        </arg>
        <arg>
         ${kw_prefs}
        </arg>
        <doc>
         Calls the named method of the given object with the provided arguments.
        </doc>
        <status endtime="20240826 05:14:09.463" starttime="20240826 05:14:09.463" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Global Variable">
        <arg>
         ${global_browser_options}
        </arg>
        <arg>
         ${chrome options}
        </arg>
        <doc>
         Makes a variable available globally in all tests and suites.
        </doc>
        <msg level="INFO" timestamp="20240826 05:14:09.463">
         ${global_browser_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x0000020FF6981550&gt;
        </msg>
        <status endtime="20240826 05:14:09.463" starttime="20240826 05:14:09.463" status="PASS"/>
       </kw>
       <status endtime="20240826 05:14:09.463" starttime="20240826 05:14:09.463" status="PASS"/>
      </kw>
      <status endtime="20240826 05:14:09.463" starttime="20240826 05:14:06.263" status="PASS"/>
     </kw>
     <status endtime="20240826 05:14:09.463" starttime="20240826 05:14:06.262" status="PASS"/>
    </kw>
    <status endtime="20240826 05:14:09.463" starttime="20240826 05:14:06.261" status="PASS"/>
   </kw>
   <kw library="BuiltIn" name="Set Suite Metadata">
    <arg>
     environment
    </arg>
    <arg>
     ${test_server}
    </arg>
    <doc>
     Sets metadata for the current test suite.
    </doc>
    <msg level="INFO" timestamp="20240826 05:14:09.463">
     Set suite metadata 'environment' to value 'Dev'.
    </msg>
    <status endtime="20240826 05:14:09.463" starttime="20240826 05:14:09.463" status="PASS"/>
   </kw>
   <status endtime="20240826 05:14:09.463" starttime="20240826 05:14:06.250" status="PASS"/>
  </kw>
  <suite id="s1-s1" name="Test STPI Patch" source="C:\SAP_Testing\SAPtesting\Tests\Test_STPI_Patch.robot">
   <kw library="STPI_Patch" name="System Logon" type="SETUP">
    <kw library="Process" name="Start Process">
     <arg>
      ${symvar('ABAP_SAP_SERVER')}
     </arg>
     <doc>
      Starts a new process on background.
     </doc>
     <msg level="INFO" timestamp="20240826 05:14:09.669">
      Sym.Dev.ABAP_SAP_SERVER: C:\Program Files (x86)\SAP\FrontEnd\SAPGUI\saplogon.exe
     </msg>
     <msg level="INFO" timestamp="20240826 05:14:09.669">
      Starting process:
"C:\Program Files (x86)\SAP\FrontEnd\SAPGUI\saplogon.exe"
     </msg>
     <status endtime="20240826 05:14:09.669" starttime="20240826 05:14:09.669" status="PASS"/>
    </kw>
    <kw library="CustomSapGuiLibrary" name="Connect To Session">
     <doc>
      Connects to an open session SAP.
     </doc>
     <status endtime="20240826 05:14:09.685" starttime="20240826 05:14:09.669" status="PASS"/>
    </kw>
    <kw library="CustomSapGuiLibrary" name="Open Connection">
     <arg>
      ${symvar('Connection_Name')}
     </arg>
     <doc>
      Opens a connection to the given connection name. Be sure to provide the full connection name, including the bracket part.
     </doc>
     <msg level="INFO" timestamp="20240826 05:14:09.685">
      Sym.Dev.Connection_Name: RBT
     </msg>
     <status endtime="20240826 05:14:11.203" starttime="20240826 05:14:09.685" status="PASS"/>
    </kw>
    <kw library="CustomSapGuiLibrary" name="Input Text">
     <arg>
      wnd[0]/usr/txtRSYST-MANDT
     </arg>
     <arg>
      ${symvar('SAP_CLIENT')}
     </arg>
     <doc>
      Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.
     </doc>
     <msg level="INFO" timestamp="20240826 05:14:11.203">
      Sym.Dev.SAP_CLIENT: 000
     </msg>
     <msg level="INFO" timestamp="20240826 05:14:11.209">
      Typing text '000' into text field 'wnd[0]/usr/txtRSYST-MANDT'.
     </msg>
     <status endtime="20240826 05:14:11.209" starttime="20240826 05:14:11.203" status="PASS"/>
    </kw>
    <kw library="CustomSapGuiLibrary" name="Input Text">
     <arg>
      wnd[0]/usr/txtRSYST-BNAME
     </arg>
     <arg>
      ${symvar('SAP_USER')}
     </arg>
     <doc>
      Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.
     </doc>
     <msg level="INFO" timestamp="20240826 05:14:11.209">
      Sym.Dev.SAP_USER: DDIC
     </msg>
     <msg level="INFO" timestamp="20240826 05:14:11.219">
      Typing text 'DDIC' into text field 'wnd[0]/usr/txtRSYST-BNAME'.
     </msg>
     <status endtime="20240826 05:14:11.219" starttime="20240826 05:14:11.209" status="PASS"/>
    </kw>
    <kw library="CustomSapGuiLibrary" name="Input Password">
     <arg>
      wnd[0]/usr/pwdRSYST-BCODE
     </arg>
     <arg>
      Sym@rocks2023
     </arg>
     <doc>
      Inserts the given password into the text field identified by locator.
The password is not recorded in the log.
     </doc>
     <msg level="INFO" timestamp="20240826 05:14:11.219">
      Typing password into text field 'wnd[0]/usr/pwdRSYST-BCODE'.
     </msg>
     <status endtime="20240826 05:14:11.219" starttime="20240826 05:14:11.219" status="PASS"/>
    </kw>
    <kw library="CustomSapGuiLibrary" name="Send Vkey">
     <arg>
      0
     </arg>
     <doc>
      Sends a SAP virtual key combination to the window, not into an element.
If you want to send a value to a text field, use `input text` instead.
     </doc>
     <status endtime="20240826 05:14:11.713" starttime="20240826 05:14:11.219" status="PASS"/>
    </kw>
    <kw library="CustomSapGuiLibrary" name="Multiple Logon Handling">
     <arg>
      wnd[1]
     </arg>
     <arg>
      wnd[1]/usr/radMULTI_LOGON_OPT2
     </arg>
     <arg>
      wnd[1]/tbar[0]/btn[0]
     </arg>
     <status endtime="20240826 05:14:11.713" starttime="20240826 05:14:11.713" status="PASS"/>
    </kw>
    <status endtime="20240826 05:14:11.713" starttime="20240826 05:14:09.669" status="PASS"/>
   </kw>
   <test id="s1-s1-t1" line="8" name="Patching the ST-PI support package into latest release">
    <kw library="STPI_Patch" name="Spam Certificate Verification">
     <kw library="CustomSapGuiLibrary" name="Run Transaction">
      <arg>
       /nspam
      </arg>
      <doc>
       Runs a Sap transaction. An error is given when an unknown transaction is specified.
      </doc>
      <status endtime="20240826 05:14:11.905" starttime="20240826 05:14:11.713" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Get Maintenance Certificate Text">
      <arg>
       wnd[0]/sbar/pane[0]
      </arg>
      <msg level="INFO" timestamp="20240826 05:14:11.905">
       License available to proceed further
      </msg>
      <status endtime="20240826 05:14:11.905" starttime="20240826 05:14:11.905" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240826 05:14:13.905">
       Slept 2 seconds
      </msg>
      <status endtime="20240826 05:14:13.905" starttime="20240826 05:14:11.905" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       01_spam.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240826 05:14:13.972">
       &lt;a href="pabot_results%5C0%5C01_spam.jpg"&gt;&lt;img src="pabot_results%5C0%5C01_spam.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240826 05:14:13.972" starttime="20240826 05:14:13.905" status="PASS"/>
     </kw>
     <status endtime="20240826 05:14:13.972" starttime="20240826 05:14:11.713" status="PASS"/>
    </kw>
    <kw library="STPI_Patch" name="Loading package">
     <kw library="CustomSapGuiLibrary" name="Generate Package Sequence">
      <var>
       @{packages}
      </var>
      <arg>
       ${symvar('start_package')}
      </arg>
      <arg>
       ${symvar('End_package')}
      </arg>
      <msg level="INFO" timestamp="20240826 05:14:13.984">
       Sym.Dev.start_package: K-74003INSTPI.SAR
      </msg>
      <msg level="INFO" timestamp="20240826 05:14:13.984">
       Sym.Dev.End_package: K-74006INSTPI.SAR
      </msg>
      <msg level="INFO" timestamp="20240826 05:14:13.984">
       ['K-74004INSTPI.SAR', 'K-74005INSTPI.SAR', 'K-74006INSTPI.SAR']
      </msg>
      <msg level="INFO" timestamp="20240826 05:14:13.984">
       @{packages} = [ K-74004INSTPI.SAR | K-74005INSTPI.SAR | K-74006INSTPI.SAR ]
      </msg>
      <status endtime="20240826 05:14:13.984" starttime="20240826 05:14:13.972" status="PASS"/>
     </kw>
     <for flavor="IN">
      <var>
       ${package}
      </var>
      <value>
       @{packages}
      </value>
      <iter>
       <var name="${package}">
        K-74004INSTPI.SAR
       </var>
       <kw library="CustomSapGuiLibrary" name="Click Element">
        <arg>
         wnd[0]/mbar/menu[0]/menu[0]/menu[0]
        </arg>
        <doc>
         Performs a single click on a given element. Used only for buttons, tabs and menu items.
        </doc>
        <status endtime="20240826 05:14:14.127" starttime="20240826 05:14:13.984" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Sleep">
        <arg>
         2
        </arg>
        <doc>
         Pauses the test executed for the given time.
        </doc>
        <msg level="INFO" timestamp="20240826 05:14:16.127">
         Slept 2 seconds
        </msg>
        <status endtime="20240826 05:14:16.127" starttime="20240826 05:14:14.127" status="PASS"/>
       </kw>
       <kw library="CustomSapGuiLibrary" name="Input Text">
        <arg>
         wnd[1]/usr/ctxtDY_PATH
        </arg>
        <arg>
         ${EMPTY}
        </arg>
        <doc>
         Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.
        </doc>
        <msg level="INFO" timestamp="20240826 05:14:16.134">
         Typing text '' into text field 'wnd[1]/usr/ctxtDY_PATH'.
        </msg>
        <status endtime="20240826 05:14:16.134" starttime="20240826 05:14:16.127" status="PASS"/>
       </kw>
       <kw library="CustomSapGuiLibrary" name="Input Text">
        <arg>
         wnd[1]/usr/ctxtDY_PATH
        </arg>
        <arg>
         ${symvar('supportpackage_path')}
        </arg>
        <doc>
         Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.
        </doc>
        <msg level="INFO" timestamp="20240826 05:14:16.135">
         Sym.Dev.supportpackage_path: C:\Users\Administrator\Downloads\
        </msg>
        <msg level="INFO" timestamp="20240826 05:14:16.140">
         Typing text 'C:\Users\Administrator\Downloads\' into text field 'wnd[1]/usr/ctxtDY_PATH'.
        </msg>
        <status endtime="20240826 05:14:16.141" starttime="20240826 05:14:16.134" status="PASS"/>
       </kw>
       <kw library="CustomSapGuiLibrary" name="Input Text">
        <arg>
         wnd[1]/usr/ctxtDY_FILENAME
        </arg>
        <arg>
         ${package}
        </arg>
        <doc>
         Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.
        </doc>
        <msg level="INFO" timestamp="20240826 05:14:16.146">
         Typing text 'K-74004INSTPI.SAR' into text field 'wnd[1]/usr/ctxtDY_FILENAME'.
        </msg>
        <status endtime="20240826 05:14:16.146" starttime="20240826 05:14:16.141" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Sleep">
        <arg>
         2
        </arg>
        <doc>
         Pauses the test executed for the given time.
        </doc>
        <msg level="INFO" timestamp="20240826 05:14:18.146">
         Slept 2 seconds
        </msg>
        <status endtime="20240826 05:14:18.146" starttime="20240826 05:14:16.146" status="PASS"/>
       </kw>
       <kw library="CustomSapGuiLibrary" name="Click Element">
        <arg>
         wnd[1]/tbar[0]/btn[0]
        </arg>
        <doc>
         Performs a single click on a given element. Used only for buttons, tabs and menu items.
        </doc>
        <status endtime="20240826 05:14:22.037" starttime="20240826 05:14:18.146" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Sleep">
        <arg>
         5
        </arg>
        <doc>
         Pauses the test executed for the given time.
        </doc>
        <msg level="INFO" timestamp="20240826 05:14:27.038">
         Slept 5 seconds
        </msg>
        <status endtime="20240826 05:14:27.038" starttime="20240826 05:14:22.037" status="PASS"/>
       </kw>
       <kw library="CustomSapGuiLibrary" name="Click Element">
        <arg>
         wnd[1]/tbar[0]/btn[0]
        </arg>
        <doc>
         Performs a single click on a given element. Used only for buttons, tabs and menu items.
        </doc>
        <status endtime="20240826 05:14:27.609" starttime="20240826 05:14:27.038" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Sleep">
        <arg>
         5
        </arg>
        <doc>
         Pauses the test executed for the given time.
        </doc>
        <msg level="INFO" timestamp="20240826 05:14:32.610">
         Slept 5 seconds
        </msg>
        <status endtime="20240826 05:14:32.610" starttime="20240826 05:14:27.609" status="PASS"/>
       </kw>
       <kw library="CustomSapGuiLibrary" name="Get Value">
        <var>
         ${status1}
        </var>
        <arg>
         wnd[0]/sbar/pane[0]
        </arg>
        <doc>
         Gets the value of the given element. The possible return values depend on the type of element (see Return values).
        </doc>
        <msg level="INFO" timestamp="20240826 05:14:32.615">
         ${status1} = File 'k-74004instpi.sar' successfully transferred, decompressed, and then deleted
        </msg>
        <status endtime="20240826 05:14:32.615" starttime="20240826 05:14:32.610" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Log To Console">
        <arg>
         ${status1}
        </arg>
        <doc>
         Logs the given message to the console.
        </doc>
        <status endtime="20240826 05:14:32.616" starttime="20240826 05:14:32.615" status="PASS"/>
       </kw>
       <status endtime="20240826 05:14:32.616" starttime="20240826 05:14:13.984" status="PASS"/>
      </iter>
      <iter>
       <var name="${package}">
        K-74005INSTPI.SAR
       </var>
       <kw library="CustomSapGuiLibrary" name="Click Element">
        <arg>
         wnd[0]/mbar/menu[0]/menu[0]/menu[0]
        </arg>
        <doc>
         Performs a single click on a given element. Used only for buttons, tabs and menu items.
        </doc>
        <status endtime="20240826 05:14:32.701" starttime="20240826 05:14:32.616" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Sleep">
        <arg>
         2
        </arg>
        <doc>
         Pauses the test executed for the given time.
        </doc>
        <msg level="INFO" timestamp="20240826 05:14:34.701">
         Slept 2 seconds
        </msg>
        <status endtime="20240826 05:14:34.701" starttime="20240826 05:14:32.701" status="PASS"/>
       </kw>
       <kw library="CustomSapGuiLibrary" name="Input Text">
        <arg>
         wnd[1]/usr/ctxtDY_PATH
        </arg>
        <arg>
         ${EMPTY}
        </arg>
        <doc>
         Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.
        </doc>
        <msg level="INFO" timestamp="20240826 05:14:34.707">
         Typing text '' into text field 'wnd[1]/usr/ctxtDY_PATH'.
        </msg>
        <status endtime="20240826 05:14:34.707" starttime="20240826 05:14:34.701" status="PASS"/>
       </kw>
       <kw library="CustomSapGuiLibrary" name="Input Text">
        <arg>
         wnd[1]/usr/ctxtDY_PATH
        </arg>
        <arg>
         ${symvar('supportpackage_path')}
        </arg>
        <doc>
         Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.
        </doc>
        <msg level="INFO" timestamp="20240826 05:14:34.708">
         Sym.Dev.supportpackage_path: C:\Users\Administrator\Downloads\
        </msg>
        <msg level="INFO" timestamp="20240826 05:14:34.713">
         Typing text 'C:\Users\Administrator\Downloads\' into text field 'wnd[1]/usr/ctxtDY_PATH'.
        </msg>
        <status endtime="20240826 05:14:34.713" starttime="20240826 05:14:34.707" status="PASS"/>
       </kw>
       <kw library="CustomSapGuiLibrary" name="Input Text">
        <arg>
         wnd[1]/usr/ctxtDY_FILENAME
        </arg>
        <arg>
         ${package}
        </arg>
        <doc>
         Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.
        </doc>
        <msg level="INFO" timestamp="20240826 05:14:34.724">
         Typing text 'K-74005INSTPI.SAR' into text field 'wnd[1]/usr/ctxtDY_FILENAME'.
        </msg>
        <status endtime="20240826 05:14:34.724" starttime="20240826 05:14:34.714" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Sleep">
        <arg>
         2
        </arg>
        <doc>
         Pauses the test executed for the given time.
        </doc>
        <msg level="INFO" timestamp="20240826 05:14:36.725">
         Slept 2 seconds
        </msg>
        <status endtime="20240826 05:14:36.725" starttime="20240826 05:14:34.724" status="PASS"/>
       </kw>
       <kw library="CustomSapGuiLibrary" name="Click Element">
        <arg>
         wnd[1]/tbar[0]/btn[0]
        </arg>
        <doc>
         Performs a single click on a given element. Used only for buttons, tabs and menu items.
        </doc>
        <status endtime="20240826 05:14:39.881" starttime="20240826 05:14:36.725" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Sleep">
        <arg>
         5
        </arg>
        <doc>
         Pauses the test executed for the given time.
        </doc>
        <msg level="INFO" timestamp="20240826 05:14:44.882">
         Slept 5 seconds
        </msg>
        <status endtime="20240826 05:14:44.882" starttime="20240826 05:14:39.881" status="PASS"/>
       </kw>
       <kw library="CustomSapGuiLibrary" name="Click Element">
        <arg>
         wnd[1]/tbar[0]/btn[0]
        </arg>
        <doc>
         Performs a single click on a given element. Used only for buttons, tabs and menu items.
        </doc>
        <status endtime="20240826 05:14:45.378" starttime="20240826 05:14:44.882" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Sleep">
        <arg>
         5
        </arg>
        <doc>
         Pauses the test executed for the given time.
        </doc>
        <msg level="INFO" timestamp="20240826 05:14:50.379">
         Slept 5 seconds
        </msg>
        <status endtime="20240826 05:14:50.379" starttime="20240826 05:14:45.379" status="PASS"/>
       </kw>
       <kw library="CustomSapGuiLibrary" name="Get Value">
        <var>
         ${status1}
        </var>
        <arg>
         wnd[0]/sbar/pane[0]
        </arg>
        <doc>
         Gets the value of the given element. The possible return values depend on the type of element (see Return values).
        </doc>
        <msg level="INFO" timestamp="20240826 05:14:50.384">
         ${status1} = File 'k-74005instpi.sar' successfully transferred, decompressed, and then deleted
        </msg>
        <status endtime="20240826 05:14:50.384" starttime="20240826 05:14:50.379" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Log To Console">
        <arg>
         ${status1}
        </arg>
        <doc>
         Logs the given message to the console.
        </doc>
        <status endtime="20240826 05:14:50.391" starttime="20240826 05:14:50.384" status="PASS"/>
       </kw>
       <status endtime="20240826 05:14:50.391" starttime="20240826 05:14:32.616" status="PASS"/>
      </iter>
      <iter>
       <var name="${package}">
        K-74006INSTPI.SAR
       </var>
       <kw library="CustomSapGuiLibrary" name="Click Element">
        <arg>
         wnd[0]/mbar/menu[0]/menu[0]/menu[0]
        </arg>
        <doc>
         Performs a single click on a given element. Used only for buttons, tabs and menu items.
        </doc>
        <status endtime="20240826 05:14:50.521" starttime="20240826 05:14:50.391" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Sleep">
        <arg>
         2
        </arg>
        <doc>
         Pauses the test executed for the given time.
        </doc>
        <msg level="INFO" timestamp="20240826 05:14:52.522">
         Slept 2 seconds
        </msg>
        <status endtime="20240826 05:14:52.523" starttime="20240826 05:14:50.521" status="PASS"/>
       </kw>
       <kw library="CustomSapGuiLibrary" name="Input Text">
        <arg>
         wnd[1]/usr/ctxtDY_PATH
        </arg>
        <arg>
         ${EMPTY}
        </arg>
        <doc>
         Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.
        </doc>
        <msg level="INFO" timestamp="20240826 05:14:52.531">
         Typing text '' into text field 'wnd[1]/usr/ctxtDY_PATH'.
        </msg>
        <status endtime="20240826 05:14:52.531" starttime="20240826 05:14:52.523" status="PASS"/>
       </kw>
       <kw library="CustomSapGuiLibrary" name="Input Text">
        <arg>
         wnd[1]/usr/ctxtDY_PATH
        </arg>
        <arg>
         ${symvar('supportpackage_path')}
        </arg>
        <doc>
         Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.
        </doc>
        <msg level="INFO" timestamp="20240826 05:14:52.532">
         Sym.Dev.supportpackage_path: C:\Users\Administrator\Downloads\
        </msg>
        <msg level="INFO" timestamp="20240826 05:14:52.537">
         Typing text 'C:\Users\Administrator\Downloads\' into text field 'wnd[1]/usr/ctxtDY_PATH'.
        </msg>
        <status endtime="20240826 05:14:52.537" starttime="20240826 05:14:52.531" status="PASS"/>
       </kw>
       <kw library="CustomSapGuiLibrary" name="Input Text">
        <arg>
         wnd[1]/usr/ctxtDY_FILENAME
        </arg>
        <arg>
         ${package}
        </arg>
        <doc>
         Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.
        </doc>
        <msg level="INFO" timestamp="20240826 05:14:52.548">
         Typing text 'K-74006INSTPI.SAR' into text field 'wnd[1]/usr/ctxtDY_FILENAME'.
        </msg>
        <status endtime="20240826 05:14:52.548" starttime="20240826 05:14:52.537" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Sleep">
        <arg>
         2
        </arg>
        <doc>
         Pauses the test executed for the given time.
        </doc>
        <msg level="INFO" timestamp="20240826 05:14:54.548">
         Slept 2 seconds
        </msg>
        <status endtime="20240826 05:14:54.548" starttime="20240826 05:14:52.548" status="PASS"/>
       </kw>
       <kw library="CustomSapGuiLibrary" name="Click Element">
        <arg>
         wnd[1]/tbar[0]/btn[0]
        </arg>
        <doc>
         Performs a single click on a given element. Used only for buttons, tabs and menu items.
        </doc>
        <status endtime="20240826 05:14:58.285" starttime="20240826 05:14:54.548" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Sleep">
        <arg>
         5
        </arg>
        <doc>
         Pauses the test executed for the given time.
        </doc>
        <msg level="INFO" timestamp="20240826 05:15:03.285">
         Slept 5 seconds
        </msg>
        <status endtime="20240826 05:15:03.285" starttime="20240826 05:14:58.285" status="PASS"/>
       </kw>
       <kw library="CustomSapGuiLibrary" name="Click Element">
        <arg>
         wnd[1]/tbar[0]/btn[0]
        </arg>
        <doc>
         Performs a single click on a given element. Used only for buttons, tabs and menu items.
        </doc>
        <status endtime="20240826 05:15:03.779" starttime="20240826 05:15:03.285" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Sleep">
        <arg>
         5
        </arg>
        <doc>
         Pauses the test executed for the given time.
        </doc>
        <msg level="INFO" timestamp="20240826 05:15:08.780">
         Slept 5 seconds
        </msg>
        <status endtime="20240826 05:15:08.780" starttime="20240826 05:15:03.779" status="PASS"/>
       </kw>
       <kw library="CustomSapGuiLibrary" name="Get Value">
        <var>
         ${status1}
        </var>
        <arg>
         wnd[0]/sbar/pane[0]
        </arg>
        <doc>
         Gets the value of the given element. The possible return values depend on the type of element (see Return values).
        </doc>
        <msg level="INFO" timestamp="20240826 05:15:08.780">
         ${status1} = File 'k-74006instpi.sar' successfully transferred, decompressed, and then deleted
        </msg>
        <status endtime="20240826 05:15:08.780" starttime="20240826 05:15:08.780" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Log To Console">
        <arg>
         ${status1}
        </arg>
        <doc>
         Logs the given message to the console.
        </doc>
        <status endtime="20240826 05:15:08.780" starttime="20240826 05:15:08.780" status="PASS"/>
       </kw>
       <status endtime="20240826 05:15:08.780" starttime="20240826 05:14:50.391" status="PASS"/>
      </iter>
      <status endtime="20240826 05:15:08.780" starttime="20240826 05:14:13.984" status="PASS"/>
     </for>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       02_spam.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240826 05:15:08.834">
       &lt;a href="pabot_results%5C0%5C02_spam.jpg"&gt;&lt;img src="pabot_results%5C0%5C02_spam.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240826 05:15:08.834" starttime="20240826 05:15:08.780" status="PASS"/>
     </kw>
     <status endtime="20240826 05:15:08.834" starttime="20240826 05:14:13.972" status="PASS"/>
    </kw>
    <kw library="STPI_Patch" name="Display/Define">
     <kw library="CustomSapGuiLibrary" name="Click Element">
      <arg>
       wnd[0]/usr/btnPAT100-QUEUE
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240826 05:15:09.123" starttime="20240826 05:15:08.834" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       03_spam.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240826 05:15:09.179">
       &lt;a href="pabot_results%5C0%5C03_spam.jpg"&gt;&lt;img src="pabot_results%5C0%5C03_spam.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240826 05:15:09.179" starttime="20240826 05:15:09.123" status="PASS"/>
     </kw>
     <status endtime="20240826 05:15:09.179" starttime="20240826 05:15:08.834" status="PASS"/>
    </kw>
    <kw library="STPI_Patch" name="Spam Component selection">
     <kw library="CustomSapGuiLibrary" name="Select Spam Based On Text">
      <var>
       ${row}
      </var>
      <arg>
       wnd[1]/usr/cntlCOMP_ONLY_CONTROL/shellcont/shell
      </arg>
      <arg>
       ${symvar('patch_comp')}
      </arg>
      <msg level="INFO" timestamp="20240826 05:15:09.179">
       Sym.Dev.patch_comp: ST-PI
      </msg>
      <msg level="INFO" timestamp="20240826 05:15:09.195">
       8
0
SAP_BASIS
not found
1
SAP_ABA
not found
2
SAP_GWFND
not found
3
SAP_UI
not found
4
ST-PI
Text Found in ${row}
      </msg>
      <msg level="INFO" timestamp="20240826 05:15:09.195">
       ${row} = 4
      </msg>
      <status endtime="20240826 05:15:09.195" starttime="20240826 05:15:09.179" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Log">
      <arg>
       ${row}
      </arg>
      <doc>
       Logs the given message with the given level.
      </doc>
      <msg level="INFO" timestamp="20240826 05:15:09.195">
       4
      </msg>
      <status endtime="20240826 05:15:09.195" starttime="20240826 05:15:09.195" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Select Table Row">
      <arg>
       wnd[1]/usr/cntlCOMP_ONLY_CONTROL/shellcont/shell
      </arg>
      <arg>
       ${row}
      </arg>
      <doc>
       Selects an entire row of a table. This can either be a TableControl or a GridView 'table_id'
which is contained within a shell object. The row is an index to select the row, starting from 0.
      </doc>
      <status endtime="20240826 05:15:09.211" starttime="20240826 05:15:09.195" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240826 05:15:11.212">
       Slept 2 seconds
      </msg>
      <status endtime="20240826 05:15:11.212" starttime="20240826 05:15:09.211" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       08_Spam_component1.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240826 05:15:11.273">
       &lt;a href="pabot_results%5C0%5C08_Spam_component1.jpg"&gt;&lt;img src="pabot_results%5C0%5C08_Spam_component1.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240826 05:15:11.273" starttime="20240826 05:15:11.212" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Click Element">
      <arg>
       wnd[1]/tbar[0]/btn[0]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240826 05:15:11.369" starttime="20240826 05:15:11.273" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240826 05:15:13.370">
       Slept 2 seconds
      </msg>
      <status endtime="20240826 05:15:13.370" starttime="20240826 05:15:11.369" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       09_Spam_component2.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240826 05:15:13.435">
       &lt;a href="pabot_results%5C0%5C09_Spam_component2.jpg"&gt;&lt;img src="pabot_results%5C0%5C09_Spam_component2.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240826 05:15:13.435" starttime="20240826 05:15:13.370" status="PASS"/>
     </kw>
     <status endtime="20240826 05:15:13.435" starttime="20240826 05:15:09.179" status="PASS"/>
    </kw>
    <kw library="STPI_Patch" name="Spam Patch selection">
     <kw library="CustomSapGuiLibrary" name="Spam Search And Select Label">
      <var>
       ${patch_value}
      </var>
      <arg>
       wnd[1]/usr
      </arg>
      <arg>
       ${symvar('patch_vers')}
      </arg>
      <msg level="INFO" timestamp="20240826 05:15:13.435">
       Sym.Dev.patch_vers: SAPK-74005INSTPI
      </msg>
      <msg level="INFO" timestamp="20240826 05:15:13.535">
       Text Found: SAPK-74005INSTPI
      </msg>
      <msg level="INFO" timestamp="20240826 05:15:13.535">
       ${patch_value} = None
      </msg>
      <status endtime="20240826 05:15:13.535" starttime="20240826 05:15:13.435" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Log">
      <arg>
       ${patch_value}
      </arg>
      <doc>
       Logs the given message with the given level.
      </doc>
      <msg level="INFO" timestamp="20240826 05:15:13.538">
       None
      </msg>
      <status endtime="20240826 05:15:13.538" starttime="20240826 05:15:13.535" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240826 05:15:15.538">
       Slept 2 seconds
      </msg>
      <status endtime="20240826 05:15:15.538" starttime="20240826 05:15:13.538" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Click Element">
      <arg>
       wnd[1]/tbar[0]/btn[0]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240826 05:15:15.709" starttime="20240826 05:15:15.538" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240826 05:15:17.710">
       Slept 2 seconds
      </msg>
      <status endtime="20240826 05:15:17.710" starttime="20240826 05:15:15.709" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       07_spam.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240826 05:15:17.779">
       &lt;a href="pabot_results%5C0%5C07_spam.jpg"&gt;&lt;img src="pabot_results%5C0%5C07_spam.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240826 05:15:17.779" starttime="20240826 05:15:17.710" status="PASS"/>
     </kw>
     <status endtime="20240826 05:15:17.779" starttime="20240826 05:15:13.435" status="PASS"/>
    </kw>
    <kw library="STPI_Patch" name="Important SAP note handling">
     <kw library="CustomSapGuiLibrary" name="Is Imp Notes Existing">
      <arg>
       wnd[1]
      </arg>
      <arg>
       wnd[1]/tbar[0]/btn[0]
      </arg>
      <msg level="INFO" timestamp="20240826 05:15:17.779">
       Modal window does not exist.
      </msg>
      <status endtime="20240826 05:15:17.779" starttime="20240826 05:15:17.779" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       08_spam.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240826 05:15:17.834">
       &lt;a href="pabot_results%5C0%5C08_spam.jpg"&gt;&lt;img src="pabot_results%5C0%5C08_spam.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240826 05:15:17.834" starttime="20240826 05:15:17.779" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Click Element">
      <arg>
       wnd[2]/tbar[0]/btn[0]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240826 05:15:26.592" starttime="20240826 05:15:17.834" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Click Element">
      <arg>
       wnd[1]/usr/btnBUTTON_2
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240826 05:15:26.709" starttime="20240826 05:15:26.592" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       09_spam.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240826 05:15:26.783">
       &lt;a href="pabot_results%5C0%5C09_spam.jpg"&gt;&lt;img src="pabot_results%5C0%5C09_spam.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240826 05:15:26.783" starttime="20240826 05:15:26.709" status="PASS"/>
     </kw>
     <status endtime="20240826 05:15:26.783" starttime="20240826 05:15:17.779" status="PASS"/>
    </kw>
    <kw library="STPI_Patch" name="Importing queue from support package">
     <kw library="CustomSapGuiLibrary" name="Click Element">
      <arg>
       wnd[0]/mbar/menu[0]/menu[3]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240826 05:15:26.878" starttime="20240826 05:15:26.783" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Click Element">
      <arg>
       wnd[1]/tbar[0]/btn[0]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240826 05:15:27.084" starttime="20240826 05:15:26.878" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Click Element">
      <arg>
       wnd[1]/tbar[0]/btn[27]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240826 05:15:27.718" starttime="20240826 05:15:27.084" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       10_spam.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240826 05:15:27.781">
       &lt;a href="pabot_results%5C0%5C10_spam.jpg"&gt;&lt;img src="pabot_results%5C0%5C10_spam.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240826 05:15:27.781" starttime="20240826 05:15:27.718" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Select Radio Button">
      <arg>
       wnd[1]/usr/tabsSTART_OPTIONS/tabpSTART_FC1/ssubSTART_OPTIONS_SCA:SAPLOCS_UI:0701/radLAY0700-RB1_BTCHIM
      </arg>
      <doc>
       Sets radio button to the specified value.
      </doc>
      <status endtime="20240826 05:15:27.812" starttime="20240826 05:15:27.781" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       11_spam.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240826 05:15:27.867">
       &lt;a href="pabot_results%5C0%5C11_spam.jpg"&gt;&lt;img src="pabot_results%5C0%5C11_spam.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240826 05:15:27.867" starttime="20240826 05:15:27.812" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Click Element">
      <arg>
       wnd[1]/tbar[0]/btn[0]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240826 05:15:27.940" starttime="20240826 05:15:27.867" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Click Element">
      <arg>
       wnd[1]/tbar[0]/btn[25]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240826 05:15:34.224" starttime="20240826 05:15:27.940" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       12_spam.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240826 05:15:34.272">
       &lt;a href="pabot_results%5C0%5C12_spam.jpg"&gt;&lt;img src="pabot_results%5C0%5C12_spam.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240826 05:15:34.272" starttime="20240826 05:15:34.224" status="PASS"/>
     </kw>
     <status endtime="20240826 05:15:34.272" starttime="20240826 05:15:26.783" status="PASS"/>
    </kw>
    <kw library="STPI_Patch" name="Confirm Queue">
     <kw library="CustomSapGuiLibrary" name="Get Finish Cell Text1">
      <var>
       ${cell_text_1}
      </var>
      <arg>
       ${finish_str}
      </arg>
      <arg>
       ${button_id}
      </arg>
      <arg>
       ${status_line}
      </arg>
      <arg>
       ${refresh_id}
      </arg>
      <msg level="INFO" timestamp="20240826 05:20:05.251">
       Installation Successful
      </msg>
      <msg level="INFO" timestamp="20240826 05:20:05.251">
       ${cell_text_1} = Confirm queue
      </msg>
      <status endtime="20240826 05:20:05.251" starttime="20240826 05:15:34.272" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Log">
      <arg>
       ${cell_text_1}
      </arg>
      <doc>
       Logs the given message with the given level.
      </doc>
      <msg level="INFO" timestamp="20240826 05:20:05.251">
       Confirm queue
      </msg>
      <status endtime="20240826 05:20:05.251" starttime="20240826 05:20:05.251" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="No Queue Pending">
      <arg>
       ${no_Queue_id}
      </arg>
      <msg level="INFO" timestamp="20240826 05:20:05.271">
       Queue is available
      </msg>
      <status endtime="20240826 05:20:05.271" starttime="20240826 05:20:05.251" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Click Element">
      <arg>
       wnd[1]/tbar[0]/btn[27]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240826 05:20:05.367" starttime="20240826 05:20:05.271" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       13_spam.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240826 05:20:05.430">
       &lt;a href="pabot_results%5C0%5C13_spam.jpg"&gt;&lt;img src="pabot_results%5C0%5C13_spam.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240826 05:20:05.430" starttime="20240826 05:20:05.367" status="PASS"/>
     </kw>
     <status endtime="20240826 05:20:05.430" starttime="20240826 05:15:34.272" status="PASS"/>
    </kw>
    <tag>
     STPI_Patch
    </tag>
    <status endtime="20240826 05:20:05.430" starttime="20240826 05:14:11.713" status="PASS"/>
   </test>
   <kw library="STPI_Patch" name="System Logout" type="TEARDOWN">
    <kw library="CustomSapGuiLibrary" name="Run Transaction">
     <arg>
      /nex
     </arg>
     <doc>
      Runs a Sap transaction. An error is given when an unknown transaction is specified.
     </doc>
     <status endtime="20240826 05:20:05.457" starttime="20240826 05:20:05.430" status="PASS"/>
    </kw>
    <status endtime="20240826 05:20:05.457" starttime="20240826 05:20:05.430" status="PASS"/>
   </kw>
   <status endtime="20240826 05:20:05.458" starttime="20240826 05:14:09.479" status="PASS"/>
  </suite>
  <doc>
   Testing functionality through Robot Framework
  </doc>
  <meta name="environment">
   Dev
  </meta>
  <meta name="test_browser_name">
   chrome
  </meta>
  <meta name="test_browser_version">
   127.0.6533.120
  </meta>
  <meta name="test_driver_version">
   126.0.6478.182
  </meta>
  <meta name="test_environment">
   Dev
  </meta>
  <meta name="test_freeze_dependencies">
   astroid==3.2.3,attrs==23.2.0,beautifulsoup4==4.12.3,bs4==0.0.2,certifi==2024.7.4,cffi==1.16.0,chardet==5.2.0,charset-normalizer==3.3.2,click==8.1.7,colorama==0.4.6,cryptography==42.0.8,defusedxml==0.7.1,dill==0.3.8,docutils==0.21.2,et-xmlfile==1.1.0,ExcelLib==0.0.1b2,exceptiongroup==1.2.2,gitdb==4.0.11,GitPython==3.1.43,h11==0.14.0,idna==3.7,isort==5.13.2,Jinja2==3.1.4,jira==3.8.0,jsonpath-ng==1.6.1,jsonschema==4.23.0,jsonschema-specifications==2023.12.1,lazy-object-proxy==1.10.0,lxml==5.2.2,markdown-it-py==3.0.0,MarkupSafe==2.1.5,mccabe==0.7.0,mdurl==0.1.2,natsort==8.4.0,numpy==2.0.0,oauthlib==3.2.2,openpyxl==3.1.5,outcome==1.3.0.post0,packaging==24.1,pandas==2.2.2,pathspec==0.11.2,pillow==10.4.0,pip==24.1.2,platformdirs==4.2.2,ply==3.11,pycparser==2.22,Pygments==2.18.0,pylint==3.2.5,PySocks==1.7.1,python-dateutil==2.9.0.post0,pytz==2024.1,pywin32==306,PyYAML==6.0.1,referencing==0.35.1,requests==2.32.3,requests-oauthlib==2.0.0,requests-toolbelt==1.0.0,rich==13.7.1,rich-click==1.6.1,robotframework==6.0.2,robotframework-datadriver==1.9.0,robotframework-excellib==2.0.1,robotframework-jsonlibrary==0.5,robotframework-pabot==2.16.0,robotframework-pythonlibcore==4.2.0,robotframework-requests==0.9.2,robotframework-sapguilibrary==1.1,robotframework-seleniumlibrary==5.1.3,robotframework-stacktrace==0.4.1,robotframework-tidy==4.5.0,rpds-py==0.19.0,selenium==4.9.1,setuptools==71.0.2,six==1.16.0,smmap==5.0.1,sniffio==1.3.1,sortedcontainers==2.4.0,soupsieve==2.5,tomli==2.0.1,tomlkit==0.13.0,trio==0.26.0,trio-websocket==0.11.1,typing_extensions==4.12.2,tzdata==2024.1,urllib3==2.2.2,wheel==0.43.0,wrapt==1.16.0,wsproto==1.2.0,xlrd==2.0.1,XlsxWriter==3.2.0
  </meta>
  <status endtime="20240826 05:20:05.538" starttime="20240826 05:14:05.826" status="PASS"/>
 </suite>
 <statistics>
  <total>
   <stat fail="0" pass="1" skip="0">
    All Tests
   </stat>
  </total>
  <tag>
   <stat fail="0" pass="1" skip="0">
    STPI_Patch
   </stat>
  </tag>
  <suite>
   <stat fail="0" id="s1" name="Tests" pass="1" skip="0">
    Tests
   </stat>
   <stat fail="0" id="s1-s1" name="Test STPI Patch" pass="1" skip="0">
    Tests.Test STPI Patch
   </stat>
  </suite>
 </statistics>
 <errors>
 </errors>
</robot>
