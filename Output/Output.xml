<?xml version="1.0" encoding="utf-8"?>
<robot generated="20240827 06:51:15.018" generator="Rebot 6.0.2 (Python 3.12.4 on win32)" rpa="false" schemaversion="3">
 <suite id="s1" name="Tests" source="C:\SAP_Testing\SAPtesting\Tests">
  <kw name="Setup highest level suite" type="SETUP">
   <kw library="BuiltIn" name="Set Variable">
    <var>
     ${d.test_server}
    </var>
    <arg>
     ${test_server}
    </arg>
    <doc>
     Returns the given values which can then be assigned to a variables.
    </doc>
    <msg level="INFO" timestamp="20240827 06:49:24.883">
     ${d.test_server} = Dev
    </msg>
    <status endtime="20240827 06:49:24.883" starttime="20240827 06:49:24.883" status="PASS"/>
   </kw>
   <kw library="Support" name="Reset screenshot count variable">
    <kw library="BuiltIn" name="Set Variable">
     <var>
      ${screenshotCount}
     </var>
     <arg>
      ${PABOTQUEUEINDEX}_1
     </arg>
     <doc>
      Returns the given values which can then be assigned to a variables.
     </doc>
     <msg level="INFO" timestamp="20240827 06:49:24.884">
      ${screenshotCount} = 0_1
     </msg>
     <status endtime="20240827 06:49:24.884" starttime="20240827 06:49:24.884" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Set Global Variable">
     <arg>
      ${screenshotCount}
     </arg>
     <doc>
      Makes a variable available globally in all tests and suites.
     </doc>
     <msg level="INFO" timestamp="20240827 06:49:24.884">
      ${screenshotCount} = 0_1
     </msg>
     <status endtime="20240827 06:49:24.885" starttime="20240827 06:49:24.884" status="PASS"/>
    </kw>
    <kw library="Support" name="Set up screenshot directory">
     <kw library="OperatingSystem" name="Create Directory">
      <arg>
       ${OUTPUTDIR}${/}${wvar('screenshot_dir')}
      </arg>
      <doc>
       Creates the specified directory.
      </doc>
      <msg level="INFO" timestamp="20240827 06:49:24.885">
       Web.Dev.screenshot_dir: Screenshot
      </msg>
      <msg html="true" level="INFO" timestamp="20240827 06:49:24.889">
       Created directory '&lt;a href="file://C:\SAP_Testing\SAPtesting\Output\pabot_results\0\Screenshot"&gt;C:\SAP_Testing\SAPtesting\Output\pabot_results\0\Screenshot&lt;/a&gt;'.
      </msg>
      <status endtime="20240827 06:49:24.890" starttime="20240827 06:49:24.885" status="PASS"/>
     </kw>
     <status endtime="20240827 06:49:24.890" starttime="20240827 06:49:24.885" status="PASS"/>
    </kw>
    <status endtime="20240827 06:49:24.890" starttime="20240827 06:49:24.883" status="PASS"/>
   </kw>
   <kw library="BuiltIn" name="Set Global Variable">
    <arg>
     ${screenshot_taking}
    </arg>
    <arg>
     ${True}
    </arg>
    <doc>
     Makes a variable available globally in all tests and suites.
    </doc>
    <msg level="INFO" timestamp="20240827 06:49:24.890">
     ${screenshot_taking} = True
    </msg>
    <status endtime="20240827 06:49:24.890" starttime="20240827 06:49:24.890" status="PASS"/>
   </kw>
   <kw library="Support" name="Setup linux execution">
    <kw library="BuiltIn" name="Run Keyword And Return Status">
     <var>
      ${web_test_check}
     </var>
     <arg>
      Variable Should Exist
     </arg>
     <arg>
      ${web_test}
     </arg>
     <doc>
      Runs the given keyword with given arguments and returns the status as a Boolean value.
     </doc>
     <kw library="BuiltIn" name="Variable Should Exist">
      <arg>
       ${web_test}
      </arg>
      <doc>
       Fails unless the given variable exists within the current scope.
      </doc>
      <status endtime="20240827 06:49:24.891" starttime="20240827 06:49:24.891" status="PASS"/>
     </kw>
     <msg level="INFO" timestamp="20240827 06:49:24.891">
      ${web_test_check} = True
     </msg>
     <status endtime="20240827 06:49:24.892" starttime="20240827 06:49:24.891" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Run Keyword If">
     <arg>
      ${web_test_check}
     </arg>
     <arg>
      Setup Docker Execution Options
     </arg>
     <doc>
      Runs the given keyword with the given arguments, if ``condition`` is true.
     </doc>
     <kw library="Support_Web" name="Setup Docker Execution Options">
      <kw library="Support_Web" name="Setup Suite Metadata">
       <arg>
        ${browser}
       </arg>
       <kw library="BrowserSupport" name="Get Browser Metadata">
        <var>
         &amp;{browser_information}
        </var>
        <arg>
         browser=${browser}
        </arg>
        <doc>
         Fetches browser metadata information
:param browser: Name of the browser for which information is fetched
:param reload: Re-read the metadata based on the browser
:return: Browser metadata information, dict of format
            {"browser_version": browser version value,
             "driver_version": driver version value}
        </doc>
        <msg level="INFO" timestamp="20240827 06:49:28.123">
         &amp;{browser_information} = { browser_version=127.0.6533.122 | driver_version=126.0.6478.182  }
        </msg>
        <status endtime="20240827 06:49:28.123" starttime="20240827 06:49:24.892" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Suite Metadata">
        <arg>
         test_browser_name
        </arg>
        <arg>
         ${browser}
        </arg>
        <doc>
         Sets metadata for the current test suite.
        </doc>
        <msg level="INFO" timestamp="20240827 06:49:28.123">
         Set suite metadata 'test_browser_name' to value 'chrome'.
        </msg>
        <status endtime="20240827 06:49:28.123" starttime="20240827 06:49:28.123" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Suite Metadata">
        <arg>
         test_browser_version
        </arg>
        <arg>
         ${browser_information.browser_version}
        </arg>
        <doc>
         Sets metadata for the current test suite.
        </doc>
        <msg level="INFO" timestamp="20240827 06:49:28.123">
         Set suite metadata 'test_browser_version' to value '127.0.6533.122'.
        </msg>
        <status endtime="20240827 06:49:28.123" starttime="20240827 06:49:28.123" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Suite Metadata">
        <arg>
         test_driver_version
        </arg>
        <arg>
         ${browser_information.driver_version}
        </arg>
        <doc>
         Sets metadata for the current test suite.
        </doc>
        <msg level="INFO" timestamp="20240827 06:49:28.126">
         Set suite metadata 'test_driver_version' to value '126.0.6478.182 '.
        </msg>
        <status endtime="20240827 06:49:28.126" starttime="20240827 06:49:28.123" status="PASS"/>
       </kw>
       <status endtime="20240827 06:49:28.126" starttime="20240827 06:49:24.892" status="PASS"/>
      </kw>
      <kw library="Support_Web" name="Setup Global Docker Execution Options">
       <kw library="BuiltIn" name="Set Global Variable">
        <arg>
         ${global_browser_options}
        </arg>
        <arg>
         None
        </arg>
        <doc>
         Makes a variable available globally in all tests and suites.
        </doc>
        <msg level="INFO" timestamp="20240827 06:49:28.126">
         ${global_browser_options} = None
        </msg>
        <status endtime="20240827 06:49:28.126" starttime="20240827 06:49:28.126" status="PASS"/>
       </kw>
       <kw library="OperatingSystem" name="Get Environment Variable">
        <var>
         ${docker_check}
        </var>
        <arg>
         EXECUTION_ENVIRONMENT
        </arg>
        <arg>
         not_found
        </arg>
        <doc>
         Returns the value of an environment variable with the given name.
        </doc>
        <msg level="INFO" timestamp="20240827 06:49:28.126">
         ${docker_check} = not_found
        </msg>
        <status endtime="20240827 06:49:28.126" starttime="20240827 06:49:28.126" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Run Keyword And Return If">
        <arg>
         "${docker_check}"!="docker"
        </arg>
        <arg>
         Log
        </arg>
        <arg>
         Not executing on Docker
        </arg>
        <doc>
         Runs the specified keyword and returns from the enclosing user keyword.
        </doc>
        <kw library="BuiltIn" name="Log">
         <arg>
          Not executing on Docker
         </arg>
         <doc>
          Logs the given message with the given level.
         </doc>
         <msg level="INFO" timestamp="20240827 06:49:28.126">
          Not executing on Docker
         </msg>
         <status endtime="20240827 06:49:28.126" starttime="20240827 06:49:28.126" status="PASS"/>
        </kw>
        <msg level="INFO" timestamp="20240827 06:49:28.126">
         Returning from the enclosing user keyword.
        </msg>
        <status endtime="20240827 06:49:28.126" starttime="20240827 06:49:28.126" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Create List">
        <var>
         @{options}
        </var>
        <arg>
         --headless
        </arg>
        <arg>
         --no-sandbox
        </arg>
        <arg>
         --disable-dev-shm-usage
        </arg>
        <doc>
         Returns a list containing given items.
        </doc>
        <status endtime="20240827 06:49:28.126" starttime="20240827 06:49:28.126" status="NOT RUN"/>
       </kw>
       <kw library="BuiltIn" name="Set Global Variable">
        <arg>
         @{docker_options}
        </arg>
        <arg>
         @{options}
        </arg>
        <doc>
         Makes a variable available globally in all tests and suites.
        </doc>
        <status endtime="20240827 06:49:28.126" starttime="20240827 06:49:28.126" status="NOT RUN"/>
       </kw>
       <status endtime="20240827 06:49:28.126" starttime="20240827 06:49:28.126" status="PASS"/>
      </kw>
      <kw library="Support_Web" name="Create Webdriver for chrome preferences">
       <kw library="Support_Web" name="Update Docker Execution Options">
        <var>
         ${list_prefs}
        </var>
        <arg>
         ${list_prefs}
        </arg>
        <kw library="BuiltIn" name="Run Keyword And Return Status">
         <var>
          ${docker_check}
         </var>
         <arg>
          Variable Should Exist
         </arg>
         <arg>
          ${docker_options}
         </arg>
         <doc>
          Runs the given keyword with given arguments and returns the status as a Boolean value.
         </doc>
         <kw library="BuiltIn" name="Variable Should Exist">
          <arg>
           ${docker_options}
          </arg>
          <doc>
           Fails unless the given variable exists within the current scope.
          </doc>
          <msg level="FAIL" timestamp="20240827 06:49:28.126">
           Variable '${docker_options}' does not exist.
          </msg>
          <status endtime="20240827 06:49:28.126" starttime="20240827 06:49:28.126" status="FAIL"/>
         </kw>
         <msg level="INFO" timestamp="20240827 06:49:28.126">
          ${docker_check} = False
         </msg>
         <status endtime="20240827 06:49:28.126" starttime="20240827 06:49:28.126" status="PASS"/>
        </kw>
        <kw library="BuiltIn" name="Get Length">
         <var>
          ${list_prefs_length}
         </var>
         <arg>
          ${list_prefs}
         </arg>
         <doc>
          Returns and logs the length of the given item as an integer.
         </doc>
         <msg level="INFO" timestamp="20240827 06:49:28.126">
          Length is 1
         </msg>
         <msg level="INFO" timestamp="20240827 06:49:28.126">
          ${list_prefs_length} = 1
         </msg>
         <status endtime="20240827 06:49:28.126" starttime="20240827 06:49:28.126" status="PASS"/>
        </kw>
        <kw library="BuiltIn" name="Run Keyword If">
         <var>
          ${list_prefs}
         </var>
         <arg>
          ${docker_check} and ${list_prefs_length}&gt;0 and ${list_prefs}[0] != []
         </arg>
         <arg>
          Combine Lists
         </arg>
         <arg>
          ${list_prefs}
         </arg>
         <arg>
          ${docker_options}
         </arg>
         <arg>
          ELSE IF
         </arg>
         <arg>
          ${docker_check}
         </arg>
         <arg>
          Set Variable
         </arg>
         <arg>
          ${docker_options}
         </arg>
         <arg>
          ELSE
         </arg>
         <arg>
          Set Variable
         </arg>
         <arg>
          ${list_prefs}
         </arg>
         <doc>
          Runs the given keyword with the given arguments, if ``condition`` is true.
         </doc>
         <kw library="BuiltIn" name="Set Variable">
          <arg>
           ${list_prefs}
          </arg>
          <doc>
           Returns the given values which can then be assigned to a variables.
          </doc>
          <status endtime="20240827 06:49:28.126" starttime="20240827 06:49:28.126" status="PASS"/>
         </kw>
         <msg level="INFO" timestamp="20240827 06:49:28.126">
          ${list_prefs} = [[]]
         </msg>
         <status endtime="20240827 06:49:28.126" starttime="20240827 06:49:28.126" status="PASS"/>
        </kw>
        <msg level="INFO" timestamp="20240827 06:49:28.126">
         ${list_prefs} = [[]]
        </msg>
        <status endtime="20240827 06:49:28.126" starttime="20240827 06:49:28.126" status="PASS"/>
       </kw>
       <kw library="Support_Web" name="Create Chrome Options for download preferences">
        <var>
         ${chrome_options}
        </var>
        <kw library="BuiltIn" name="Evaluate">
         <var>
          ${chrome_options}
         </var>
         <arg>
          sys.modules['selenium.webdriver'].ChromeOptions()
         </arg>
         <arg>
          sys
         </arg>
         <doc>
          Evaluates the given expression in Python and returns the result.
         </doc>
         <msg level="INFO" timestamp="20240827 06:49:28.126">
          ${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x00000210FF566090&gt;
         </msg>
         <status endtime="20240827 06:49:28.126" starttime="20240827 06:49:28.126" status="PASS"/>
        </kw>
        <msg level="INFO" timestamp="20240827 06:49:28.126">
         ${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x00000210FF566090&gt;
        </msg>
        <status endtime="20240827 06:49:28.126" starttime="20240827 06:49:28.126" status="PASS"/>
       </kw>
       <kw library="Support_Web" name="Update Preferences List">
        <arg>
         ${chrome_options}
        </arg>
        <arg>
         @{list_prefs}
        </arg>
        <kw library="BuiltIn" name="Convert To String">
         <var>
          ${string_prefs}
         </var>
         <arg>
          ${list_prefs}
         </arg>
         <doc>
          Converts the given item to a Unicode string.
         </doc>
         <msg level="INFO" timestamp="20240827 06:49:28.126">
          ${string_prefs} = [[]]
         </msg>
         <status endtime="20240827 06:49:28.126" starttime="20240827 06:49:28.126" status="PASS"/>
        </kw>
        <kw library="BuiltIn" name="Return From Keyword If">
         <arg>
          ${string_prefs} == [[]]
         </arg>
         <doc>
          Returns from the enclosing user keyword if ``condition`` is true.
         </doc>
         <msg level="INFO" timestamp="20240827 06:49:28.126">
          Returning from the enclosing user keyword.
         </msg>
         <status endtime="20240827 06:49:28.126" starttime="20240827 06:49:28.126" status="PASS"/>
        </kw>
        <for flavor="IN">
         <var>
          ${preference}
         </var>
         <value>
          @{list_prefs}
         </value>
         <iter>
          <var name="${preference}"/>
          <kw library="BuiltIn" name="Call Method">
           <arg>
            ${chrome_options}
           </arg>
           <arg>
            add_argument
           </arg>
           <arg>
            ${preference}
           </arg>
           <doc>
            Calls the named method of the given object with the provided arguments.
           </doc>
           <status endtime="20240827 06:49:28.126" starttime="20240827 06:49:28.126" status="NOT RUN"/>
          </kw>
          <status endtime="20240827 06:49:28.126" starttime="20240827 06:49:28.126" status="NOT RUN"/>
         </iter>
         <status endtime="20240827 06:49:28.126" starttime="20240827 06:49:28.126" status="NOT RUN"/>
        </for>
        <status endtime="20240827 06:49:28.126" starttime="20240827 06:49:28.126" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Call Method">
        <arg>
         ${chrome_options}
        </arg>
        <arg>
         add_experimental_option
        </arg>
        <arg>
         prefs
        </arg>
        <arg>
         ${kw_prefs}
        </arg>
        <doc>
         Calls the named method of the given object with the provided arguments.
        </doc>
        <status endtime="20240827 06:49:28.126" starttime="20240827 06:49:28.126" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Global Variable">
        <arg>
         ${global_browser_options}
        </arg>
        <arg>
         ${chrome options}
        </arg>
        <doc>
         Makes a variable available globally in all tests and suites.
        </doc>
        <msg level="INFO" timestamp="20240827 06:49:28.126">
         ${global_browser_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x00000210FF566090&gt;
        </msg>
        <status endtime="20240827 06:49:28.126" starttime="20240827 06:49:28.126" status="PASS"/>
       </kw>
       <status endtime="20240827 06:49:28.126" starttime="20240827 06:49:28.126" status="PASS"/>
      </kw>
      <status endtime="20240827 06:49:28.126" starttime="20240827 06:49:24.892" status="PASS"/>
     </kw>
     <status endtime="20240827 06:49:28.126" starttime="20240827 06:49:24.892" status="PASS"/>
    </kw>
    <status endtime="20240827 06:49:28.126" starttime="20240827 06:49:24.891" status="PASS"/>
   </kw>
   <kw library="BuiltIn" name="Set Suite Metadata">
    <arg>
     environment
    </arg>
    <arg>
     ${test_server}
    </arg>
    <doc>
     Sets metadata for the current test suite.
    </doc>
    <msg level="INFO" timestamp="20240827 06:49:28.126">
     Set suite metadata 'environment' to value 'Dev'.
    </msg>
    <status endtime="20240827 06:49:28.126" starttime="20240827 06:49:28.126" status="PASS"/>
   </kw>
   <status endtime="20240827 06:49:28.126" starttime="20240827 06:49:24.882" status="PASS"/>
  </kw>
  <suite id="s1-s1" name="Test Get Latest ST PI Version" source="C:\SAP_Testing\SAPtesting\Tests\Test_Get_Latest_ST_PI_Version.robot">
   <kw library="Get_Latest_ST_PI_Version" name="login page" type="SETUP">
    <kw library="SeleniumLibrary" name="Open Browser">
     <arg>
      ${url}
     </arg>
     <arg>
      ${browser}
     </arg>
     <doc>
      Opens a new browser instance to the optional ``url``.
     </doc>
     <msg level="INFO" timestamp="20240827 06:49:28.139">
      Opening browser 'chrome' to base url 'https://support.sap.com'.
     </msg>
     <status endtime="20240827 06:49:33.505" starttime="20240827 06:49:28.139" status="PASS"/>
    </kw>
    <kw library="SeleniumLibrary" name="Maximize Browser Window">
     <doc>
      Maximizes current browser window.
     </doc>
     <status endtime="20240827 06:49:33.570" starttime="20240827 06:49:33.505" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      15
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240827 06:49:48.570">
      Slept 15 seconds
     </msg>
     <status endtime="20240827 06:49:48.570" starttime="20240827 06:49:33.570" status="PASS"/>
    </kw>
    <kw library="SeleniumLibrary" name="Click Element">
     <arg>
      xpath://span[normalize-space(text())='Software Downloads']
     </arg>
     <doc>
      Click the element identified by ``locator``.
     </doc>
     <msg level="INFO" timestamp="20240827 06:49:48.570">
      Clicking element 'xpath://span[normalize-space(text())='Software Downloads']'.
     </msg>
     <status endtime="20240827 06:49:48.678" starttime="20240827 06:49:48.570" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      5
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240827 06:49:53.679">
      Slept 5 seconds
     </msg>
     <status endtime="20240827 06:49:53.679" starttime="20240827 06:49:48.679" status="PASS"/>
    </kw>
    <kw library="SeleniumLibrary" name="Switch Window">
     <arg>
      NEW
     </arg>
     <doc>
      Switches to browser window matching ``locator``.
     </doc>
     <status endtime="20240827 06:49:53.685" starttime="20240827 06:49:53.679" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      2
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240827 06:49:55.685">
      Slept 2 seconds
     </msg>
     <status endtime="20240827 06:49:55.685" starttime="20240827 06:49:53.685" status="PASS"/>
    </kw>
    <kw library="SeleniumLibrary" name="Input Text">
     <arg>
      id:j_username
     </arg>
     <arg>
      ${symvar('S_Username')}
     </arg>
     <doc>
      Types the given ``text`` into the text field identified by ``locator``.
     </doc>
     <msg level="INFO" timestamp="20240827 06:49:55.686">
      Sym.Dev.S_Username: S0023459113
     </msg>
     <msg level="INFO" timestamp="20240827 06:49:55.686">
      Typing text 'S0023459113' into text field 'id:j_username'.
     </msg>
     <status endtime="20240827 06:49:55.773" starttime="20240827 06:49:55.685" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      2
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240827 06:49:57.774">
      Slept 2 seconds
     </msg>
     <status endtime="20240827 06:49:57.774" starttime="20240827 06:49:55.774" status="PASS"/>
    </kw>
    <kw library="SeleniumLibrary" name="Click Element">
     <arg>
      xpath://div[text()='Continue']
     </arg>
     <doc>
      Click the element identified by ``locator``.
     </doc>
     <msg level="INFO" timestamp="20240827 06:49:57.774">
      Clicking element 'xpath://div[text()='Continue']'.
     </msg>
     <status endtime="20240827 06:49:58.658" starttime="20240827 06:49:57.774" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      10
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240827 06:50:08.664">
      Slept 10 seconds
     </msg>
     <status endtime="20240827 06:50:08.664" starttime="20240827 06:49:58.658" status="PASS"/>
    </kw>
    <kw library="SeleniumLibrary" name="Input Text">
     <arg>
      id:password
     </arg>
     <arg>
      Whitetiger@2024
     </arg>
     <doc>
      Types the given ``text`` into the text field identified by ``locator``.
     </doc>
     <msg level="INFO" timestamp="20240827 06:50:08.664">
      Typing text 'Whitetiger@2024' into text field 'id:password'.
     </msg>
     <status endtime="20240827 06:50:08.768" starttime="20240827 06:50:08.664" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      5
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240827 06:50:13.769">
      Slept 5 seconds
     </msg>
     <status endtime="20240827 06:50:13.769" starttime="20240827 06:50:08.768" status="PASS"/>
    </kw>
    <kw library="SeleniumLibrary" name="Click Element">
     <arg>
      xpath://button[text()='Sign in']
     </arg>
     <doc>
      Click the element identified by ``locator``.
     </doc>
     <msg level="INFO" timestamp="20240827 06:50:13.769">
      Clicking element 'xpath://button[text()='Sign in']'.
     </msg>
     <status endtime="20240827 06:50:13.827" starttime="20240827 06:50:13.769" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      30
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240827 06:50:43.829">
      Slept 30 seconds
     </msg>
     <status endtime="20240827 06:50:43.829" starttime="20240827 06:50:13.827" status="PASS"/>
    </kw>
    <status endtime="20240827 06:50:43.829" starttime="20240827 06:49:28.139" status="PASS"/>
   </kw>
   <test id="s1-s1-t1" line="8" name="Get the latest version of ST-PI support package">
    <kw library="Get_Latest_ST_PI_Version" name="Software Download">
     <kw library="SeleniumLibrary" name="Select Frame">
      <arg>
       id:shell-component---application420660846--frame
      </arg>
      <doc>
       Sets frame identified by ``locator`` as the current frame.
      </doc>
      <msg level="INFO" timestamp="20240827 06:50:43.831">
       Selecting frame 'id:shell-component---application420660846--frame'.
      </msg>
      <status endtime="20240827 06:50:43.862" starttime="20240827 06:50:43.830" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240827 06:50:44.863">
       Slept 1 second
      </msg>
      <status endtime="20240827 06:50:44.863" starttime="20240827 06:50:43.862" status="PASS"/>
     </kw>
     <kw library="SeleniumLibrary" name="Wait Until Element Is Visible">
      <arg>
       id:__filter1-text
      </arg>
      <arg>
       120s
      </arg>
      <doc>
       Waits until the element ``locator`` is visible.
      </doc>
      <status endtime="20240827 06:50:44.888" starttime="20240827 06:50:44.863" status="PASS"/>
     </kw>
     <kw library="SeleniumLibrary" name="Click Element">
      <arg>
       id:__filter1-text
      </arg>
      <doc>
       Click the element identified by ``locator``.
      </doc>
      <msg level="INFO" timestamp="20240827 06:50:44.888">
       Clicking element 'id:__filter1-text'.
      </msg>
      <status endtime="20240827 06:50:45.012" starttime="20240827 06:50:44.888" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       5
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240827 06:50:50.013">
       Slept 5 seconds
      </msg>
      <status endtime="20240827 06:50:50.013" starttime="20240827 06:50:45.013" status="PASS"/>
     </kw>
     <kw library="SeleniumLibrary" name="Input Text">
      <arg>
       id:__field0-I
      </arg>
      <arg>
       ST-PI 740
      </arg>
      <doc>
       Types the given ``text`` into the text field identified by ``locator``.
      </doc>
      <msg level="INFO" timestamp="20240827 06:50:50.013">
       Typing text 'ST-PI 740' into text field 'id:__field0-I'.
      </msg>
      <status endtime="20240827 06:50:50.137" starttime="20240827 06:50:50.013" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       4
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240827 06:50:54.137">
       Slept 4 seconds
      </msg>
      <status endtime="20240827 06:50:54.137" starttime="20240827 06:50:50.137" status="PASS"/>
     </kw>
     <kw library="SeleniumLibrary" name="Click Element">
      <arg>
       id:__field0-search
      </arg>
      <doc>
       Click the element identified by ``locator``.
      </doc>
      <msg level="INFO" timestamp="20240827 06:50:54.138">
       Clicking element 'id:__field0-search'.
      </msg>
      <status endtime="20240827 06:50:55.066" starttime="20240827 06:50:54.137" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       10
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240827 06:51:05.068">
       Slept 10 seconds
      </msg>
      <status endtime="20240827 06:51:05.068" starttime="20240827 06:50:55.066" status="PASS"/>
     </kw>
     <kw library="SeleniumLibrary" name="Click Element">
      <arg>
       id:__item29-__clone71
      </arg>
      <doc>
       Click the element identified by ``locator``.
      </doc>
      <msg level="INFO" timestamp="20240827 06:51:05.068">
       Clicking element 'id:__item29-__clone71'.
      </msg>
      <status endtime="20240827 06:51:05.357" starttime="20240827 06:51:05.068" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240827 06:51:07.359">
       Slept 2 seconds
      </msg>
      <status endtime="20240827 06:51:07.359" starttime="20240827 06:51:05.358" status="PASS"/>
     </kw>
     <kw library="SeleniumLibrary" name="Click Element">
      <arg>
       id:__xmlview3--idProductHierarchyList
      </arg>
      <doc>
       Click the element identified by ``locator``.
      </doc>
      <msg level="INFO" timestamp="20240827 06:51:07.359">
       Clicking element 'id:__xmlview3--idProductHierarchyList'.
      </msg>
      <status endtime="20240827 06:51:07.450" starttime="20240827 06:51:07.359" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       5
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240827 06:51:12.452">
       Slept 5 seconds
      </msg>
      <status endtime="20240827 06:51:12.452" starttime="20240827 06:51:07.451" status="PASS"/>
     </kw>
     <kw library="SeleniumLibrary" name="Get Text">
      <var>
       ${Current_Version}
      </var>
      <arg>
       id:__identifier1-__xmlview3--idProductDownloadList-0-link
      </arg>
      <doc>
       Returns the text value of the element identified by ``locator``.
      </doc>
      <msg level="INFO" timestamp="20240827 06:51:12.477">
       ${Current_Version} = SAPK-74027INSTPI
      </msg>
      <status endtime="20240827 06:51:12.477" starttime="20240827 06:51:12.452" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Log To Console">
      <arg>
       **gbStart**Current_Version**splitKeyValue**${Current_Version}**gbEnd**
      </arg>
      <doc>
       Logs the given message to the console.
      </doc>
      <status endtime="20240827 06:51:12.477" starttime="20240827 06:51:12.477" status="PASS"/>
     </kw>
     <status endtime="20240827 06:51:12.478" starttime="20240827 06:50:43.830" status="PASS"/>
    </kw>
    <tag>
     GetVersion
    </tag>
    <status endtime="20240827 06:51:12.478" starttime="20240827 06:50:43.829" status="PASS"/>
   </test>
   <status endtime="20240827 06:51:12.485" starttime="20240827 06:49:28.126" status="PASS"/>
  </suite>
  <doc>
   Testing functionality through Robot Framework
  </doc>
  <meta name="environment">
   Dev
  </meta>
  <meta name="test_browser_name">
   chrome
  </meta>
  <meta name="test_browser_version">
   127.0.6533.122
  </meta>
  <meta name="test_driver_version">
   126.0.6478.182
  </meta>
  <meta name="test_environment">
   Dev
  </meta>
  <meta name="test_freeze_dependencies">
   astroid==3.2.3,attrs==23.2.0,beautifulsoup4==4.12.3,bs4==0.0.2,certifi==2024.7.4,cffi==1.16.0,chardet==5.2.0,charset-normalizer==3.3.2,click==8.1.7,colorama==0.4.6,cryptography==42.0.8,defusedxml==0.7.1,dill==0.3.8,docutils==0.21.2,et-xmlfile==1.1.0,ExcelLib==0.0.1b2,exceptiongroup==1.2.2,gitdb==4.0.11,GitPython==3.1.43,h11==0.14.0,idna==3.7,isort==5.13.2,Jinja2==3.1.4,jira==3.8.0,jsonpath-ng==1.6.1,jsonschema==4.23.0,jsonschema-specifications==2023.12.1,lazy-object-proxy==1.10.0,lxml==5.2.2,markdown-it-py==3.0.0,MarkupSafe==2.1.5,mccabe==0.7.0,mdurl==0.1.2,natsort==8.4.0,numpy==2.0.0,oauthlib==3.2.2,openpyxl==3.1.5,outcome==1.3.0.post0,packaging==24.1,pandas==2.2.2,pathspec==0.11.2,pillow==10.4.0,pip==24.1.2,platformdirs==4.2.2,ply==3.11,pycparser==2.22,Pygments==2.18.0,pylint==3.2.5,PySocks==1.7.1,python-dateutil==2.9.0.post0,pytz==2024.1,pywin32==306,PyYAML==6.0.1,referencing==0.35.1,requests==2.32.3,requests-oauthlib==2.0.0,requests-toolbelt==1.0.0,rich==13.7.1,rich-click==1.6.1,robotframework==6.0.2,robotframework-datadriver==1.9.0,robotframework-excellib==2.0.1,robotframework-jsonlibrary==0.5,robotframework-pabot==2.16.0,robotframework-pythonlibcore==4.2.0,robotframework-requests==0.9.2,robotframework-sapguilibrary==1.1,robotframework-seleniumlibrary==5.1.3,robotframework-stacktrace==0.4.1,robotframework-tidy==4.5.0,rpds-py==0.19.0,selenium==4.9.1,setuptools==71.0.2,six==1.16.0,smmap==5.0.1,sniffio==1.3.1,sortedcontainers==2.4.0,soupsieve==2.5,tomli==2.0.1,tomlkit==0.13.0,trio==0.26.0,trio-websocket==0.11.1,typing_extensions==4.12.2,tzdata==2024.1,urllib3==2.2.2,wheel==0.43.0,wrapt==1.16.0,wsproto==1.2.0,xlrd==2.0.1,XlsxWriter==3.2.0
  </meta>
  <status endtime="20240827 06:51:12.535" starttime="20240827 06:49:24.523" status="PASS"/>
 </suite>
 <statistics>
  <total>
   <stat fail="0" pass="1" skip="0">
    All Tests
   </stat>
  </total>
  <tag>
   <stat fail="0" pass="1" skip="0">
    GetVersion
   </stat>
  </tag>
  <suite>
   <stat fail="0" id="s1" name="Tests" pass="1" skip="0">
    Tests
   </stat>
   <stat fail="0" id="s1-s1" name="Test Get Latest ST PI Version" pass="1" skip="0">
    Tests.Test Get Latest ST PI Version
   </stat>
  </suite>
 </statistics>
 <errors>
 </errors>
</robot>
