<?xml version="1.0" encoding="utf-8"?>
<robot generated="20240111 19:49:15.509" generator="Rebot 6.0.2 (Python 3.12.1 on win32)" rpa="false" schemaversion="3">
 <suite id="s1" name="Tests" source="D:\SAP_Testing\sap_testing\Tests">
  <kw name="Setup highest level suite" type="SETUP">
   <kw library="BuiltIn" name="Set Variable">
    <var>
     ${d.test_server}
    </var>
    <arg>
     ${test_server}
    </arg>
    <doc>
     Returns the given values which can then be assigned to a variables.
    </doc>
    <msg level="INFO" timestamp="20240111 19:30:56.760">
     ${d.test_server} = Dev
    </msg>
    <status endtime="20240111 19:30:56.760" starttime="20240111 19:30:56.760" status="PASS"/>
   </kw>
   <kw library="Support" name="Reset screenshot count variable">
    <kw library="BuiltIn" name="Set Variable">
     <var>
      ${screenshotCount}
     </var>
     <arg>
      ${PABOTQUEUEINDEX}_1
     </arg>
     <doc>
      Returns the given values which can then be assigned to a variables.
     </doc>
     <msg level="INFO" timestamp="20240111 19:30:56.761">
      ${screenshotCount} = 0_1
     </msg>
     <status endtime="20240111 19:30:56.761" starttime="20240111 19:30:56.760" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Set Global Variable">
     <arg>
      ${screenshotCount}
     </arg>
     <doc>
      Makes a variable available globally in all tests and suites.
     </doc>
     <msg level="INFO" timestamp="20240111 19:30:56.761">
      ${screenshotCount} = 0_1
     </msg>
     <status endtime="20240111 19:30:56.762" starttime="20240111 19:30:56.761" status="PASS"/>
    </kw>
    <kw library="Support" name="Set up screenshot directory">
     <kw library="OperatingSystem" name="Create Directory">
      <arg>
       ${OUTPUTDIR}${/}${wvar('screenshot_dir')}
      </arg>
      <doc>
       Creates the specified directory.
      </doc>
      <msg level="INFO" timestamp="20240111 19:30:56.763">
       Web.Dev.screenshot_dir: Screenshot
      </msg>
      <msg html="true" level="INFO" timestamp="20240111 19:30:56.764">
       Created directory '&lt;a href="file://D:\SAP_Testing\sap_testing\Output\pabot_results\0\Screenshot"&gt;D:\SAP_Testing\sap_testing\Output\pabot_results\0\Screenshot&lt;/a&gt;'.
      </msg>
      <status endtime="20240111 19:30:56.764" starttime="20240111 19:30:56.763" status="PASS"/>
     </kw>
     <status endtime="20240111 19:30:56.764" starttime="20240111 19:30:56.762" status="PASS"/>
    </kw>
    <status endtime="20240111 19:30:56.764" starttime="20240111 19:30:56.760" status="PASS"/>
   </kw>
   <kw library="BuiltIn" name="Set Global Variable">
    <arg>
     ${screenshot_taking}
    </arg>
    <arg>
     ${True}
    </arg>
    <doc>
     Makes a variable available globally in all tests and suites.
    </doc>
    <msg level="INFO" timestamp="20240111 19:30:56.764">
     ${screenshot_taking} = True
    </msg>
    <status endtime="20240111 19:30:56.764" starttime="20240111 19:30:56.764" status="PASS"/>
   </kw>
   <kw library="Support" name="Setup linux execution">
    <kw library="BuiltIn" name="Run Keyword And Return Status">
     <var>
      ${web_test_check}
     </var>
     <arg>
      Variable Should Exist
     </arg>
     <arg>
      ${web_test}
     </arg>
     <doc>
      Runs the given keyword with given arguments and returns the status as a Boolean value.
     </doc>
     <kw library="BuiltIn" name="Variable Should Exist">
      <arg>
       ${web_test}
      </arg>
      <doc>
       Fails unless the given variable exists within the current scope.
      </doc>
      <status endtime="20240111 19:30:56.765" starttime="20240111 19:30:56.765" status="PASS"/>
     </kw>
     <msg level="INFO" timestamp="20240111 19:30:56.765">
      ${web_test_check} = True
     </msg>
     <status endtime="20240111 19:30:56.765" starttime="20240111 19:30:56.765" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Run Keyword If">
     <arg>
      ${web_test_check}
     </arg>
     <arg>
      Setup Docker Execution Options
     </arg>
     <doc>
      Runs the given keyword with the given arguments, if ``condition`` is true.
     </doc>
     <kw library="Support_Web" name="Setup Docker Execution Options">
      <kw library="Support_Web" name="Setup Suite Metadata">
       <arg>
        ${browser}
       </arg>
       <kw library="BrowserSupport" name="Get Browser Metadata">
        <var>
         &amp;{browser_information}
        </var>
        <arg>
         browser=${browser}
        </arg>
        <doc>
         Fetches browser metadata information
:param browser: Name of the browser for which information is fetched
:param reload: Re-read the metadata based on the browser
:return: Browser metadata information, dict of format
            {"browser_version": browser version value,
             "driver_version": driver version value}
        </doc>
        <msg level="INFO" timestamp="20240111 19:30:59.911">
         &amp;{browser_information} = { browser_version=120.0.6099.216 | driver_version=119.0.6045.105  }
        </msg>
        <status endtime="20240111 19:30:59.911" starttime="20240111 19:30:56.766" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Suite Metadata">
        <arg>
         test_browser_name
        </arg>
        <arg>
         ${browser}
        </arg>
        <doc>
         Sets metadata for the current test suite.
        </doc>
        <msg level="INFO" timestamp="20240111 19:30:59.911">
         Set suite metadata 'test_browser_name' to value 'chrome'.
        </msg>
        <status endtime="20240111 19:30:59.911" starttime="20240111 19:30:59.911" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Suite Metadata">
        <arg>
         test_browser_version
        </arg>
        <arg>
         ${browser_information.browser_version}
        </arg>
        <doc>
         Sets metadata for the current test suite.
        </doc>
        <msg level="INFO" timestamp="20240111 19:30:59.911">
         Set suite metadata 'test_browser_version' to value '120.0.6099.216'.
        </msg>
        <status endtime="20240111 19:30:59.911" starttime="20240111 19:30:59.911" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Suite Metadata">
        <arg>
         test_driver_version
        </arg>
        <arg>
         ${browser_information.driver_version}
        </arg>
        <doc>
         Sets metadata for the current test suite.
        </doc>
        <msg level="INFO" timestamp="20240111 19:30:59.911">
         Set suite metadata 'test_driver_version' to value '119.0.6045.105 '.
        </msg>
        <status endtime="20240111 19:30:59.911" starttime="20240111 19:30:59.911" status="PASS"/>
       </kw>
       <status endtime="20240111 19:30:59.911" starttime="20240111 19:30:56.766" status="PASS"/>
      </kw>
      <kw library="Support_Web" name="Setup Global Docker Execution Options">
       <kw library="BuiltIn" name="Set Global Variable">
        <arg>
         ${global_browser_options}
        </arg>
        <arg>
         None
        </arg>
        <doc>
         Makes a variable available globally in all tests and suites.
        </doc>
        <msg level="INFO" timestamp="20240111 19:30:59.911">
         ${global_browser_options} = None
        </msg>
        <status endtime="20240111 19:30:59.911" starttime="20240111 19:30:59.911" status="PASS"/>
       </kw>
       <kw library="OperatingSystem" name="Get Environment Variable">
        <var>
         ${docker_check}
        </var>
        <arg>
         EXECUTION_ENVIRONMENT
        </arg>
        <arg>
         not_found
        </arg>
        <doc>
         Returns the value of an environment variable with the given name.
        </doc>
        <msg level="INFO" timestamp="20240111 19:30:59.911">
         ${docker_check} = not_found
        </msg>
        <status endtime="20240111 19:30:59.911" starttime="20240111 19:30:59.911" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Run Keyword And Return If">
        <arg>
         "${docker_check}"!="docker"
        </arg>
        <arg>
         Log
        </arg>
        <arg>
         Not executing on Docker
        </arg>
        <doc>
         Runs the specified keyword and returns from the enclosing user keyword.
        </doc>
        <kw library="BuiltIn" name="Log">
         <arg>
          Not executing on Docker
         </arg>
         <doc>
          Logs the given message with the given level.
         </doc>
         <msg level="INFO" timestamp="20240111 19:30:59.911">
          Not executing on Docker
         </msg>
         <status endtime="20240111 19:30:59.911" starttime="20240111 19:30:59.911" status="PASS"/>
        </kw>
        <msg level="INFO" timestamp="20240111 19:30:59.911">
         Returning from the enclosing user keyword.
        </msg>
        <status endtime="20240111 19:30:59.911" starttime="20240111 19:30:59.911" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Create List">
        <var>
         @{options}
        </var>
        <arg>
         --headless
        </arg>
        <arg>
         --no-sandbox
        </arg>
        <arg>
         --disable-dev-shm-usage
        </arg>
        <doc>
         Returns a list containing given items.
        </doc>
        <status endtime="20240111 19:30:59.911" starttime="20240111 19:30:59.911" status="NOT RUN"/>
       </kw>
       <kw library="BuiltIn" name="Set Global Variable">
        <arg>
         @{docker_options}
        </arg>
        <arg>
         @{options}
        </arg>
        <doc>
         Makes a variable available globally in all tests and suites.
        </doc>
        <status endtime="20240111 19:30:59.911" starttime="20240111 19:30:59.911" status="NOT RUN"/>
       </kw>
       <status endtime="20240111 19:30:59.911" starttime="20240111 19:30:59.911" status="PASS"/>
      </kw>
      <kw library="Support_Web" name="Create Webdriver for chrome preferences">
       <kw library="Support_Web" name="Update Docker Execution Options">
        <var>
         ${list_prefs}
        </var>
        <arg>
         ${list_prefs}
        </arg>
        <kw library="BuiltIn" name="Run Keyword And Return Status">
         <var>
          ${docker_check}
         </var>
         <arg>
          Variable Should Exist
         </arg>
         <arg>
          ${docker_options}
         </arg>
         <doc>
          Runs the given keyword with given arguments and returns the status as a Boolean value.
         </doc>
         <kw library="BuiltIn" name="Variable Should Exist">
          <arg>
           ${docker_options}
          </arg>
          <doc>
           Fails unless the given variable exists within the current scope.
          </doc>
          <msg level="FAIL" timestamp="20240111 19:30:59.911">
           Variable '${docker_options}' does not exist.
          </msg>
          <status endtime="20240111 19:30:59.911" starttime="20240111 19:30:59.911" status="FAIL"/>
         </kw>
         <msg level="INFO" timestamp="20240111 19:30:59.911">
          ${docker_check} = False
         </msg>
         <status endtime="20240111 19:30:59.911" starttime="20240111 19:30:59.911" status="PASS"/>
        </kw>
        <kw library="BuiltIn" name="Get Length">
         <var>
          ${list_prefs_length}
         </var>
         <arg>
          ${list_prefs}
         </arg>
         <doc>
          Returns and logs the length of the given item as an integer.
         </doc>
         <msg level="INFO" timestamp="20240111 19:30:59.911">
          Length is 1
         </msg>
         <msg level="INFO" timestamp="20240111 19:30:59.911">
          ${list_prefs_length} = 1
         </msg>
         <status endtime="20240111 19:30:59.911" starttime="20240111 19:30:59.911" status="PASS"/>
        </kw>
        <kw library="BuiltIn" name="Run Keyword If">
         <var>
          ${list_prefs}
         </var>
         <arg>
          ${docker_check} and ${list_prefs_length}&gt;0 and ${list_prefs}[0] != []
         </arg>
         <arg>
          Combine Lists
         </arg>
         <arg>
          ${list_prefs}
         </arg>
         <arg>
          ${docker_options}
         </arg>
         <arg>
          ELSE IF
         </arg>
         <arg>
          ${docker_check}
         </arg>
         <arg>
          Set Variable
         </arg>
         <arg>
          ${docker_options}
         </arg>
         <arg>
          ELSE
         </arg>
         <arg>
          Set Variable
         </arg>
         <arg>
          ${list_prefs}
         </arg>
         <doc>
          Runs the given keyword with the given arguments, if ``condition`` is true.
         </doc>
         <kw library="BuiltIn" name="Set Variable">
          <arg>
           ${list_prefs}
          </arg>
          <doc>
           Returns the given values which can then be assigned to a variables.
          </doc>
          <status endtime="20240111 19:30:59.911" starttime="20240111 19:30:59.911" status="PASS"/>
         </kw>
         <msg level="INFO" timestamp="20240111 19:30:59.911">
          ${list_prefs} = [[]]
         </msg>
         <status endtime="20240111 19:30:59.911" starttime="20240111 19:30:59.911" status="PASS"/>
        </kw>
        <msg level="INFO" timestamp="20240111 19:30:59.911">
         ${list_prefs} = [[]]
        </msg>
        <status endtime="20240111 19:30:59.911" starttime="20240111 19:30:59.911" status="PASS"/>
       </kw>
       <kw library="Support_Web" name="Create Chrome Options for download preferences">
        <var>
         ${chrome_options}
        </var>
        <kw library="BuiltIn" name="Evaluate">
         <var>
          ${chrome_options}
         </var>
         <arg>
          sys.modules['selenium.webdriver'].ChromeOptions()
         </arg>
         <arg>
          sys
         </arg>
         <doc>
          Evaluates the given expression in Python and returns the result.
         </doc>
         <msg level="INFO" timestamp="20240111 19:30:59.911">
          ${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x000001B98B3851C0&gt;
         </msg>
         <status endtime="20240111 19:30:59.911" starttime="20240111 19:30:59.911" status="PASS"/>
        </kw>
        <msg level="INFO" timestamp="20240111 19:30:59.911">
         ${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x000001B98B3851C0&gt;
        </msg>
        <status endtime="20240111 19:30:59.911" starttime="20240111 19:30:59.911" status="PASS"/>
       </kw>
       <kw library="Support_Web" name="Update Preferences List">
        <arg>
         ${chrome_options}
        </arg>
        <arg>
         @{list_prefs}
        </arg>
        <kw library="BuiltIn" name="Convert To String">
         <var>
          ${string_prefs}
         </var>
         <arg>
          ${list_prefs}
         </arg>
         <doc>
          Converts the given item to a Unicode string.
         </doc>
         <msg level="INFO" timestamp="20240111 19:30:59.911">
          ${string_prefs} = [[]]
         </msg>
         <status endtime="20240111 19:30:59.911" starttime="20240111 19:30:59.911" status="PASS"/>
        </kw>
        <kw library="BuiltIn" name="Return From Keyword If">
         <arg>
          ${string_prefs} == [[]]
         </arg>
         <doc>
          Returns from the enclosing user keyword if ``condition`` is true.
         </doc>
         <msg level="INFO" timestamp="20240111 19:30:59.911">
          Returning from the enclosing user keyword.
         </msg>
         <status endtime="20240111 19:30:59.911" starttime="20240111 19:30:59.911" status="PASS"/>
        </kw>
        <for flavor="IN">
         <var>
          ${preference}
         </var>
         <value>
          @{list_prefs}
         </value>
         <iter>
          <var name="${preference}"/>
          <kw library="BuiltIn" name="Call Method">
           <arg>
            ${chrome_options}
           </arg>
           <arg>
            add_argument
           </arg>
           <arg>
            ${preference}
           </arg>
           <doc>
            Calls the named method of the given object with the provided arguments.
           </doc>
           <status endtime="20240111 19:30:59.911" starttime="20240111 19:30:59.911" status="NOT RUN"/>
          </kw>
          <status endtime="20240111 19:30:59.911" starttime="20240111 19:30:59.911" status="NOT RUN"/>
         </iter>
         <status endtime="20240111 19:30:59.911" starttime="20240111 19:30:59.911" status="NOT RUN"/>
        </for>
        <status endtime="20240111 19:30:59.911" starttime="20240111 19:30:59.911" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Call Method">
        <arg>
         ${chrome_options}
        </arg>
        <arg>
         add_experimental_option
        </arg>
        <arg>
         prefs
        </arg>
        <arg>
         ${kw_prefs}
        </arg>
        <doc>
         Calls the named method of the given object with the provided arguments.
        </doc>
        <status endtime="20240111 19:30:59.911" starttime="20240111 19:30:59.911" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Global Variable">
        <arg>
         ${global_browser_options}
        </arg>
        <arg>
         ${chrome options}
        </arg>
        <doc>
         Makes a variable available globally in all tests and suites.
        </doc>
        <msg level="INFO" timestamp="20240111 19:30:59.911">
         ${global_browser_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x000001B98B3851C0&gt;
        </msg>
        <status endtime="20240111 19:30:59.911" starttime="20240111 19:30:59.911" status="PASS"/>
       </kw>
       <status endtime="20240111 19:30:59.911" starttime="20240111 19:30:59.911" status="PASS"/>
      </kw>
      <status endtime="20240111 19:30:59.911" starttime="20240111 19:30:56.766" status="PASS"/>
     </kw>
     <status endtime="20240111 19:30:59.911" starttime="20240111 19:30:56.766" status="PASS"/>
    </kw>
    <status endtime="20240111 19:30:59.911" starttime="20240111 19:30:56.765" status="PASS"/>
   </kw>
   <kw library="BuiltIn" name="Set Suite Metadata">
    <arg>
     environment
    </arg>
    <arg>
     ${test_server}
    </arg>
    <doc>
     Sets metadata for the current test suite.
    </doc>
    <msg level="INFO" timestamp="20240111 19:30:59.911">
     Set suite metadata 'environment' to value 'Dev'.
    </msg>
    <status endtime="20240111 19:30:59.911" starttime="20240111 19:30:59.911" status="PASS"/>
   </kw>
   <status endtime="20240111 19:30:59.911" starttime="20240111 19:30:56.759" status="PASS"/>
  </kw>
  <suite id="s1-s1" name="Test spam patch" source="D:\SAP_Testing\sap_testing\Tests\Test_spam_patch.robot">
   <kw library="Common_Function" name="System Logon" type="SETUP">
    <kw library="Process" name="Start Process">
     <arg>
      ${symvar('EXE_PAD')}
     </arg>
     <doc>
      Starts a new process on background.
     </doc>
     <msg level="INFO" timestamp="20240111 19:30:59.926">
      Sym.Dev.EXE_PAD: C:\Program Files (x86)\SAP\FrontEnd\SAPgui\saplogon.exe
     </msg>
     <msg level="INFO" timestamp="20240111 19:30:59.926">
      Starting process:
"C:\Program Files (x86)\SAP\FrontEnd\SAPgui\saplogon.exe"
     </msg>
     <status endtime="20240111 19:30:59.942" starttime="20240111 19:30:59.926" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      5s
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240111 19:31:04.942">
      Slept 5 seconds
     </msg>
     <status endtime="20240111 19:31:04.942" starttime="20240111 19:30:59.942" status="PASS"/>
    </kw>
    <kw library="CustomSapGuiLibrary" name="Connect To Session">
     <doc>
      Connects to an open session SAP.
     </doc>
     <status endtime="20240111 19:31:04.942" starttime="20240111 19:31:04.942" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      5
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240111 19:31:09.942">
      Slept 5 seconds
     </msg>
     <status endtime="20240111 19:31:09.942" starttime="20240111 19:31:04.942" status="PASS"/>
    </kw>
    <kw library="CustomSapGuiLibrary" name="Open Connection">
     <arg>
      ${symvar('Connection_Name')}
     </arg>
     <doc>
      Opens a connection to the given connection name. Be sure to provide the full connection name, including the bracket part.
     </doc>
     <msg level="INFO" timestamp="20240111 19:31:09.942">
      Sym.Dev.Connection_Name: RBT
     </msg>
     <status endtime="20240111 19:31:10.556" starttime="20240111 19:31:09.942" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      5
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240111 19:31:15.557">
      Slept 5 seconds
     </msg>
     <status endtime="20240111 19:31:15.557" starttime="20240111 19:31:10.557" status="PASS"/>
    </kw>
    <kw library="CustomSapGuiLibrary" name="Input Text">
     <arg>
      wnd[0]/usr/txtRSYST-MANDT
     </arg>
     <arg>
      ${symvar('SAP_CLIENT')}
     </arg>
     <doc>
      Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.
     </doc>
     <msg level="INFO" timestamp="20240111 19:31:15.557">
      Sym.Dev.SAP_CLIENT: 000
     </msg>
     <msg level="INFO" timestamp="20240111 19:31:15.557">
      Typing text '000' into text field 'wnd[0]/usr/txtRSYST-MANDT'.
     </msg>
     <status endtime="20240111 19:31:15.557" starttime="20240111 19:31:15.557" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      1
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240111 19:31:16.558">
      Slept 1 second
     </msg>
     <status endtime="20240111 19:31:16.558" starttime="20240111 19:31:15.557" status="PASS"/>
    </kw>
    <kw library="CustomSapGuiLibrary" name="Input Text">
     <arg>
      wnd[0]/usr/txtRSYST-BNAME
     </arg>
     <arg>
      ${symvar('SAP_USER')}
     </arg>
     <doc>
      Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.
     </doc>
     <msg level="INFO" timestamp="20240111 19:31:16.558">
      Sym.Dev.SAP_USER: DDIC
     </msg>
     <msg level="INFO" timestamp="20240111 19:31:16.558">
      Typing text 'DDIC' into text field 'wnd[0]/usr/txtRSYST-BNAME'.
     </msg>
     <status endtime="20240111 19:31:16.558" starttime="20240111 19:31:16.558" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      1
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240111 19:31:17.559">
      Slept 1 second
     </msg>
     <status endtime="20240111 19:31:17.559" starttime="20240111 19:31:16.558" status="PASS"/>
    </kw>
    <kw library="CustomSapGuiLibrary" name="Input Password">
     <arg>
      wnd[0]/usr/pwdRSYST-BCODE
     </arg>
     <arg>
      ${symvar('SAP_PASSWORD')}
     </arg>
     <doc>
      Inserts the given password into the text field identified by locator.
The password is not recorded in the log.
     </doc>
     <msg level="INFO" timestamp="20240111 19:31:17.559">
      Sym.Dev.SAP_PASSWORD: Sym@rocks2023
     </msg>
     <msg level="INFO" timestamp="20240111 19:31:17.559">
      Typing password into text field 'wnd[0]/usr/pwdRSYST-BCODE'.
     </msg>
     <status endtime="20240111 19:31:17.559" starttime="20240111 19:31:17.559" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      2
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240111 19:31:19.559">
      Slept 2 seconds
     </msg>
     <status endtime="20240111 19:31:19.559" starttime="20240111 19:31:17.559" status="PASS"/>
    </kw>
    <kw library="CustomSapGuiLibrary" name="Send Vkey">
     <arg>
      0
     </arg>
     <doc>
      Sends a SAP virtual key combination to the window, not into an element.
If you want to send a value to a text field, use `input text` instead.
     </doc>
     <status endtime="20240111 19:31:19.874" starttime="20240111 19:31:19.560" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      5
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240111 19:31:24.875">
      Slept 5 seconds
     </msg>
     <status endtime="20240111 19:31:24.875" starttime="20240111 19:31:19.874" status="PASS"/>
    </kw>
    <kw library="CustomSapGuiLibrary" name="Take Screenshot">
     <arg>
      01_loginpage.jpg
     </arg>
     <doc>
      Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
     </doc>
     <msg html="true" level="INFO" timestamp="20240111 19:31:24.930">
      &lt;a href="pabot_results%5C0%5C01_loginpage.jpg"&gt;&lt;img src="pabot_results%5C0%5C01_loginpage.jpg" width="800px"&gt;&lt;/a&gt;
     </msg>
     <status endtime="20240111 19:31:24.930" starttime="20240111 19:31:24.875" status="PASS"/>
    </kw>
    <status endtime="20240111 19:31:24.930" starttime="20240111 19:30:59.926" status="PASS"/>
   </kw>
   <test id="s1-s1-t1" line="9" name="Check_Spam_update">
    <kw library="Spam_Patch" name="Spam Transaction">
     <kw library="CustomSapGuiLibrary" name="Run Transaction">
      <arg>
       spam
      </arg>
      <doc>
       Runs a Sap transaction. An error is given when an unknown transaction is specified.
      </doc>
      <status endtime="20240111 19:31:25.158" starttime="20240111 19:31:24.930" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       5
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240111 19:31:30.158">
       Slept 5 seconds
      </msg>
      <status endtime="20240111 19:31:30.158" starttime="20240111 19:31:25.158" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       02_spam.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240111 19:31:30.198">
       &lt;a href="pabot_results%5C0%5C02_spam.jpg"&gt;&lt;img src="pabot_results%5C0%5C02_spam.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240111 19:31:30.198" starttime="20240111 19:31:30.158" status="PASS"/>
     </kw>
     <status endtime="20240111 19:31:30.198" starttime="20240111 19:31:24.930" status="PASS"/>
    </kw>
    <kw library="Spam_Patch" name="Certificate Verification">
     <kw library="CustomSapGuiLibrary" name="Get Maintenance Certificate Text">
      <arg>
       wnd[0]/sbar/pane[0]
      </arg>
      <msg level="INFO" timestamp="20240111 19:31:30.198">
       License available to proceed further
      </msg>
      <status endtime="20240111 19:31:30.198" starttime="20240111 19:31:30.198" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240111 19:31:32.198">
       Slept 2 seconds
      </msg>
      <status endtime="20240111 19:31:32.198" starttime="20240111 19:31:30.198" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       03_Certificate.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240111 19:31:32.245">
       &lt;a href="pabot_results%5C0%5C03_Certificate.jpg"&gt;&lt;img src="pabot_results%5C0%5C03_Certificate.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240111 19:31:32.245" starttime="20240111 19:31:32.198" status="PASS"/>
     </kw>
     <status endtime="20240111 19:31:32.245" starttime="20240111 19:31:30.198" status="PASS"/>
    </kw>
    <kw library="Spam_Patch" name="Loading package">
     <kw library="CustomSapGuiLibrary" name="Click Element">
      <arg>
       wnd[0]/mbar/menu[0]/menu[0]/menu[1]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240111 19:31:32.367" starttime="20240111 19:31:32.245" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240111 19:31:34.367">
       Slept 2 seconds
      </msg>
      <status endtime="20240111 19:31:34.367" starttime="20240111 19:31:32.367" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       04_Load_1.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240111 19:31:34.417">
       &lt;a href="pabot_results%5C0%5C04_Load_1.jpg"&gt;&lt;img src="pabot_results%5C0%5C04_Load_1.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240111 19:31:34.417" starttime="20240111 19:31:34.367" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Click Element">
      <arg>
       wnd[1]/usr/btnSPOP-OPTION1
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240111 19:31:39.730" starttime="20240111 19:31:34.417" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240111 19:31:41.731">
       Slept 2 seconds
      </msg>
      <status endtime="20240111 19:31:41.731" starttime="20240111 19:31:39.730" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       05_Load_2.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240111 19:31:41.779">
       &lt;a href="pabot_results%5C0%5C05_Load_2.jpg"&gt;&lt;img src="pabot_results%5C0%5C05_Load_2.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240111 19:31:41.779" starttime="20240111 19:31:41.731" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Click Element">
      <arg>
       wnd[0]/tbar[0]/btn[3]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240111 19:31:41.923" starttime="20240111 19:31:41.779" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240111 19:31:43.925">
       Slept 2 seconds
      </msg>
      <status endtime="20240111 19:31:43.925" starttime="20240111 19:31:41.923" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       06_Load_3.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240111 19:31:43.972">
       &lt;a href="pabot_results%5C0%5C06_Load_3.jpg"&gt;&lt;img src="pabot_results%5C0%5C06_Load_3.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240111 19:31:43.972" starttime="20240111 19:31:43.925" status="PASS"/>
     </kw>
     <status endtime="20240111 19:31:43.972" starttime="20240111 19:31:32.245" status="PASS"/>
    </kw>
    <kw library="Spam_Patch" name="Display/Define">
     <kw library="CustomSapGuiLibrary" name="Click Element">
      <arg>
       wnd[0]/usr/btnPAT100-QUEUE
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240111 19:31:44.364" starttime="20240111 19:31:43.988" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240111 19:31:46.365">
       Slept 2 seconds
      </msg>
      <status endtime="20240111 19:31:46.365" starttime="20240111 19:31:44.364" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       07_Display.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240111 19:31:46.396">
       &lt;a href="pabot_results%5C0%5C07_Display.jpg"&gt;&lt;img src="pabot_results%5C0%5C07_Display.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240111 19:31:46.396" starttime="20240111 19:31:46.365" status="PASS"/>
     </kw>
     <status endtime="20240111 19:31:46.412" starttime="20240111 19:31:43.988" status="PASS"/>
    </kw>
    <kw library="Spam_Patch" name="Spam Component selection">
     <kw library="CustomSapGuiLibrary" name="Select Spam Based On Text">
      <var>
       ${row}
      </var>
      <arg>
       wnd[1]/usr/cntlCOMP_ONLY_CONTROL/shellcont/shell
      </arg>
      <arg>
       ${patch_comp}
      </arg>
      <msg level="INFO" timestamp="20240111 19:31:46.412">
       7
0
SAP_BASIS
not found
1
SAP_ABA
not found
2
SAP_GWFND
not found
3
SAP_UI
not found
4
ST-PI
Text Found in ${row}
      </msg>
      <msg level="INFO" timestamp="20240111 19:31:46.412">
       ${row} = 4
      </msg>
      <status endtime="20240111 19:31:46.412" starttime="20240111 19:31:46.412" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Log">
      <arg>
       ${row}
      </arg>
      <doc>
       Logs the given message with the given level.
      </doc>
      <msg level="INFO" timestamp="20240111 19:31:46.412">
       4
      </msg>
      <status endtime="20240111 19:31:46.412" starttime="20240111 19:31:46.412" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Select Table Row">
      <arg>
       wnd[1]/usr/cntlCOMP_ONLY_CONTROL/shellcont/shell
      </arg>
      <arg>
       4
      </arg>
      <doc>
       Selects an entire row of a table. This can either be a TableControl or a GridView 'table_id'
which is contained within a shell object. The row is an index to select the row, starting from 0.
      </doc>
      <status endtime="20240111 19:31:46.427" starttime="20240111 19:31:46.412" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240111 19:31:48.428">
       Slept 2 seconds
      </msg>
      <status endtime="20240111 19:31:48.428" starttime="20240111 19:31:46.427" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       08_Spam_component1.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240111 19:31:48.479">
       &lt;a href="pabot_results%5C0%5C08_Spam_component1.jpg"&gt;&lt;img src="pabot_results%5C0%5C08_Spam_component1.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240111 19:31:48.479" starttime="20240111 19:31:48.428" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Click Element">
      <arg>
       wnd[1]/tbar[0]/btn[0]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240111 19:31:48.759" starttime="20240111 19:31:48.479" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240111 19:31:50.760">
       Slept 2 seconds
      </msg>
      <status endtime="20240111 19:31:50.760" starttime="20240111 19:31:48.759" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       09_Spam_component2.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240111 19:31:50.820">
       &lt;a href="pabot_results%5C0%5C09_Spam_component2.jpg"&gt;&lt;img src="pabot_results%5C0%5C09_Spam_component2.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240111 19:31:50.820" starttime="20240111 19:31:50.760" status="PASS"/>
     </kw>
     <status endtime="20240111 19:31:50.820" starttime="20240111 19:31:46.412" status="PASS"/>
    </kw>
    <kw library="Spam_Patch" name="Spam Patch selection">
     <kw library="CustomSapGuiLibrary" name="Spam Search And Select Label">
      <var>
       ${patch_value}
      </var>
      <arg>
       wnd[1]/usr
      </arg>
      <arg>
       ${patch_vers}
      </arg>
      <msg level="INFO" timestamp="20240111 19:31:52.174">
       0
Text Found: SAPK-74022INSTPI
      </msg>
      <msg level="INFO" timestamp="20240111 19:31:52.174">
       ${patch_value} = None
      </msg>
      <status endtime="20240111 19:31:52.174" starttime="20240111 19:31:50.820" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Log">
      <arg>
       ${patch_value}
      </arg>
      <doc>
       Logs the given message with the given level.
      </doc>
      <msg level="INFO" timestamp="20240111 19:31:52.175">
       None
      </msg>
      <status endtime="20240111 19:31:52.175" starttime="20240111 19:31:52.174" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240111 19:31:54.175">
       Slept 2 seconds
      </msg>
      <status endtime="20240111 19:31:54.175" starttime="20240111 19:31:52.175" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Click Element">
      <arg>
       wnd[1]/tbar[0]/btn[0]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240111 19:31:54.445" starttime="20240111 19:31:54.175" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240111 19:31:56.447">
       Slept 2 seconds
      </msg>
      <status endtime="20240111 19:31:56.447" starttime="20240111 19:31:54.445" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       10_Spam_patch1.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240111 19:31:56.495">
       &lt;a href="pabot_results%5C0%5C10_Spam_patch1.jpg"&gt;&lt;img src="pabot_results%5C0%5C10_Spam_patch1.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240111 19:31:56.496" starttime="20240111 19:31:56.447" status="PASS"/>
     </kw>
     <status endtime="20240111 19:31:56.496" starttime="20240111 19:31:50.820" status="PASS"/>
    </kw>
    <kw library="Spam_Patch" name="Important SAP note handling">
     <kw library="CustomSapGuiLibrary" name="Is Imp Notes Existing">
      <arg>
       wnd[1]
      </arg>
      <arg>
       wnd[1]/tbar[0]/btn[0]
      </arg>
      <msg level="INFO" timestamp="20240111 19:31:56.500">
       Modal window does not exist.
      </msg>
      <status endtime="20240111 19:31:56.500" starttime="20240111 19:31:56.496" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       11_SAP_note.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240111 19:31:56.544">
       &lt;a href="pabot_results%5C0%5C11_SAP_note.jpg"&gt;&lt;img src="pabot_results%5C0%5C11_SAP_note.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240111 19:31:56.544" starttime="20240111 19:31:56.500" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Click Element">
      <arg>
       wnd[2]/tbar[0]/btn[0]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240111 19:31:57.136" starttime="20240111 19:31:56.544" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Click Element">
      <arg>
       wnd[1]/usr/btnBUTTON_2
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240111 19:31:57.295" starttime="20240111 19:31:57.136" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       12_Modification.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240111 19:31:57.344">
       &lt;a href="pabot_results%5C0%5C12_Modification.jpg"&gt;&lt;img src="pabot_results%5C0%5C12_Modification.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240111 19:31:57.344" starttime="20240111 19:31:57.296" status="PASS"/>
     </kw>
     <status endtime="20240111 19:31:57.344" starttime="20240111 19:31:56.496" status="PASS"/>
    </kw>
    <tag>
     Regression
    </tag>
    <tag>
     spampatch
    </tag>
    <status endtime="20240111 19:31:57.344" starttime="20240111 19:31:24.930" status="PASS"/>
   </test>
   <test id="s1-s1-t2" line="18" name="Import Queue">
    <kw library="Spam_Patch" name="Importing queue from support package">
     <kw library="CustomSapGuiLibrary" name="Click Element">
      <arg>
       wnd[0]/mbar/menu[0]/menu[3]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240111 19:31:57.473" starttime="20240111 19:31:57.344" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Click Element">
      <arg>
       wnd[1]/tbar[0]/btn[0]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240111 19:31:57.607" starttime="20240111 19:31:57.473" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       13_Imp_que_1.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240111 19:31:57.660">
       &lt;a href="pabot_results%5C0%5C13_Imp_que_1.jpg"&gt;&lt;img src="pabot_results%5C0%5C13_Imp_que_1.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240111 19:31:57.660" starttime="20240111 19:31:57.607" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Click Element">
      <arg>
       wnd[1]/tbar[0]/btn[27]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240111 19:31:57.868" starttime="20240111 19:31:57.660" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       14_Start_options.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240111 19:31:57.931">
       &lt;a href="pabot_results%5C0%5C14_Start_options.jpg"&gt;&lt;img src="pabot_results%5C0%5C14_Start_options.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240111 19:31:57.931" starttime="20240111 19:31:57.869" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240111 19:31:58.931">
       Slept 1 second
      </msg>
      <status endtime="20240111 19:31:58.931" starttime="20240111 19:31:57.931" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Select Radio Button">
      <arg>
       wnd[1]/usr/tabsSTART_OPTIONS/tabpSTART_FC1/ssubSTART_OPTIONS_SCA:SAPLOCS_UI:0701/radLAY0700-RB1_BTCHIM
      </arg>
      <doc>
       Sets radio button to the specified value.
      </doc>
      <status endtime="20240111 19:31:58.982" starttime="20240111 19:31:58.931" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240111 19:31:59.982">
       Slept 1 second
      </msg>
      <status endtime="20240111 19:31:59.982" starttime="20240111 19:31:58.982" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       15_Start_bkgd.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240111 19:32:00.045">
       &lt;a href="pabot_results%5C0%5C15_Start_bkgd.jpg"&gt;&lt;img src="pabot_results%5C0%5C15_Start_bkgd.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240111 19:32:00.045" starttime="20240111 19:31:59.982" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Click Element">
      <arg>
       wnd[1]/tbar[0]/btn[0]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240111 19:32:00.138" starttime="20240111 19:32:00.045" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240111 19:32:01.139">
       Slept 1 second
      </msg>
      <status endtime="20240111 19:32:01.139" starttime="20240111 19:32:00.138" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       16_Start_bkgd_2.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240111 19:32:01.177">
       &lt;a href="pabot_results%5C0%5C16_Start_bkgd_2.jpg"&gt;&lt;img src="pabot_results%5C0%5C16_Start_bkgd_2.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240111 19:32:01.177" starttime="20240111 19:32:01.139" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Click Element">
      <arg>
       wnd[1]/tbar[0]/btn[25]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240111 19:32:05.289" starttime="20240111 19:32:01.177" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       17_Start_bkgd_3.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240111 19:32:05.367">
       &lt;a href="pabot_results%5C0%5C17_Start_bkgd_3.jpg"&gt;&lt;img src="pabot_results%5C0%5C17_Start_bkgd_3.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240111 19:32:05.367" starttime="20240111 19:32:05.289" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240111 19:32:06.367">
       Slept 1 second
      </msg>
      <status endtime="20240111 19:32:06.367" starttime="20240111 19:32:05.367" status="PASS"/>
     </kw>
     <status endtime="20240111 19:32:06.367" starttime="20240111 19:31:57.344" status="PASS"/>
    </kw>
    <kw library="Spam_Patch" name="Confirm Queue">
     <kw library="CustomSapGuiLibrary" name="Get Finish Cell Text1">
      <var>
       ${cell_text_1}
      </var>
      <arg>
       ${finish_str}
      </arg>
      <arg>
       ${button_id}
      </arg>
      <arg>
       ${status_line}
      </arg>
      <arg>
       ${refresh_id}
      </arg>
      <msg level="INFO" timestamp="20240111 19:49:09.381">
       Installation Successful
      </msg>
      <msg level="INFO" timestamp="20240111 19:49:09.381">
       ${cell_text_1} = Confirm queue
      </msg>
      <status endtime="20240111 19:49:09.381" starttime="20240111 19:32:06.367" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Log">
      <arg>
       ${cell_text_1}
      </arg>
      <doc>
       Logs the given message with the given level.
      </doc>
      <msg level="INFO" timestamp="20240111 19:49:09.382">
       Confirm queue
      </msg>
      <status endtime="20240111 19:49:09.382" starttime="20240111 19:49:09.381" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       18_Confirmed_queue.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240111 19:49:09.452">
       &lt;a href="pabot_results%5C0%5C18_Confirmed_queue.jpg"&gt;&lt;img src="pabot_results%5C0%5C18_Confirmed_queue.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240111 19:49:09.452" starttime="20240111 19:49:09.382" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="No Queue Pending">
      <arg>
       ${no_Queue_id}
      </arg>
      <msg level="INFO" timestamp="20240111 19:49:09.452">
       Queue is available
      </msg>
      <status endtime="20240111 19:49:09.452" starttime="20240111 19:49:09.452" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       19_Status_Confirmed_queue1.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240111 19:49:09.499">
       &lt;a href="pabot_results%5C0%5C19_Status_Confirmed_queue1.jpg"&gt;&lt;img src="pabot_results%5C0%5C19_Status_Confirmed_queue1.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240111 19:49:09.499" starttime="20240111 19:49:09.452" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Click Element">
      <arg>
       wnd[1]/tbar[0]/btn[27]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240111 19:49:09.585" starttime="20240111 19:49:09.499" status="PASS"/>
     </kw>
     <kw library="CustomSapGuiLibrary" name="Take Screenshot">
      <arg>
       20_Status_Confirmed_queue2.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240111 19:49:09.633">
       &lt;a href="pabot_results%5C0%5C20_Status_Confirmed_queue2.jpg"&gt;&lt;img src="pabot_results%5C0%5C20_Status_Confirmed_queue2.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240111 19:49:09.633" starttime="20240111 19:49:09.585" status="PASS"/>
     </kw>
     <status endtime="20240111 19:49:09.633" starttime="20240111 19:32:06.367" status="PASS"/>
    </kw>
    <tag>
     Regression
    </tag>
    <tag>
     spampatch
    </tag>
    <status endtime="20240111 19:49:09.633" starttime="20240111 19:31:57.344" status="PASS"/>
   </test>
   <kw library="Common_Function" name="System Logout" type="TEARDOWN">
    <kw library="CustomSapGuiLibrary" name="Run Transaction">
     <arg>
      /nex
     </arg>
     <doc>
      Runs a Sap transaction. An error is given when an unknown transaction is specified.
     </doc>
     <status endtime="20240111 19:49:09.672" starttime="20240111 19:49:09.633" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      5
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240111 19:49:14.673">
      Slept 5 seconds
     </msg>
     <status endtime="20240111 19:49:14.673" starttime="20240111 19:49:09.672" status="PASS"/>
    </kw>
    <kw library="CustomSapGuiLibrary" name="Take Screenshot">
     <arg>
      logoutpage.jpg
     </arg>
     <doc>
      Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
     </doc>
     <msg html="true" level="INFO" timestamp="20240111 19:49:14.748">
      &lt;a href="pabot_results%5C0%5Clogoutpage.jpg"&gt;&lt;img src="pabot_results%5C0%5Clogoutpage.jpg" width="800px"&gt;&lt;/a&gt;
     </msg>
     <status endtime="20240111 19:49:14.748" starttime="20240111 19:49:14.673" status="PASS"/>
    </kw>
    <status endtime="20240111 19:49:14.748" starttime="20240111 19:49:09.633" status="PASS"/>
   </kw>
   <status endtime="20240111 19:49:14.748" starttime="20240111 19:30:59.911" status="PASS"/>
  </suite>
  <doc>
   Testing functionality through Robot Framework
  </doc>
  <meta name="environment">
   Dev
  </meta>
  <meta name="test_browser_name">
   chrome
  </meta>
  <meta name="test_browser_version">
   120.0.6099.216
  </meta>
  <meta name="test_driver_version">
   119.0.6045.105
  </meta>
  <meta name="test_environment">
   Dev
  </meta>
  <meta name="test_freeze_dependencies">
   astroid==3.0.2,attrs==23.2.0,beautifulsoup4==4.12.2,bs4==0.0.1,certifi==2023.11.17,cffi==1.16.0,chardet==5.2.0,charset-normalizer==3.3.2,click==8.1.7,colorama==0.4.6,cryptography==41.0.7,defusedxml==0.7.1,dill==0.3.7,docutils==0.20.1,exceptiongroup==1.2.0,gitdb==4.0.11,GitPython==3.1.40,h11==0.14.0,idna==3.6,isort==5.13.2,Jinja2==3.1.2,jira==3.6.0,jsonpath-ng==1.6.0,jsonschema==4.20.0,jsonschema-specifications==2023.12.1,lazy-object-proxy==1.10.0,lxml==5.1.0,markdown-it-py==3.0.0,MarkupSafe==2.1.3,mccabe==0.7.0,mdurl==0.1.2,natsort==8.4.0,oauthlib==3.2.2,outcome==1.3.0.post0,packaging==23.2,pathspec==0.11.2,pillow==10.2.0,pip==23.3.2,platformdirs==4.1.0,ply==3.11,pycparser==2.21,Pygments==2.17.2,pylint==3.0.3,PySocks==1.7.1,pywin32==306,PyYAML==6.0.1,referencing==0.32.1,requests==2.31.0,requests-oauthlib==1.3.1,requests-toolbelt==1.0.0,rich==13.7.0,rich-click==1.6.1,robotframework==6.0.2,robotframework-datadriver==1.9.0,robotframework-jsonlibrary==0.5,robotframework-pabot==2.16.0,robotframework-pythonlibcore==4.2.0,robotframework-requests==0.9.2,robotframework-sapguilibrary==1.1,robotframework-seleniumlibrary==5.1.3,robotframework-stacktrace==0.4.1,robotframework-tidy==4.5.0,rpds-py==0.16.2,selenium==4.9.1,setuptools==69.0.3,smmap==5.0.1,sniffio==1.3.0,sortedcontainers==2.4.0,soupsieve==2.5,tomli==2.0.1,tomlkit==0.12.3,trio==0.23.2,trio-websocket==0.11.1,typing_extensions==4.9.0,urllib3==2.1.0,wheel==0.42.0,wrapt==1.16.0,wsproto==1.2.0
  </meta>
  <status endtime="20240111 19:49:15.121" starttime="20240111 19:30:56.421" status="PASS"/>
 </suite>
 <statistics>
  <total>
   <stat fail="0" pass="2" skip="0">
    All Tests
   </stat>
  </total>
  <tag>
   <stat fail="0" pass="2" skip="0">
    Regression
   </stat>
   <stat fail="0" pass="2" skip="0">
    spampatch
   </stat>
  </tag>
  <suite>
   <stat fail="0" id="s1" name="Tests" pass="2" skip="0">
    Tests
   </stat>
   <stat fail="0" id="s1-s1" name="Test spam patch" pass="2" skip="0">
    Tests.Test spam patch
   </stat>
  </suite>
 </statistics>
 <errors>
 </errors>
</robot>
