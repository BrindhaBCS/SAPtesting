<?xml version="1.0" encoding="utf-8"?>
<robot generated="20240502 20:20:54.245" generator="Rebot 6.0.2 (Python 3.12.1 on win32)" rpa="false" schemaversion="3">
 <suite id="s1" name="Tests" source="C:\SAP_Testing\SAPtesting\Tests">
  <kw name="Setup highest level suite" type="SETUP">
   <kw library="BuiltIn" name="Set Variable">
    <var>
     ${d.test_server}
    </var>
    <arg>
     ${test_server}
    </arg>
    <doc>
     Returns the given values which can then be assigned to a variables.
    </doc>
    <msg level="INFO" timestamp="20240502 20:12:15.770">
     ${d.test_server} = Dev
    </msg>
    <status endtime="20240502 20:12:15.770" starttime="20240502 20:12:15.770" status="PASS"/>
   </kw>
   <kw library="Support" name="Reset screenshot count variable">
    <kw library="BuiltIn" name="Set Variable">
     <var>
      ${screenshotCount}
     </var>
     <arg>
      ${PABOTQUEUEINDEX}_1
     </arg>
     <doc>
      Returns the given values which can then be assigned to a variables.
     </doc>
     <msg level="INFO" timestamp="20240502 20:12:15.772">
      ${screenshotCount} = 0_1
     </msg>
     <status endtime="20240502 20:12:15.772" starttime="20240502 20:12:15.771" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Set Global Variable">
     <arg>
      ${screenshotCount}
     </arg>
     <doc>
      Makes a variable available globally in all tests and suites.
     </doc>
     <msg level="INFO" timestamp="20240502 20:12:15.772">
      ${screenshotCount} = 0_1
     </msg>
     <status endtime="20240502 20:12:15.772" starttime="20240502 20:12:15.772" status="PASS"/>
    </kw>
    <kw library="Support" name="Set up screenshot directory">
     <kw library="OperatingSystem" name="Create Directory">
      <arg>
       ${OUTPUTDIR}${/}${wvar('screenshot_dir')}
      </arg>
      <doc>
       Creates the specified directory.
      </doc>
      <msg level="INFO" timestamp="20240502 20:12:15.774">
       Web.Dev.screenshot_dir: Screenshot
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:12:15.779">
       Created directory '&lt;a href="file://C:\SAP_Testing\SAPtesting\Output\pabot_results\0\Screenshot"&gt;C:\SAP_Testing\SAPtesting\Output\pabot_results\0\Screenshot&lt;/a&gt;'.
      </msg>
      <status endtime="20240502 20:12:15.779" starttime="20240502 20:12:15.773" status="PASS"/>
     </kw>
     <status endtime="20240502 20:12:15.780" starttime="20240502 20:12:15.772" status="PASS"/>
    </kw>
    <status endtime="20240502 20:12:15.780" starttime="20240502 20:12:15.771" status="PASS"/>
   </kw>
   <kw library="BuiltIn" name="Set Global Variable">
    <arg>
     ${screenshot_taking}
    </arg>
    <arg>
     ${True}
    </arg>
    <doc>
     Makes a variable available globally in all tests and suites.
    </doc>
    <msg level="INFO" timestamp="20240502 20:12:15.780">
     ${screenshot_taking} = True
    </msg>
    <status endtime="20240502 20:12:15.780" starttime="20240502 20:12:15.780" status="PASS"/>
   </kw>
   <kw library="Support" name="Setup linux execution">
    <kw library="BuiltIn" name="Run Keyword And Return Status">
     <var>
      ${web_test_check}
     </var>
     <arg>
      Variable Should Exist
     </arg>
     <arg>
      ${web_test}
     </arg>
     <doc>
      Runs the given keyword with given arguments and returns the status as a Boolean value.
     </doc>
     <kw library="BuiltIn" name="Variable Should Exist">
      <arg>
       ${web_test}
      </arg>
      <doc>
       Fails unless the given variable exists within the current scope.
      </doc>
      <status endtime="20240502 20:12:15.782" starttime="20240502 20:12:15.781" status="PASS"/>
     </kw>
     <msg level="INFO" timestamp="20240502 20:12:15.782">
      ${web_test_check} = True
     </msg>
     <status endtime="20240502 20:12:15.782" starttime="20240502 20:12:15.781" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Run Keyword If">
     <arg>
      ${web_test_check}
     </arg>
     <arg>
      Setup Docker Execution Options
     </arg>
     <doc>
      Runs the given keyword with the given arguments, if ``condition`` is true.
     </doc>
     <kw library="Support_Web" name="Setup Docker Execution Options">
      <kw library="Support_Web" name="Setup Suite Metadata">
       <arg>
        ${browser}
       </arg>
       <kw library="BrowserSupport" name="Get Browser Metadata">
        <var>
         &amp;{browser_information}
        </var>
        <arg>
         browser=${browser}
        </arg>
        <doc>
         Fetches browser metadata information
:param browser: Name of the browser for which information is fetched
:param reload: Re-read the metadata based on the browser
:return: Browser metadata information, dict of format
            {"browser_version": browser version value,
             "driver_version": driver version value}
        </doc>
        <msg level="INFO" timestamp="20240502 20:12:21.943">
         &amp;{browser_information} = { browser_version=124.0.6367.118 | driver_version=124.0.6367.91  }
        </msg>
        <status endtime="20240502 20:12:21.943" starttime="20240502 20:12:15.783" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Suite Metadata">
        <arg>
         test_browser_name
        </arg>
        <arg>
         ${browser}
        </arg>
        <doc>
         Sets metadata for the current test suite.
        </doc>
        <msg level="INFO" timestamp="20240502 20:12:21.944">
         Set suite metadata 'test_browser_name' to value 'chrome'.
        </msg>
        <status endtime="20240502 20:12:21.944" starttime="20240502 20:12:21.944" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Suite Metadata">
        <arg>
         test_browser_version
        </arg>
        <arg>
         ${browser_information.browser_version}
        </arg>
        <doc>
         Sets metadata for the current test suite.
        </doc>
        <msg level="INFO" timestamp="20240502 20:12:21.946">
         Set suite metadata 'test_browser_version' to value '124.0.6367.118'.
        </msg>
        <status endtime="20240502 20:12:21.946" starttime="20240502 20:12:21.944" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Suite Metadata">
        <arg>
         test_driver_version
        </arg>
        <arg>
         ${browser_information.driver_version}
        </arg>
        <doc>
         Sets metadata for the current test suite.
        </doc>
        <msg level="INFO" timestamp="20240502 20:12:21.947">
         Set suite metadata 'test_driver_version' to value '124.0.6367.91 '.
        </msg>
        <status endtime="20240502 20:12:21.947" starttime="20240502 20:12:21.946" status="PASS"/>
       </kw>
       <status endtime="20240502 20:12:21.947" starttime="20240502 20:12:15.783" status="PASS"/>
      </kw>
      <kw library="Support_Web" name="Setup Global Docker Execution Options">
       <kw library="BuiltIn" name="Set Global Variable">
        <arg>
         ${global_browser_options}
        </arg>
        <arg>
         None
        </arg>
        <doc>
         Makes a variable available globally in all tests and suites.
        </doc>
        <msg level="INFO" timestamp="20240502 20:12:21.949">
         ${global_browser_options} = None
        </msg>
        <status endtime="20240502 20:12:21.949" starttime="20240502 20:12:21.948" status="PASS"/>
       </kw>
       <kw library="OperatingSystem" name="Get Environment Variable">
        <var>
         ${docker_check}
        </var>
        <arg>
         EXECUTION_ENVIRONMENT
        </arg>
        <arg>
         not_found
        </arg>
        <doc>
         Returns the value of an environment variable with the given name.
        </doc>
        <msg level="INFO" timestamp="20240502 20:12:21.950">
         ${docker_check} = not_found
        </msg>
        <status endtime="20240502 20:12:21.950" starttime="20240502 20:12:21.949" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Run Keyword And Return If">
        <arg>
         "${docker_check}"!="docker"
        </arg>
        <arg>
         Log
        </arg>
        <arg>
         Not executing on Docker
        </arg>
        <doc>
         Runs the specified keyword and returns from the enclosing user keyword.
        </doc>
        <kw library="BuiltIn" name="Log">
         <arg>
          Not executing on Docker
         </arg>
         <doc>
          Logs the given message with the given level.
         </doc>
         <msg level="INFO" timestamp="20240502 20:12:21.951">
          Not executing on Docker
         </msg>
         <status endtime="20240502 20:12:21.951" starttime="20240502 20:12:21.950" status="PASS"/>
        </kw>
        <msg level="INFO" timestamp="20240502 20:12:21.951">
         Returning from the enclosing user keyword.
        </msg>
        <status endtime="20240502 20:12:21.951" starttime="20240502 20:12:21.950" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Create List">
        <var>
         @{options}
        </var>
        <arg>
         --headless
        </arg>
        <arg>
         --no-sandbox
        </arg>
        <arg>
         --disable-dev-shm-usage
        </arg>
        <doc>
         Returns a list containing given items.
        </doc>
        <status endtime="20240502 20:12:21.951" starttime="20240502 20:12:21.951" status="NOT RUN"/>
       </kw>
       <kw library="BuiltIn" name="Set Global Variable">
        <arg>
         @{docker_options}
        </arg>
        <arg>
         @{options}
        </arg>
        <doc>
         Makes a variable available globally in all tests and suites.
        </doc>
        <status endtime="20240502 20:12:21.952" starttime="20240502 20:12:21.952" status="NOT RUN"/>
       </kw>
       <status endtime="20240502 20:12:21.952" starttime="20240502 20:12:21.947" status="PASS"/>
      </kw>
      <kw library="Support_Web" name="Create Webdriver for chrome preferences">
       <kw library="Support_Web" name="Update Docker Execution Options">
        <var>
         ${list_prefs}
        </var>
        <arg>
         ${list_prefs}
        </arg>
        <kw library="BuiltIn" name="Run Keyword And Return Status">
         <var>
          ${docker_check}
         </var>
         <arg>
          Variable Should Exist
         </arg>
         <arg>
          ${docker_options}
         </arg>
         <doc>
          Runs the given keyword with given arguments and returns the status as a Boolean value.
         </doc>
         <kw library="BuiltIn" name="Variable Should Exist">
          <arg>
           ${docker_options}
          </arg>
          <doc>
           Fails unless the given variable exists within the current scope.
          </doc>
          <msg level="FAIL" timestamp="20240502 20:12:21.954">
           Variable '${docker_options}' does not exist.
          </msg>
          <status endtime="20240502 20:12:21.954" starttime="20240502 20:12:21.953" status="FAIL"/>
         </kw>
         <msg level="INFO" timestamp="20240502 20:12:21.954">
          ${docker_check} = False
         </msg>
         <status endtime="20240502 20:12:21.954" starttime="20240502 20:12:21.953" status="PASS"/>
        </kw>
        <kw library="BuiltIn" name="Get Length">
         <var>
          ${list_prefs_length}
         </var>
         <arg>
          ${list_prefs}
         </arg>
         <doc>
          Returns and logs the length of the given item as an integer.
         </doc>
         <msg level="INFO" timestamp="20240502 20:12:21.954">
          Length is 1
         </msg>
         <msg level="INFO" timestamp="20240502 20:12:21.954">
          ${list_prefs_length} = 1
         </msg>
         <status endtime="20240502 20:12:21.954" starttime="20240502 20:12:21.954" status="PASS"/>
        </kw>
        <kw library="BuiltIn" name="Run Keyword If">
         <var>
          ${list_prefs}
         </var>
         <arg>
          ${docker_check} and ${list_prefs_length}&gt;0 and ${list_prefs}[0] != []
         </arg>
         <arg>
          Combine Lists
         </arg>
         <arg>
          ${list_prefs}
         </arg>
         <arg>
          ${docker_options}
         </arg>
         <arg>
          ELSE IF
         </arg>
         <arg>
          ${docker_check}
         </arg>
         <arg>
          Set Variable
         </arg>
         <arg>
          ${docker_options}
         </arg>
         <arg>
          ELSE
         </arg>
         <arg>
          Set Variable
         </arg>
         <arg>
          ${list_prefs}
         </arg>
         <doc>
          Runs the given keyword with the given arguments, if ``condition`` is true.
         </doc>
         <kw library="BuiltIn" name="Set Variable">
          <arg>
           ${list_prefs}
          </arg>
          <doc>
           Returns the given values which can then be assigned to a variables.
          </doc>
          <status endtime="20240502 20:12:21.954" starttime="20240502 20:12:21.954" status="PASS"/>
         </kw>
         <msg level="INFO" timestamp="20240502 20:12:21.954">
          ${list_prefs} = [[]]
         </msg>
         <status endtime="20240502 20:12:21.954" starttime="20240502 20:12:21.954" status="PASS"/>
        </kw>
        <msg level="INFO" timestamp="20240502 20:12:21.954">
         ${list_prefs} = [[]]
        </msg>
        <status endtime="20240502 20:12:21.954" starttime="20240502 20:12:21.952" status="PASS"/>
       </kw>
       <kw library="Support_Web" name="Create Chrome Options for download preferences">
        <var>
         ${chrome_options}
        </var>
        <kw library="BuiltIn" name="Evaluate">
         <var>
          ${chrome_options}
         </var>
         <arg>
          sys.modules['selenium.webdriver'].ChromeOptions()
         </arg>
         <arg>
          sys
         </arg>
         <doc>
          Evaluates the given expression in Python and returns the result.
         </doc>
         <msg level="INFO" timestamp="20240502 20:12:21.954">
          ${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x0000020504B9A120&gt;
         </msg>
         <status endtime="20240502 20:12:21.954" starttime="20240502 20:12:21.954" status="PASS"/>
        </kw>
        <msg level="INFO" timestamp="20240502 20:12:21.954">
         ${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x0000020504B9A120&gt;
        </msg>
        <status endtime="20240502 20:12:21.954" starttime="20240502 20:12:21.954" status="PASS"/>
       </kw>
       <kw library="Support_Web" name="Update Preferences List">
        <arg>
         ${chrome_options}
        </arg>
        <arg>
         @{list_prefs}
        </arg>
        <kw library="BuiltIn" name="Convert To String">
         <var>
          ${string_prefs}
         </var>
         <arg>
          ${list_prefs}
         </arg>
         <doc>
          Converts the given item to a Unicode string.
         </doc>
         <msg level="INFO" timestamp="20240502 20:12:21.954">
          ${string_prefs} = [[]]
         </msg>
         <status endtime="20240502 20:12:21.954" starttime="20240502 20:12:21.954" status="PASS"/>
        </kw>
        <kw library="BuiltIn" name="Return From Keyword If">
         <arg>
          ${string_prefs} == [[]]
         </arg>
         <doc>
          Returns from the enclosing user keyword if ``condition`` is true.
         </doc>
         <msg level="INFO" timestamp="20240502 20:12:21.954">
          Returning from the enclosing user keyword.
         </msg>
         <status endtime="20240502 20:12:21.954" starttime="20240502 20:12:21.954" status="PASS"/>
        </kw>
        <for flavor="IN">
         <var>
          ${preference}
         </var>
         <value>
          @{list_prefs}
         </value>
         <iter>
          <var name="${preference}"/>
          <kw library="BuiltIn" name="Call Method">
           <arg>
            ${chrome_options}
           </arg>
           <arg>
            add_argument
           </arg>
           <arg>
            ${preference}
           </arg>
           <doc>
            Calls the named method of the given object with the provided arguments.
           </doc>
           <status endtime="20240502 20:12:21.954" starttime="20240502 20:12:21.954" status="NOT RUN"/>
          </kw>
          <status endtime="20240502 20:12:21.954" starttime="20240502 20:12:21.954" status="NOT RUN"/>
         </iter>
         <status endtime="20240502 20:12:21.954" starttime="20240502 20:12:21.954" status="NOT RUN"/>
        </for>
        <status endtime="20240502 20:12:21.954" starttime="20240502 20:12:21.954" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Call Method">
        <arg>
         ${chrome_options}
        </arg>
        <arg>
         add_experimental_option
        </arg>
        <arg>
         prefs
        </arg>
        <arg>
         ${kw_prefs}
        </arg>
        <doc>
         Calls the named method of the given object with the provided arguments.
        </doc>
        <status endtime="20240502 20:12:21.954" starttime="20240502 20:12:21.954" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Global Variable">
        <arg>
         ${global_browser_options}
        </arg>
        <arg>
         ${chrome options}
        </arg>
        <doc>
         Makes a variable available globally in all tests and suites.
        </doc>
        <msg level="INFO" timestamp="20240502 20:12:21.954">
         ${global_browser_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x0000020504B9A120&gt;
        </msg>
        <status endtime="20240502 20:12:21.954" starttime="20240502 20:12:21.954" status="PASS"/>
       </kw>
       <status endtime="20240502 20:12:21.954" starttime="20240502 20:12:21.952" status="PASS"/>
      </kw>
      <status endtime="20240502 20:12:21.954" starttime="20240502 20:12:15.782" status="PASS"/>
     </kw>
     <status endtime="20240502 20:12:21.954" starttime="20240502 20:12:15.782" status="PASS"/>
    </kw>
    <status endtime="20240502 20:12:21.954" starttime="20240502 20:12:15.781" status="PASS"/>
   </kw>
   <kw library="BuiltIn" name="Set Suite Metadata">
    <arg>
     environment
    </arg>
    <arg>
     ${test_server}
    </arg>
    <doc>
     Sets metadata for the current test suite.
    </doc>
    <msg level="INFO" timestamp="20240502 20:12:21.954">
     Set suite metadata 'environment' to value 'Dev'.
    </msg>
    <status endtime="20240502 20:12:21.954" starttime="20240502 20:12:21.954" status="PASS"/>
   </kw>
   <kw library="BuiltIn" name="Set Variable">
    <var>
     ${d.test_server}
    </var>
    <arg>
     ${test_server}
    </arg>
    <doc>
     Returns the given values which can then be assigned to a variables.
    </doc>
    <msg level="INFO" timestamp="20240502 20:12:15.861">
     ${d.test_server} = Dev
    </msg>
    <status endtime="20240502 20:12:15.861" starttime="20240502 20:12:15.860" status="PASS"/>
   </kw>
   <kw library="Support" name="Reset screenshot count variable">
    <kw library="BuiltIn" name="Set Variable">
     <var>
      ${screenshotCount}
     </var>
     <arg>
      ${PABOTQUEUEINDEX}_1
     </arg>
     <doc>
      Returns the given values which can then be assigned to a variables.
     </doc>
     <msg level="INFO" timestamp="20240502 20:12:15.862">
      ${screenshotCount} = 1_1
     </msg>
     <status endtime="20240502 20:12:15.862" starttime="20240502 20:12:15.861" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Set Global Variable">
     <arg>
      ${screenshotCount}
     </arg>
     <doc>
      Makes a variable available globally in all tests and suites.
     </doc>
     <msg level="INFO" timestamp="20240502 20:12:15.863">
      ${screenshotCount} = 1_1
     </msg>
     <status endtime="20240502 20:12:15.863" starttime="20240502 20:12:15.862" status="PASS"/>
    </kw>
    <kw library="Support" name="Set up screenshot directory">
     <kw library="OperatingSystem" name="Create Directory">
      <arg>
       ${OUTPUTDIR}${/}${wvar('screenshot_dir')}
      </arg>
      <doc>
       Creates the specified directory.
      </doc>
      <msg level="INFO" timestamp="20240502 20:12:15.864">
       Web.Dev.screenshot_dir: Screenshot
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:12:15.870">
       Created directory '&lt;a href="file://C:\SAP_Testing\SAPtesting\Output\pabot_results\1\Screenshot"&gt;C:\SAP_Testing\SAPtesting\Output\pabot_results\1\Screenshot&lt;/a&gt;'.
      </msg>
      <status endtime="20240502 20:12:15.870" starttime="20240502 20:12:15.863" status="PASS"/>
     </kw>
     <status endtime="20240502 20:12:15.870" starttime="20240502 20:12:15.863" status="PASS"/>
    </kw>
    <status endtime="20240502 20:12:15.870" starttime="20240502 20:12:15.861" status="PASS"/>
   </kw>
   <kw library="BuiltIn" name="Set Global Variable">
    <arg>
     ${screenshot_taking}
    </arg>
    <arg>
     ${True}
    </arg>
    <doc>
     Makes a variable available globally in all tests and suites.
    </doc>
    <msg level="INFO" timestamp="20240502 20:12:15.871">
     ${screenshot_taking} = True
    </msg>
    <status endtime="20240502 20:12:15.871" starttime="20240502 20:12:15.871" status="PASS"/>
   </kw>
   <kw library="Support" name="Setup linux execution">
    <kw library="BuiltIn" name="Run Keyword And Return Status">
     <var>
      ${web_test_check}
     </var>
     <arg>
      Variable Should Exist
     </arg>
     <arg>
      ${web_test}
     </arg>
     <doc>
      Runs the given keyword with given arguments and returns the status as a Boolean value.
     </doc>
     <kw library="BuiltIn" name="Variable Should Exist">
      <arg>
       ${web_test}
      </arg>
      <doc>
       Fails unless the given variable exists within the current scope.
      </doc>
      <status endtime="20240502 20:12:15.872" starttime="20240502 20:12:15.872" status="PASS"/>
     </kw>
     <msg level="INFO" timestamp="20240502 20:12:15.873">
      ${web_test_check} = True
     </msg>
     <status endtime="20240502 20:12:15.873" starttime="20240502 20:12:15.872" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Run Keyword If">
     <arg>
      ${web_test_check}
     </arg>
     <arg>
      Setup Docker Execution Options
     </arg>
     <doc>
      Runs the given keyword with the given arguments, if ``condition`` is true.
     </doc>
     <kw library="Support_Web" name="Setup Docker Execution Options">
      <kw library="Support_Web" name="Setup Suite Metadata">
       <arg>
        ${browser}
       </arg>
       <kw library="BrowserSupport" name="Get Browser Metadata">
        <var>
         &amp;{browser_information}
        </var>
        <arg>
         browser=${browser}
        </arg>
        <doc>
         Fetches browser metadata information
:param browser: Name of the browser for which information is fetched
:param reload: Re-read the metadata based on the browser
:return: Browser metadata information, dict of format
            {"browser_version": browser version value,
             "driver_version": driver version value}
        </doc>
        <msg level="INFO" timestamp="20240502 20:12:21.986">
         &amp;{browser_information} = { browser_version=124.0.6367.118 | driver_version=124.0.6367.91  }
        </msg>
        <status endtime="20240502 20:12:21.986" starttime="20240502 20:12:15.874" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Suite Metadata">
        <arg>
         test_browser_name
        </arg>
        <arg>
         ${browser}
        </arg>
        <doc>
         Sets metadata for the current test suite.
        </doc>
        <msg level="INFO" timestamp="20240502 20:12:21.986">
         Set suite metadata 'test_browser_name' to value 'chrome'.
        </msg>
        <status endtime="20240502 20:12:21.986" starttime="20240502 20:12:21.986" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Suite Metadata">
        <arg>
         test_browser_version
        </arg>
        <arg>
         ${browser_information.browser_version}
        </arg>
        <doc>
         Sets metadata for the current test suite.
        </doc>
        <msg level="INFO" timestamp="20240502 20:12:21.986">
         Set suite metadata 'test_browser_version' to value '124.0.6367.118'.
        </msg>
        <status endtime="20240502 20:12:21.986" starttime="20240502 20:12:21.986" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Suite Metadata">
        <arg>
         test_driver_version
        </arg>
        <arg>
         ${browser_information.driver_version}
        </arg>
        <doc>
         Sets metadata for the current test suite.
        </doc>
        <msg level="INFO" timestamp="20240502 20:12:21.986">
         Set suite metadata 'test_driver_version' to value '124.0.6367.91 '.
        </msg>
        <status endtime="20240502 20:12:21.986" starttime="20240502 20:12:21.986" status="PASS"/>
       </kw>
       <status endtime="20240502 20:12:21.986" starttime="20240502 20:12:15.873" status="PASS"/>
      </kw>
      <kw library="Support_Web" name="Setup Global Docker Execution Options">
       <kw library="BuiltIn" name="Set Global Variable">
        <arg>
         ${global_browser_options}
        </arg>
        <arg>
         None
        </arg>
        <doc>
         Makes a variable available globally in all tests and suites.
        </doc>
        <msg level="INFO" timestamp="20240502 20:12:21.986">
         ${global_browser_options} = None
        </msg>
        <status endtime="20240502 20:12:21.986" starttime="20240502 20:12:21.986" status="PASS"/>
       </kw>
       <kw library="OperatingSystem" name="Get Environment Variable">
        <var>
         ${docker_check}
        </var>
        <arg>
         EXECUTION_ENVIRONMENT
        </arg>
        <arg>
         not_found
        </arg>
        <doc>
         Returns the value of an environment variable with the given name.
        </doc>
        <msg level="INFO" timestamp="20240502 20:12:21.986">
         ${docker_check} = not_found
        </msg>
        <status endtime="20240502 20:12:21.986" starttime="20240502 20:12:21.986" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Run Keyword And Return If">
        <arg>
         "${docker_check}"!="docker"
        </arg>
        <arg>
         Log
        </arg>
        <arg>
         Not executing on Docker
        </arg>
        <doc>
         Runs the specified keyword and returns from the enclosing user keyword.
        </doc>
        <kw library="BuiltIn" name="Log">
         <arg>
          Not executing on Docker
         </arg>
         <doc>
          Logs the given message with the given level.
         </doc>
         <msg level="INFO" timestamp="20240502 20:12:21.986">
          Not executing on Docker
         </msg>
         <status endtime="20240502 20:12:21.986" starttime="20240502 20:12:21.986" status="PASS"/>
        </kw>
        <msg level="INFO" timestamp="20240502 20:12:21.986">
         Returning from the enclosing user keyword.
        </msg>
        <status endtime="20240502 20:12:21.986" starttime="20240502 20:12:21.986" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Create List">
        <var>
         @{options}
        </var>
        <arg>
         --headless
        </arg>
        <arg>
         --no-sandbox
        </arg>
        <arg>
         --disable-dev-shm-usage
        </arg>
        <doc>
         Returns a list containing given items.
        </doc>
        <status endtime="20240502 20:12:21.986" starttime="20240502 20:12:21.986" status="NOT RUN"/>
       </kw>
       <kw library="BuiltIn" name="Set Global Variable">
        <arg>
         @{docker_options}
        </arg>
        <arg>
         @{options}
        </arg>
        <doc>
         Makes a variable available globally in all tests and suites.
        </doc>
        <status endtime="20240502 20:12:21.986" starttime="20240502 20:12:21.986" status="NOT RUN"/>
       </kw>
       <status endtime="20240502 20:12:21.986" starttime="20240502 20:12:21.986" status="PASS"/>
      </kw>
      <kw library="Support_Web" name="Create Webdriver for chrome preferences">
       <kw library="Support_Web" name="Update Docker Execution Options">
        <var>
         ${list_prefs}
        </var>
        <arg>
         ${list_prefs}
        </arg>
        <kw library="BuiltIn" name="Run Keyword And Return Status">
         <var>
          ${docker_check}
         </var>
         <arg>
          Variable Should Exist
         </arg>
         <arg>
          ${docker_options}
         </arg>
         <doc>
          Runs the given keyword with given arguments and returns the status as a Boolean value.
         </doc>
         <kw library="BuiltIn" name="Variable Should Exist">
          <arg>
           ${docker_options}
          </arg>
          <doc>
           Fails unless the given variable exists within the current scope.
          </doc>
          <msg level="FAIL" timestamp="20240502 20:12:21.986">
           Variable '${docker_options}' does not exist.
          </msg>
          <status endtime="20240502 20:12:21.986" starttime="20240502 20:12:21.986" status="FAIL"/>
         </kw>
         <msg level="INFO" timestamp="20240502 20:12:21.986">
          ${docker_check} = False
         </msg>
         <status endtime="20240502 20:12:21.986" starttime="20240502 20:12:21.986" status="PASS"/>
        </kw>
        <kw library="BuiltIn" name="Get Length">
         <var>
          ${list_prefs_length}
         </var>
         <arg>
          ${list_prefs}
         </arg>
         <doc>
          Returns and logs the length of the given item as an integer.
         </doc>
         <msg level="INFO" timestamp="20240502 20:12:21.986">
          Length is 1
         </msg>
         <msg level="INFO" timestamp="20240502 20:12:21.986">
          ${list_prefs_length} = 1
         </msg>
         <status endtime="20240502 20:12:21.986" starttime="20240502 20:12:21.986" status="PASS"/>
        </kw>
        <kw library="BuiltIn" name="Run Keyword If">
         <var>
          ${list_prefs}
         </var>
         <arg>
          ${docker_check} and ${list_prefs_length}&gt;0 and ${list_prefs}[0] != []
         </arg>
         <arg>
          Combine Lists
         </arg>
         <arg>
          ${list_prefs}
         </arg>
         <arg>
          ${docker_options}
         </arg>
         <arg>
          ELSE IF
         </arg>
         <arg>
          ${docker_check}
         </arg>
         <arg>
          Set Variable
         </arg>
         <arg>
          ${docker_options}
         </arg>
         <arg>
          ELSE
         </arg>
         <arg>
          Set Variable
         </arg>
         <arg>
          ${list_prefs}
         </arg>
         <doc>
          Runs the given keyword with the given arguments, if ``condition`` is true.
         </doc>
         <kw library="BuiltIn" name="Set Variable">
          <arg>
           ${list_prefs}
          </arg>
          <doc>
           Returns the given values which can then be assigned to a variables.
          </doc>
          <status endtime="20240502 20:12:21.986" starttime="20240502 20:12:21.986" status="PASS"/>
         </kw>
         <msg level="INFO" timestamp="20240502 20:12:21.986">
          ${list_prefs} = [[]]
         </msg>
         <status endtime="20240502 20:12:21.986" starttime="20240502 20:12:21.986" status="PASS"/>
        </kw>
        <msg level="INFO" timestamp="20240502 20:12:21.986">
         ${list_prefs} = [[]]
        </msg>
        <status endtime="20240502 20:12:21.986" starttime="20240502 20:12:21.986" status="PASS"/>
       </kw>
       <kw library="Support_Web" name="Create Chrome Options for download preferences">
        <var>
         ${chrome_options}
        </var>
        <kw library="BuiltIn" name="Evaluate">
         <var>
          ${chrome_options}
         </var>
         <arg>
          sys.modules['selenium.webdriver'].ChromeOptions()
         </arg>
         <arg>
          sys
         </arg>
         <doc>
          Evaluates the given expression in Python and returns the result.
         </doc>
         <msg level="INFO" timestamp="20240502 20:12:21.986">
          ${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x00000206650170E0&gt;
         </msg>
         <status endtime="20240502 20:12:21.986" starttime="20240502 20:12:21.986" status="PASS"/>
        </kw>
        <msg level="INFO" timestamp="20240502 20:12:22.001">
         ${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x00000206650170E0&gt;
        </msg>
        <status endtime="20240502 20:12:22.001" starttime="20240502 20:12:21.986" status="PASS"/>
       </kw>
       <kw library="Support_Web" name="Update Preferences List">
        <arg>
         ${chrome_options}
        </arg>
        <arg>
         @{list_prefs}
        </arg>
        <kw library="BuiltIn" name="Convert To String">
         <var>
          ${string_prefs}
         </var>
         <arg>
          ${list_prefs}
         </arg>
         <doc>
          Converts the given item to a Unicode string.
         </doc>
         <msg level="INFO" timestamp="20240502 20:12:22.001">
          ${string_prefs} = [[]]
         </msg>
         <status endtime="20240502 20:12:22.001" starttime="20240502 20:12:22.001" status="PASS"/>
        </kw>
        <kw library="BuiltIn" name="Return From Keyword If">
         <arg>
          ${string_prefs} == [[]]
         </arg>
         <doc>
          Returns from the enclosing user keyword if ``condition`` is true.
         </doc>
         <msg level="INFO" timestamp="20240502 20:12:22.001">
          Returning from the enclosing user keyword.
         </msg>
         <status endtime="20240502 20:12:22.001" starttime="20240502 20:12:22.001" status="PASS"/>
        </kw>
        <for flavor="IN">
         <var>
          ${preference}
         </var>
         <value>
          @{list_prefs}
         </value>
         <iter>
          <var name="${preference}"/>
          <kw library="BuiltIn" name="Call Method">
           <arg>
            ${chrome_options}
           </arg>
           <arg>
            add_argument
           </arg>
           <arg>
            ${preference}
           </arg>
           <doc>
            Calls the named method of the given object with the provided arguments.
           </doc>
           <status endtime="20240502 20:12:22.001" starttime="20240502 20:12:22.001" status="NOT RUN"/>
          </kw>
          <status endtime="20240502 20:12:22.001" starttime="20240502 20:12:22.001" status="NOT RUN"/>
         </iter>
         <status endtime="20240502 20:12:22.001" starttime="20240502 20:12:22.001" status="NOT RUN"/>
        </for>
        <status endtime="20240502 20:12:22.001" starttime="20240502 20:12:22.001" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Call Method">
        <arg>
         ${chrome_options}
        </arg>
        <arg>
         add_experimental_option
        </arg>
        <arg>
         prefs
        </arg>
        <arg>
         ${kw_prefs}
        </arg>
        <doc>
         Calls the named method of the given object with the provided arguments.
        </doc>
        <status endtime="20240502 20:12:22.001" starttime="20240502 20:12:22.001" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Global Variable">
        <arg>
         ${global_browser_options}
        </arg>
        <arg>
         ${chrome options}
        </arg>
        <doc>
         Makes a variable available globally in all tests and suites.
        </doc>
        <msg level="INFO" timestamp="20240502 20:12:22.001">
         ${global_browser_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x00000206650170E0&gt;
        </msg>
        <status endtime="20240502 20:12:22.001" starttime="20240502 20:12:22.001" status="PASS"/>
       </kw>
       <status endtime="20240502 20:12:22.001" starttime="20240502 20:12:21.986" status="PASS"/>
      </kw>
      <status endtime="20240502 20:12:22.001" starttime="20240502 20:12:15.873" status="PASS"/>
     </kw>
     <status endtime="20240502 20:12:22.001" starttime="20240502 20:12:15.873" status="PASS"/>
    </kw>
    <status endtime="20240502 20:12:22.001" starttime="20240502 20:12:15.871" status="PASS"/>
   </kw>
   <kw library="BuiltIn" name="Set Suite Metadata">
    <arg>
     environment
    </arg>
    <arg>
     ${test_server}
    </arg>
    <doc>
     Sets metadata for the current test suite.
    </doc>
    <msg level="INFO" timestamp="20240502 20:12:22.001">
     Set suite metadata 'environment' to value 'Dev'.
    </msg>
    <status endtime="20240502 20:12:22.001" starttime="20240502 20:12:22.001" status="PASS"/>
   </kw>
   <kw library="BuiltIn" name="Set Variable">
    <var>
     ${d.test_server}
    </var>
    <arg>
     ${test_server}
    </arg>
    <doc>
     Returns the given values which can then be assigned to a variables.
    </doc>
    <msg level="INFO" timestamp="20240502 20:12:58.802">
     ${d.test_server} = Dev
    </msg>
    <status endtime="20240502 20:12:58.802" starttime="20240502 20:12:58.802" status="PASS"/>
   </kw>
   <kw library="Support" name="Reset screenshot count variable">
    <kw library="BuiltIn" name="Set Variable">
     <var>
      ${screenshotCount}
     </var>
     <arg>
      ${PABOTQUEUEINDEX}_1
     </arg>
     <doc>
      Returns the given values which can then be assigned to a variables.
     </doc>
     <msg level="INFO" timestamp="20240502 20:12:58.802">
      ${screenshotCount} = 2_1
     </msg>
     <status endtime="20240502 20:12:58.802" starttime="20240502 20:12:58.802" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Set Global Variable">
     <arg>
      ${screenshotCount}
     </arg>
     <doc>
      Makes a variable available globally in all tests and suites.
     </doc>
     <msg level="INFO" timestamp="20240502 20:12:58.802">
      ${screenshotCount} = 2_1
     </msg>
     <status endtime="20240502 20:12:58.802" starttime="20240502 20:12:58.802" status="PASS"/>
    </kw>
    <kw library="Support" name="Set up screenshot directory">
     <kw library="OperatingSystem" name="Create Directory">
      <arg>
       ${OUTPUTDIR}${/}${wvar('screenshot_dir')}
      </arg>
      <doc>
       Creates the specified directory.
      </doc>
      <msg level="INFO" timestamp="20240502 20:12:58.802">
       Web.Dev.screenshot_dir: Screenshot
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:12:58.815">
       Created directory '&lt;a href="file://C:\SAP_Testing\SAPtesting\Output\pabot_results\2\Screenshot"&gt;C:\SAP_Testing\SAPtesting\Output\pabot_results\2\Screenshot&lt;/a&gt;'.
      </msg>
      <status endtime="20240502 20:12:58.815" starttime="20240502 20:12:58.802" status="PASS"/>
     </kw>
     <status endtime="20240502 20:12:58.815" starttime="20240502 20:12:58.802" status="PASS"/>
    </kw>
    <status endtime="20240502 20:12:58.816" starttime="20240502 20:12:58.802" status="PASS"/>
   </kw>
   <kw library="BuiltIn" name="Set Global Variable">
    <arg>
     ${screenshot_taking}
    </arg>
    <arg>
     ${True}
    </arg>
    <doc>
     Makes a variable available globally in all tests and suites.
    </doc>
    <msg level="INFO" timestamp="20240502 20:12:58.816">
     ${screenshot_taking} = True
    </msg>
    <status endtime="20240502 20:12:58.816" starttime="20240502 20:12:58.816" status="PASS"/>
   </kw>
   <kw library="Support" name="Setup linux execution">
    <kw library="BuiltIn" name="Run Keyword And Return Status">
     <var>
      ${web_test_check}
     </var>
     <arg>
      Variable Should Exist
     </arg>
     <arg>
      ${web_test}
     </arg>
     <doc>
      Runs the given keyword with given arguments and returns the status as a Boolean value.
     </doc>
     <kw library="BuiltIn" name="Variable Should Exist">
      <arg>
       ${web_test}
      </arg>
      <doc>
       Fails unless the given variable exists within the current scope.
      </doc>
      <status endtime="20240502 20:12:58.818" starttime="20240502 20:12:58.817" status="PASS"/>
     </kw>
     <msg level="INFO" timestamp="20240502 20:12:58.818">
      ${web_test_check} = True
     </msg>
     <status endtime="20240502 20:12:58.818" starttime="20240502 20:12:58.817" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Run Keyword If">
     <arg>
      ${web_test_check}
     </arg>
     <arg>
      Setup Docker Execution Options
     </arg>
     <doc>
      Runs the given keyword with the given arguments, if ``condition`` is true.
     </doc>
     <kw library="Support_Web" name="Setup Docker Execution Options">
      <kw library="Support_Web" name="Setup Suite Metadata">
       <arg>
        ${browser}
       </arg>
       <kw library="BrowserSupport" name="Get Browser Metadata">
        <var>
         &amp;{browser_information}
        </var>
        <arg>
         browser=${browser}
        </arg>
        <doc>
         Fetches browser metadata information
:param browser: Name of the browser for which information is fetched
:param reload: Re-read the metadata based on the browser
:return: Browser metadata information, dict of format
            {"browser_version": browser version value,
             "driver_version": driver version value}
        </doc>
        <msg level="INFO" timestamp="20240502 20:13:03.504">
         &amp;{browser_information} = { browser_version=124.0.6367.118 | driver_version=124.0.6367.91  }
        </msg>
        <status endtime="20240502 20:13:03.504" starttime="20240502 20:12:58.819" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Suite Metadata">
        <arg>
         test_browser_name
        </arg>
        <arg>
         ${browser}
        </arg>
        <doc>
         Sets metadata for the current test suite.
        </doc>
        <msg level="INFO" timestamp="20240502 20:13:03.506">
         Set suite metadata 'test_browser_name' to value 'chrome'.
        </msg>
        <status endtime="20240502 20:13:03.506" starttime="20240502 20:13:03.506" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Suite Metadata">
        <arg>
         test_browser_version
        </arg>
        <arg>
         ${browser_information.browser_version}
        </arg>
        <doc>
         Sets metadata for the current test suite.
        </doc>
        <msg level="INFO" timestamp="20240502 20:13:03.508">
         Set suite metadata 'test_browser_version' to value '124.0.6367.118'.
        </msg>
        <status endtime="20240502 20:13:03.508" starttime="20240502 20:13:03.507" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Suite Metadata">
        <arg>
         test_driver_version
        </arg>
        <arg>
         ${browser_information.driver_version}
        </arg>
        <doc>
         Sets metadata for the current test suite.
        </doc>
        <msg level="INFO" timestamp="20240502 20:13:03.509">
         Set suite metadata 'test_driver_version' to value '124.0.6367.91 '.
        </msg>
        <status endtime="20240502 20:13:03.509" starttime="20240502 20:13:03.508" status="PASS"/>
       </kw>
       <status endtime="20240502 20:13:03.509" starttime="20240502 20:12:58.819" status="PASS"/>
      </kw>
      <kw library="Support_Web" name="Setup Global Docker Execution Options">
       <kw library="BuiltIn" name="Set Global Variable">
        <arg>
         ${global_browser_options}
        </arg>
        <arg>
         None
        </arg>
        <doc>
         Makes a variable available globally in all tests and suites.
        </doc>
        <msg level="INFO" timestamp="20240502 20:13:03.511">
         ${global_browser_options} = None
        </msg>
        <status endtime="20240502 20:13:03.511" starttime="20240502 20:13:03.510" status="PASS"/>
       </kw>
       <kw library="OperatingSystem" name="Get Environment Variable">
        <var>
         ${docker_check}
        </var>
        <arg>
         EXECUTION_ENVIRONMENT
        </arg>
        <arg>
         not_found
        </arg>
        <doc>
         Returns the value of an environment variable with the given name.
        </doc>
        <msg level="INFO" timestamp="20240502 20:13:03.511">
         ${docker_check} = not_found
        </msg>
        <status endtime="20240502 20:13:03.511" starttime="20240502 20:13:03.511" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Run Keyword And Return If">
        <arg>
         "${docker_check}"!="docker"
        </arg>
        <arg>
         Log
        </arg>
        <arg>
         Not executing on Docker
        </arg>
        <doc>
         Runs the specified keyword and returns from the enclosing user keyword.
        </doc>
        <kw library="BuiltIn" name="Log">
         <arg>
          Not executing on Docker
         </arg>
         <doc>
          Logs the given message with the given level.
         </doc>
         <msg level="INFO" timestamp="20240502 20:13:03.513">
          Not executing on Docker
         </msg>
         <status endtime="20240502 20:13:03.513" starttime="20240502 20:13:03.513" status="PASS"/>
        </kw>
        <msg level="INFO" timestamp="20240502 20:13:03.513">
         Returning from the enclosing user keyword.
        </msg>
        <status endtime="20240502 20:13:03.513" starttime="20240502 20:13:03.511" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Create List">
        <var>
         @{options}
        </var>
        <arg>
         --headless
        </arg>
        <arg>
         --no-sandbox
        </arg>
        <arg>
         --disable-dev-shm-usage
        </arg>
        <doc>
         Returns a list containing given items.
        </doc>
        <status endtime="20240502 20:13:03.514" starttime="20240502 20:13:03.513" status="NOT RUN"/>
       </kw>
       <kw library="BuiltIn" name="Set Global Variable">
        <arg>
         @{docker_options}
        </arg>
        <arg>
         @{options}
        </arg>
        <doc>
         Makes a variable available globally in all tests and suites.
        </doc>
        <status endtime="20240502 20:13:03.514" starttime="20240502 20:13:03.514" status="NOT RUN"/>
       </kw>
       <status endtime="20240502 20:13:03.514" starttime="20240502 20:13:03.509" status="PASS"/>
      </kw>
      <kw library="Support_Web" name="Create Webdriver for chrome preferences">
       <kw library="Support_Web" name="Update Docker Execution Options">
        <var>
         ${list_prefs}
        </var>
        <arg>
         ${list_prefs}
        </arg>
        <kw library="BuiltIn" name="Run Keyword And Return Status">
         <var>
          ${docker_check}
         </var>
         <arg>
          Variable Should Exist
         </arg>
         <arg>
          ${docker_options}
         </arg>
         <doc>
          Runs the given keyword with given arguments and returns the status as a Boolean value.
         </doc>
         <kw library="BuiltIn" name="Variable Should Exist">
          <arg>
           ${docker_options}
          </arg>
          <doc>
           Fails unless the given variable exists within the current scope.
          </doc>
          <msg level="FAIL" timestamp="20240502 20:13:03.518">
           Variable '${docker_options}' does not exist.
          </msg>
          <status endtime="20240502 20:13:03.518" starttime="20240502 20:13:03.514" status="FAIL"/>
         </kw>
         <msg level="INFO" timestamp="20240502 20:13:03.518">
          ${docker_check} = False
         </msg>
         <status endtime="20240502 20:13:03.518" starttime="20240502 20:13:03.514" status="PASS"/>
        </kw>
        <kw library="BuiltIn" name="Get Length">
         <var>
          ${list_prefs_length}
         </var>
         <arg>
          ${list_prefs}
         </arg>
         <doc>
          Returns and logs the length of the given item as an integer.
         </doc>
         <msg level="INFO" timestamp="20240502 20:13:03.519">
          Length is 1
         </msg>
         <msg level="INFO" timestamp="20240502 20:13:03.519">
          ${list_prefs_length} = 1
         </msg>
         <status endtime="20240502 20:13:03.519" starttime="20240502 20:13:03.519" status="PASS"/>
        </kw>
        <kw library="BuiltIn" name="Run Keyword If">
         <var>
          ${list_prefs}
         </var>
         <arg>
          ${docker_check} and ${list_prefs_length}&gt;0 and ${list_prefs}[0] != []
         </arg>
         <arg>
          Combine Lists
         </arg>
         <arg>
          ${list_prefs}
         </arg>
         <arg>
          ${docker_options}
         </arg>
         <arg>
          ELSE IF
         </arg>
         <arg>
          ${docker_check}
         </arg>
         <arg>
          Set Variable
         </arg>
         <arg>
          ${docker_options}
         </arg>
         <arg>
          ELSE
         </arg>
         <arg>
          Set Variable
         </arg>
         <arg>
          ${list_prefs}
         </arg>
         <doc>
          Runs the given keyword with the given arguments, if ``condition`` is true.
         </doc>
         <kw library="BuiltIn" name="Set Variable">
          <arg>
           ${list_prefs}
          </arg>
          <doc>
           Returns the given values which can then be assigned to a variables.
          </doc>
          <status endtime="20240502 20:13:03.519" starttime="20240502 20:13:03.519" status="PASS"/>
         </kw>
         <msg level="INFO" timestamp="20240502 20:13:03.519">
          ${list_prefs} = [[]]
         </msg>
         <status endtime="20240502 20:13:03.520" starttime="20240502 20:13:03.519" status="PASS"/>
        </kw>
        <msg level="INFO" timestamp="20240502 20:13:03.520">
         ${list_prefs} = [[]]
        </msg>
        <status endtime="20240502 20:13:03.520" starttime="20240502 20:13:03.514" status="PASS"/>
       </kw>
       <kw library="Support_Web" name="Create Chrome Options for download preferences">
        <var>
         ${chrome_options}
        </var>
        <kw library="BuiltIn" name="Evaluate">
         <var>
          ${chrome_options}
         </var>
         <arg>
          sys.modules['selenium.webdriver'].ChromeOptions()
         </arg>
         <arg>
          sys
         </arg>
         <doc>
          Evaluates the given expression in Python and returns the result.
         </doc>
         <msg level="INFO" timestamp="20240502 20:13:03.521">
          ${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x000001FDA59A9340&gt;
         </msg>
         <status endtime="20240502 20:13:03.521" starttime="20240502 20:13:03.520" status="PASS"/>
        </kw>
        <msg level="INFO" timestamp="20240502 20:13:03.521">
         ${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x000001FDA59A9340&gt;
        </msg>
        <status endtime="20240502 20:13:03.521" starttime="20240502 20:13:03.520" status="PASS"/>
       </kw>
       <kw library="Support_Web" name="Update Preferences List">
        <arg>
         ${chrome_options}
        </arg>
        <arg>
         @{list_prefs}
        </arg>
        <kw library="BuiltIn" name="Convert To String">
         <var>
          ${string_prefs}
         </var>
         <arg>
          ${list_prefs}
         </arg>
         <doc>
          Converts the given item to a Unicode string.
         </doc>
         <msg level="INFO" timestamp="20240502 20:13:03.522">
          ${string_prefs} = [[]]
         </msg>
         <status endtime="20240502 20:13:03.522" starttime="20240502 20:13:03.521" status="PASS"/>
        </kw>
        <kw library="BuiltIn" name="Return From Keyword If">
         <arg>
          ${string_prefs} == [[]]
         </arg>
         <doc>
          Returns from the enclosing user keyword if ``condition`` is true.
         </doc>
         <msg level="INFO" timestamp="20240502 20:13:03.522">
          Returning from the enclosing user keyword.
         </msg>
         <status endtime="20240502 20:13:03.522" starttime="20240502 20:13:03.522" status="PASS"/>
        </kw>
        <for flavor="IN">
         <var>
          ${preference}
         </var>
         <value>
          @{list_prefs}
         </value>
         <iter>
          <var name="${preference}"/>
          <kw library="BuiltIn" name="Call Method">
           <arg>
            ${chrome_options}
           </arg>
           <arg>
            add_argument
           </arg>
           <arg>
            ${preference}
           </arg>
           <doc>
            Calls the named method of the given object with the provided arguments.
           </doc>
           <status endtime="20240502 20:13:03.523" starttime="20240502 20:13:03.523" status="NOT RUN"/>
          </kw>
          <status endtime="20240502 20:13:03.523" starttime="20240502 20:13:03.523" status="NOT RUN"/>
         </iter>
         <status endtime="20240502 20:13:03.523" starttime="20240502 20:13:03.522" status="NOT RUN"/>
        </for>
        <status endtime="20240502 20:13:03.523" starttime="20240502 20:13:03.521" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Call Method">
        <arg>
         ${chrome_options}
        </arg>
        <arg>
         add_experimental_option
        </arg>
        <arg>
         prefs
        </arg>
        <arg>
         ${kw_prefs}
        </arg>
        <doc>
         Calls the named method of the given object with the provided arguments.
        </doc>
        <status endtime="20240502 20:13:03.524" starttime="20240502 20:13:03.524" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Global Variable">
        <arg>
         ${global_browser_options}
        </arg>
        <arg>
         ${chrome options}
        </arg>
        <doc>
         Makes a variable available globally in all tests and suites.
        </doc>
        <msg level="INFO" timestamp="20240502 20:13:03.524">
         ${global_browser_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x000001FDA59A9340&gt;
        </msg>
        <status endtime="20240502 20:13:03.524" starttime="20240502 20:13:03.524" status="PASS"/>
       </kw>
       <status endtime="20240502 20:13:03.525" starttime="20240502 20:13:03.514" status="PASS"/>
      </kw>
      <status endtime="20240502 20:13:03.525" starttime="20240502 20:12:58.819" status="PASS"/>
     </kw>
     <status endtime="20240502 20:13:03.525" starttime="20240502 20:12:58.818" status="PASS"/>
    </kw>
    <status endtime="20240502 20:13:03.525" starttime="20240502 20:12:58.816" status="PASS"/>
   </kw>
   <kw library="BuiltIn" name="Set Suite Metadata">
    <arg>
     environment
    </arg>
    <arg>
     ${test_server}
    </arg>
    <doc>
     Sets metadata for the current test suite.
    </doc>
    <msg level="INFO" timestamp="20240502 20:13:03.526">
     Set suite metadata 'environment' to value 'Dev'.
    </msg>
    <status endtime="20240502 20:13:03.526" starttime="20240502 20:13:03.525" status="PASS"/>
   </kw>
   <kw library="BuiltIn" name="Set Variable">
    <var>
     ${d.test_server}
    </var>
    <arg>
     ${test_server}
    </arg>
    <doc>
     Returns the given values which can then be assigned to a variables.
    </doc>
    <msg level="INFO" timestamp="20240502 20:13:40.837">
     ${d.test_server} = Dev
    </msg>
    <status endtime="20240502 20:13:40.837" starttime="20240502 20:13:40.837" status="PASS"/>
   </kw>
   <kw library="Support" name="Reset screenshot count variable">
    <kw library="BuiltIn" name="Set Variable">
     <var>
      ${screenshotCount}
     </var>
     <arg>
      ${PABOTQUEUEINDEX}_1
     </arg>
     <doc>
      Returns the given values which can then be assigned to a variables.
     </doc>
     <msg level="INFO" timestamp="20240502 20:13:40.838">
      ${screenshotCount} = 3_1
     </msg>
     <status endtime="20240502 20:13:40.839" starttime="20240502 20:13:40.838" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Set Global Variable">
     <arg>
      ${screenshotCount}
     </arg>
     <doc>
      Makes a variable available globally in all tests and suites.
     </doc>
     <msg level="INFO" timestamp="20240502 20:13:40.839">
      ${screenshotCount} = 3_1
     </msg>
     <status endtime="20240502 20:13:40.839" starttime="20240502 20:13:40.839" status="PASS"/>
    </kw>
    <kw library="Support" name="Set up screenshot directory">
     <kw library="OperatingSystem" name="Create Directory">
      <arg>
       ${OUTPUTDIR}${/}${wvar('screenshot_dir')}
      </arg>
      <doc>
       Creates the specified directory.
      </doc>
      <msg level="INFO" timestamp="20240502 20:13:40.841">
       Web.Dev.screenshot_dir: Screenshot
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:13:40.846">
       Created directory '&lt;a href="file://C:\SAP_Testing\SAPtesting\Output\pabot_results\3\Screenshot"&gt;C:\SAP_Testing\SAPtesting\Output\pabot_results\3\Screenshot&lt;/a&gt;'.
      </msg>
      <status endtime="20240502 20:13:40.846" starttime="20240502 20:13:40.840" status="PASS"/>
     </kw>
     <status endtime="20240502 20:13:40.847" starttime="20240502 20:13:40.839" status="PASS"/>
    </kw>
    <status endtime="20240502 20:13:40.847" starttime="20240502 20:13:40.838" status="PASS"/>
   </kw>
   <kw library="BuiltIn" name="Set Global Variable">
    <arg>
     ${screenshot_taking}
    </arg>
    <arg>
     ${True}
    </arg>
    <doc>
     Makes a variable available globally in all tests and suites.
    </doc>
    <msg level="INFO" timestamp="20240502 20:13:40.847">
     ${screenshot_taking} = True
    </msg>
    <status endtime="20240502 20:13:40.847" starttime="20240502 20:13:40.847" status="PASS"/>
   </kw>
   <kw library="Support" name="Setup linux execution">
    <kw library="BuiltIn" name="Run Keyword And Return Status">
     <var>
      ${web_test_check}
     </var>
     <arg>
      Variable Should Exist
     </arg>
     <arg>
      ${web_test}
     </arg>
     <doc>
      Runs the given keyword with given arguments and returns the status as a Boolean value.
     </doc>
     <kw library="BuiltIn" name="Variable Should Exist">
      <arg>
       ${web_test}
      </arg>
      <doc>
       Fails unless the given variable exists within the current scope.
      </doc>
      <status endtime="20240502 20:13:40.849" starttime="20240502 20:13:40.848" status="PASS"/>
     </kw>
     <msg level="INFO" timestamp="20240502 20:13:40.849">
      ${web_test_check} = True
     </msg>
     <status endtime="20240502 20:13:40.849" starttime="20240502 20:13:40.848" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Run Keyword If">
     <arg>
      ${web_test_check}
     </arg>
     <arg>
      Setup Docker Execution Options
     </arg>
     <doc>
      Runs the given keyword with the given arguments, if ``condition`` is true.
     </doc>
     <kw library="Support_Web" name="Setup Docker Execution Options">
      <kw library="Support_Web" name="Setup Suite Metadata">
       <arg>
        ${browser}
       </arg>
       <kw library="BrowserSupport" name="Get Browser Metadata">
        <var>
         &amp;{browser_information}
        </var>
        <arg>
         browser=${browser}
        </arg>
        <doc>
         Fetches browser metadata information
:param browser: Name of the browser for which information is fetched
:param reload: Re-read the metadata based on the browser
:return: Browser metadata information, dict of format
            {"browser_version": browser version value,
             "driver_version": driver version value}
        </doc>
        <msg level="INFO" timestamp="20240502 20:13:45.241">
         &amp;{browser_information} = { browser_version=124.0.6367.118 | driver_version=124.0.6367.91  }
        </msg>
        <status endtime="20240502 20:13:45.241" starttime="20240502 20:13:40.850" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Suite Metadata">
        <arg>
         test_browser_name
        </arg>
        <arg>
         ${browser}
        </arg>
        <doc>
         Sets metadata for the current test suite.
        </doc>
        <msg level="INFO" timestamp="20240502 20:13:45.241">
         Set suite metadata 'test_browser_name' to value 'chrome'.
        </msg>
        <status endtime="20240502 20:13:45.241" starttime="20240502 20:13:45.241" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Suite Metadata">
        <arg>
         test_browser_version
        </arg>
        <arg>
         ${browser_information.browser_version}
        </arg>
        <doc>
         Sets metadata for the current test suite.
        </doc>
        <msg level="INFO" timestamp="20240502 20:13:45.241">
         Set suite metadata 'test_browser_version' to value '124.0.6367.118'.
        </msg>
        <status endtime="20240502 20:13:45.241" starttime="20240502 20:13:45.241" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Suite Metadata">
        <arg>
         test_driver_version
        </arg>
        <arg>
         ${browser_information.driver_version}
        </arg>
        <doc>
         Sets metadata for the current test suite.
        </doc>
        <msg level="INFO" timestamp="20240502 20:13:45.241">
         Set suite metadata 'test_driver_version' to value '124.0.6367.91 '.
        </msg>
        <status endtime="20240502 20:13:45.241" starttime="20240502 20:13:45.241" status="PASS"/>
       </kw>
       <status endtime="20240502 20:13:45.241" starttime="20240502 20:13:40.850" status="PASS"/>
      </kw>
      <kw library="Support_Web" name="Setup Global Docker Execution Options">
       <kw library="BuiltIn" name="Set Global Variable">
        <arg>
         ${global_browser_options}
        </arg>
        <arg>
         None
        </arg>
        <doc>
         Makes a variable available globally in all tests and suites.
        </doc>
        <msg level="INFO" timestamp="20240502 20:13:45.241">
         ${global_browser_options} = None
        </msg>
        <status endtime="20240502 20:13:45.241" starttime="20240502 20:13:45.241" status="PASS"/>
       </kw>
       <kw library="OperatingSystem" name="Get Environment Variable">
        <var>
         ${docker_check}
        </var>
        <arg>
         EXECUTION_ENVIRONMENT
        </arg>
        <arg>
         not_found
        </arg>
        <doc>
         Returns the value of an environment variable with the given name.
        </doc>
        <msg level="INFO" timestamp="20240502 20:13:45.248">
         ${docker_check} = not_found
        </msg>
        <status endtime="20240502 20:13:45.248" starttime="20240502 20:13:45.241" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Run Keyword And Return If">
        <arg>
         "${docker_check}"!="docker"
        </arg>
        <arg>
         Log
        </arg>
        <arg>
         Not executing on Docker
        </arg>
        <doc>
         Runs the specified keyword and returns from the enclosing user keyword.
        </doc>
        <kw library="BuiltIn" name="Log">
         <arg>
          Not executing on Docker
         </arg>
         <doc>
          Logs the given message with the given level.
         </doc>
         <msg level="INFO" timestamp="20240502 20:13:45.248">
          Not executing on Docker
         </msg>
         <status endtime="20240502 20:13:45.248" starttime="20240502 20:13:45.248" status="PASS"/>
        </kw>
        <msg level="INFO" timestamp="20240502 20:13:45.248">
         Returning from the enclosing user keyword.
        </msg>
        <status endtime="20240502 20:13:45.248" starttime="20240502 20:13:45.248" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Create List">
        <var>
         @{options}
        </var>
        <arg>
         --headless
        </arg>
        <arg>
         --no-sandbox
        </arg>
        <arg>
         --disable-dev-shm-usage
        </arg>
        <doc>
         Returns a list containing given items.
        </doc>
        <status endtime="20240502 20:13:45.248" starttime="20240502 20:13:45.248" status="NOT RUN"/>
       </kw>
       <kw library="BuiltIn" name="Set Global Variable">
        <arg>
         @{docker_options}
        </arg>
        <arg>
         @{options}
        </arg>
        <doc>
         Makes a variable available globally in all tests and suites.
        </doc>
        <status endtime="20240502 20:13:45.248" starttime="20240502 20:13:45.248" status="NOT RUN"/>
       </kw>
       <status endtime="20240502 20:13:45.248" starttime="20240502 20:13:45.241" status="PASS"/>
      </kw>
      <kw library="Support_Web" name="Create Webdriver for chrome preferences">
       <kw library="Support_Web" name="Update Docker Execution Options">
        <var>
         ${list_prefs}
        </var>
        <arg>
         ${list_prefs}
        </arg>
        <kw library="BuiltIn" name="Run Keyword And Return Status">
         <var>
          ${docker_check}
         </var>
         <arg>
          Variable Should Exist
         </arg>
         <arg>
          ${docker_options}
         </arg>
         <doc>
          Runs the given keyword with given arguments and returns the status as a Boolean value.
         </doc>
         <kw library="BuiltIn" name="Variable Should Exist">
          <arg>
           ${docker_options}
          </arg>
          <doc>
           Fails unless the given variable exists within the current scope.
          </doc>
          <msg level="FAIL" timestamp="20240502 20:13:45.248">
           Variable '${docker_options}' does not exist.
          </msg>
          <status endtime="20240502 20:13:45.248" starttime="20240502 20:13:45.248" status="FAIL"/>
         </kw>
         <msg level="INFO" timestamp="20240502 20:13:45.248">
          ${docker_check} = False
         </msg>
         <status endtime="20240502 20:13:45.248" starttime="20240502 20:13:45.248" status="PASS"/>
        </kw>
        <kw library="BuiltIn" name="Get Length">
         <var>
          ${list_prefs_length}
         </var>
         <arg>
          ${list_prefs}
         </arg>
         <doc>
          Returns and logs the length of the given item as an integer.
         </doc>
         <msg level="INFO" timestamp="20240502 20:13:45.248">
          Length is 1
         </msg>
         <msg level="INFO" timestamp="20240502 20:13:45.248">
          ${list_prefs_length} = 1
         </msg>
         <status endtime="20240502 20:13:45.248" starttime="20240502 20:13:45.248" status="PASS"/>
        </kw>
        <kw library="BuiltIn" name="Run Keyword If">
         <var>
          ${list_prefs}
         </var>
         <arg>
          ${docker_check} and ${list_prefs_length}&gt;0 and ${list_prefs}[0] != []
         </arg>
         <arg>
          Combine Lists
         </arg>
         <arg>
          ${list_prefs}
         </arg>
         <arg>
          ${docker_options}
         </arg>
         <arg>
          ELSE IF
         </arg>
         <arg>
          ${docker_check}
         </arg>
         <arg>
          Set Variable
         </arg>
         <arg>
          ${docker_options}
         </arg>
         <arg>
          ELSE
         </arg>
         <arg>
          Set Variable
         </arg>
         <arg>
          ${list_prefs}
         </arg>
         <doc>
          Runs the given keyword with the given arguments, if ``condition`` is true.
         </doc>
         <kw library="BuiltIn" name="Set Variable">
          <arg>
           ${list_prefs}
          </arg>
          <doc>
           Returns the given values which can then be assigned to a variables.
          </doc>
          <status endtime="20240502 20:13:45.248" starttime="20240502 20:13:45.248" status="PASS"/>
         </kw>
         <msg level="INFO" timestamp="20240502 20:13:45.248">
          ${list_prefs} = [[]]
         </msg>
         <status endtime="20240502 20:13:45.248" starttime="20240502 20:13:45.248" status="PASS"/>
        </kw>
        <msg level="INFO" timestamp="20240502 20:13:45.248">
         ${list_prefs} = [[]]
        </msg>
        <status endtime="20240502 20:13:45.248" starttime="20240502 20:13:45.248" status="PASS"/>
       </kw>
       <kw library="Support_Web" name="Create Chrome Options for download preferences">
        <var>
         ${chrome_options}
        </var>
        <kw library="BuiltIn" name="Evaluate">
         <var>
          ${chrome_options}
         </var>
         <arg>
          sys.modules['selenium.webdriver'].ChromeOptions()
         </arg>
         <arg>
          sys
         </arg>
         <doc>
          Evaluates the given expression in Python and returns the result.
         </doc>
         <msg level="INFO" timestamp="20240502 20:13:45.248">
          ${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x000001D555539D00&gt;
         </msg>
         <status endtime="20240502 20:13:45.248" starttime="20240502 20:13:45.248" status="PASS"/>
        </kw>
        <msg level="INFO" timestamp="20240502 20:13:45.248">
         ${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x000001D555539D00&gt;
        </msg>
        <status endtime="20240502 20:13:45.248" starttime="20240502 20:13:45.248" status="PASS"/>
       </kw>
       <kw library="Support_Web" name="Update Preferences List">
        <arg>
         ${chrome_options}
        </arg>
        <arg>
         @{list_prefs}
        </arg>
        <kw library="BuiltIn" name="Convert To String">
         <var>
          ${string_prefs}
         </var>
         <arg>
          ${list_prefs}
         </arg>
         <doc>
          Converts the given item to a Unicode string.
         </doc>
         <msg level="INFO" timestamp="20240502 20:13:45.248">
          ${string_prefs} = [[]]
         </msg>
         <status endtime="20240502 20:13:45.248" starttime="20240502 20:13:45.248" status="PASS"/>
        </kw>
        <kw library="BuiltIn" name="Return From Keyword If">
         <arg>
          ${string_prefs} == [[]]
         </arg>
         <doc>
          Returns from the enclosing user keyword if ``condition`` is true.
         </doc>
         <msg level="INFO" timestamp="20240502 20:13:45.248">
          Returning from the enclosing user keyword.
         </msg>
         <status endtime="20240502 20:13:45.248" starttime="20240502 20:13:45.248" status="PASS"/>
        </kw>
        <for flavor="IN">
         <var>
          ${preference}
         </var>
         <value>
          @{list_prefs}
         </value>
         <iter>
          <var name="${preference}"/>
          <kw library="BuiltIn" name="Call Method">
           <arg>
            ${chrome_options}
           </arg>
           <arg>
            add_argument
           </arg>
           <arg>
            ${preference}
           </arg>
           <doc>
            Calls the named method of the given object with the provided arguments.
           </doc>
           <status endtime="20240502 20:13:45.248" starttime="20240502 20:13:45.248" status="NOT RUN"/>
          </kw>
          <status endtime="20240502 20:13:45.248" starttime="20240502 20:13:45.248" status="NOT RUN"/>
         </iter>
         <status endtime="20240502 20:13:45.248" starttime="20240502 20:13:45.248" status="NOT RUN"/>
        </for>
        <status endtime="20240502 20:13:45.248" starttime="20240502 20:13:45.248" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Call Method">
        <arg>
         ${chrome_options}
        </arg>
        <arg>
         add_experimental_option
        </arg>
        <arg>
         prefs
        </arg>
        <arg>
         ${kw_prefs}
        </arg>
        <doc>
         Calls the named method of the given object with the provided arguments.
        </doc>
        <status endtime="20240502 20:13:45.248" starttime="20240502 20:13:45.248" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Global Variable">
        <arg>
         ${global_browser_options}
        </arg>
        <arg>
         ${chrome options}
        </arg>
        <doc>
         Makes a variable available globally in all tests and suites.
        </doc>
        <msg level="INFO" timestamp="20240502 20:13:45.248">
         ${global_browser_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x000001D555539D00&gt;
        </msg>
        <status endtime="20240502 20:13:45.248" starttime="20240502 20:13:45.248" status="PASS"/>
       </kw>
       <status endtime="20240502 20:13:45.248" starttime="20240502 20:13:45.248" status="PASS"/>
      </kw>
      <status endtime="20240502 20:13:45.248" starttime="20240502 20:13:40.850" status="PASS"/>
     </kw>
     <status endtime="20240502 20:13:45.248" starttime="20240502 20:13:40.849" status="PASS"/>
    </kw>
    <status endtime="20240502 20:13:45.248" starttime="20240502 20:13:40.848" status="PASS"/>
   </kw>
   <kw library="BuiltIn" name="Set Suite Metadata">
    <arg>
     environment
    </arg>
    <arg>
     ${test_server}
    </arg>
    <doc>
     Sets metadata for the current test suite.
    </doc>
    <msg level="INFO" timestamp="20240502 20:13:45.248">
     Set suite metadata 'environment' to value 'Dev'.
    </msg>
    <status endtime="20240502 20:13:45.248" starttime="20240502 20:13:45.248" status="PASS"/>
   </kw>
   <kw library="BuiltIn" name="Set Variable">
    <var>
     ${d.test_server}
    </var>
    <arg>
     ${test_server}
    </arg>
    <doc>
     Returns the given values which can then be assigned to a variables.
    </doc>
    <msg level="INFO" timestamp="20240502 20:14:28.935">
     ${d.test_server} = Dev
    </msg>
    <status endtime="20240502 20:14:28.935" starttime="20240502 20:14:28.935" status="PASS"/>
   </kw>
   <kw library="Support" name="Reset screenshot count variable">
    <kw library="BuiltIn" name="Set Variable">
     <var>
      ${screenshotCount}
     </var>
     <arg>
      ${PABOTQUEUEINDEX}_1
     </arg>
     <doc>
      Returns the given values which can then be assigned to a variables.
     </doc>
     <msg level="INFO" timestamp="20240502 20:14:28.935">
      ${screenshotCount} = 4_1
     </msg>
     <status endtime="20240502 20:14:28.935" starttime="20240502 20:14:28.935" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Set Global Variable">
     <arg>
      ${screenshotCount}
     </arg>
     <doc>
      Makes a variable available globally in all tests and suites.
     </doc>
     <msg level="INFO" timestamp="20240502 20:14:28.935">
      ${screenshotCount} = 4_1
     </msg>
     <status endtime="20240502 20:14:28.935" starttime="20240502 20:14:28.935" status="PASS"/>
    </kw>
    <kw library="Support" name="Set up screenshot directory">
     <kw library="OperatingSystem" name="Create Directory">
      <arg>
       ${OUTPUTDIR}${/}${wvar('screenshot_dir')}
      </arg>
      <doc>
       Creates the specified directory.
      </doc>
      <msg level="INFO" timestamp="20240502 20:14:28.935">
       Web.Dev.screenshot_dir: Screenshot
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:14:28.946">
       Created directory '&lt;a href="file://C:\SAP_Testing\SAPtesting\Output\pabot_results\4\Screenshot"&gt;C:\SAP_Testing\SAPtesting\Output\pabot_results\4\Screenshot&lt;/a&gt;'.
      </msg>
      <status endtime="20240502 20:14:28.946" starttime="20240502 20:14:28.935" status="PASS"/>
     </kw>
     <status endtime="20240502 20:14:28.946" starttime="20240502 20:14:28.935" status="PASS"/>
    </kw>
    <status endtime="20240502 20:14:28.946" starttime="20240502 20:14:28.935" status="PASS"/>
   </kw>
   <kw library="BuiltIn" name="Set Global Variable">
    <arg>
     ${screenshot_taking}
    </arg>
    <arg>
     ${True}
    </arg>
    <doc>
     Makes a variable available globally in all tests and suites.
    </doc>
    <msg level="INFO" timestamp="20240502 20:14:28.946">
     ${screenshot_taking} = True
    </msg>
    <status endtime="20240502 20:14:28.946" starttime="20240502 20:14:28.946" status="PASS"/>
   </kw>
   <kw library="Support" name="Setup linux execution">
    <kw library="BuiltIn" name="Run Keyword And Return Status">
     <var>
      ${web_test_check}
     </var>
     <arg>
      Variable Should Exist
     </arg>
     <arg>
      ${web_test}
     </arg>
     <doc>
      Runs the given keyword with given arguments and returns the status as a Boolean value.
     </doc>
     <kw library="BuiltIn" name="Variable Should Exist">
      <arg>
       ${web_test}
      </arg>
      <doc>
       Fails unless the given variable exists within the current scope.
      </doc>
      <status endtime="20240502 20:14:28.946" starttime="20240502 20:14:28.946" status="PASS"/>
     </kw>
     <msg level="INFO" timestamp="20240502 20:14:28.946">
      ${web_test_check} = True
     </msg>
     <status endtime="20240502 20:14:28.946" starttime="20240502 20:14:28.946" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Run Keyword If">
     <arg>
      ${web_test_check}
     </arg>
     <arg>
      Setup Docker Execution Options
     </arg>
     <doc>
      Runs the given keyword with the given arguments, if ``condition`` is true.
     </doc>
     <kw library="Support_Web" name="Setup Docker Execution Options">
      <kw library="Support_Web" name="Setup Suite Metadata">
       <arg>
        ${browser}
       </arg>
       <kw library="BrowserSupport" name="Get Browser Metadata">
        <var>
         &amp;{browser_information}
        </var>
        <arg>
         browser=${browser}
        </arg>
        <doc>
         Fetches browser metadata information
:param browser: Name of the browser for which information is fetched
:param reload: Re-read the metadata based on the browser
:return: Browser metadata information, dict of format
            {"browser_version": browser version value,
             "driver_version": driver version value}
        </doc>
        <msg level="INFO" timestamp="20240502 20:14:33.320">
         &amp;{browser_information} = { browser_version=124.0.6367.118 | driver_version=124.0.6367.91  }
        </msg>
        <status endtime="20240502 20:14:33.320" starttime="20240502 20:14:28.946" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Suite Metadata">
        <arg>
         test_browser_name
        </arg>
        <arg>
         ${browser}
        </arg>
        <doc>
         Sets metadata for the current test suite.
        </doc>
        <msg level="INFO" timestamp="20240502 20:14:33.320">
         Set suite metadata 'test_browser_name' to value 'chrome'.
        </msg>
        <status endtime="20240502 20:14:33.320" starttime="20240502 20:14:33.320" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Suite Metadata">
        <arg>
         test_browser_version
        </arg>
        <arg>
         ${browser_information.browser_version}
        </arg>
        <doc>
         Sets metadata for the current test suite.
        </doc>
        <msg level="INFO" timestamp="20240502 20:14:33.320">
         Set suite metadata 'test_browser_version' to value '124.0.6367.118'.
        </msg>
        <status endtime="20240502 20:14:33.320" starttime="20240502 20:14:33.320" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Suite Metadata">
        <arg>
         test_driver_version
        </arg>
        <arg>
         ${browser_information.driver_version}
        </arg>
        <doc>
         Sets metadata for the current test suite.
        </doc>
        <msg level="INFO" timestamp="20240502 20:14:33.320">
         Set suite metadata 'test_driver_version' to value '124.0.6367.91 '.
        </msg>
        <status endtime="20240502 20:14:33.320" starttime="20240502 20:14:33.320" status="PASS"/>
       </kw>
       <status endtime="20240502 20:14:33.320" starttime="20240502 20:14:28.946" status="PASS"/>
      </kw>
      <kw library="Support_Web" name="Setup Global Docker Execution Options">
       <kw library="BuiltIn" name="Set Global Variable">
        <arg>
         ${global_browser_options}
        </arg>
        <arg>
         None
        </arg>
        <doc>
         Makes a variable available globally in all tests and suites.
        </doc>
        <msg level="INFO" timestamp="20240502 20:14:33.320">
         ${global_browser_options} = None
        </msg>
        <status endtime="20240502 20:14:33.320" starttime="20240502 20:14:33.320" status="PASS"/>
       </kw>
       <kw library="OperatingSystem" name="Get Environment Variable">
        <var>
         ${docker_check}
        </var>
        <arg>
         EXECUTION_ENVIRONMENT
        </arg>
        <arg>
         not_found
        </arg>
        <doc>
         Returns the value of an environment variable with the given name.
        </doc>
        <msg level="INFO" timestamp="20240502 20:14:33.320">
         ${docker_check} = not_found
        </msg>
        <status endtime="20240502 20:14:33.320" starttime="20240502 20:14:33.320" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Run Keyword And Return If">
        <arg>
         "${docker_check}"!="docker"
        </arg>
        <arg>
         Log
        </arg>
        <arg>
         Not executing on Docker
        </arg>
        <doc>
         Runs the specified keyword and returns from the enclosing user keyword.
        </doc>
        <kw library="BuiltIn" name="Log">
         <arg>
          Not executing on Docker
         </arg>
         <doc>
          Logs the given message with the given level.
         </doc>
         <msg level="INFO" timestamp="20240502 20:14:33.320">
          Not executing on Docker
         </msg>
         <status endtime="20240502 20:14:33.320" starttime="20240502 20:14:33.320" status="PASS"/>
        </kw>
        <msg level="INFO" timestamp="20240502 20:14:33.320">
         Returning from the enclosing user keyword.
        </msg>
        <status endtime="20240502 20:14:33.320" starttime="20240502 20:14:33.320" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Create List">
        <var>
         @{options}
        </var>
        <arg>
         --headless
        </arg>
        <arg>
         --no-sandbox
        </arg>
        <arg>
         --disable-dev-shm-usage
        </arg>
        <doc>
         Returns a list containing given items.
        </doc>
        <status endtime="20240502 20:14:33.320" starttime="20240502 20:14:33.320" status="NOT RUN"/>
       </kw>
       <kw library="BuiltIn" name="Set Global Variable">
        <arg>
         @{docker_options}
        </arg>
        <arg>
         @{options}
        </arg>
        <doc>
         Makes a variable available globally in all tests and suites.
        </doc>
        <status endtime="20240502 20:14:33.320" starttime="20240502 20:14:33.320" status="NOT RUN"/>
       </kw>
       <status endtime="20240502 20:14:33.320" starttime="20240502 20:14:33.320" status="PASS"/>
      </kw>
      <kw library="Support_Web" name="Create Webdriver for chrome preferences">
       <kw library="Support_Web" name="Update Docker Execution Options">
        <var>
         ${list_prefs}
        </var>
        <arg>
         ${list_prefs}
        </arg>
        <kw library="BuiltIn" name="Run Keyword And Return Status">
         <var>
          ${docker_check}
         </var>
         <arg>
          Variable Should Exist
         </arg>
         <arg>
          ${docker_options}
         </arg>
         <doc>
          Runs the given keyword with given arguments and returns the status as a Boolean value.
         </doc>
         <kw library="BuiltIn" name="Variable Should Exist">
          <arg>
           ${docker_options}
          </arg>
          <doc>
           Fails unless the given variable exists within the current scope.
          </doc>
          <msg level="FAIL" timestamp="20240502 20:14:33.320">
           Variable '${docker_options}' does not exist.
          </msg>
          <status endtime="20240502 20:14:33.320" starttime="20240502 20:14:33.320" status="FAIL"/>
         </kw>
         <msg level="INFO" timestamp="20240502 20:14:33.320">
          ${docker_check} = False
         </msg>
         <status endtime="20240502 20:14:33.320" starttime="20240502 20:14:33.320" status="PASS"/>
        </kw>
        <kw library="BuiltIn" name="Get Length">
         <var>
          ${list_prefs_length}
         </var>
         <arg>
          ${list_prefs}
         </arg>
         <doc>
          Returns and logs the length of the given item as an integer.
         </doc>
         <msg level="INFO" timestamp="20240502 20:14:33.320">
          Length is 1
         </msg>
         <msg level="INFO" timestamp="20240502 20:14:33.320">
          ${list_prefs_length} = 1
         </msg>
         <status endtime="20240502 20:14:33.320" starttime="20240502 20:14:33.320" status="PASS"/>
        </kw>
        <kw library="BuiltIn" name="Run Keyword If">
         <var>
          ${list_prefs}
         </var>
         <arg>
          ${docker_check} and ${list_prefs_length}&gt;0 and ${list_prefs}[0] != []
         </arg>
         <arg>
          Combine Lists
         </arg>
         <arg>
          ${list_prefs}
         </arg>
         <arg>
          ${docker_options}
         </arg>
         <arg>
          ELSE IF
         </arg>
         <arg>
          ${docker_check}
         </arg>
         <arg>
          Set Variable
         </arg>
         <arg>
          ${docker_options}
         </arg>
         <arg>
          ELSE
         </arg>
         <arg>
          Set Variable
         </arg>
         <arg>
          ${list_prefs}
         </arg>
         <doc>
          Runs the given keyword with the given arguments, if ``condition`` is true.
         </doc>
         <kw library="BuiltIn" name="Set Variable">
          <arg>
           ${list_prefs}
          </arg>
          <doc>
           Returns the given values which can then be assigned to a variables.
          </doc>
          <status endtime="20240502 20:14:33.320" starttime="20240502 20:14:33.320" status="PASS"/>
         </kw>
         <msg level="INFO" timestamp="20240502 20:14:33.320">
          ${list_prefs} = [[]]
         </msg>
         <status endtime="20240502 20:14:33.320" starttime="20240502 20:14:33.320" status="PASS"/>
        </kw>
        <msg level="INFO" timestamp="20240502 20:14:33.320">
         ${list_prefs} = [[]]
        </msg>
        <status endtime="20240502 20:14:33.320" starttime="20240502 20:14:33.320" status="PASS"/>
       </kw>
       <kw library="Support_Web" name="Create Chrome Options for download preferences">
        <var>
         ${chrome_options}
        </var>
        <kw library="BuiltIn" name="Evaluate">
         <var>
          ${chrome_options}
         </var>
         <arg>
          sys.modules['selenium.webdriver'].ChromeOptions()
         </arg>
         <arg>
          sys
         </arg>
         <doc>
          Evaluates the given expression in Python and returns the result.
         </doc>
         <msg level="INFO" timestamp="20240502 20:14:33.320">
          ${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x000001A2D34FA030&gt;
         </msg>
         <status endtime="20240502 20:14:33.320" starttime="20240502 20:14:33.320" status="PASS"/>
        </kw>
        <msg level="INFO" timestamp="20240502 20:14:33.320">
         ${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x000001A2D34FA030&gt;
        </msg>
        <status endtime="20240502 20:14:33.320" starttime="20240502 20:14:33.320" status="PASS"/>
       </kw>
       <kw library="Support_Web" name="Update Preferences List">
        <arg>
         ${chrome_options}
        </arg>
        <arg>
         @{list_prefs}
        </arg>
        <kw library="BuiltIn" name="Convert To String">
         <var>
          ${string_prefs}
         </var>
         <arg>
          ${list_prefs}
         </arg>
         <doc>
          Converts the given item to a Unicode string.
         </doc>
         <msg level="INFO" timestamp="20240502 20:14:33.336">
          ${string_prefs} = [[]]
         </msg>
         <status endtime="20240502 20:14:33.336" starttime="20240502 20:14:33.336" status="PASS"/>
        </kw>
        <kw library="BuiltIn" name="Return From Keyword If">
         <arg>
          ${string_prefs} == [[]]
         </arg>
         <doc>
          Returns from the enclosing user keyword if ``condition`` is true.
         </doc>
         <msg level="INFO" timestamp="20240502 20:14:33.336">
          Returning from the enclosing user keyword.
         </msg>
         <status endtime="20240502 20:14:33.336" starttime="20240502 20:14:33.336" status="PASS"/>
        </kw>
        <for flavor="IN">
         <var>
          ${preference}
         </var>
         <value>
          @{list_prefs}
         </value>
         <iter>
          <var name="${preference}"/>
          <kw library="BuiltIn" name="Call Method">
           <arg>
            ${chrome_options}
           </arg>
           <arg>
            add_argument
           </arg>
           <arg>
            ${preference}
           </arg>
           <doc>
            Calls the named method of the given object with the provided arguments.
           </doc>
           <status endtime="20240502 20:14:33.336" starttime="20240502 20:14:33.336" status="NOT RUN"/>
          </kw>
          <status endtime="20240502 20:14:33.336" starttime="20240502 20:14:33.336" status="NOT RUN"/>
         </iter>
         <status endtime="20240502 20:14:33.336" starttime="20240502 20:14:33.336" status="NOT RUN"/>
        </for>
        <status endtime="20240502 20:14:33.336" starttime="20240502 20:14:33.320" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Call Method">
        <arg>
         ${chrome_options}
        </arg>
        <arg>
         add_experimental_option
        </arg>
        <arg>
         prefs
        </arg>
        <arg>
         ${kw_prefs}
        </arg>
        <doc>
         Calls the named method of the given object with the provided arguments.
        </doc>
        <status endtime="20240502 20:14:33.336" starttime="20240502 20:14:33.336" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Global Variable">
        <arg>
         ${global_browser_options}
        </arg>
        <arg>
         ${chrome options}
        </arg>
        <doc>
         Makes a variable available globally in all tests and suites.
        </doc>
        <msg level="INFO" timestamp="20240502 20:14:33.336">
         ${global_browser_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x000001A2D34FA030&gt;
        </msg>
        <status endtime="20240502 20:14:33.336" starttime="20240502 20:14:33.336" status="PASS"/>
       </kw>
       <status endtime="20240502 20:14:33.336" starttime="20240502 20:14:33.320" status="PASS"/>
      </kw>
      <status endtime="20240502 20:14:33.336" starttime="20240502 20:14:28.946" status="PASS"/>
     </kw>
     <status endtime="20240502 20:14:33.336" starttime="20240502 20:14:28.946" status="PASS"/>
    </kw>
    <status endtime="20240502 20:14:33.336" starttime="20240502 20:14:28.946" status="PASS"/>
   </kw>
   <kw library="BuiltIn" name="Set Suite Metadata">
    <arg>
     environment
    </arg>
    <arg>
     ${test_server}
    </arg>
    <doc>
     Sets metadata for the current test suite.
    </doc>
    <msg level="INFO" timestamp="20240502 20:14:33.336">
     Set suite metadata 'environment' to value 'Dev'.
    </msg>
    <status endtime="20240502 20:14:33.336" starttime="20240502 20:14:33.336" status="PASS"/>
   </kw>
   <kw library="BuiltIn" name="Set Variable">
    <var>
     ${d.test_server}
    </var>
    <arg>
     ${test_server}
    </arg>
    <doc>
     Returns the given values which can then be assigned to a variables.
    </doc>
    <msg level="INFO" timestamp="20240502 20:15:05.945">
     ${d.test_server} = Dev
    </msg>
    <status endtime="20240502 20:15:05.945" starttime="20240502 20:15:05.945" status="PASS"/>
   </kw>
   <kw library="Support" name="Reset screenshot count variable">
    <kw library="BuiltIn" name="Set Variable">
     <var>
      ${screenshotCount}
     </var>
     <arg>
      ${PABOTQUEUEINDEX}_1
     </arg>
     <doc>
      Returns the given values which can then be assigned to a variables.
     </doc>
     <msg level="INFO" timestamp="20240502 20:15:05.956">
      ${screenshotCount} = 5_1
     </msg>
     <status endtime="20240502 20:15:05.956" starttime="20240502 20:15:05.956" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Set Global Variable">
     <arg>
      ${screenshotCount}
     </arg>
     <doc>
      Makes a variable available globally in all tests and suites.
     </doc>
     <msg level="INFO" timestamp="20240502 20:15:05.956">
      ${screenshotCount} = 5_1
     </msg>
     <status endtime="20240502 20:15:05.956" starttime="20240502 20:15:05.956" status="PASS"/>
    </kw>
    <kw library="Support" name="Set up screenshot directory">
     <kw library="OperatingSystem" name="Create Directory">
      <arg>
       ${OUTPUTDIR}${/}${wvar('screenshot_dir')}
      </arg>
      <doc>
       Creates the specified directory.
      </doc>
      <msg level="INFO" timestamp="20240502 20:15:05.956">
       Web.Dev.screenshot_dir: Screenshot
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:15:05.964">
       Created directory '&lt;a href="file://C:\SAP_Testing\SAPtesting\Output\pabot_results\5\Screenshot"&gt;C:\SAP_Testing\SAPtesting\Output\pabot_results\5\Screenshot&lt;/a&gt;'.
      </msg>
      <status endtime="20240502 20:15:05.964" starttime="20240502 20:15:05.956" status="PASS"/>
     </kw>
     <status endtime="20240502 20:15:05.965" starttime="20240502 20:15:05.956" status="PASS"/>
    </kw>
    <status endtime="20240502 20:15:05.965" starttime="20240502 20:15:05.945" status="PASS"/>
   </kw>
   <kw library="BuiltIn" name="Set Global Variable">
    <arg>
     ${screenshot_taking}
    </arg>
    <arg>
     ${True}
    </arg>
    <doc>
     Makes a variable available globally in all tests and suites.
    </doc>
    <msg level="INFO" timestamp="20240502 20:15:05.965">
     ${screenshot_taking} = True
    </msg>
    <status endtime="20240502 20:15:05.965" starttime="20240502 20:15:05.965" status="PASS"/>
   </kw>
   <kw library="Support" name="Setup linux execution">
    <kw library="BuiltIn" name="Run Keyword And Return Status">
     <var>
      ${web_test_check}
     </var>
     <arg>
      Variable Should Exist
     </arg>
     <arg>
      ${web_test}
     </arg>
     <doc>
      Runs the given keyword with given arguments and returns the status as a Boolean value.
     </doc>
     <kw library="BuiltIn" name="Variable Should Exist">
      <arg>
       ${web_test}
      </arg>
      <doc>
       Fails unless the given variable exists within the current scope.
      </doc>
      <status endtime="20240502 20:15:05.967" starttime="20240502 20:15:05.966" status="PASS"/>
     </kw>
     <msg level="INFO" timestamp="20240502 20:15:05.967">
      ${web_test_check} = True
     </msg>
     <status endtime="20240502 20:15:05.967" starttime="20240502 20:15:05.966" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Run Keyword If">
     <arg>
      ${web_test_check}
     </arg>
     <arg>
      Setup Docker Execution Options
     </arg>
     <doc>
      Runs the given keyword with the given arguments, if ``condition`` is true.
     </doc>
     <kw library="Support_Web" name="Setup Docker Execution Options">
      <kw library="Support_Web" name="Setup Suite Metadata">
       <arg>
        ${browser}
       </arg>
       <kw library="BrowserSupport" name="Get Browser Metadata">
        <var>
         &amp;{browser_information}
        </var>
        <arg>
         browser=${browser}
        </arg>
        <doc>
         Fetches browser metadata information
:param browser: Name of the browser for which information is fetched
:param reload: Re-read the metadata based on the browser
:return: Browser metadata information, dict of format
            {"browser_version": browser version value,
             "driver_version": driver version value}
        </doc>
        <msg level="INFO" timestamp="20240502 20:15:09.232">
         &amp;{browser_information} = { browser_version=124.0.6367.118 | driver_version=124.0.6367.91  }
        </msg>
        <status endtime="20240502 20:15:09.232" starttime="20240502 20:15:05.967" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Suite Metadata">
        <arg>
         test_browser_name
        </arg>
        <arg>
         ${browser}
        </arg>
        <doc>
         Sets metadata for the current test suite.
        </doc>
        <msg level="INFO" timestamp="20240502 20:15:09.232">
         Set suite metadata 'test_browser_name' to value 'chrome'.
        </msg>
        <status endtime="20240502 20:15:09.232" starttime="20240502 20:15:09.232" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Suite Metadata">
        <arg>
         test_browser_version
        </arg>
        <arg>
         ${browser_information.browser_version}
        </arg>
        <doc>
         Sets metadata for the current test suite.
        </doc>
        <msg level="INFO" timestamp="20240502 20:15:09.232">
         Set suite metadata 'test_browser_version' to value '124.0.6367.118'.
        </msg>
        <status endtime="20240502 20:15:09.232" starttime="20240502 20:15:09.232" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Suite Metadata">
        <arg>
         test_driver_version
        </arg>
        <arg>
         ${browser_information.driver_version}
        </arg>
        <doc>
         Sets metadata for the current test suite.
        </doc>
        <msg level="INFO" timestamp="20240502 20:15:09.232">
         Set suite metadata 'test_driver_version' to value '124.0.6367.91 '.
        </msg>
        <status endtime="20240502 20:15:09.232" starttime="20240502 20:15:09.232" status="PASS"/>
       </kw>
       <status endtime="20240502 20:15:09.232" starttime="20240502 20:15:05.967" status="PASS"/>
      </kw>
      <kw library="Support_Web" name="Setup Global Docker Execution Options">
       <kw library="BuiltIn" name="Set Global Variable">
        <arg>
         ${global_browser_options}
        </arg>
        <arg>
         None
        </arg>
        <doc>
         Makes a variable available globally in all tests and suites.
        </doc>
        <msg level="INFO" timestamp="20240502 20:15:09.232">
         ${global_browser_options} = None
        </msg>
        <status endtime="20240502 20:15:09.232" starttime="20240502 20:15:09.232" status="PASS"/>
       </kw>
       <kw library="OperatingSystem" name="Get Environment Variable">
        <var>
         ${docker_check}
        </var>
        <arg>
         EXECUTION_ENVIRONMENT
        </arg>
        <arg>
         not_found
        </arg>
        <doc>
         Returns the value of an environment variable with the given name.
        </doc>
        <msg level="INFO" timestamp="20240502 20:15:09.232">
         ${docker_check} = not_found
        </msg>
        <status endtime="20240502 20:15:09.232" starttime="20240502 20:15:09.232" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Run Keyword And Return If">
        <arg>
         "${docker_check}"!="docker"
        </arg>
        <arg>
         Log
        </arg>
        <arg>
         Not executing on Docker
        </arg>
        <doc>
         Runs the specified keyword and returns from the enclosing user keyword.
        </doc>
        <kw library="BuiltIn" name="Log">
         <arg>
          Not executing on Docker
         </arg>
         <doc>
          Logs the given message with the given level.
         </doc>
         <msg level="INFO" timestamp="20240502 20:15:09.232">
          Not executing on Docker
         </msg>
         <status endtime="20240502 20:15:09.232" starttime="20240502 20:15:09.232" status="PASS"/>
        </kw>
        <msg level="INFO" timestamp="20240502 20:15:09.232">
         Returning from the enclosing user keyword.
        </msg>
        <status endtime="20240502 20:15:09.232" starttime="20240502 20:15:09.232" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Create List">
        <var>
         @{options}
        </var>
        <arg>
         --headless
        </arg>
        <arg>
         --no-sandbox
        </arg>
        <arg>
         --disable-dev-shm-usage
        </arg>
        <doc>
         Returns a list containing given items.
        </doc>
        <status endtime="20240502 20:15:09.232" starttime="20240502 20:15:09.232" status="NOT RUN"/>
       </kw>
       <kw library="BuiltIn" name="Set Global Variable">
        <arg>
         @{docker_options}
        </arg>
        <arg>
         @{options}
        </arg>
        <doc>
         Makes a variable available globally in all tests and suites.
        </doc>
        <status endtime="20240502 20:15:09.232" starttime="20240502 20:15:09.232" status="NOT RUN"/>
       </kw>
       <status endtime="20240502 20:15:09.232" starttime="20240502 20:15:09.232" status="PASS"/>
      </kw>
      <kw library="Support_Web" name="Create Webdriver for chrome preferences">
       <kw library="Support_Web" name="Update Docker Execution Options">
        <var>
         ${list_prefs}
        </var>
        <arg>
         ${list_prefs}
        </arg>
        <kw library="BuiltIn" name="Run Keyword And Return Status">
         <var>
          ${docker_check}
         </var>
         <arg>
          Variable Should Exist
         </arg>
         <arg>
          ${docker_options}
         </arg>
         <doc>
          Runs the given keyword with given arguments and returns the status as a Boolean value.
         </doc>
         <kw library="BuiltIn" name="Variable Should Exist">
          <arg>
           ${docker_options}
          </arg>
          <doc>
           Fails unless the given variable exists within the current scope.
          </doc>
          <msg level="FAIL" timestamp="20240502 20:15:09.232">
           Variable '${docker_options}' does not exist.
          </msg>
          <status endtime="20240502 20:15:09.232" starttime="20240502 20:15:09.232" status="FAIL"/>
         </kw>
         <msg level="INFO" timestamp="20240502 20:15:09.232">
          ${docker_check} = False
         </msg>
         <status endtime="20240502 20:15:09.232" starttime="20240502 20:15:09.232" status="PASS"/>
        </kw>
        <kw library="BuiltIn" name="Get Length">
         <var>
          ${list_prefs_length}
         </var>
         <arg>
          ${list_prefs}
         </arg>
         <doc>
          Returns and logs the length of the given item as an integer.
         </doc>
         <msg level="INFO" timestamp="20240502 20:15:09.232">
          Length is 1
         </msg>
         <msg level="INFO" timestamp="20240502 20:15:09.232">
          ${list_prefs_length} = 1
         </msg>
         <status endtime="20240502 20:15:09.232" starttime="20240502 20:15:09.232" status="PASS"/>
        </kw>
        <kw library="BuiltIn" name="Run Keyword If">
         <var>
          ${list_prefs}
         </var>
         <arg>
          ${docker_check} and ${list_prefs_length}&gt;0 and ${list_prefs}[0] != []
         </arg>
         <arg>
          Combine Lists
         </arg>
         <arg>
          ${list_prefs}
         </arg>
         <arg>
          ${docker_options}
         </arg>
         <arg>
          ELSE IF
         </arg>
         <arg>
          ${docker_check}
         </arg>
         <arg>
          Set Variable
         </arg>
         <arg>
          ${docker_options}
         </arg>
         <arg>
          ELSE
         </arg>
         <arg>
          Set Variable
         </arg>
         <arg>
          ${list_prefs}
         </arg>
         <doc>
          Runs the given keyword with the given arguments, if ``condition`` is true.
         </doc>
         <kw library="BuiltIn" name="Set Variable">
          <arg>
           ${list_prefs}
          </arg>
          <doc>
           Returns the given values which can then be assigned to a variables.
          </doc>
          <status endtime="20240502 20:15:09.232" starttime="20240502 20:15:09.232" status="PASS"/>
         </kw>
         <msg level="INFO" timestamp="20240502 20:15:09.232">
          ${list_prefs} = [[]]
         </msg>
         <status endtime="20240502 20:15:09.232" starttime="20240502 20:15:09.232" status="PASS"/>
        </kw>
        <msg level="INFO" timestamp="20240502 20:15:09.232">
         ${list_prefs} = [[]]
        </msg>
        <status endtime="20240502 20:15:09.232" starttime="20240502 20:15:09.232" status="PASS"/>
       </kw>
       <kw library="Support_Web" name="Create Chrome Options for download preferences">
        <var>
         ${chrome_options}
        </var>
        <kw library="BuiltIn" name="Evaluate">
         <var>
          ${chrome_options}
         </var>
         <arg>
          sys.modules['selenium.webdriver'].ChromeOptions()
         </arg>
         <arg>
          sys
         </arg>
         <doc>
          Evaluates the given expression in Python and returns the result.
         </doc>
         <msg level="INFO" timestamp="20240502 20:15:09.232">
          ${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x0000019B45D89820&gt;
         </msg>
         <status endtime="20240502 20:15:09.232" starttime="20240502 20:15:09.232" status="PASS"/>
        </kw>
        <msg level="INFO" timestamp="20240502 20:15:09.232">
         ${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x0000019B45D89820&gt;
        </msg>
        <status endtime="20240502 20:15:09.232" starttime="20240502 20:15:09.232" status="PASS"/>
       </kw>
       <kw library="Support_Web" name="Update Preferences List">
        <arg>
         ${chrome_options}
        </arg>
        <arg>
         @{list_prefs}
        </arg>
        <kw library="BuiltIn" name="Convert To String">
         <var>
          ${string_prefs}
         </var>
         <arg>
          ${list_prefs}
         </arg>
         <doc>
          Converts the given item to a Unicode string.
         </doc>
         <msg level="INFO" timestamp="20240502 20:15:09.247">
          ${string_prefs} = [[]]
         </msg>
         <status endtime="20240502 20:15:09.247" starttime="20240502 20:15:09.247" status="PASS"/>
        </kw>
        <kw library="BuiltIn" name="Return From Keyword If">
         <arg>
          ${string_prefs} == [[]]
         </arg>
         <doc>
          Returns from the enclosing user keyword if ``condition`` is true.
         </doc>
         <msg level="INFO" timestamp="20240502 20:15:09.247">
          Returning from the enclosing user keyword.
         </msg>
         <status endtime="20240502 20:15:09.247" starttime="20240502 20:15:09.247" status="PASS"/>
        </kw>
        <for flavor="IN">
         <var>
          ${preference}
         </var>
         <value>
          @{list_prefs}
         </value>
         <iter>
          <var name="${preference}"/>
          <kw library="BuiltIn" name="Call Method">
           <arg>
            ${chrome_options}
           </arg>
           <arg>
            add_argument
           </arg>
           <arg>
            ${preference}
           </arg>
           <doc>
            Calls the named method of the given object with the provided arguments.
           </doc>
           <status endtime="20240502 20:15:09.247" starttime="20240502 20:15:09.247" status="NOT RUN"/>
          </kw>
          <status endtime="20240502 20:15:09.247" starttime="20240502 20:15:09.247" status="NOT RUN"/>
         </iter>
         <status endtime="20240502 20:15:09.247" starttime="20240502 20:15:09.247" status="NOT RUN"/>
        </for>
        <status endtime="20240502 20:15:09.247" starttime="20240502 20:15:09.232" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Call Method">
        <arg>
         ${chrome_options}
        </arg>
        <arg>
         add_experimental_option
        </arg>
        <arg>
         prefs
        </arg>
        <arg>
         ${kw_prefs}
        </arg>
        <doc>
         Calls the named method of the given object with the provided arguments.
        </doc>
        <status endtime="20240502 20:15:09.247" starttime="20240502 20:15:09.247" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Global Variable">
        <arg>
         ${global_browser_options}
        </arg>
        <arg>
         ${chrome options}
        </arg>
        <doc>
         Makes a variable available globally in all tests and suites.
        </doc>
        <msg level="INFO" timestamp="20240502 20:15:09.247">
         ${global_browser_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x0000019B45D89820&gt;
        </msg>
        <status endtime="20240502 20:15:09.247" starttime="20240502 20:15:09.247" status="PASS"/>
       </kw>
       <status endtime="20240502 20:15:09.247" starttime="20240502 20:15:09.232" status="PASS"/>
      </kw>
      <status endtime="20240502 20:15:09.247" starttime="20240502 20:15:05.967" status="PASS"/>
     </kw>
     <status endtime="20240502 20:15:09.247" starttime="20240502 20:15:05.967" status="PASS"/>
    </kw>
    <status endtime="20240502 20:15:09.247" starttime="20240502 20:15:05.966" status="PASS"/>
   </kw>
   <kw library="BuiltIn" name="Set Suite Metadata">
    <arg>
     environment
    </arg>
    <arg>
     ${test_server}
    </arg>
    <doc>
     Sets metadata for the current test suite.
    </doc>
    <msg level="INFO" timestamp="20240502 20:15:09.247">
     Set suite metadata 'environment' to value 'Dev'.
    </msg>
    <status endtime="20240502 20:15:09.247" starttime="20240502 20:15:09.247" status="PASS"/>
   </kw>
   <kw library="BuiltIn" name="Set Variable">
    <var>
     ${d.test_server}
    </var>
    <arg>
     ${test_server}
    </arg>
    <doc>
     Returns the given values which can then be assigned to a variables.
    </doc>
    <msg level="INFO" timestamp="20240502 20:16:09.164">
     ${d.test_server} = Dev
    </msg>
    <status endtime="20240502 20:16:09.164" starttime="20240502 20:16:09.164" status="PASS"/>
   </kw>
   <kw library="Support" name="Reset screenshot count variable">
    <kw library="BuiltIn" name="Set Variable">
     <var>
      ${screenshotCount}
     </var>
     <arg>
      ${PABOTQUEUEINDEX}_1
     </arg>
     <doc>
      Returns the given values which can then be assigned to a variables.
     </doc>
     <msg level="INFO" timestamp="20240502 20:16:09.164">
      ${screenshotCount} = 6_1
     </msg>
     <status endtime="20240502 20:16:09.164" starttime="20240502 20:16:09.164" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Set Global Variable">
     <arg>
      ${screenshotCount}
     </arg>
     <doc>
      Makes a variable available globally in all tests and suites.
     </doc>
     <msg level="INFO" timestamp="20240502 20:16:09.164">
      ${screenshotCount} = 6_1
     </msg>
     <status endtime="20240502 20:16:09.164" starttime="20240502 20:16:09.164" status="PASS"/>
    </kw>
    <kw library="Support" name="Set up screenshot directory">
     <kw library="OperatingSystem" name="Create Directory">
      <arg>
       ${OUTPUTDIR}${/}${wvar('screenshot_dir')}
      </arg>
      <doc>
       Creates the specified directory.
      </doc>
      <msg level="INFO" timestamp="20240502 20:16:09.164">
       Web.Dev.screenshot_dir: Screenshot
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:16:09.164">
       Created directory '&lt;a href="file://C:\SAP_Testing\SAPtesting\Output\pabot_results\6\Screenshot"&gt;C:\SAP_Testing\SAPtesting\Output\pabot_results\6\Screenshot&lt;/a&gt;'.
      </msg>
      <status endtime="20240502 20:16:09.164" starttime="20240502 20:16:09.164" status="PASS"/>
     </kw>
     <status endtime="20240502 20:16:09.164" starttime="20240502 20:16:09.164" status="PASS"/>
    </kw>
    <status endtime="20240502 20:16:09.164" starttime="20240502 20:16:09.164" status="PASS"/>
   </kw>
   <kw library="BuiltIn" name="Set Global Variable">
    <arg>
     ${screenshot_taking}
    </arg>
    <arg>
     ${True}
    </arg>
    <doc>
     Makes a variable available globally in all tests and suites.
    </doc>
    <msg level="INFO" timestamp="20240502 20:16:09.164">
     ${screenshot_taking} = True
    </msg>
    <status endtime="20240502 20:16:09.164" starttime="20240502 20:16:09.164" status="PASS"/>
   </kw>
   <kw library="Support" name="Setup linux execution">
    <kw library="BuiltIn" name="Run Keyword And Return Status">
     <var>
      ${web_test_check}
     </var>
     <arg>
      Variable Should Exist
     </arg>
     <arg>
      ${web_test}
     </arg>
     <doc>
      Runs the given keyword with given arguments and returns the status as a Boolean value.
     </doc>
     <kw library="BuiltIn" name="Variable Should Exist">
      <arg>
       ${web_test}
      </arg>
      <doc>
       Fails unless the given variable exists within the current scope.
      </doc>
      <status endtime="20240502 20:16:09.174" starttime="20240502 20:16:09.164" status="PASS"/>
     </kw>
     <msg level="INFO" timestamp="20240502 20:16:09.174">
      ${web_test_check} = True
     </msg>
     <status endtime="20240502 20:16:09.174" starttime="20240502 20:16:09.164" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Run Keyword If">
     <arg>
      ${web_test_check}
     </arg>
     <arg>
      Setup Docker Execution Options
     </arg>
     <doc>
      Runs the given keyword with the given arguments, if ``condition`` is true.
     </doc>
     <kw library="Support_Web" name="Setup Docker Execution Options">
      <kw library="Support_Web" name="Setup Suite Metadata">
       <arg>
        ${browser}
       </arg>
       <kw library="BrowserSupport" name="Get Browser Metadata">
        <var>
         &amp;{browser_information}
        </var>
        <arg>
         browser=${browser}
        </arg>
        <doc>
         Fetches browser metadata information
:param browser: Name of the browser for which information is fetched
:param reload: Re-read the metadata based on the browser
:return: Browser metadata information, dict of format
            {"browser_version": browser version value,
             "driver_version": driver version value}
        </doc>
        <msg level="INFO" timestamp="20240502 20:16:13.496">
         &amp;{browser_information} = { browser_version=124.0.6367.118 | driver_version=124.0.6367.91  }
        </msg>
        <status endtime="20240502 20:16:13.496" starttime="20240502 20:16:09.174" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Suite Metadata">
        <arg>
         test_browser_name
        </arg>
        <arg>
         ${browser}
        </arg>
        <doc>
         Sets metadata for the current test suite.
        </doc>
        <msg level="INFO" timestamp="20240502 20:16:13.497">
         Set suite metadata 'test_browser_name' to value 'chrome'.
        </msg>
        <status endtime="20240502 20:16:13.497" starttime="20240502 20:16:13.497" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Suite Metadata">
        <arg>
         test_browser_version
        </arg>
        <arg>
         ${browser_information.browser_version}
        </arg>
        <doc>
         Sets metadata for the current test suite.
        </doc>
        <msg level="INFO" timestamp="20240502 20:16:13.497">
         Set suite metadata 'test_browser_version' to value '124.0.6367.118'.
        </msg>
        <status endtime="20240502 20:16:13.497" starttime="20240502 20:16:13.497" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Suite Metadata">
        <arg>
         test_driver_version
        </arg>
        <arg>
         ${browser_information.driver_version}
        </arg>
        <doc>
         Sets metadata for the current test suite.
        </doc>
        <msg level="INFO" timestamp="20240502 20:16:13.497">
         Set suite metadata 'test_driver_version' to value '124.0.6367.91 '.
        </msg>
        <status endtime="20240502 20:16:13.497" starttime="20240502 20:16:13.497" status="PASS"/>
       </kw>
       <status endtime="20240502 20:16:13.497" starttime="20240502 20:16:09.174" status="PASS"/>
      </kw>
      <kw library="Support_Web" name="Setup Global Docker Execution Options">
       <kw library="BuiltIn" name="Set Global Variable">
        <arg>
         ${global_browser_options}
        </arg>
        <arg>
         None
        </arg>
        <doc>
         Makes a variable available globally in all tests and suites.
        </doc>
        <msg level="INFO" timestamp="20240502 20:16:13.497">
         ${global_browser_options} = None
        </msg>
        <status endtime="20240502 20:16:13.497" starttime="20240502 20:16:13.497" status="PASS"/>
       </kw>
       <kw library="OperatingSystem" name="Get Environment Variable">
        <var>
         ${docker_check}
        </var>
        <arg>
         EXECUTION_ENVIRONMENT
        </arg>
        <arg>
         not_found
        </arg>
        <doc>
         Returns the value of an environment variable with the given name.
        </doc>
        <msg level="INFO" timestamp="20240502 20:16:13.497">
         ${docker_check} = not_found
        </msg>
        <status endtime="20240502 20:16:13.497" starttime="20240502 20:16:13.497" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Run Keyword And Return If">
        <arg>
         "${docker_check}"!="docker"
        </arg>
        <arg>
         Log
        </arg>
        <arg>
         Not executing on Docker
        </arg>
        <doc>
         Runs the specified keyword and returns from the enclosing user keyword.
        </doc>
        <kw library="BuiltIn" name="Log">
         <arg>
          Not executing on Docker
         </arg>
         <doc>
          Logs the given message with the given level.
         </doc>
         <msg level="INFO" timestamp="20240502 20:16:13.497">
          Not executing on Docker
         </msg>
         <status endtime="20240502 20:16:13.497" starttime="20240502 20:16:13.497" status="PASS"/>
        </kw>
        <msg level="INFO" timestamp="20240502 20:16:13.497">
         Returning from the enclosing user keyword.
        </msg>
        <status endtime="20240502 20:16:13.497" starttime="20240502 20:16:13.497" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Create List">
        <var>
         @{options}
        </var>
        <arg>
         --headless
        </arg>
        <arg>
         --no-sandbox
        </arg>
        <arg>
         --disable-dev-shm-usage
        </arg>
        <doc>
         Returns a list containing given items.
        </doc>
        <status endtime="20240502 20:16:13.497" starttime="20240502 20:16:13.497" status="NOT RUN"/>
       </kw>
       <kw library="BuiltIn" name="Set Global Variable">
        <arg>
         @{docker_options}
        </arg>
        <arg>
         @{options}
        </arg>
        <doc>
         Makes a variable available globally in all tests and suites.
        </doc>
        <status endtime="20240502 20:16:13.497" starttime="20240502 20:16:13.497" status="NOT RUN"/>
       </kw>
       <status endtime="20240502 20:16:13.497" starttime="20240502 20:16:13.497" status="PASS"/>
      </kw>
      <kw library="Support_Web" name="Create Webdriver for chrome preferences">
       <kw library="Support_Web" name="Update Docker Execution Options">
        <var>
         ${list_prefs}
        </var>
        <arg>
         ${list_prefs}
        </arg>
        <kw library="BuiltIn" name="Run Keyword And Return Status">
         <var>
          ${docker_check}
         </var>
         <arg>
          Variable Should Exist
         </arg>
         <arg>
          ${docker_options}
         </arg>
         <doc>
          Runs the given keyword with given arguments and returns the status as a Boolean value.
         </doc>
         <kw library="BuiltIn" name="Variable Should Exist">
          <arg>
           ${docker_options}
          </arg>
          <doc>
           Fails unless the given variable exists within the current scope.
          </doc>
          <msg level="FAIL" timestamp="20240502 20:16:13.497">
           Variable '${docker_options}' does not exist.
          </msg>
          <status endtime="20240502 20:16:13.497" starttime="20240502 20:16:13.497" status="FAIL"/>
         </kw>
         <msg level="INFO" timestamp="20240502 20:16:13.497">
          ${docker_check} = False
         </msg>
         <status endtime="20240502 20:16:13.497" starttime="20240502 20:16:13.497" status="PASS"/>
        </kw>
        <kw library="BuiltIn" name="Get Length">
         <var>
          ${list_prefs_length}
         </var>
         <arg>
          ${list_prefs}
         </arg>
         <doc>
          Returns and logs the length of the given item as an integer.
         </doc>
         <msg level="INFO" timestamp="20240502 20:16:13.497">
          Length is 1
         </msg>
         <msg level="INFO" timestamp="20240502 20:16:13.497">
          ${list_prefs_length} = 1
         </msg>
         <status endtime="20240502 20:16:13.497" starttime="20240502 20:16:13.497" status="PASS"/>
        </kw>
        <kw library="BuiltIn" name="Run Keyword If">
         <var>
          ${list_prefs}
         </var>
         <arg>
          ${docker_check} and ${list_prefs_length}&gt;0 and ${list_prefs}[0] != []
         </arg>
         <arg>
          Combine Lists
         </arg>
         <arg>
          ${list_prefs}
         </arg>
         <arg>
          ${docker_options}
         </arg>
         <arg>
          ELSE IF
         </arg>
         <arg>
          ${docker_check}
         </arg>
         <arg>
          Set Variable
         </arg>
         <arg>
          ${docker_options}
         </arg>
         <arg>
          ELSE
         </arg>
         <arg>
          Set Variable
         </arg>
         <arg>
          ${list_prefs}
         </arg>
         <doc>
          Runs the given keyword with the given arguments, if ``condition`` is true.
         </doc>
         <kw library="BuiltIn" name="Set Variable">
          <arg>
           ${list_prefs}
          </arg>
          <doc>
           Returns the given values which can then be assigned to a variables.
          </doc>
          <status endtime="20240502 20:16:13.497" starttime="20240502 20:16:13.497" status="PASS"/>
         </kw>
         <msg level="INFO" timestamp="20240502 20:16:13.497">
          ${list_prefs} = [[]]
         </msg>
         <status endtime="20240502 20:16:13.497" starttime="20240502 20:16:13.497" status="PASS"/>
        </kw>
        <msg level="INFO" timestamp="20240502 20:16:13.497">
         ${list_prefs} = [[]]
        </msg>
        <status endtime="20240502 20:16:13.497" starttime="20240502 20:16:13.497" status="PASS"/>
       </kw>
       <kw library="Support_Web" name="Create Chrome Options for download preferences">
        <var>
         ${chrome_options}
        </var>
        <kw library="BuiltIn" name="Evaluate">
         <var>
          ${chrome_options}
         </var>
         <arg>
          sys.modules['selenium.webdriver'].ChromeOptions()
         </arg>
         <arg>
          sys
         </arg>
         <doc>
          Evaluates the given expression in Python and returns the result.
         </doc>
         <msg level="INFO" timestamp="20240502 20:16:13.497">
          ${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x000001918AA9A060&gt;
         </msg>
         <status endtime="20240502 20:16:13.497" starttime="20240502 20:16:13.497" status="PASS"/>
        </kw>
        <msg level="INFO" timestamp="20240502 20:16:13.497">
         ${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x000001918AA9A060&gt;
        </msg>
        <status endtime="20240502 20:16:13.497" starttime="20240502 20:16:13.497" status="PASS"/>
       </kw>
       <kw library="Support_Web" name="Update Preferences List">
        <arg>
         ${chrome_options}
        </arg>
        <arg>
         @{list_prefs}
        </arg>
        <kw library="BuiltIn" name="Convert To String">
         <var>
          ${string_prefs}
         </var>
         <arg>
          ${list_prefs}
         </arg>
         <doc>
          Converts the given item to a Unicode string.
         </doc>
         <msg level="INFO" timestamp="20240502 20:16:13.497">
          ${string_prefs} = [[]]
         </msg>
         <status endtime="20240502 20:16:13.497" starttime="20240502 20:16:13.497" status="PASS"/>
        </kw>
        <kw library="BuiltIn" name="Return From Keyword If">
         <arg>
          ${string_prefs} == [[]]
         </arg>
         <doc>
          Returns from the enclosing user keyword if ``condition`` is true.
         </doc>
         <msg level="INFO" timestamp="20240502 20:16:13.513">
          Returning from the enclosing user keyword.
         </msg>
         <status endtime="20240502 20:16:13.513" starttime="20240502 20:16:13.513" status="PASS"/>
        </kw>
        <for flavor="IN">
         <var>
          ${preference}
         </var>
         <value>
          @{list_prefs}
         </value>
         <iter>
          <var name="${preference}"/>
          <kw library="BuiltIn" name="Call Method">
           <arg>
            ${chrome_options}
           </arg>
           <arg>
            add_argument
           </arg>
           <arg>
            ${preference}
           </arg>
           <doc>
            Calls the named method of the given object with the provided arguments.
           </doc>
           <status endtime="20240502 20:16:13.513" starttime="20240502 20:16:13.513" status="NOT RUN"/>
          </kw>
          <status endtime="20240502 20:16:13.513" starttime="20240502 20:16:13.513" status="NOT RUN"/>
         </iter>
         <status endtime="20240502 20:16:13.513" starttime="20240502 20:16:13.513" status="NOT RUN"/>
        </for>
        <status endtime="20240502 20:16:13.513" starttime="20240502 20:16:13.497" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Call Method">
        <arg>
         ${chrome_options}
        </arg>
        <arg>
         add_experimental_option
        </arg>
        <arg>
         prefs
        </arg>
        <arg>
         ${kw_prefs}
        </arg>
        <doc>
         Calls the named method of the given object with the provided arguments.
        </doc>
        <status endtime="20240502 20:16:13.513" starttime="20240502 20:16:13.513" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Global Variable">
        <arg>
         ${global_browser_options}
        </arg>
        <arg>
         ${chrome options}
        </arg>
        <doc>
         Makes a variable available globally in all tests and suites.
        </doc>
        <msg level="INFO" timestamp="20240502 20:16:13.513">
         ${global_browser_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x000001918AA9A060&gt;
        </msg>
        <status endtime="20240502 20:16:13.513" starttime="20240502 20:16:13.513" status="PASS"/>
       </kw>
       <status endtime="20240502 20:16:13.513" starttime="20240502 20:16:13.497" status="PASS"/>
      </kw>
      <status endtime="20240502 20:16:13.513" starttime="20240502 20:16:09.174" status="PASS"/>
     </kw>
     <status endtime="20240502 20:16:13.513" starttime="20240502 20:16:09.174" status="PASS"/>
    </kw>
    <status endtime="20240502 20:16:13.513" starttime="20240502 20:16:09.164" status="PASS"/>
   </kw>
   <kw library="BuiltIn" name="Set Suite Metadata">
    <arg>
     environment
    </arg>
    <arg>
     ${test_server}
    </arg>
    <doc>
     Sets metadata for the current test suite.
    </doc>
    <msg level="INFO" timestamp="20240502 20:16:13.513">
     Set suite metadata 'environment' to value 'Dev'.
    </msg>
    <status endtime="20240502 20:16:13.513" starttime="20240502 20:16:13.513" status="PASS"/>
   </kw>
   <kw library="BuiltIn" name="Set Variable">
    <var>
     ${d.test_server}
    </var>
    <arg>
     ${test_server}
    </arg>
    <doc>
     Returns the given values which can then be assigned to a variables.
    </doc>
    <msg level="INFO" timestamp="20240502 20:16:36.009">
     ${d.test_server} = Dev
    </msg>
    <status endtime="20240502 20:16:36.009" starttime="20240502 20:16:36.009" status="PASS"/>
   </kw>
   <kw library="Support" name="Reset screenshot count variable">
    <kw library="BuiltIn" name="Set Variable">
     <var>
      ${screenshotCount}
     </var>
     <arg>
      ${PABOTQUEUEINDEX}_1
     </arg>
     <doc>
      Returns the given values which can then be assigned to a variables.
     </doc>
     <msg level="INFO" timestamp="20240502 20:16:36.010">
      ${screenshotCount} = 7_1
     </msg>
     <status endtime="20240502 20:16:36.010" starttime="20240502 20:16:36.010" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Set Global Variable">
     <arg>
      ${screenshotCount}
     </arg>
     <doc>
      Makes a variable available globally in all tests and suites.
     </doc>
     <msg level="INFO" timestamp="20240502 20:16:36.011">
      ${screenshotCount} = 7_1
     </msg>
     <status endtime="20240502 20:16:36.011" starttime="20240502 20:16:36.011" status="PASS"/>
    </kw>
    <kw library="Support" name="Set up screenshot directory">
     <kw library="OperatingSystem" name="Create Directory">
      <arg>
       ${OUTPUTDIR}${/}${wvar('screenshot_dir')}
      </arg>
      <doc>
       Creates the specified directory.
      </doc>
      <msg level="INFO" timestamp="20240502 20:16:36.012">
       Web.Dev.screenshot_dir: Screenshot
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:16:36.018">
       Created directory '&lt;a href="file://C:\SAP_Testing\SAPtesting\Output\pabot_results\7\Screenshot"&gt;C:\SAP_Testing\SAPtesting\Output\pabot_results\7\Screenshot&lt;/a&gt;'.
      </msg>
      <status endtime="20240502 20:16:36.019" starttime="20240502 20:16:36.012" status="PASS"/>
     </kw>
     <status endtime="20240502 20:16:36.019" starttime="20240502 20:16:36.011" status="PASS"/>
    </kw>
    <status endtime="20240502 20:16:36.019" starttime="20240502 20:16:36.009" status="PASS"/>
   </kw>
   <kw library="BuiltIn" name="Set Global Variable">
    <arg>
     ${screenshot_taking}
    </arg>
    <arg>
     ${True}
    </arg>
    <doc>
     Makes a variable available globally in all tests and suites.
    </doc>
    <msg level="INFO" timestamp="20240502 20:16:36.020">
     ${screenshot_taking} = True
    </msg>
    <status endtime="20240502 20:16:36.020" starttime="20240502 20:16:36.020" status="PASS"/>
   </kw>
   <kw library="Support" name="Setup linux execution">
    <kw library="BuiltIn" name="Run Keyword And Return Status">
     <var>
      ${web_test_check}
     </var>
     <arg>
      Variable Should Exist
     </arg>
     <arg>
      ${web_test}
     </arg>
     <doc>
      Runs the given keyword with given arguments and returns the status as a Boolean value.
     </doc>
     <kw library="BuiltIn" name="Variable Should Exist">
      <arg>
       ${web_test}
      </arg>
      <doc>
       Fails unless the given variable exists within the current scope.
      </doc>
      <status endtime="20240502 20:16:36.022" starttime="20240502 20:16:36.021" status="PASS"/>
     </kw>
     <msg level="INFO" timestamp="20240502 20:16:36.022">
      ${web_test_check} = True
     </msg>
     <status endtime="20240502 20:16:36.022" starttime="20240502 20:16:36.021" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Run Keyword If">
     <arg>
      ${web_test_check}
     </arg>
     <arg>
      Setup Docker Execution Options
     </arg>
     <doc>
      Runs the given keyword with the given arguments, if ``condition`` is true.
     </doc>
     <kw library="Support_Web" name="Setup Docker Execution Options">
      <kw library="Support_Web" name="Setup Suite Metadata">
       <arg>
        ${browser}
       </arg>
       <kw library="BrowserSupport" name="Get Browser Metadata">
        <var>
         &amp;{browser_information}
        </var>
        <arg>
         browser=${browser}
        </arg>
        <doc>
         Fetches browser metadata information
:param browser: Name of the browser for which information is fetched
:param reload: Re-read the metadata based on the browser
:return: Browser metadata information, dict of format
            {"browser_version": browser version value,
             "driver_version": driver version value}
        </doc>
        <msg level="INFO" timestamp="20240502 20:16:40.646">
         &amp;{browser_information} = { browser_version=124.0.6367.118 | driver_version=124.0.6367.91  }
        </msg>
        <status endtime="20240502 20:16:40.647" starttime="20240502 20:16:36.023" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Suite Metadata">
        <arg>
         test_browser_name
        </arg>
        <arg>
         ${browser}
        </arg>
        <doc>
         Sets metadata for the current test suite.
        </doc>
        <msg level="INFO" timestamp="20240502 20:16:40.648">
         Set suite metadata 'test_browser_name' to value 'chrome'.
        </msg>
        <status endtime="20240502 20:16:40.648" starttime="20240502 20:16:40.647" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Suite Metadata">
        <arg>
         test_browser_version
        </arg>
        <arg>
         ${browser_information.browser_version}
        </arg>
        <doc>
         Sets metadata for the current test suite.
        </doc>
        <msg level="INFO" timestamp="20240502 20:16:40.649">
         Set suite metadata 'test_browser_version' to value '124.0.6367.118'.
        </msg>
        <status endtime="20240502 20:16:40.649" starttime="20240502 20:16:40.648" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Suite Metadata">
        <arg>
         test_driver_version
        </arg>
        <arg>
         ${browser_information.driver_version}
        </arg>
        <doc>
         Sets metadata for the current test suite.
        </doc>
        <msg level="INFO" timestamp="20240502 20:16:40.650">
         Set suite metadata 'test_driver_version' to value '124.0.6367.91 '.
        </msg>
        <status endtime="20240502 20:16:40.650" starttime="20240502 20:16:40.649" status="PASS"/>
       </kw>
       <status endtime="20240502 20:16:40.651" starttime="20240502 20:16:36.023" status="PASS"/>
      </kw>
      <kw library="Support_Web" name="Setup Global Docker Execution Options">
       <kw library="BuiltIn" name="Set Global Variable">
        <arg>
         ${global_browser_options}
        </arg>
        <arg>
         None
        </arg>
        <doc>
         Makes a variable available globally in all tests and suites.
        </doc>
        <msg level="INFO" timestamp="20240502 20:16:40.653">
         ${global_browser_options} = None
        </msg>
        <status endtime="20240502 20:16:40.653" starttime="20240502 20:16:40.651" status="PASS"/>
       </kw>
       <kw library="OperatingSystem" name="Get Environment Variable">
        <var>
         ${docker_check}
        </var>
        <arg>
         EXECUTION_ENVIRONMENT
        </arg>
        <arg>
         not_found
        </arg>
        <doc>
         Returns the value of an environment variable with the given name.
        </doc>
        <msg level="INFO" timestamp="20240502 20:16:40.653">
         ${docker_check} = not_found
        </msg>
        <status endtime="20240502 20:16:40.653" starttime="20240502 20:16:40.653" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Run Keyword And Return If">
        <arg>
         "${docker_check}"!="docker"
        </arg>
        <arg>
         Log
        </arg>
        <arg>
         Not executing on Docker
        </arg>
        <doc>
         Runs the specified keyword and returns from the enclosing user keyword.
        </doc>
        <kw library="BuiltIn" name="Log">
         <arg>
          Not executing on Docker
         </arg>
         <doc>
          Logs the given message with the given level.
         </doc>
         <msg level="INFO" timestamp="20240502 20:16:40.654">
          Not executing on Docker
         </msg>
         <status endtime="20240502 20:16:40.654" starttime="20240502 20:16:40.654" status="PASS"/>
        </kw>
        <msg level="INFO" timestamp="20240502 20:16:40.654">
         Returning from the enclosing user keyword.
        </msg>
        <status endtime="20240502 20:16:40.654" starttime="20240502 20:16:40.653" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Create List">
        <var>
         @{options}
        </var>
        <arg>
         --headless
        </arg>
        <arg>
         --no-sandbox
        </arg>
        <arg>
         --disable-dev-shm-usage
        </arg>
        <doc>
         Returns a list containing given items.
        </doc>
        <status endtime="20240502 20:16:40.655" starttime="20240502 20:16:40.655" status="NOT RUN"/>
       </kw>
       <kw library="BuiltIn" name="Set Global Variable">
        <arg>
         @{docker_options}
        </arg>
        <arg>
         @{options}
        </arg>
        <doc>
         Makes a variable available globally in all tests and suites.
        </doc>
        <status endtime="20240502 20:16:40.655" starttime="20240502 20:16:40.655" status="NOT RUN"/>
       </kw>
       <status endtime="20240502 20:16:40.655" starttime="20240502 20:16:40.651" status="PASS"/>
      </kw>
      <kw library="Support_Web" name="Create Webdriver for chrome preferences">
       <kw library="Support_Web" name="Update Docker Execution Options">
        <var>
         ${list_prefs}
        </var>
        <arg>
         ${list_prefs}
        </arg>
        <kw library="BuiltIn" name="Run Keyword And Return Status">
         <var>
          ${docker_check}
         </var>
         <arg>
          Variable Should Exist
         </arg>
         <arg>
          ${docker_options}
         </arg>
         <doc>
          Runs the given keyword with given arguments and returns the status as a Boolean value.
         </doc>
         <kw library="BuiltIn" name="Variable Should Exist">
          <arg>
           ${docker_options}
          </arg>
          <doc>
           Fails unless the given variable exists within the current scope.
          </doc>
          <msg level="FAIL" timestamp="20240502 20:16:40.659">
           Variable '${docker_options}' does not exist.
          </msg>
          <status endtime="20240502 20:16:40.659" starttime="20240502 20:16:40.656" status="FAIL"/>
         </kw>
         <msg level="INFO" timestamp="20240502 20:16:40.659">
          ${docker_check} = False
         </msg>
         <status endtime="20240502 20:16:40.659" starttime="20240502 20:16:40.656" status="PASS"/>
        </kw>
        <kw library="BuiltIn" name="Get Length">
         <var>
          ${list_prefs_length}
         </var>
         <arg>
          ${list_prefs}
         </arg>
         <doc>
          Returns and logs the length of the given item as an integer.
         </doc>
         <msg level="INFO" timestamp="20240502 20:16:40.660">
          Length is 1
         </msg>
         <msg level="INFO" timestamp="20240502 20:16:40.660">
          ${list_prefs_length} = 1
         </msg>
         <status endtime="20240502 20:16:40.660" starttime="20240502 20:16:40.659" status="PASS"/>
        </kw>
        <kw library="BuiltIn" name="Run Keyword If">
         <var>
          ${list_prefs}
         </var>
         <arg>
          ${docker_check} and ${list_prefs_length}&gt;0 and ${list_prefs}[0] != []
         </arg>
         <arg>
          Combine Lists
         </arg>
         <arg>
          ${list_prefs}
         </arg>
         <arg>
          ${docker_options}
         </arg>
         <arg>
          ELSE IF
         </arg>
         <arg>
          ${docker_check}
         </arg>
         <arg>
          Set Variable
         </arg>
         <arg>
          ${docker_options}
         </arg>
         <arg>
          ELSE
         </arg>
         <arg>
          Set Variable
         </arg>
         <arg>
          ${list_prefs}
         </arg>
         <doc>
          Runs the given keyword with the given arguments, if ``condition`` is true.
         </doc>
         <kw library="BuiltIn" name="Set Variable">
          <arg>
           ${list_prefs}
          </arg>
          <doc>
           Returns the given values which can then be assigned to a variables.
          </doc>
          <status endtime="20240502 20:16:40.661" starttime="20240502 20:16:40.660" status="PASS"/>
         </kw>
         <msg level="INFO" timestamp="20240502 20:16:40.661">
          ${list_prefs} = [[]]
         </msg>
         <status endtime="20240502 20:16:40.661" starttime="20240502 20:16:40.660" status="PASS"/>
        </kw>
        <msg level="INFO" timestamp="20240502 20:16:40.661">
         ${list_prefs} = [[]]
        </msg>
        <status endtime="20240502 20:16:40.661" starttime="20240502 20:16:40.656" status="PASS"/>
       </kw>
       <kw library="Support_Web" name="Create Chrome Options for download preferences">
        <var>
         ${chrome_options}
        </var>
        <kw library="BuiltIn" name="Evaluate">
         <var>
          ${chrome_options}
         </var>
         <arg>
          sys.modules['selenium.webdriver'].ChromeOptions()
         </arg>
         <arg>
          sys
         </arg>
         <doc>
          Evaluates the given expression in Python and returns the result.
         </doc>
         <msg level="INFO" timestamp="20240502 20:16:40.662">
          ${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x00000284BA3B9A00&gt;
         </msg>
         <status endtime="20240502 20:16:40.662" starttime="20240502 20:16:40.661" status="PASS"/>
        </kw>
        <msg level="INFO" timestamp="20240502 20:16:40.662">
         ${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x00000284BA3B9A00&gt;
        </msg>
        <status endtime="20240502 20:16:40.662" starttime="20240502 20:16:40.661" status="PASS"/>
       </kw>
       <kw library="Support_Web" name="Update Preferences List">
        <arg>
         ${chrome_options}
        </arg>
        <arg>
         @{list_prefs}
        </arg>
        <kw library="BuiltIn" name="Convert To String">
         <var>
          ${string_prefs}
         </var>
         <arg>
          ${list_prefs}
         </arg>
         <doc>
          Converts the given item to a Unicode string.
         </doc>
         <msg level="INFO" timestamp="20240502 20:16:40.663">
          ${string_prefs} = [[]]
         </msg>
         <status endtime="20240502 20:16:40.663" starttime="20240502 20:16:40.663" status="PASS"/>
        </kw>
        <kw library="BuiltIn" name="Return From Keyword If">
         <arg>
          ${string_prefs} == [[]]
         </arg>
         <doc>
          Returns from the enclosing user keyword if ``condition`` is true.
         </doc>
         <msg level="INFO" timestamp="20240502 20:16:40.663">
          Returning from the enclosing user keyword.
         </msg>
         <status endtime="20240502 20:16:40.663" starttime="20240502 20:16:40.663" status="PASS"/>
        </kw>
        <for flavor="IN">
         <var>
          ${preference}
         </var>
         <value>
          @{list_prefs}
         </value>
         <iter>
          <var name="${preference}"/>
          <kw library="BuiltIn" name="Call Method">
           <arg>
            ${chrome_options}
           </arg>
           <arg>
            add_argument
           </arg>
           <arg>
            ${preference}
           </arg>
           <doc>
            Calls the named method of the given object with the provided arguments.
           </doc>
           <status endtime="20240502 20:16:40.664" starttime="20240502 20:16:40.664" status="NOT RUN"/>
          </kw>
          <status endtime="20240502 20:16:40.664" starttime="20240502 20:16:40.664" status="NOT RUN"/>
         </iter>
         <status endtime="20240502 20:16:40.664" starttime="20240502 20:16:40.664" status="NOT RUN"/>
        </for>
        <status endtime="20240502 20:16:40.664" starttime="20240502 20:16:40.662" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Call Method">
        <arg>
         ${chrome_options}
        </arg>
        <arg>
         add_experimental_option
        </arg>
        <arg>
         prefs
        </arg>
        <arg>
         ${kw_prefs}
        </arg>
        <doc>
         Calls the named method of the given object with the provided arguments.
        </doc>
        <status endtime="20240502 20:16:40.665" starttime="20240502 20:16:40.665" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Global Variable">
        <arg>
         ${global_browser_options}
        </arg>
        <arg>
         ${chrome options}
        </arg>
        <doc>
         Makes a variable available globally in all tests and suites.
        </doc>
        <msg level="INFO" timestamp="20240502 20:16:40.665">
         ${global_browser_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x00000284BA3B9A00&gt;
        </msg>
        <status endtime="20240502 20:16:40.666" starttime="20240502 20:16:40.665" status="PASS"/>
       </kw>
       <status endtime="20240502 20:16:40.666" starttime="20240502 20:16:40.655" status="PASS"/>
      </kw>
      <status endtime="20240502 20:16:40.666" starttime="20240502 20:16:36.023" status="PASS"/>
     </kw>
     <status endtime="20240502 20:16:40.666" starttime="20240502 20:16:36.022" status="PASS"/>
    </kw>
    <status endtime="20240502 20:16:40.666" starttime="20240502 20:16:36.020" status="PASS"/>
   </kw>
   <kw library="BuiltIn" name="Set Suite Metadata">
    <arg>
     environment
    </arg>
    <arg>
     ${test_server}
    </arg>
    <doc>
     Sets metadata for the current test suite.
    </doc>
    <msg level="INFO" timestamp="20240502 20:16:40.667">
     Set suite metadata 'environment' to value 'Dev'.
    </msg>
    <status endtime="20240502 20:16:40.667" starttime="20240502 20:16:40.666" status="PASS"/>
   </kw>
   <kw library="BuiltIn" name="Set Variable">
    <var>
     ${d.test_server}
    </var>
    <arg>
     ${test_server}
    </arg>
    <doc>
     Returns the given values which can then be assigned to a variables.
    </doc>
    <msg level="INFO" timestamp="20240502 20:16:53.169">
     ${d.test_server} = Dev
    </msg>
    <status endtime="20240502 20:16:53.169" starttime="20240502 20:16:53.169" status="PASS"/>
   </kw>
   <kw library="Support" name="Reset screenshot count variable">
    <kw library="BuiltIn" name="Set Variable">
     <var>
      ${screenshotCount}
     </var>
     <arg>
      ${PABOTQUEUEINDEX}_1
     </arg>
     <doc>
      Returns the given values which can then be assigned to a variables.
     </doc>
     <msg level="INFO" timestamp="20240502 20:16:53.169">
      ${screenshotCount} = 8_1
     </msg>
     <status endtime="20240502 20:16:53.169" starttime="20240502 20:16:53.169" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Set Global Variable">
     <arg>
      ${screenshotCount}
     </arg>
     <doc>
      Makes a variable available globally in all tests and suites.
     </doc>
     <msg level="INFO" timestamp="20240502 20:16:53.169">
      ${screenshotCount} = 8_1
     </msg>
     <status endtime="20240502 20:16:53.169" starttime="20240502 20:16:53.169" status="PASS"/>
    </kw>
    <kw library="Support" name="Set up screenshot directory">
     <kw library="OperatingSystem" name="Create Directory">
      <arg>
       ${OUTPUTDIR}${/}${wvar('screenshot_dir')}
      </arg>
      <doc>
       Creates the specified directory.
      </doc>
      <msg level="INFO" timestamp="20240502 20:16:53.169">
       Web.Dev.screenshot_dir: Screenshot
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:16:53.169">
       Created directory '&lt;a href="file://C:\SAP_Testing\SAPtesting\Output\pabot_results\8\Screenshot"&gt;C:\SAP_Testing\SAPtesting\Output\pabot_results\8\Screenshot&lt;/a&gt;'.
      </msg>
      <status endtime="20240502 20:16:53.169" starttime="20240502 20:16:53.169" status="PASS"/>
     </kw>
     <status endtime="20240502 20:16:53.169" starttime="20240502 20:16:53.169" status="PASS"/>
    </kw>
    <status endtime="20240502 20:16:53.169" starttime="20240502 20:16:53.169" status="PASS"/>
   </kw>
   <kw library="BuiltIn" name="Set Global Variable">
    <arg>
     ${screenshot_taking}
    </arg>
    <arg>
     ${True}
    </arg>
    <doc>
     Makes a variable available globally in all tests and suites.
    </doc>
    <msg level="INFO" timestamp="20240502 20:16:53.169">
     ${screenshot_taking} = True
    </msg>
    <status endtime="20240502 20:16:53.169" starttime="20240502 20:16:53.169" status="PASS"/>
   </kw>
   <kw library="Support" name="Setup linux execution">
    <kw library="BuiltIn" name="Run Keyword And Return Status">
     <var>
      ${web_test_check}
     </var>
     <arg>
      Variable Should Exist
     </arg>
     <arg>
      ${web_test}
     </arg>
     <doc>
      Runs the given keyword with given arguments and returns the status as a Boolean value.
     </doc>
     <kw library="BuiltIn" name="Variable Should Exist">
      <arg>
       ${web_test}
      </arg>
      <doc>
       Fails unless the given variable exists within the current scope.
      </doc>
      <status endtime="20240502 20:16:53.179" starttime="20240502 20:16:53.179" status="PASS"/>
     </kw>
     <msg level="INFO" timestamp="20240502 20:16:53.179">
      ${web_test_check} = True
     </msg>
     <status endtime="20240502 20:16:53.180" starttime="20240502 20:16:53.169" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Run Keyword If">
     <arg>
      ${web_test_check}
     </arg>
     <arg>
      Setup Docker Execution Options
     </arg>
     <doc>
      Runs the given keyword with the given arguments, if ``condition`` is true.
     </doc>
     <kw library="Support_Web" name="Setup Docker Execution Options">
      <kw library="Support_Web" name="Setup Suite Metadata">
       <arg>
        ${browser}
       </arg>
       <kw library="BrowserSupport" name="Get Browser Metadata">
        <var>
         &amp;{browser_information}
        </var>
        <arg>
         browser=${browser}
        </arg>
        <doc>
         Fetches browser metadata information
:param browser: Name of the browser for which information is fetched
:param reload: Re-read the metadata based on the browser
:return: Browser metadata information, dict of format
            {"browser_version": browser version value,
             "driver_version": driver version value}
        </doc>
        <msg level="INFO" timestamp="20240502 20:16:57.655">
         &amp;{browser_information} = { browser_version=124.0.6367.118 | driver_version=124.0.6367.91  }
        </msg>
        <status endtime="20240502 20:16:57.655" starttime="20240502 20:16:53.180" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Suite Metadata">
        <arg>
         test_browser_name
        </arg>
        <arg>
         ${browser}
        </arg>
        <doc>
         Sets metadata for the current test suite.
        </doc>
        <msg level="INFO" timestamp="20240502 20:16:57.655">
         Set suite metadata 'test_browser_name' to value 'chrome'.
        </msg>
        <status endtime="20240502 20:16:57.655" starttime="20240502 20:16:57.655" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Suite Metadata">
        <arg>
         test_browser_version
        </arg>
        <arg>
         ${browser_information.browser_version}
        </arg>
        <doc>
         Sets metadata for the current test suite.
        </doc>
        <msg level="INFO" timestamp="20240502 20:16:57.655">
         Set suite metadata 'test_browser_version' to value '124.0.6367.118'.
        </msg>
        <status endtime="20240502 20:16:57.655" starttime="20240502 20:16:57.655" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Suite Metadata">
        <arg>
         test_driver_version
        </arg>
        <arg>
         ${browser_information.driver_version}
        </arg>
        <doc>
         Sets metadata for the current test suite.
        </doc>
        <msg level="INFO" timestamp="20240502 20:16:57.655">
         Set suite metadata 'test_driver_version' to value '124.0.6367.91 '.
        </msg>
        <status endtime="20240502 20:16:57.655" starttime="20240502 20:16:57.655" status="PASS"/>
       </kw>
       <status endtime="20240502 20:16:57.655" starttime="20240502 20:16:53.180" status="PASS"/>
      </kw>
      <kw library="Support_Web" name="Setup Global Docker Execution Options">
       <kw library="BuiltIn" name="Set Global Variable">
        <arg>
         ${global_browser_options}
        </arg>
        <arg>
         None
        </arg>
        <doc>
         Makes a variable available globally in all tests and suites.
        </doc>
        <msg level="INFO" timestamp="20240502 20:16:57.655">
         ${global_browser_options} = None
        </msg>
        <status endtime="20240502 20:16:57.655" starttime="20240502 20:16:57.655" status="PASS"/>
       </kw>
       <kw library="OperatingSystem" name="Get Environment Variable">
        <var>
         ${docker_check}
        </var>
        <arg>
         EXECUTION_ENVIRONMENT
        </arg>
        <arg>
         not_found
        </arg>
        <doc>
         Returns the value of an environment variable with the given name.
        </doc>
        <msg level="INFO" timestamp="20240502 20:16:57.655">
         ${docker_check} = not_found
        </msg>
        <status endtime="20240502 20:16:57.655" starttime="20240502 20:16:57.655" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Run Keyword And Return If">
        <arg>
         "${docker_check}"!="docker"
        </arg>
        <arg>
         Log
        </arg>
        <arg>
         Not executing on Docker
        </arg>
        <doc>
         Runs the specified keyword and returns from the enclosing user keyword.
        </doc>
        <kw library="BuiltIn" name="Log">
         <arg>
          Not executing on Docker
         </arg>
         <doc>
          Logs the given message with the given level.
         </doc>
         <msg level="INFO" timestamp="20240502 20:16:57.655">
          Not executing on Docker
         </msg>
         <status endtime="20240502 20:16:57.655" starttime="20240502 20:16:57.655" status="PASS"/>
        </kw>
        <msg level="INFO" timestamp="20240502 20:16:57.655">
         Returning from the enclosing user keyword.
        </msg>
        <status endtime="20240502 20:16:57.655" starttime="20240502 20:16:57.655" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Create List">
        <var>
         @{options}
        </var>
        <arg>
         --headless
        </arg>
        <arg>
         --no-sandbox
        </arg>
        <arg>
         --disable-dev-shm-usage
        </arg>
        <doc>
         Returns a list containing given items.
        </doc>
        <status endtime="20240502 20:16:57.655" starttime="20240502 20:16:57.655" status="NOT RUN"/>
       </kw>
       <kw library="BuiltIn" name="Set Global Variable">
        <arg>
         @{docker_options}
        </arg>
        <arg>
         @{options}
        </arg>
        <doc>
         Makes a variable available globally in all tests and suites.
        </doc>
        <status endtime="20240502 20:16:57.655" starttime="20240502 20:16:57.655" status="NOT RUN"/>
       </kw>
       <status endtime="20240502 20:16:57.655" starttime="20240502 20:16:57.655" status="PASS"/>
      </kw>
      <kw library="Support_Web" name="Create Webdriver for chrome preferences">
       <kw library="Support_Web" name="Update Docker Execution Options">
        <var>
         ${list_prefs}
        </var>
        <arg>
         ${list_prefs}
        </arg>
        <kw library="BuiltIn" name="Run Keyword And Return Status">
         <var>
          ${docker_check}
         </var>
         <arg>
          Variable Should Exist
         </arg>
         <arg>
          ${docker_options}
         </arg>
         <doc>
          Runs the given keyword with given arguments and returns the status as a Boolean value.
         </doc>
         <kw library="BuiltIn" name="Variable Should Exist">
          <arg>
           ${docker_options}
          </arg>
          <doc>
           Fails unless the given variable exists within the current scope.
          </doc>
          <msg level="FAIL" timestamp="20240502 20:16:57.655">
           Variable '${docker_options}' does not exist.
          </msg>
          <status endtime="20240502 20:16:57.655" starttime="20240502 20:16:57.655" status="FAIL"/>
         </kw>
         <msg level="INFO" timestamp="20240502 20:16:57.655">
          ${docker_check} = False
         </msg>
         <status endtime="20240502 20:16:57.655" starttime="20240502 20:16:57.655" status="PASS"/>
        </kw>
        <kw library="BuiltIn" name="Get Length">
         <var>
          ${list_prefs_length}
         </var>
         <arg>
          ${list_prefs}
         </arg>
         <doc>
          Returns and logs the length of the given item as an integer.
         </doc>
         <msg level="INFO" timestamp="20240502 20:16:57.655">
          Length is 1
         </msg>
         <msg level="INFO" timestamp="20240502 20:16:57.655">
          ${list_prefs_length} = 1
         </msg>
         <status endtime="20240502 20:16:57.655" starttime="20240502 20:16:57.655" status="PASS"/>
        </kw>
        <kw library="BuiltIn" name="Run Keyword If">
         <var>
          ${list_prefs}
         </var>
         <arg>
          ${docker_check} and ${list_prefs_length}&gt;0 and ${list_prefs}[0] != []
         </arg>
         <arg>
          Combine Lists
         </arg>
         <arg>
          ${list_prefs}
         </arg>
         <arg>
          ${docker_options}
         </arg>
         <arg>
          ELSE IF
         </arg>
         <arg>
          ${docker_check}
         </arg>
         <arg>
          Set Variable
         </arg>
         <arg>
          ${docker_options}
         </arg>
         <arg>
          ELSE
         </arg>
         <arg>
          Set Variable
         </arg>
         <arg>
          ${list_prefs}
         </arg>
         <doc>
          Runs the given keyword with the given arguments, if ``condition`` is true.
         </doc>
         <kw library="BuiltIn" name="Set Variable">
          <arg>
           ${list_prefs}
          </arg>
          <doc>
           Returns the given values which can then be assigned to a variables.
          </doc>
          <status endtime="20240502 20:16:57.655" starttime="20240502 20:16:57.655" status="PASS"/>
         </kw>
         <msg level="INFO" timestamp="20240502 20:16:57.655">
          ${list_prefs} = [[]]
         </msg>
         <status endtime="20240502 20:16:57.655" starttime="20240502 20:16:57.655" status="PASS"/>
        </kw>
        <msg level="INFO" timestamp="20240502 20:16:57.655">
         ${list_prefs} = [[]]
        </msg>
        <status endtime="20240502 20:16:57.655" starttime="20240502 20:16:57.655" status="PASS"/>
       </kw>
       <kw library="Support_Web" name="Create Chrome Options for download preferences">
        <var>
         ${chrome_options}
        </var>
        <kw library="BuiltIn" name="Evaluate">
         <var>
          ${chrome_options}
         </var>
         <arg>
          sys.modules['selenium.webdriver'].ChromeOptions()
         </arg>
         <arg>
          sys
         </arg>
         <doc>
          Evaluates the given expression in Python and returns the result.
         </doc>
         <msg level="INFO" timestamp="20240502 20:16:57.655">
          ${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x000002147907A000&gt;
         </msg>
         <status endtime="20240502 20:16:57.655" starttime="20240502 20:16:57.655" status="PASS"/>
        </kw>
        <msg level="INFO" timestamp="20240502 20:16:57.655">
         ${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x000002147907A000&gt;
        </msg>
        <status endtime="20240502 20:16:57.655" starttime="20240502 20:16:57.655" status="PASS"/>
       </kw>
       <kw library="Support_Web" name="Update Preferences List">
        <arg>
         ${chrome_options}
        </arg>
        <arg>
         @{list_prefs}
        </arg>
        <kw library="BuiltIn" name="Convert To String">
         <var>
          ${string_prefs}
         </var>
         <arg>
          ${list_prefs}
         </arg>
         <doc>
          Converts the given item to a Unicode string.
         </doc>
         <msg level="INFO" timestamp="20240502 20:16:57.671">
          ${string_prefs} = [[]]
         </msg>
         <status endtime="20240502 20:16:57.671" starttime="20240502 20:16:57.671" status="PASS"/>
        </kw>
        <kw library="BuiltIn" name="Return From Keyword If">
         <arg>
          ${string_prefs} == [[]]
         </arg>
         <doc>
          Returns from the enclosing user keyword if ``condition`` is true.
         </doc>
         <msg level="INFO" timestamp="20240502 20:16:57.671">
          Returning from the enclosing user keyword.
         </msg>
         <status endtime="20240502 20:16:57.671" starttime="20240502 20:16:57.671" status="PASS"/>
        </kw>
        <for flavor="IN">
         <var>
          ${preference}
         </var>
         <value>
          @{list_prefs}
         </value>
         <iter>
          <var name="${preference}"/>
          <kw library="BuiltIn" name="Call Method">
           <arg>
            ${chrome_options}
           </arg>
           <arg>
            add_argument
           </arg>
           <arg>
            ${preference}
           </arg>
           <doc>
            Calls the named method of the given object with the provided arguments.
           </doc>
           <status endtime="20240502 20:16:57.671" starttime="20240502 20:16:57.671" status="NOT RUN"/>
          </kw>
          <status endtime="20240502 20:16:57.671" starttime="20240502 20:16:57.671" status="NOT RUN"/>
         </iter>
         <status endtime="20240502 20:16:57.671" starttime="20240502 20:16:57.671" status="NOT RUN"/>
        </for>
        <status endtime="20240502 20:16:57.671" starttime="20240502 20:16:57.655" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Call Method">
        <arg>
         ${chrome_options}
        </arg>
        <arg>
         add_experimental_option
        </arg>
        <arg>
         prefs
        </arg>
        <arg>
         ${kw_prefs}
        </arg>
        <doc>
         Calls the named method of the given object with the provided arguments.
        </doc>
        <status endtime="20240502 20:16:57.671" starttime="20240502 20:16:57.671" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Global Variable">
        <arg>
         ${global_browser_options}
        </arg>
        <arg>
         ${chrome options}
        </arg>
        <doc>
         Makes a variable available globally in all tests and suites.
        </doc>
        <msg level="INFO" timestamp="20240502 20:16:57.671">
         ${global_browser_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x000002147907A000&gt;
        </msg>
        <status endtime="20240502 20:16:57.671" starttime="20240502 20:16:57.671" status="PASS"/>
       </kw>
       <status endtime="20240502 20:16:57.671" starttime="20240502 20:16:57.655" status="PASS"/>
      </kw>
      <status endtime="20240502 20:16:57.671" starttime="20240502 20:16:53.180" status="PASS"/>
     </kw>
     <status endtime="20240502 20:16:57.671" starttime="20240502 20:16:53.180" status="PASS"/>
    </kw>
    <status endtime="20240502 20:16:57.671" starttime="20240502 20:16:53.169" status="PASS"/>
   </kw>
   <kw library="BuiltIn" name="Set Suite Metadata">
    <arg>
     environment
    </arg>
    <arg>
     ${test_server}
    </arg>
    <doc>
     Sets metadata for the current test suite.
    </doc>
    <msg level="INFO" timestamp="20240502 20:16:57.671">
     Set suite metadata 'environment' to value 'Dev'.
    </msg>
    <status endtime="20240502 20:16:57.671" starttime="20240502 20:16:57.671" status="PASS"/>
   </kw>
   <kw library="BuiltIn" name="Set Variable">
    <var>
     ${d.test_server}
    </var>
    <arg>
     ${test_server}
    </arg>
    <doc>
     Returns the given values which can then be assigned to a variables.
    </doc>
    <msg level="INFO" timestamp="20240502 20:17:19.293">
     ${d.test_server} = Dev
    </msg>
    <status endtime="20240502 20:17:19.293" starttime="20240502 20:17:19.293" status="PASS"/>
   </kw>
   <kw library="Support" name="Reset screenshot count variable">
    <kw library="BuiltIn" name="Set Variable">
     <var>
      ${screenshotCount}
     </var>
     <arg>
      ${PABOTQUEUEINDEX}_1
     </arg>
     <doc>
      Returns the given values which can then be assigned to a variables.
     </doc>
     <msg level="INFO" timestamp="20240502 20:17:19.293">
      ${screenshotCount} = 9_1
     </msg>
     <status endtime="20240502 20:17:19.293" starttime="20240502 20:17:19.293" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Set Global Variable">
     <arg>
      ${screenshotCount}
     </arg>
     <doc>
      Makes a variable available globally in all tests and suites.
     </doc>
     <msg level="INFO" timestamp="20240502 20:17:19.293">
      ${screenshotCount} = 9_1
     </msg>
     <status endtime="20240502 20:17:19.293" starttime="20240502 20:17:19.293" status="PASS"/>
    </kw>
    <kw library="Support" name="Set up screenshot directory">
     <kw library="OperatingSystem" name="Create Directory">
      <arg>
       ${OUTPUTDIR}${/}${wvar('screenshot_dir')}
      </arg>
      <doc>
       Creates the specified directory.
      </doc>
      <msg level="INFO" timestamp="20240502 20:17:19.293">
       Web.Dev.screenshot_dir: Screenshot
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:17:19.310">
       Created directory '&lt;a href="file://C:\SAP_Testing\SAPtesting\Output\pabot_results\9\Screenshot"&gt;C:\SAP_Testing\SAPtesting\Output\pabot_results\9\Screenshot&lt;/a&gt;'.
      </msg>
      <status endtime="20240502 20:17:19.310" starttime="20240502 20:17:19.293" status="PASS"/>
     </kw>
     <status endtime="20240502 20:17:19.311" starttime="20240502 20:17:19.293" status="PASS"/>
    </kw>
    <status endtime="20240502 20:17:19.311" starttime="20240502 20:17:19.293" status="PASS"/>
   </kw>
   <kw library="BuiltIn" name="Set Global Variable">
    <arg>
     ${screenshot_taking}
    </arg>
    <arg>
     ${True}
    </arg>
    <doc>
     Makes a variable available globally in all tests and suites.
    </doc>
    <msg level="INFO" timestamp="20240502 20:17:19.311">
     ${screenshot_taking} = True
    </msg>
    <status endtime="20240502 20:17:19.311" starttime="20240502 20:17:19.311" status="PASS"/>
   </kw>
   <kw library="Support" name="Setup linux execution">
    <kw library="BuiltIn" name="Run Keyword And Return Status">
     <var>
      ${web_test_check}
     </var>
     <arg>
      Variable Should Exist
     </arg>
     <arg>
      ${web_test}
     </arg>
     <doc>
      Runs the given keyword with given arguments and returns the status as a Boolean value.
     </doc>
     <kw library="BuiltIn" name="Variable Should Exist">
      <arg>
       ${web_test}
      </arg>
      <doc>
       Fails unless the given variable exists within the current scope.
      </doc>
      <status endtime="20240502 20:17:19.312" starttime="20240502 20:17:19.312" status="PASS"/>
     </kw>
     <msg level="INFO" timestamp="20240502 20:17:19.312">
      ${web_test_check} = True
     </msg>
     <status endtime="20240502 20:17:19.312" starttime="20240502 20:17:19.312" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Run Keyword If">
     <arg>
      ${web_test_check}
     </arg>
     <arg>
      Setup Docker Execution Options
     </arg>
     <doc>
      Runs the given keyword with the given arguments, if ``condition`` is true.
     </doc>
     <kw library="Support_Web" name="Setup Docker Execution Options">
      <kw library="Support_Web" name="Setup Suite Metadata">
       <arg>
        ${browser}
       </arg>
       <kw library="BrowserSupport" name="Get Browser Metadata">
        <var>
         &amp;{browser_information}
        </var>
        <arg>
         browser=${browser}
        </arg>
        <doc>
         Fetches browser metadata information
:param browser: Name of the browser for which information is fetched
:param reload: Re-read the metadata based on the browser
:return: Browser metadata information, dict of format
            {"browser_version": browser version value,
             "driver_version": driver version value}
        </doc>
        <msg level="INFO" timestamp="20240502 20:17:23.720">
         &amp;{browser_information} = { browser_version=124.0.6367.118 | driver_version=124.0.6367.91  }
        </msg>
        <status endtime="20240502 20:17:23.720" starttime="20240502 20:17:19.313" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Suite Metadata">
        <arg>
         test_browser_name
        </arg>
        <arg>
         ${browser}
        </arg>
        <doc>
         Sets metadata for the current test suite.
        </doc>
        <msg level="INFO" timestamp="20240502 20:17:23.720">
         Set suite metadata 'test_browser_name' to value 'chrome'.
        </msg>
        <status endtime="20240502 20:17:23.720" starttime="20240502 20:17:23.720" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Suite Metadata">
        <arg>
         test_browser_version
        </arg>
        <arg>
         ${browser_information.browser_version}
        </arg>
        <doc>
         Sets metadata for the current test suite.
        </doc>
        <msg level="INFO" timestamp="20240502 20:17:23.720">
         Set suite metadata 'test_browser_version' to value '124.0.6367.118'.
        </msg>
        <status endtime="20240502 20:17:23.720" starttime="20240502 20:17:23.720" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Suite Metadata">
        <arg>
         test_driver_version
        </arg>
        <arg>
         ${browser_information.driver_version}
        </arg>
        <doc>
         Sets metadata for the current test suite.
        </doc>
        <msg level="INFO" timestamp="20240502 20:17:23.720">
         Set suite metadata 'test_driver_version' to value '124.0.6367.91 '.
        </msg>
        <status endtime="20240502 20:17:23.720" starttime="20240502 20:17:23.720" status="PASS"/>
       </kw>
       <status endtime="20240502 20:17:23.720" starttime="20240502 20:17:19.313" status="PASS"/>
      </kw>
      <kw library="Support_Web" name="Setup Global Docker Execution Options">
       <kw library="BuiltIn" name="Set Global Variable">
        <arg>
         ${global_browser_options}
        </arg>
        <arg>
         None
        </arg>
        <doc>
         Makes a variable available globally in all tests and suites.
        </doc>
        <msg level="INFO" timestamp="20240502 20:17:23.726">
         ${global_browser_options} = None
        </msg>
        <status endtime="20240502 20:17:23.726" starttime="20240502 20:17:23.720" status="PASS"/>
       </kw>
       <kw library="OperatingSystem" name="Get Environment Variable">
        <var>
         ${docker_check}
        </var>
        <arg>
         EXECUTION_ENVIRONMENT
        </arg>
        <arg>
         not_found
        </arg>
        <doc>
         Returns the value of an environment variable with the given name.
        </doc>
        <msg level="INFO" timestamp="20240502 20:17:23.726">
         ${docker_check} = not_found
        </msg>
        <status endtime="20240502 20:17:23.726" starttime="20240502 20:17:23.726" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Run Keyword And Return If">
        <arg>
         "${docker_check}"!="docker"
        </arg>
        <arg>
         Log
        </arg>
        <arg>
         Not executing on Docker
        </arg>
        <doc>
         Runs the specified keyword and returns from the enclosing user keyword.
        </doc>
        <kw library="BuiltIn" name="Log">
         <arg>
          Not executing on Docker
         </arg>
         <doc>
          Logs the given message with the given level.
         </doc>
         <msg level="INFO" timestamp="20240502 20:17:23.726">
          Not executing on Docker
         </msg>
         <status endtime="20240502 20:17:23.726" starttime="20240502 20:17:23.726" status="PASS"/>
        </kw>
        <msg level="INFO" timestamp="20240502 20:17:23.726">
         Returning from the enclosing user keyword.
        </msg>
        <status endtime="20240502 20:17:23.726" starttime="20240502 20:17:23.726" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Create List">
        <var>
         @{options}
        </var>
        <arg>
         --headless
        </arg>
        <arg>
         --no-sandbox
        </arg>
        <arg>
         --disable-dev-shm-usage
        </arg>
        <doc>
         Returns a list containing given items.
        </doc>
        <status endtime="20240502 20:17:23.726" starttime="20240502 20:17:23.726" status="NOT RUN"/>
       </kw>
       <kw library="BuiltIn" name="Set Global Variable">
        <arg>
         @{docker_options}
        </arg>
        <arg>
         @{options}
        </arg>
        <doc>
         Makes a variable available globally in all tests and suites.
        </doc>
        <status endtime="20240502 20:17:23.726" starttime="20240502 20:17:23.726" status="NOT RUN"/>
       </kw>
       <status endtime="20240502 20:17:23.726" starttime="20240502 20:17:23.720" status="PASS"/>
      </kw>
      <kw library="Support_Web" name="Create Webdriver for chrome preferences">
       <kw library="Support_Web" name="Update Docker Execution Options">
        <var>
         ${list_prefs}
        </var>
        <arg>
         ${list_prefs}
        </arg>
        <kw library="BuiltIn" name="Run Keyword And Return Status">
         <var>
          ${docker_check}
         </var>
         <arg>
          Variable Should Exist
         </arg>
         <arg>
          ${docker_options}
         </arg>
         <doc>
          Runs the given keyword with given arguments and returns the status as a Boolean value.
         </doc>
         <kw library="BuiltIn" name="Variable Should Exist">
          <arg>
           ${docker_options}
          </arg>
          <doc>
           Fails unless the given variable exists within the current scope.
          </doc>
          <msg level="FAIL" timestamp="20240502 20:17:23.726">
           Variable '${docker_options}' does not exist.
          </msg>
          <status endtime="20240502 20:17:23.726" starttime="20240502 20:17:23.726" status="FAIL"/>
         </kw>
         <msg level="INFO" timestamp="20240502 20:17:23.726">
          ${docker_check} = False
         </msg>
         <status endtime="20240502 20:17:23.726" starttime="20240502 20:17:23.726" status="PASS"/>
        </kw>
        <kw library="BuiltIn" name="Get Length">
         <var>
          ${list_prefs_length}
         </var>
         <arg>
          ${list_prefs}
         </arg>
         <doc>
          Returns and logs the length of the given item as an integer.
         </doc>
         <msg level="INFO" timestamp="20240502 20:17:23.726">
          Length is 1
         </msg>
         <msg level="INFO" timestamp="20240502 20:17:23.726">
          ${list_prefs_length} = 1
         </msg>
         <status endtime="20240502 20:17:23.726" starttime="20240502 20:17:23.726" status="PASS"/>
        </kw>
        <kw library="BuiltIn" name="Run Keyword If">
         <var>
          ${list_prefs}
         </var>
         <arg>
          ${docker_check} and ${list_prefs_length}&gt;0 and ${list_prefs}[0] != []
         </arg>
         <arg>
          Combine Lists
         </arg>
         <arg>
          ${list_prefs}
         </arg>
         <arg>
          ${docker_options}
         </arg>
         <arg>
          ELSE IF
         </arg>
         <arg>
          ${docker_check}
         </arg>
         <arg>
          Set Variable
         </arg>
         <arg>
          ${docker_options}
         </arg>
         <arg>
          ELSE
         </arg>
         <arg>
          Set Variable
         </arg>
         <arg>
          ${list_prefs}
         </arg>
         <doc>
          Runs the given keyword with the given arguments, if ``condition`` is true.
         </doc>
         <kw library="BuiltIn" name="Set Variable">
          <arg>
           ${list_prefs}
          </arg>
          <doc>
           Returns the given values which can then be assigned to a variables.
          </doc>
          <status endtime="20240502 20:17:23.726" starttime="20240502 20:17:23.726" status="PASS"/>
         </kw>
         <msg level="INFO" timestamp="20240502 20:17:23.726">
          ${list_prefs} = [[]]
         </msg>
         <status endtime="20240502 20:17:23.726" starttime="20240502 20:17:23.726" status="PASS"/>
        </kw>
        <msg level="INFO" timestamp="20240502 20:17:23.726">
         ${list_prefs} = [[]]
        </msg>
        <status endtime="20240502 20:17:23.726" starttime="20240502 20:17:23.726" status="PASS"/>
       </kw>
       <kw library="Support_Web" name="Create Chrome Options for download preferences">
        <var>
         ${chrome_options}
        </var>
        <kw library="BuiltIn" name="Evaluate">
         <var>
          ${chrome_options}
         </var>
         <arg>
          sys.modules['selenium.webdriver'].ChromeOptions()
         </arg>
         <arg>
          sys
         </arg>
         <doc>
          Evaluates the given expression in Python and returns the result.
         </doc>
         <msg level="INFO" timestamp="20240502 20:17:23.726">
          ${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x000002955FB094C0&gt;
         </msg>
         <status endtime="20240502 20:17:23.726" starttime="20240502 20:17:23.726" status="PASS"/>
        </kw>
        <msg level="INFO" timestamp="20240502 20:17:23.726">
         ${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x000002955FB094C0&gt;
        </msg>
        <status endtime="20240502 20:17:23.726" starttime="20240502 20:17:23.726" status="PASS"/>
       </kw>
       <kw library="Support_Web" name="Update Preferences List">
        <arg>
         ${chrome_options}
        </arg>
        <arg>
         @{list_prefs}
        </arg>
        <kw library="BuiltIn" name="Convert To String">
         <var>
          ${string_prefs}
         </var>
         <arg>
          ${list_prefs}
         </arg>
         <doc>
          Converts the given item to a Unicode string.
         </doc>
         <msg level="INFO" timestamp="20240502 20:17:23.726">
          ${string_prefs} = [[]]
         </msg>
         <status endtime="20240502 20:17:23.726" starttime="20240502 20:17:23.726" status="PASS"/>
        </kw>
        <kw library="BuiltIn" name="Return From Keyword If">
         <arg>
          ${string_prefs} == [[]]
         </arg>
         <doc>
          Returns from the enclosing user keyword if ``condition`` is true.
         </doc>
         <msg level="INFO" timestamp="20240502 20:17:23.726">
          Returning from the enclosing user keyword.
         </msg>
         <status endtime="20240502 20:17:23.726" starttime="20240502 20:17:23.726" status="PASS"/>
        </kw>
        <for flavor="IN">
         <var>
          ${preference}
         </var>
         <value>
          @{list_prefs}
         </value>
         <iter>
          <var name="${preference}"/>
          <kw library="BuiltIn" name="Call Method">
           <arg>
            ${chrome_options}
           </arg>
           <arg>
            add_argument
           </arg>
           <arg>
            ${preference}
           </arg>
           <doc>
            Calls the named method of the given object with the provided arguments.
           </doc>
           <status endtime="20240502 20:17:23.726" starttime="20240502 20:17:23.726" status="NOT RUN"/>
          </kw>
          <status endtime="20240502 20:17:23.726" starttime="20240502 20:17:23.726" status="NOT RUN"/>
         </iter>
         <status endtime="20240502 20:17:23.726" starttime="20240502 20:17:23.726" status="NOT RUN"/>
        </for>
        <status endtime="20240502 20:17:23.726" starttime="20240502 20:17:23.726" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Call Method">
        <arg>
         ${chrome_options}
        </arg>
        <arg>
         add_experimental_option
        </arg>
        <arg>
         prefs
        </arg>
        <arg>
         ${kw_prefs}
        </arg>
        <doc>
         Calls the named method of the given object with the provided arguments.
        </doc>
        <status endtime="20240502 20:17:23.726" starttime="20240502 20:17:23.726" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Global Variable">
        <arg>
         ${global_browser_options}
        </arg>
        <arg>
         ${chrome options}
        </arg>
        <doc>
         Makes a variable available globally in all tests and suites.
        </doc>
        <msg level="INFO" timestamp="20240502 20:17:23.726">
         ${global_browser_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x000002955FB094C0&gt;
        </msg>
        <status endtime="20240502 20:17:23.726" starttime="20240502 20:17:23.726" status="PASS"/>
       </kw>
       <status endtime="20240502 20:17:23.726" starttime="20240502 20:17:23.726" status="PASS"/>
      </kw>
      <status endtime="20240502 20:17:23.726" starttime="20240502 20:17:19.313" status="PASS"/>
     </kw>
     <status endtime="20240502 20:17:23.726" starttime="20240502 20:17:19.312" status="PASS"/>
    </kw>
    <status endtime="20240502 20:17:23.726" starttime="20240502 20:17:19.311" status="PASS"/>
   </kw>
   <kw library="BuiltIn" name="Set Suite Metadata">
    <arg>
     environment
    </arg>
    <arg>
     ${test_server}
    </arg>
    <doc>
     Sets metadata for the current test suite.
    </doc>
    <msg level="INFO" timestamp="20240502 20:17:23.726">
     Set suite metadata 'environment' to value 'Dev'.
    </msg>
    <status endtime="20240502 20:17:23.726" starttime="20240502 20:17:23.726" status="PASS"/>
   </kw>
   <kw library="BuiltIn" name="Set Variable">
    <var>
     ${d.test_server}
    </var>
    <arg>
     ${test_server}
    </arg>
    <doc>
     Returns the given values which can then be assigned to a variables.
    </doc>
    <msg level="INFO" timestamp="20240502 20:17:29.884">
     ${d.test_server} = Dev
    </msg>
    <status endtime="20240502 20:17:29.884" starttime="20240502 20:17:29.884" status="PASS"/>
   </kw>
   <kw library="Support" name="Reset screenshot count variable">
    <kw library="BuiltIn" name="Set Variable">
     <var>
      ${screenshotCount}
     </var>
     <arg>
      ${PABOTQUEUEINDEX}_1
     </arg>
     <doc>
      Returns the given values which can then be assigned to a variables.
     </doc>
     <msg level="INFO" timestamp="20240502 20:17:29.884">
      ${screenshotCount} = 10_1
     </msg>
     <status endtime="20240502 20:17:29.884" starttime="20240502 20:17:29.884" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Set Global Variable">
     <arg>
      ${screenshotCount}
     </arg>
     <doc>
      Makes a variable available globally in all tests and suites.
     </doc>
     <msg level="INFO" timestamp="20240502 20:17:29.884">
      ${screenshotCount} = 10_1
     </msg>
     <status endtime="20240502 20:17:29.884" starttime="20240502 20:17:29.884" status="PASS"/>
    </kw>
    <kw library="Support" name="Set up screenshot directory">
     <kw library="OperatingSystem" name="Create Directory">
      <arg>
       ${OUTPUTDIR}${/}${wvar('screenshot_dir')}
      </arg>
      <doc>
       Creates the specified directory.
      </doc>
      <msg level="INFO" timestamp="20240502 20:17:29.884">
       Web.Dev.screenshot_dir: Screenshot
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:17:29.884">
       Created directory '&lt;a href="file://C:\SAP_Testing\SAPtesting\Output\pabot_results\10\Screenshot"&gt;C:\SAP_Testing\SAPtesting\Output\pabot_results\10\Screenshot&lt;/a&gt;'.
      </msg>
      <status endtime="20240502 20:17:29.894" starttime="20240502 20:17:29.884" status="PASS"/>
     </kw>
     <status endtime="20240502 20:17:29.894" starttime="20240502 20:17:29.884" status="PASS"/>
    </kw>
    <status endtime="20240502 20:17:29.894" starttime="20240502 20:17:29.884" status="PASS"/>
   </kw>
   <kw library="BuiltIn" name="Set Global Variable">
    <arg>
     ${screenshot_taking}
    </arg>
    <arg>
     ${True}
    </arg>
    <doc>
     Makes a variable available globally in all tests and suites.
    </doc>
    <msg level="INFO" timestamp="20240502 20:17:29.894">
     ${screenshot_taking} = True
    </msg>
    <status endtime="20240502 20:17:29.894" starttime="20240502 20:17:29.894" status="PASS"/>
   </kw>
   <kw library="Support" name="Setup linux execution">
    <kw library="BuiltIn" name="Run Keyword And Return Status">
     <var>
      ${web_test_check}
     </var>
     <arg>
      Variable Should Exist
     </arg>
     <arg>
      ${web_test}
     </arg>
     <doc>
      Runs the given keyword with given arguments and returns the status as a Boolean value.
     </doc>
     <kw library="BuiltIn" name="Variable Should Exist">
      <arg>
       ${web_test}
      </arg>
      <doc>
       Fails unless the given variable exists within the current scope.
      </doc>
      <status endtime="20240502 20:17:29.894" starttime="20240502 20:17:29.894" status="PASS"/>
     </kw>
     <msg level="INFO" timestamp="20240502 20:17:29.894">
      ${web_test_check} = True
     </msg>
     <status endtime="20240502 20:17:29.894" starttime="20240502 20:17:29.894" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Run Keyword If">
     <arg>
      ${web_test_check}
     </arg>
     <arg>
      Setup Docker Execution Options
     </arg>
     <doc>
      Runs the given keyword with the given arguments, if ``condition`` is true.
     </doc>
     <kw library="Support_Web" name="Setup Docker Execution Options">
      <kw library="Support_Web" name="Setup Suite Metadata">
       <arg>
        ${browser}
       </arg>
       <kw library="BrowserSupport" name="Get Browser Metadata">
        <var>
         &amp;{browser_information}
        </var>
        <arg>
         browser=${browser}
        </arg>
        <doc>
         Fetches browser metadata information
:param browser: Name of the browser for which information is fetched
:param reload: Re-read the metadata based on the browser
:return: Browser metadata information, dict of format
            {"browser_version": browser version value,
             "driver_version": driver version value}
        </doc>
        <msg level="INFO" timestamp="20240502 20:17:34.285">
         &amp;{browser_information} = { browser_version=124.0.6367.118 | driver_version=124.0.6367.91  }
        </msg>
        <status endtime="20240502 20:17:34.285" starttime="20240502 20:17:29.894" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Suite Metadata">
        <arg>
         test_browser_name
        </arg>
        <arg>
         ${browser}
        </arg>
        <doc>
         Sets metadata for the current test suite.
        </doc>
        <msg level="INFO" timestamp="20240502 20:17:34.285">
         Set suite metadata 'test_browser_name' to value 'chrome'.
        </msg>
        <status endtime="20240502 20:17:34.285" starttime="20240502 20:17:34.285" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Suite Metadata">
        <arg>
         test_browser_version
        </arg>
        <arg>
         ${browser_information.browser_version}
        </arg>
        <doc>
         Sets metadata for the current test suite.
        </doc>
        <msg level="INFO" timestamp="20240502 20:17:34.285">
         Set suite metadata 'test_browser_version' to value '124.0.6367.118'.
        </msg>
        <status endtime="20240502 20:17:34.285" starttime="20240502 20:17:34.285" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Suite Metadata">
        <arg>
         test_driver_version
        </arg>
        <arg>
         ${browser_information.driver_version}
        </arg>
        <doc>
         Sets metadata for the current test suite.
        </doc>
        <msg level="INFO" timestamp="20240502 20:17:34.285">
         Set suite metadata 'test_driver_version' to value '124.0.6367.91 '.
        </msg>
        <status endtime="20240502 20:17:34.285" starttime="20240502 20:17:34.285" status="PASS"/>
       </kw>
       <status endtime="20240502 20:17:34.285" starttime="20240502 20:17:29.894" status="PASS"/>
      </kw>
      <kw library="Support_Web" name="Setup Global Docker Execution Options">
       <kw library="BuiltIn" name="Set Global Variable">
        <arg>
         ${global_browser_options}
        </arg>
        <arg>
         None
        </arg>
        <doc>
         Makes a variable available globally in all tests and suites.
        </doc>
        <msg level="INFO" timestamp="20240502 20:17:34.285">
         ${global_browser_options} = None
        </msg>
        <status endtime="20240502 20:17:34.285" starttime="20240502 20:17:34.285" status="PASS"/>
       </kw>
       <kw library="OperatingSystem" name="Get Environment Variable">
        <var>
         ${docker_check}
        </var>
        <arg>
         EXECUTION_ENVIRONMENT
        </arg>
        <arg>
         not_found
        </arg>
        <doc>
         Returns the value of an environment variable with the given name.
        </doc>
        <msg level="INFO" timestamp="20240502 20:17:34.285">
         ${docker_check} = not_found
        </msg>
        <status endtime="20240502 20:17:34.285" starttime="20240502 20:17:34.285" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Run Keyword And Return If">
        <arg>
         "${docker_check}"!="docker"
        </arg>
        <arg>
         Log
        </arg>
        <arg>
         Not executing on Docker
        </arg>
        <doc>
         Runs the specified keyword and returns from the enclosing user keyword.
        </doc>
        <kw library="BuiltIn" name="Log">
         <arg>
          Not executing on Docker
         </arg>
         <doc>
          Logs the given message with the given level.
         </doc>
         <msg level="INFO" timestamp="20240502 20:17:34.285">
          Not executing on Docker
         </msg>
         <status endtime="20240502 20:17:34.285" starttime="20240502 20:17:34.285" status="PASS"/>
        </kw>
        <msg level="INFO" timestamp="20240502 20:17:34.285">
         Returning from the enclosing user keyword.
        </msg>
        <status endtime="20240502 20:17:34.285" starttime="20240502 20:17:34.285" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Create List">
        <var>
         @{options}
        </var>
        <arg>
         --headless
        </arg>
        <arg>
         --no-sandbox
        </arg>
        <arg>
         --disable-dev-shm-usage
        </arg>
        <doc>
         Returns a list containing given items.
        </doc>
        <status endtime="20240502 20:17:34.285" starttime="20240502 20:17:34.285" status="NOT RUN"/>
       </kw>
       <kw library="BuiltIn" name="Set Global Variable">
        <arg>
         @{docker_options}
        </arg>
        <arg>
         @{options}
        </arg>
        <doc>
         Makes a variable available globally in all tests and suites.
        </doc>
        <status endtime="20240502 20:17:34.285" starttime="20240502 20:17:34.285" status="NOT RUN"/>
       </kw>
       <status endtime="20240502 20:17:34.285" starttime="20240502 20:17:34.285" status="PASS"/>
      </kw>
      <kw library="Support_Web" name="Create Webdriver for chrome preferences">
       <kw library="Support_Web" name="Update Docker Execution Options">
        <var>
         ${list_prefs}
        </var>
        <arg>
         ${list_prefs}
        </arg>
        <kw library="BuiltIn" name="Run Keyword And Return Status">
         <var>
          ${docker_check}
         </var>
         <arg>
          Variable Should Exist
         </arg>
         <arg>
          ${docker_options}
         </arg>
         <doc>
          Runs the given keyword with given arguments and returns the status as a Boolean value.
         </doc>
         <kw library="BuiltIn" name="Variable Should Exist">
          <arg>
           ${docker_options}
          </arg>
          <doc>
           Fails unless the given variable exists within the current scope.
          </doc>
          <msg level="FAIL" timestamp="20240502 20:17:34.285">
           Variable '${docker_options}' does not exist.
          </msg>
          <status endtime="20240502 20:17:34.285" starttime="20240502 20:17:34.285" status="FAIL"/>
         </kw>
         <msg level="INFO" timestamp="20240502 20:17:34.285">
          ${docker_check} = False
         </msg>
         <status endtime="20240502 20:17:34.285" starttime="20240502 20:17:34.285" status="PASS"/>
        </kw>
        <kw library="BuiltIn" name="Get Length">
         <var>
          ${list_prefs_length}
         </var>
         <arg>
          ${list_prefs}
         </arg>
         <doc>
          Returns and logs the length of the given item as an integer.
         </doc>
         <msg level="INFO" timestamp="20240502 20:17:34.285">
          Length is 1
         </msg>
         <msg level="INFO" timestamp="20240502 20:17:34.285">
          ${list_prefs_length} = 1
         </msg>
         <status endtime="20240502 20:17:34.285" starttime="20240502 20:17:34.285" status="PASS"/>
        </kw>
        <kw library="BuiltIn" name="Run Keyword If">
         <var>
          ${list_prefs}
         </var>
         <arg>
          ${docker_check} and ${list_prefs_length}&gt;0 and ${list_prefs}[0] != []
         </arg>
         <arg>
          Combine Lists
         </arg>
         <arg>
          ${list_prefs}
         </arg>
         <arg>
          ${docker_options}
         </arg>
         <arg>
          ELSE IF
         </arg>
         <arg>
          ${docker_check}
         </arg>
         <arg>
          Set Variable
         </arg>
         <arg>
          ${docker_options}
         </arg>
         <arg>
          ELSE
         </arg>
         <arg>
          Set Variable
         </arg>
         <arg>
          ${list_prefs}
         </arg>
         <doc>
          Runs the given keyword with the given arguments, if ``condition`` is true.
         </doc>
         <kw library="BuiltIn" name="Set Variable">
          <arg>
           ${list_prefs}
          </arg>
          <doc>
           Returns the given values which can then be assigned to a variables.
          </doc>
          <status endtime="20240502 20:17:34.285" starttime="20240502 20:17:34.285" status="PASS"/>
         </kw>
         <msg level="INFO" timestamp="20240502 20:17:34.285">
          ${list_prefs} = [[]]
         </msg>
         <status endtime="20240502 20:17:34.285" starttime="20240502 20:17:34.285" status="PASS"/>
        </kw>
        <msg level="INFO" timestamp="20240502 20:17:34.285">
         ${list_prefs} = [[]]
        </msg>
        <status endtime="20240502 20:17:34.285" starttime="20240502 20:17:34.285" status="PASS"/>
       </kw>
       <kw library="Support_Web" name="Create Chrome Options for download preferences">
        <var>
         ${chrome_options}
        </var>
        <kw library="BuiltIn" name="Evaluate">
         <var>
          ${chrome_options}
         </var>
         <arg>
          sys.modules['selenium.webdriver'].ChromeOptions()
         </arg>
         <arg>
          sys
         </arg>
         <doc>
          Evaluates the given expression in Python and returns the result.
         </doc>
         <msg level="INFO" timestamp="20240502 20:17:34.285">
          ${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x00000258C908A000&gt;
         </msg>
         <status endtime="20240502 20:17:34.285" starttime="20240502 20:17:34.285" status="PASS"/>
        </kw>
        <msg level="INFO" timestamp="20240502 20:17:34.285">
         ${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x00000258C908A000&gt;
        </msg>
        <status endtime="20240502 20:17:34.285" starttime="20240502 20:17:34.285" status="PASS"/>
       </kw>
       <kw library="Support_Web" name="Update Preferences List">
        <arg>
         ${chrome_options}
        </arg>
        <arg>
         @{list_prefs}
        </arg>
        <kw library="BuiltIn" name="Convert To String">
         <var>
          ${string_prefs}
         </var>
         <arg>
          ${list_prefs}
         </arg>
         <doc>
          Converts the given item to a Unicode string.
         </doc>
         <msg level="INFO" timestamp="20240502 20:17:34.285">
          ${string_prefs} = [[]]
         </msg>
         <status endtime="20240502 20:17:34.285" starttime="20240502 20:17:34.285" status="PASS"/>
        </kw>
        <kw library="BuiltIn" name="Return From Keyword If">
         <arg>
          ${string_prefs} == [[]]
         </arg>
         <doc>
          Returns from the enclosing user keyword if ``condition`` is true.
         </doc>
         <msg level="INFO" timestamp="20240502 20:17:34.285">
          Returning from the enclosing user keyword.
         </msg>
         <status endtime="20240502 20:17:34.285" starttime="20240502 20:17:34.285" status="PASS"/>
        </kw>
        <for flavor="IN">
         <var>
          ${preference}
         </var>
         <value>
          @{list_prefs}
         </value>
         <iter>
          <var name="${preference}"/>
          <kw library="BuiltIn" name="Call Method">
           <arg>
            ${chrome_options}
           </arg>
           <arg>
            add_argument
           </arg>
           <arg>
            ${preference}
           </arg>
           <doc>
            Calls the named method of the given object with the provided arguments.
           </doc>
           <status endtime="20240502 20:17:34.285" starttime="20240502 20:17:34.285" status="NOT RUN"/>
          </kw>
          <status endtime="20240502 20:17:34.285" starttime="20240502 20:17:34.285" status="NOT RUN"/>
         </iter>
         <status endtime="20240502 20:17:34.285" starttime="20240502 20:17:34.285" status="NOT RUN"/>
        </for>
        <status endtime="20240502 20:17:34.285" starttime="20240502 20:17:34.285" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Call Method">
        <arg>
         ${chrome_options}
        </arg>
        <arg>
         add_experimental_option
        </arg>
        <arg>
         prefs
        </arg>
        <arg>
         ${kw_prefs}
        </arg>
        <doc>
         Calls the named method of the given object with the provided arguments.
        </doc>
        <status endtime="20240502 20:17:34.285" starttime="20240502 20:17:34.285" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Global Variable">
        <arg>
         ${global_browser_options}
        </arg>
        <arg>
         ${chrome options}
        </arg>
        <doc>
         Makes a variable available globally in all tests and suites.
        </doc>
        <msg level="INFO" timestamp="20240502 20:17:34.300">
         ${global_browser_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x00000258C908A000&gt;
        </msg>
        <status endtime="20240502 20:17:34.300" starttime="20240502 20:17:34.300" status="PASS"/>
       </kw>
       <status endtime="20240502 20:17:34.300" starttime="20240502 20:17:34.285" status="PASS"/>
      </kw>
      <status endtime="20240502 20:17:34.300" starttime="20240502 20:17:29.894" status="PASS"/>
     </kw>
     <status endtime="20240502 20:17:34.300" starttime="20240502 20:17:29.894" status="PASS"/>
    </kw>
    <status endtime="20240502 20:17:34.300" starttime="20240502 20:17:29.894" status="PASS"/>
   </kw>
   <kw library="BuiltIn" name="Set Suite Metadata">
    <arg>
     environment
    </arg>
    <arg>
     ${test_server}
    </arg>
    <doc>
     Sets metadata for the current test suite.
    </doc>
    <msg level="INFO" timestamp="20240502 20:17:34.300">
     Set suite metadata 'environment' to value 'Dev'.
    </msg>
    <status endtime="20240502 20:17:34.300" starttime="20240502 20:17:34.300" status="PASS"/>
   </kw>
   <kw library="BuiltIn" name="Set Variable">
    <var>
     ${d.test_server}
    </var>
    <arg>
     ${test_server}
    </arg>
    <doc>
     Returns the given values which can then be assigned to a variables.
    </doc>
    <msg level="INFO" timestamp="20240502 20:18:06.980">
     ${d.test_server} = Dev
    </msg>
    <status endtime="20240502 20:18:06.980" starttime="20240502 20:18:06.980" status="PASS"/>
   </kw>
   <kw library="Support" name="Reset screenshot count variable">
    <kw library="BuiltIn" name="Set Variable">
     <var>
      ${screenshotCount}
     </var>
     <arg>
      ${PABOTQUEUEINDEX}_1
     </arg>
     <doc>
      Returns the given values which can then be assigned to a variables.
     </doc>
     <msg level="INFO" timestamp="20240502 20:18:06.980">
      ${screenshotCount} = 11_1
     </msg>
     <status endtime="20240502 20:18:06.980" starttime="20240502 20:18:06.980" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Set Global Variable">
     <arg>
      ${screenshotCount}
     </arg>
     <doc>
      Makes a variable available globally in all tests and suites.
     </doc>
     <msg level="INFO" timestamp="20240502 20:18:06.980">
      ${screenshotCount} = 11_1
     </msg>
     <status endtime="20240502 20:18:06.980" starttime="20240502 20:18:06.980" status="PASS"/>
    </kw>
    <kw library="Support" name="Set up screenshot directory">
     <kw library="OperatingSystem" name="Create Directory">
      <arg>
       ${OUTPUTDIR}${/}${wvar('screenshot_dir')}
      </arg>
      <doc>
       Creates the specified directory.
      </doc>
      <msg level="INFO" timestamp="20240502 20:18:06.980">
       Web.Dev.screenshot_dir: Screenshot
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:18:06.980">
       Created directory '&lt;a href="file://C:\SAP_Testing\SAPtesting\Output\pabot_results\11\Screenshot"&gt;C:\SAP_Testing\SAPtesting\Output\pabot_results\11\Screenshot&lt;/a&gt;'.
      </msg>
      <status endtime="20240502 20:18:06.980" starttime="20240502 20:18:06.980" status="PASS"/>
     </kw>
     <status endtime="20240502 20:18:06.980" starttime="20240502 20:18:06.980" status="PASS"/>
    </kw>
    <status endtime="20240502 20:18:06.980" starttime="20240502 20:18:06.980" status="PASS"/>
   </kw>
   <kw library="BuiltIn" name="Set Global Variable">
    <arg>
     ${screenshot_taking}
    </arg>
    <arg>
     ${True}
    </arg>
    <doc>
     Makes a variable available globally in all tests and suites.
    </doc>
    <msg level="INFO" timestamp="20240502 20:18:06.990">
     ${screenshot_taking} = True
    </msg>
    <status endtime="20240502 20:18:06.990" starttime="20240502 20:18:06.980" status="PASS"/>
   </kw>
   <kw library="Support" name="Setup linux execution">
    <kw library="BuiltIn" name="Run Keyword And Return Status">
     <var>
      ${web_test_check}
     </var>
     <arg>
      Variable Should Exist
     </arg>
     <arg>
      ${web_test}
     </arg>
     <doc>
      Runs the given keyword with given arguments and returns the status as a Boolean value.
     </doc>
     <kw library="BuiltIn" name="Variable Should Exist">
      <arg>
       ${web_test}
      </arg>
      <doc>
       Fails unless the given variable exists within the current scope.
      </doc>
      <status endtime="20240502 20:18:06.990" starttime="20240502 20:18:06.990" status="PASS"/>
     </kw>
     <msg level="INFO" timestamp="20240502 20:18:06.990">
      ${web_test_check} = True
     </msg>
     <status endtime="20240502 20:18:06.990" starttime="20240502 20:18:06.990" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Run Keyword If">
     <arg>
      ${web_test_check}
     </arg>
     <arg>
      Setup Docker Execution Options
     </arg>
     <doc>
      Runs the given keyword with the given arguments, if ``condition`` is true.
     </doc>
     <kw library="Support_Web" name="Setup Docker Execution Options">
      <kw library="Support_Web" name="Setup Suite Metadata">
       <arg>
        ${browser}
       </arg>
       <kw library="BrowserSupport" name="Get Browser Metadata">
        <var>
         &amp;{browser_information}
        </var>
        <arg>
         browser=${browser}
        </arg>
        <doc>
         Fetches browser metadata information
:param browser: Name of the browser for which information is fetched
:param reload: Re-read the metadata based on the browser
:return: Browser metadata information, dict of format
            {"browser_version": browser version value,
             "driver_version": driver version value}
        </doc>
        <msg level="INFO" timestamp="20240502 20:18:11.351">
         &amp;{browser_information} = { browser_version=124.0.6367.118 | driver_version=124.0.6367.91  }
        </msg>
        <status endtime="20240502 20:18:11.351" starttime="20240502 20:18:06.990" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Suite Metadata">
        <arg>
         test_browser_name
        </arg>
        <arg>
         ${browser}
        </arg>
        <doc>
         Sets metadata for the current test suite.
        </doc>
        <msg level="INFO" timestamp="20240502 20:18:11.351">
         Set suite metadata 'test_browser_name' to value 'chrome'.
        </msg>
        <status endtime="20240502 20:18:11.351" starttime="20240502 20:18:11.351" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Suite Metadata">
        <arg>
         test_browser_version
        </arg>
        <arg>
         ${browser_information.browser_version}
        </arg>
        <doc>
         Sets metadata for the current test suite.
        </doc>
        <msg level="INFO" timestamp="20240502 20:18:11.351">
         Set suite metadata 'test_browser_version' to value '124.0.6367.118'.
        </msg>
        <status endtime="20240502 20:18:11.351" starttime="20240502 20:18:11.351" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Suite Metadata">
        <arg>
         test_driver_version
        </arg>
        <arg>
         ${browser_information.driver_version}
        </arg>
        <doc>
         Sets metadata for the current test suite.
        </doc>
        <msg level="INFO" timestamp="20240502 20:18:11.351">
         Set suite metadata 'test_driver_version' to value '124.0.6367.91 '.
        </msg>
        <status endtime="20240502 20:18:11.351" starttime="20240502 20:18:11.351" status="PASS"/>
       </kw>
       <status endtime="20240502 20:18:11.351" starttime="20240502 20:18:06.990" status="PASS"/>
      </kw>
      <kw library="Support_Web" name="Setup Global Docker Execution Options">
       <kw library="BuiltIn" name="Set Global Variable">
        <arg>
         ${global_browser_options}
        </arg>
        <arg>
         None
        </arg>
        <doc>
         Makes a variable available globally in all tests and suites.
        </doc>
        <msg level="INFO" timestamp="20240502 20:18:11.351">
         ${global_browser_options} = None
        </msg>
        <status endtime="20240502 20:18:11.351" starttime="20240502 20:18:11.351" status="PASS"/>
       </kw>
       <kw library="OperatingSystem" name="Get Environment Variable">
        <var>
         ${docker_check}
        </var>
        <arg>
         EXECUTION_ENVIRONMENT
        </arg>
        <arg>
         not_found
        </arg>
        <doc>
         Returns the value of an environment variable with the given name.
        </doc>
        <msg level="INFO" timestamp="20240502 20:18:11.351">
         ${docker_check} = not_found
        </msg>
        <status endtime="20240502 20:18:11.351" starttime="20240502 20:18:11.351" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Run Keyword And Return If">
        <arg>
         "${docker_check}"!="docker"
        </arg>
        <arg>
         Log
        </arg>
        <arg>
         Not executing on Docker
        </arg>
        <doc>
         Runs the specified keyword and returns from the enclosing user keyword.
        </doc>
        <kw library="BuiltIn" name="Log">
         <arg>
          Not executing on Docker
         </arg>
         <doc>
          Logs the given message with the given level.
         </doc>
         <msg level="INFO" timestamp="20240502 20:18:11.351">
          Not executing on Docker
         </msg>
         <status endtime="20240502 20:18:11.351" starttime="20240502 20:18:11.351" status="PASS"/>
        </kw>
        <msg level="INFO" timestamp="20240502 20:18:11.351">
         Returning from the enclosing user keyword.
        </msg>
        <status endtime="20240502 20:18:11.351" starttime="20240502 20:18:11.351" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Create List">
        <var>
         @{options}
        </var>
        <arg>
         --headless
        </arg>
        <arg>
         --no-sandbox
        </arg>
        <arg>
         --disable-dev-shm-usage
        </arg>
        <doc>
         Returns a list containing given items.
        </doc>
        <status endtime="20240502 20:18:11.351" starttime="20240502 20:18:11.351" status="NOT RUN"/>
       </kw>
       <kw library="BuiltIn" name="Set Global Variable">
        <arg>
         @{docker_options}
        </arg>
        <arg>
         @{options}
        </arg>
        <doc>
         Makes a variable available globally in all tests and suites.
        </doc>
        <status endtime="20240502 20:18:11.351" starttime="20240502 20:18:11.351" status="NOT RUN"/>
       </kw>
       <status endtime="20240502 20:18:11.351" starttime="20240502 20:18:11.351" status="PASS"/>
      </kw>
      <kw library="Support_Web" name="Create Webdriver for chrome preferences">
       <kw library="Support_Web" name="Update Docker Execution Options">
        <var>
         ${list_prefs}
        </var>
        <arg>
         ${list_prefs}
        </arg>
        <kw library="BuiltIn" name="Run Keyword And Return Status">
         <var>
          ${docker_check}
         </var>
         <arg>
          Variable Should Exist
         </arg>
         <arg>
          ${docker_options}
         </arg>
         <doc>
          Runs the given keyword with given arguments and returns the status as a Boolean value.
         </doc>
         <kw library="BuiltIn" name="Variable Should Exist">
          <arg>
           ${docker_options}
          </arg>
          <doc>
           Fails unless the given variable exists within the current scope.
          </doc>
          <msg level="FAIL" timestamp="20240502 20:18:11.351">
           Variable '${docker_options}' does not exist.
          </msg>
          <status endtime="20240502 20:18:11.351" starttime="20240502 20:18:11.351" status="FAIL"/>
         </kw>
         <msg level="INFO" timestamp="20240502 20:18:11.351">
          ${docker_check} = False
         </msg>
         <status endtime="20240502 20:18:11.351" starttime="20240502 20:18:11.351" status="PASS"/>
        </kw>
        <kw library="BuiltIn" name="Get Length">
         <var>
          ${list_prefs_length}
         </var>
         <arg>
          ${list_prefs}
         </arg>
         <doc>
          Returns and logs the length of the given item as an integer.
         </doc>
         <msg level="INFO" timestamp="20240502 20:18:11.351">
          Length is 1
         </msg>
         <msg level="INFO" timestamp="20240502 20:18:11.351">
          ${list_prefs_length} = 1
         </msg>
         <status endtime="20240502 20:18:11.351" starttime="20240502 20:18:11.351" status="PASS"/>
        </kw>
        <kw library="BuiltIn" name="Run Keyword If">
         <var>
          ${list_prefs}
         </var>
         <arg>
          ${docker_check} and ${list_prefs_length}&gt;0 and ${list_prefs}[0] != []
         </arg>
         <arg>
          Combine Lists
         </arg>
         <arg>
          ${list_prefs}
         </arg>
         <arg>
          ${docker_options}
         </arg>
         <arg>
          ELSE IF
         </arg>
         <arg>
          ${docker_check}
         </arg>
         <arg>
          Set Variable
         </arg>
         <arg>
          ${docker_options}
         </arg>
         <arg>
          ELSE
         </arg>
         <arg>
          Set Variable
         </arg>
         <arg>
          ${list_prefs}
         </arg>
         <doc>
          Runs the given keyword with the given arguments, if ``condition`` is true.
         </doc>
         <kw library="BuiltIn" name="Set Variable">
          <arg>
           ${list_prefs}
          </arg>
          <doc>
           Returns the given values which can then be assigned to a variables.
          </doc>
          <status endtime="20240502 20:18:11.351" starttime="20240502 20:18:11.351" status="PASS"/>
         </kw>
         <msg level="INFO" timestamp="20240502 20:18:11.351">
          ${list_prefs} = [[]]
         </msg>
         <status endtime="20240502 20:18:11.351" starttime="20240502 20:18:11.351" status="PASS"/>
        </kw>
        <msg level="INFO" timestamp="20240502 20:18:11.351">
         ${list_prefs} = [[]]
        </msg>
        <status endtime="20240502 20:18:11.351" starttime="20240502 20:18:11.351" status="PASS"/>
       </kw>
       <kw library="Support_Web" name="Create Chrome Options for download preferences">
        <var>
         ${chrome_options}
        </var>
        <kw library="BuiltIn" name="Evaluate">
         <var>
          ${chrome_options}
         </var>
         <arg>
          sys.modules['selenium.webdriver'].ChromeOptions()
         </arg>
         <arg>
          sys
         </arg>
         <doc>
          Evaluates the given expression in Python and returns the result.
         </doc>
         <msg level="INFO" timestamp="20240502 20:18:11.351">
          ${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x00000232843C9850&gt;
         </msg>
         <status endtime="20240502 20:18:11.351" starttime="20240502 20:18:11.351" status="PASS"/>
        </kw>
        <msg level="INFO" timestamp="20240502 20:18:11.351">
         ${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x00000232843C9850&gt;
        </msg>
        <status endtime="20240502 20:18:11.367" starttime="20240502 20:18:11.351" status="PASS"/>
       </kw>
       <kw library="Support_Web" name="Update Preferences List">
        <arg>
         ${chrome_options}
        </arg>
        <arg>
         @{list_prefs}
        </arg>
        <kw library="BuiltIn" name="Convert To String">
         <var>
          ${string_prefs}
         </var>
         <arg>
          ${list_prefs}
         </arg>
         <doc>
          Converts the given item to a Unicode string.
         </doc>
         <msg level="INFO" timestamp="20240502 20:18:11.367">
          ${string_prefs} = [[]]
         </msg>
         <status endtime="20240502 20:18:11.367" starttime="20240502 20:18:11.367" status="PASS"/>
        </kw>
        <kw library="BuiltIn" name="Return From Keyword If">
         <arg>
          ${string_prefs} == [[]]
         </arg>
         <doc>
          Returns from the enclosing user keyword if ``condition`` is true.
         </doc>
         <msg level="INFO" timestamp="20240502 20:18:11.367">
          Returning from the enclosing user keyword.
         </msg>
         <status endtime="20240502 20:18:11.367" starttime="20240502 20:18:11.367" status="PASS"/>
        </kw>
        <for flavor="IN">
         <var>
          ${preference}
         </var>
         <value>
          @{list_prefs}
         </value>
         <iter>
          <var name="${preference}"/>
          <kw library="BuiltIn" name="Call Method">
           <arg>
            ${chrome_options}
           </arg>
           <arg>
            add_argument
           </arg>
           <arg>
            ${preference}
           </arg>
           <doc>
            Calls the named method of the given object with the provided arguments.
           </doc>
           <status endtime="20240502 20:18:11.367" starttime="20240502 20:18:11.367" status="NOT RUN"/>
          </kw>
          <status endtime="20240502 20:18:11.367" starttime="20240502 20:18:11.367" status="NOT RUN"/>
         </iter>
         <status endtime="20240502 20:18:11.367" starttime="20240502 20:18:11.367" status="NOT RUN"/>
        </for>
        <status endtime="20240502 20:18:11.367" starttime="20240502 20:18:11.367" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Call Method">
        <arg>
         ${chrome_options}
        </arg>
        <arg>
         add_experimental_option
        </arg>
        <arg>
         prefs
        </arg>
        <arg>
         ${kw_prefs}
        </arg>
        <doc>
         Calls the named method of the given object with the provided arguments.
        </doc>
        <status endtime="20240502 20:18:11.367" starttime="20240502 20:18:11.367" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Global Variable">
        <arg>
         ${global_browser_options}
        </arg>
        <arg>
         ${chrome options}
        </arg>
        <doc>
         Makes a variable available globally in all tests and suites.
        </doc>
        <msg level="INFO" timestamp="20240502 20:18:11.367">
         ${global_browser_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x00000232843C9850&gt;
        </msg>
        <status endtime="20240502 20:18:11.367" starttime="20240502 20:18:11.367" status="PASS"/>
       </kw>
       <status endtime="20240502 20:18:11.367" starttime="20240502 20:18:11.351" status="PASS"/>
      </kw>
      <status endtime="20240502 20:18:11.367" starttime="20240502 20:18:06.990" status="PASS"/>
     </kw>
     <status endtime="20240502 20:18:11.367" starttime="20240502 20:18:06.990" status="PASS"/>
    </kw>
    <status endtime="20240502 20:18:11.367" starttime="20240502 20:18:06.990" status="PASS"/>
   </kw>
   <kw library="BuiltIn" name="Set Suite Metadata">
    <arg>
     environment
    </arg>
    <arg>
     ${test_server}
    </arg>
    <doc>
     Sets metadata for the current test suite.
    </doc>
    <msg level="INFO" timestamp="20240502 20:18:11.367">
     Set suite metadata 'environment' to value 'Dev'.
    </msg>
    <status endtime="20240502 20:18:11.367" starttime="20240502 20:18:11.367" status="PASS"/>
   </kw>
   <kw library="BuiltIn" name="Set Variable">
    <var>
     ${d.test_server}
    </var>
    <arg>
     ${test_server}
    </arg>
    <doc>
     Returns the given values which can then be assigned to a variables.
    </doc>
    <msg level="INFO" timestamp="20240502 20:18:16.219">
     ${d.test_server} = Dev
    </msg>
    <status endtime="20240502 20:18:16.219" starttime="20240502 20:18:16.219" status="PASS"/>
   </kw>
   <kw library="Support" name="Reset screenshot count variable">
    <kw library="BuiltIn" name="Set Variable">
     <var>
      ${screenshotCount}
     </var>
     <arg>
      ${PABOTQUEUEINDEX}_1
     </arg>
     <doc>
      Returns the given values which can then be assigned to a variables.
     </doc>
     <msg level="INFO" timestamp="20240502 20:18:16.219">
      ${screenshotCount} = 12_1
     </msg>
     <status endtime="20240502 20:18:16.219" starttime="20240502 20:18:16.219" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Set Global Variable">
     <arg>
      ${screenshotCount}
     </arg>
     <doc>
      Makes a variable available globally in all tests and suites.
     </doc>
     <msg level="INFO" timestamp="20240502 20:18:16.219">
      ${screenshotCount} = 12_1
     </msg>
     <status endtime="20240502 20:18:16.219" starttime="20240502 20:18:16.219" status="PASS"/>
    </kw>
    <kw library="Support" name="Set up screenshot directory">
     <kw library="OperatingSystem" name="Create Directory">
      <arg>
       ${OUTPUTDIR}${/}${wvar('screenshot_dir')}
      </arg>
      <doc>
       Creates the specified directory.
      </doc>
      <msg level="INFO" timestamp="20240502 20:18:16.224">
       Web.Dev.screenshot_dir: Screenshot
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:18:16.224">
       Created directory '&lt;a href="file://C:\SAP_Testing\SAPtesting\Output\pabot_results\12\Screenshot"&gt;C:\SAP_Testing\SAPtesting\Output\pabot_results\12\Screenshot&lt;/a&gt;'.
      </msg>
      <status endtime="20240502 20:18:16.224" starttime="20240502 20:18:16.219" status="PASS"/>
     </kw>
     <status endtime="20240502 20:18:16.224" starttime="20240502 20:18:16.219" status="PASS"/>
    </kw>
    <status endtime="20240502 20:18:16.224" starttime="20240502 20:18:16.219" status="PASS"/>
   </kw>
   <kw library="BuiltIn" name="Set Global Variable">
    <arg>
     ${screenshot_taking}
    </arg>
    <arg>
     ${True}
    </arg>
    <doc>
     Makes a variable available globally in all tests and suites.
    </doc>
    <msg level="INFO" timestamp="20240502 20:18:16.224">
     ${screenshot_taking} = True
    </msg>
    <status endtime="20240502 20:18:16.224" starttime="20240502 20:18:16.224" status="PASS"/>
   </kw>
   <kw library="Support" name="Setup linux execution">
    <kw library="BuiltIn" name="Run Keyword And Return Status">
     <var>
      ${web_test_check}
     </var>
     <arg>
      Variable Should Exist
     </arg>
     <arg>
      ${web_test}
     </arg>
     <doc>
      Runs the given keyword with given arguments and returns the status as a Boolean value.
     </doc>
     <kw library="BuiltIn" name="Variable Should Exist">
      <arg>
       ${web_test}
      </arg>
      <doc>
       Fails unless the given variable exists within the current scope.
      </doc>
      <status endtime="20240502 20:18:16.224" starttime="20240502 20:18:16.224" status="PASS"/>
     </kw>
     <msg level="INFO" timestamp="20240502 20:18:16.224">
      ${web_test_check} = True
     </msg>
     <status endtime="20240502 20:18:16.224" starttime="20240502 20:18:16.224" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Run Keyword If">
     <arg>
      ${web_test_check}
     </arg>
     <arg>
      Setup Docker Execution Options
     </arg>
     <doc>
      Runs the given keyword with the given arguments, if ``condition`` is true.
     </doc>
     <kw library="Support_Web" name="Setup Docker Execution Options">
      <kw library="Support_Web" name="Setup Suite Metadata">
       <arg>
        ${browser}
       </arg>
       <kw library="BrowserSupport" name="Get Browser Metadata">
        <var>
         &amp;{browser_information}
        </var>
        <arg>
         browser=${browser}
        </arg>
        <doc>
         Fetches browser metadata information
:param browser: Name of the browser for which information is fetched
:param reload: Re-read the metadata based on the browser
:return: Browser metadata information, dict of format
            {"browser_version": browser version value,
             "driver_version": driver version value}
        </doc>
        <msg level="INFO" timestamp="20240502 20:18:20.628">
         &amp;{browser_information} = { browser_version=124.0.6367.118 | driver_version=124.0.6367.91  }
        </msg>
        <status endtime="20240502 20:18:20.628" starttime="20240502 20:18:16.224" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Suite Metadata">
        <arg>
         test_browser_name
        </arg>
        <arg>
         ${browser}
        </arg>
        <doc>
         Sets metadata for the current test suite.
        </doc>
        <msg level="INFO" timestamp="20240502 20:18:20.628">
         Set suite metadata 'test_browser_name' to value 'chrome'.
        </msg>
        <status endtime="20240502 20:18:20.628" starttime="20240502 20:18:20.628" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Suite Metadata">
        <arg>
         test_browser_version
        </arg>
        <arg>
         ${browser_information.browser_version}
        </arg>
        <doc>
         Sets metadata for the current test suite.
        </doc>
        <msg level="INFO" timestamp="20240502 20:18:20.628">
         Set suite metadata 'test_browser_version' to value '124.0.6367.118'.
        </msg>
        <status endtime="20240502 20:18:20.628" starttime="20240502 20:18:20.628" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Suite Metadata">
        <arg>
         test_driver_version
        </arg>
        <arg>
         ${browser_information.driver_version}
        </arg>
        <doc>
         Sets metadata for the current test suite.
        </doc>
        <msg level="INFO" timestamp="20240502 20:18:20.628">
         Set suite metadata 'test_driver_version' to value '124.0.6367.91 '.
        </msg>
        <status endtime="20240502 20:18:20.628" starttime="20240502 20:18:20.628" status="PASS"/>
       </kw>
       <status endtime="20240502 20:18:20.628" starttime="20240502 20:18:16.224" status="PASS"/>
      </kw>
      <kw library="Support_Web" name="Setup Global Docker Execution Options">
       <kw library="BuiltIn" name="Set Global Variable">
        <arg>
         ${global_browser_options}
        </arg>
        <arg>
         None
        </arg>
        <doc>
         Makes a variable available globally in all tests and suites.
        </doc>
        <msg level="INFO" timestamp="20240502 20:18:20.628">
         ${global_browser_options} = None
        </msg>
        <status endtime="20240502 20:18:20.628" starttime="20240502 20:18:20.628" status="PASS"/>
       </kw>
       <kw library="OperatingSystem" name="Get Environment Variable">
        <var>
         ${docker_check}
        </var>
        <arg>
         EXECUTION_ENVIRONMENT
        </arg>
        <arg>
         not_found
        </arg>
        <doc>
         Returns the value of an environment variable with the given name.
        </doc>
        <msg level="INFO" timestamp="20240502 20:18:20.628">
         ${docker_check} = not_found
        </msg>
        <status endtime="20240502 20:18:20.628" starttime="20240502 20:18:20.628" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Run Keyword And Return If">
        <arg>
         "${docker_check}"!="docker"
        </arg>
        <arg>
         Log
        </arg>
        <arg>
         Not executing on Docker
        </arg>
        <doc>
         Runs the specified keyword and returns from the enclosing user keyword.
        </doc>
        <kw library="BuiltIn" name="Log">
         <arg>
          Not executing on Docker
         </arg>
         <doc>
          Logs the given message with the given level.
         </doc>
         <msg level="INFO" timestamp="20240502 20:18:20.628">
          Not executing on Docker
         </msg>
         <status endtime="20240502 20:18:20.628" starttime="20240502 20:18:20.628" status="PASS"/>
        </kw>
        <msg level="INFO" timestamp="20240502 20:18:20.628">
         Returning from the enclosing user keyword.
        </msg>
        <status endtime="20240502 20:18:20.628" starttime="20240502 20:18:20.628" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Create List">
        <var>
         @{options}
        </var>
        <arg>
         --headless
        </arg>
        <arg>
         --no-sandbox
        </arg>
        <arg>
         --disable-dev-shm-usage
        </arg>
        <doc>
         Returns a list containing given items.
        </doc>
        <status endtime="20240502 20:18:20.628" starttime="20240502 20:18:20.628" status="NOT RUN"/>
       </kw>
       <kw library="BuiltIn" name="Set Global Variable">
        <arg>
         @{docker_options}
        </arg>
        <arg>
         @{options}
        </arg>
        <doc>
         Makes a variable available globally in all tests and suites.
        </doc>
        <status endtime="20240502 20:18:20.628" starttime="20240502 20:18:20.628" status="NOT RUN"/>
       </kw>
       <status endtime="20240502 20:18:20.628" starttime="20240502 20:18:20.628" status="PASS"/>
      </kw>
      <kw library="Support_Web" name="Create Webdriver for chrome preferences">
       <kw library="Support_Web" name="Update Docker Execution Options">
        <var>
         ${list_prefs}
        </var>
        <arg>
         ${list_prefs}
        </arg>
        <kw library="BuiltIn" name="Run Keyword And Return Status">
         <var>
          ${docker_check}
         </var>
         <arg>
          Variable Should Exist
         </arg>
         <arg>
          ${docker_options}
         </arg>
         <doc>
          Runs the given keyword with given arguments and returns the status as a Boolean value.
         </doc>
         <kw library="BuiltIn" name="Variable Should Exist">
          <arg>
           ${docker_options}
          </arg>
          <doc>
           Fails unless the given variable exists within the current scope.
          </doc>
          <msg level="FAIL" timestamp="20240502 20:18:20.638">
           Variable '${docker_options}' does not exist.
          </msg>
          <status endtime="20240502 20:18:20.638" starttime="20240502 20:18:20.628" status="FAIL"/>
         </kw>
         <msg level="INFO" timestamp="20240502 20:18:20.638">
          ${docker_check} = False
         </msg>
         <status endtime="20240502 20:18:20.638" starttime="20240502 20:18:20.628" status="PASS"/>
        </kw>
        <kw library="BuiltIn" name="Get Length">
         <var>
          ${list_prefs_length}
         </var>
         <arg>
          ${list_prefs}
         </arg>
         <doc>
          Returns and logs the length of the given item as an integer.
         </doc>
         <msg level="INFO" timestamp="20240502 20:18:20.638">
          Length is 1
         </msg>
         <msg level="INFO" timestamp="20240502 20:18:20.638">
          ${list_prefs_length} = 1
         </msg>
         <status endtime="20240502 20:18:20.638" starttime="20240502 20:18:20.638" status="PASS"/>
        </kw>
        <kw library="BuiltIn" name="Run Keyword If">
         <var>
          ${list_prefs}
         </var>
         <arg>
          ${docker_check} and ${list_prefs_length}&gt;0 and ${list_prefs}[0] != []
         </arg>
         <arg>
          Combine Lists
         </arg>
         <arg>
          ${list_prefs}
         </arg>
         <arg>
          ${docker_options}
         </arg>
         <arg>
          ELSE IF
         </arg>
         <arg>
          ${docker_check}
         </arg>
         <arg>
          Set Variable
         </arg>
         <arg>
          ${docker_options}
         </arg>
         <arg>
          ELSE
         </arg>
         <arg>
          Set Variable
         </arg>
         <arg>
          ${list_prefs}
         </arg>
         <doc>
          Runs the given keyword with the given arguments, if ``condition`` is true.
         </doc>
         <kw library="BuiltIn" name="Set Variable">
          <arg>
           ${list_prefs}
          </arg>
          <doc>
           Returns the given values which can then be assigned to a variables.
          </doc>
          <status endtime="20240502 20:18:20.638" starttime="20240502 20:18:20.638" status="PASS"/>
         </kw>
         <msg level="INFO" timestamp="20240502 20:18:20.638">
          ${list_prefs} = [[]]
         </msg>
         <status endtime="20240502 20:18:20.638" starttime="20240502 20:18:20.638" status="PASS"/>
        </kw>
        <msg level="INFO" timestamp="20240502 20:18:20.638">
         ${list_prefs} = [[]]
        </msg>
        <status endtime="20240502 20:18:20.638" starttime="20240502 20:18:20.628" status="PASS"/>
       </kw>
       <kw library="Support_Web" name="Create Chrome Options for download preferences">
        <var>
         ${chrome_options}
        </var>
        <kw library="BuiltIn" name="Evaluate">
         <var>
          ${chrome_options}
         </var>
         <arg>
          sys.modules['selenium.webdriver'].ChromeOptions()
         </arg>
         <arg>
          sys
         </arg>
         <doc>
          Evaluates the given expression in Python and returns the result.
         </doc>
         <msg level="INFO" timestamp="20240502 20:18:20.638">
          ${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x00000227659BA090&gt;
         </msg>
         <status endtime="20240502 20:18:20.638" starttime="20240502 20:18:20.638" status="PASS"/>
        </kw>
        <msg level="INFO" timestamp="20240502 20:18:20.638">
         ${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x00000227659BA090&gt;
        </msg>
        <status endtime="20240502 20:18:20.638" starttime="20240502 20:18:20.638" status="PASS"/>
       </kw>
       <kw library="Support_Web" name="Update Preferences List">
        <arg>
         ${chrome_options}
        </arg>
        <arg>
         @{list_prefs}
        </arg>
        <kw library="BuiltIn" name="Convert To String">
         <var>
          ${string_prefs}
         </var>
         <arg>
          ${list_prefs}
         </arg>
         <doc>
          Converts the given item to a Unicode string.
         </doc>
         <msg level="INFO" timestamp="20240502 20:18:20.638">
          ${string_prefs} = [[]]
         </msg>
         <status endtime="20240502 20:18:20.638" starttime="20240502 20:18:20.638" status="PASS"/>
        </kw>
        <kw library="BuiltIn" name="Return From Keyword If">
         <arg>
          ${string_prefs} == [[]]
         </arg>
         <doc>
          Returns from the enclosing user keyword if ``condition`` is true.
         </doc>
         <msg level="INFO" timestamp="20240502 20:18:20.638">
          Returning from the enclosing user keyword.
         </msg>
         <status endtime="20240502 20:18:20.638" starttime="20240502 20:18:20.638" status="PASS"/>
        </kw>
        <for flavor="IN">
         <var>
          ${preference}
         </var>
         <value>
          @{list_prefs}
         </value>
         <iter>
          <var name="${preference}"/>
          <kw library="BuiltIn" name="Call Method">
           <arg>
            ${chrome_options}
           </arg>
           <arg>
            add_argument
           </arg>
           <arg>
            ${preference}
           </arg>
           <doc>
            Calls the named method of the given object with the provided arguments.
           </doc>
           <status endtime="20240502 20:18:20.638" starttime="20240502 20:18:20.638" status="NOT RUN"/>
          </kw>
          <status endtime="20240502 20:18:20.638" starttime="20240502 20:18:20.638" status="NOT RUN"/>
         </iter>
         <status endtime="20240502 20:18:20.638" starttime="20240502 20:18:20.638" status="NOT RUN"/>
        </for>
        <status endtime="20240502 20:18:20.638" starttime="20240502 20:18:20.638" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Call Method">
        <arg>
         ${chrome_options}
        </arg>
        <arg>
         add_experimental_option
        </arg>
        <arg>
         prefs
        </arg>
        <arg>
         ${kw_prefs}
        </arg>
        <doc>
         Calls the named method of the given object with the provided arguments.
        </doc>
        <status endtime="20240502 20:18:20.638" starttime="20240502 20:18:20.638" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Global Variable">
        <arg>
         ${global_browser_options}
        </arg>
        <arg>
         ${chrome options}
        </arg>
        <doc>
         Makes a variable available globally in all tests and suites.
        </doc>
        <msg level="INFO" timestamp="20240502 20:18:20.638">
         ${global_browser_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x00000227659BA090&gt;
        </msg>
        <status endtime="20240502 20:18:20.638" starttime="20240502 20:18:20.638" status="PASS"/>
       </kw>
       <status endtime="20240502 20:18:20.638" starttime="20240502 20:18:20.628" status="PASS"/>
      </kw>
      <status endtime="20240502 20:18:20.638" starttime="20240502 20:18:16.224" status="PASS"/>
     </kw>
     <status endtime="20240502 20:18:20.638" starttime="20240502 20:18:16.224" status="PASS"/>
    </kw>
    <status endtime="20240502 20:18:20.638" starttime="20240502 20:18:16.224" status="PASS"/>
   </kw>
   <kw library="BuiltIn" name="Set Suite Metadata">
    <arg>
     environment
    </arg>
    <arg>
     ${test_server}
    </arg>
    <doc>
     Sets metadata for the current test suite.
    </doc>
    <msg level="INFO" timestamp="20240502 20:18:20.648">
     Set suite metadata 'environment' to value 'Dev'.
    </msg>
    <status endtime="20240502 20:18:20.648" starttime="20240502 20:18:20.648" status="PASS"/>
   </kw>
   <kw library="BuiltIn" name="Set Variable">
    <var>
     ${d.test_server}
    </var>
    <arg>
     ${test_server}
    </arg>
    <doc>
     Returns the given values which can then be assigned to a variables.
    </doc>
    <msg level="INFO" timestamp="20240502 20:19:02.955">
     ${d.test_server} = Dev
    </msg>
    <status endtime="20240502 20:19:02.956" starttime="20240502 20:19:02.955" status="PASS"/>
   </kw>
   <kw library="Support" name="Reset screenshot count variable">
    <kw library="BuiltIn" name="Set Variable">
     <var>
      ${screenshotCount}
     </var>
     <arg>
      ${PABOTQUEUEINDEX}_1
     </arg>
     <doc>
      Returns the given values which can then be assigned to a variables.
     </doc>
     <msg level="INFO" timestamp="20240502 20:19:02.956">
      ${screenshotCount} = 13_1
     </msg>
     <status endtime="20240502 20:19:02.956" starttime="20240502 20:19:02.956" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Set Global Variable">
     <arg>
      ${screenshotCount}
     </arg>
     <doc>
      Makes a variable available globally in all tests and suites.
     </doc>
     <msg level="INFO" timestamp="20240502 20:19:02.957">
      ${screenshotCount} = 13_1
     </msg>
     <status endtime="20240502 20:19:02.957" starttime="20240502 20:19:02.956" status="PASS"/>
    </kw>
    <kw library="Support" name="Set up screenshot directory">
     <kw library="OperatingSystem" name="Create Directory">
      <arg>
       ${OUTPUTDIR}${/}${wvar('screenshot_dir')}
      </arg>
      <doc>
       Creates the specified directory.
      </doc>
      <msg level="INFO" timestamp="20240502 20:19:02.958">
       Web.Dev.screenshot_dir: Screenshot
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:19:02.960">
       Created directory '&lt;a href="file://C:\SAP_Testing\SAPtesting\Output\pabot_results\13\Screenshot"&gt;C:\SAP_Testing\SAPtesting\Output\pabot_results\13\Screenshot&lt;/a&gt;'.
      </msg>
      <status endtime="20240502 20:19:02.960" starttime="20240502 20:19:02.957" status="PASS"/>
     </kw>
     <status endtime="20240502 20:19:02.961" starttime="20240502 20:19:02.957" status="PASS"/>
    </kw>
    <status endtime="20240502 20:19:02.961" starttime="20240502 20:19:02.956" status="PASS"/>
   </kw>
   <kw library="BuiltIn" name="Set Global Variable">
    <arg>
     ${screenshot_taking}
    </arg>
    <arg>
     ${True}
    </arg>
    <doc>
     Makes a variable available globally in all tests and suites.
    </doc>
    <msg level="INFO" timestamp="20240502 20:19:02.961">
     ${screenshot_taking} = True
    </msg>
    <status endtime="20240502 20:19:02.961" starttime="20240502 20:19:02.961" status="PASS"/>
   </kw>
   <kw library="Support" name="Setup linux execution">
    <kw library="BuiltIn" name="Run Keyword And Return Status">
     <var>
      ${web_test_check}
     </var>
     <arg>
      Variable Should Exist
     </arg>
     <arg>
      ${web_test}
     </arg>
     <doc>
      Runs the given keyword with given arguments and returns the status as a Boolean value.
     </doc>
     <kw library="BuiltIn" name="Variable Should Exist">
      <arg>
       ${web_test}
      </arg>
      <doc>
       Fails unless the given variable exists within the current scope.
      </doc>
      <status endtime="20240502 20:19:02.963" starttime="20240502 20:19:02.962" status="PASS"/>
     </kw>
     <msg level="INFO" timestamp="20240502 20:19:02.963">
      ${web_test_check} = True
     </msg>
     <status endtime="20240502 20:19:02.963" starttime="20240502 20:19:02.962" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Run Keyword If">
     <arg>
      ${web_test_check}
     </arg>
     <arg>
      Setup Docker Execution Options
     </arg>
     <doc>
      Runs the given keyword with the given arguments, if ``condition`` is true.
     </doc>
     <kw library="Support_Web" name="Setup Docker Execution Options">
      <kw library="Support_Web" name="Setup Suite Metadata">
       <arg>
        ${browser}
       </arg>
       <kw library="BrowserSupport" name="Get Browser Metadata">
        <var>
         &amp;{browser_information}
        </var>
        <arg>
         browser=${browser}
        </arg>
        <doc>
         Fetches browser metadata information
:param browser: Name of the browser for which information is fetched
:param reload: Re-read the metadata based on the browser
:return: Browser metadata information, dict of format
            {"browser_version": browser version value,
             "driver_version": driver version value}
        </doc>
        <msg level="INFO" timestamp="20240502 20:19:07.453">
         &amp;{browser_information} = { browser_version=124.0.6367.118 | driver_version=124.0.6367.91  }
        </msg>
        <status endtime="20240502 20:19:07.453" starttime="20240502 20:19:02.964" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Suite Metadata">
        <arg>
         test_browser_name
        </arg>
        <arg>
         ${browser}
        </arg>
        <doc>
         Sets metadata for the current test suite.
        </doc>
        <msg level="INFO" timestamp="20240502 20:19:07.454">
         Set suite metadata 'test_browser_name' to value 'chrome'.
        </msg>
        <status endtime="20240502 20:19:07.454" starttime="20240502 20:19:07.454" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Suite Metadata">
        <arg>
         test_browser_version
        </arg>
        <arg>
         ${browser_information.browser_version}
        </arg>
        <doc>
         Sets metadata for the current test suite.
        </doc>
        <msg level="INFO" timestamp="20240502 20:19:07.456">
         Set suite metadata 'test_browser_version' to value '124.0.6367.118'.
        </msg>
        <status endtime="20240502 20:19:07.456" starttime="20240502 20:19:07.455" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Suite Metadata">
        <arg>
         test_driver_version
        </arg>
        <arg>
         ${browser_information.driver_version}
        </arg>
        <doc>
         Sets metadata for the current test suite.
        </doc>
        <msg level="INFO" timestamp="20240502 20:19:07.457">
         Set suite metadata 'test_driver_version' to value '124.0.6367.91 '.
        </msg>
        <status endtime="20240502 20:19:07.457" starttime="20240502 20:19:07.456" status="PASS"/>
       </kw>
       <status endtime="20240502 20:19:07.457" starttime="20240502 20:19:02.963" status="PASS"/>
      </kw>
      <kw library="Support_Web" name="Setup Global Docker Execution Options">
       <kw library="BuiltIn" name="Set Global Variable">
        <arg>
         ${global_browser_options}
        </arg>
        <arg>
         None
        </arg>
        <doc>
         Makes a variable available globally in all tests and suites.
        </doc>
        <msg level="INFO" timestamp="20240502 20:19:07.459">
         ${global_browser_options} = None
        </msg>
        <status endtime="20240502 20:19:07.459" starttime="20240502 20:19:07.457" status="PASS"/>
       </kw>
       <kw library="OperatingSystem" name="Get Environment Variable">
        <var>
         ${docker_check}
        </var>
        <arg>
         EXECUTION_ENVIRONMENT
        </arg>
        <arg>
         not_found
        </arg>
        <doc>
         Returns the value of an environment variable with the given name.
        </doc>
        <msg level="INFO" timestamp="20240502 20:19:07.459">
         ${docker_check} = not_found
        </msg>
        <status endtime="20240502 20:19:07.459" starttime="20240502 20:19:07.459" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Run Keyword And Return If">
        <arg>
         "${docker_check}"!="docker"
        </arg>
        <arg>
         Log
        </arg>
        <arg>
         Not executing on Docker
        </arg>
        <doc>
         Runs the specified keyword and returns from the enclosing user keyword.
        </doc>
        <kw library="BuiltIn" name="Log">
         <arg>
          Not executing on Docker
         </arg>
         <doc>
          Logs the given message with the given level.
         </doc>
         <msg level="INFO" timestamp="20240502 20:19:07.460">
          Not executing on Docker
         </msg>
         <status endtime="20240502 20:19:07.460" starttime="20240502 20:19:07.460" status="PASS"/>
        </kw>
        <msg level="INFO" timestamp="20240502 20:19:07.460">
         Returning from the enclosing user keyword.
        </msg>
        <status endtime="20240502 20:19:07.460" starttime="20240502 20:19:07.459" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Create List">
        <var>
         @{options}
        </var>
        <arg>
         --headless
        </arg>
        <arg>
         --no-sandbox
        </arg>
        <arg>
         --disable-dev-shm-usage
        </arg>
        <doc>
         Returns a list containing given items.
        </doc>
        <status endtime="20240502 20:19:07.461" starttime="20240502 20:19:07.461" status="NOT RUN"/>
       </kw>
       <kw library="BuiltIn" name="Set Global Variable">
        <arg>
         @{docker_options}
        </arg>
        <arg>
         @{options}
        </arg>
        <doc>
         Makes a variable available globally in all tests and suites.
        </doc>
        <status endtime="20240502 20:19:07.461" starttime="20240502 20:19:07.461" status="NOT RUN"/>
       </kw>
       <status endtime="20240502 20:19:07.461" starttime="20240502 20:19:07.457" status="PASS"/>
      </kw>
      <kw library="Support_Web" name="Create Webdriver for chrome preferences">
       <kw library="Support_Web" name="Update Docker Execution Options">
        <var>
         ${list_prefs}
        </var>
        <arg>
         ${list_prefs}
        </arg>
        <kw library="BuiltIn" name="Run Keyword And Return Status">
         <var>
          ${docker_check}
         </var>
         <arg>
          Variable Should Exist
         </arg>
         <arg>
          ${docker_options}
         </arg>
         <doc>
          Runs the given keyword with given arguments and returns the status as a Boolean value.
         </doc>
         <kw library="BuiltIn" name="Variable Should Exist">
          <arg>
           ${docker_options}
          </arg>
          <doc>
           Fails unless the given variable exists within the current scope.
          </doc>
          <msg level="FAIL" timestamp="20240502 20:19:07.465">
           Variable '${docker_options}' does not exist.
          </msg>
          <status endtime="20240502 20:19:07.465" starttime="20240502 20:19:07.463" status="FAIL"/>
         </kw>
         <msg level="INFO" timestamp="20240502 20:19:07.465">
          ${docker_check} = False
         </msg>
         <status endtime="20240502 20:19:07.465" starttime="20240502 20:19:07.462" status="PASS"/>
        </kw>
        <kw library="BuiltIn" name="Get Length">
         <var>
          ${list_prefs_length}
         </var>
         <arg>
          ${list_prefs}
         </arg>
         <doc>
          Returns and logs the length of the given item as an integer.
         </doc>
         <msg level="INFO" timestamp="20240502 20:19:07.466">
          Length is 1
         </msg>
         <msg level="INFO" timestamp="20240502 20:19:07.466">
          ${list_prefs_length} = 1
         </msg>
         <status endtime="20240502 20:19:07.466" starttime="20240502 20:19:07.465" status="PASS"/>
        </kw>
        <kw library="BuiltIn" name="Run Keyword If">
         <var>
          ${list_prefs}
         </var>
         <arg>
          ${docker_check} and ${list_prefs_length}&gt;0 and ${list_prefs}[0] != []
         </arg>
         <arg>
          Combine Lists
         </arg>
         <arg>
          ${list_prefs}
         </arg>
         <arg>
          ${docker_options}
         </arg>
         <arg>
          ELSE IF
         </arg>
         <arg>
          ${docker_check}
         </arg>
         <arg>
          Set Variable
         </arg>
         <arg>
          ${docker_options}
         </arg>
         <arg>
          ELSE
         </arg>
         <arg>
          Set Variable
         </arg>
         <arg>
          ${list_prefs}
         </arg>
         <doc>
          Runs the given keyword with the given arguments, if ``condition`` is true.
         </doc>
         <kw library="BuiltIn" name="Set Variable">
          <arg>
           ${list_prefs}
          </arg>
          <doc>
           Returns the given values which can then be assigned to a variables.
          </doc>
          <status endtime="20240502 20:19:07.467" starttime="20240502 20:19:07.467" status="PASS"/>
         </kw>
         <msg level="INFO" timestamp="20240502 20:19:07.467">
          ${list_prefs} = [[]]
         </msg>
         <status endtime="20240502 20:19:07.467" starttime="20240502 20:19:07.466" status="PASS"/>
        </kw>
        <msg level="INFO" timestamp="20240502 20:19:07.467">
         ${list_prefs} = [[]]
        </msg>
        <status endtime="20240502 20:19:07.467" starttime="20240502 20:19:07.462" status="PASS"/>
       </kw>
       <kw library="Support_Web" name="Create Chrome Options for download preferences">
        <var>
         ${chrome_options}
        </var>
        <kw library="BuiltIn" name="Evaluate">
         <var>
          ${chrome_options}
         </var>
         <arg>
          sys.modules['selenium.webdriver'].ChromeOptions()
         </arg>
         <arg>
          sys
         </arg>
         <doc>
          Evaluates the given expression in Python and returns the result.
         </doc>
         <msg level="INFO" timestamp="20240502 20:19:07.468">
          ${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x0000029DABA4A060&gt;
         </msg>
         <status endtime="20240502 20:19:07.468" starttime="20240502 20:19:07.468" status="PASS"/>
        </kw>
        <msg level="INFO" timestamp="20240502 20:19:07.468">
         ${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x0000029DABA4A060&gt;
        </msg>
        <status endtime="20240502 20:19:07.468" starttime="20240502 20:19:07.467" status="PASS"/>
       </kw>
       <kw library="Support_Web" name="Update Preferences List">
        <arg>
         ${chrome_options}
        </arg>
        <arg>
         @{list_prefs}
        </arg>
        <kw library="BuiltIn" name="Convert To String">
         <var>
          ${string_prefs}
         </var>
         <arg>
          ${list_prefs}
         </arg>
         <doc>
          Converts the given item to a Unicode string.
         </doc>
         <msg level="INFO" timestamp="20240502 20:19:07.469">
          ${string_prefs} = [[]]
         </msg>
         <status endtime="20240502 20:19:07.469" starttime="20240502 20:19:07.469" status="PASS"/>
        </kw>
        <kw library="BuiltIn" name="Return From Keyword If">
         <arg>
          ${string_prefs} == [[]]
         </arg>
         <doc>
          Returns from the enclosing user keyword if ``condition`` is true.
         </doc>
         <msg level="INFO" timestamp="20240502 20:19:07.470">
          Returning from the enclosing user keyword.
         </msg>
         <status endtime="20240502 20:19:07.470" starttime="20240502 20:19:07.470" status="PASS"/>
        </kw>
        <for flavor="IN">
         <var>
          ${preference}
         </var>
         <value>
          @{list_prefs}
         </value>
         <iter>
          <var name="${preference}"/>
          <kw library="BuiltIn" name="Call Method">
           <arg>
            ${chrome_options}
           </arg>
           <arg>
            add_argument
           </arg>
           <arg>
            ${preference}
           </arg>
           <doc>
            Calls the named method of the given object with the provided arguments.
           </doc>
           <status endtime="20240502 20:19:07.471" starttime="20240502 20:19:07.470" status="NOT RUN"/>
          </kw>
          <status endtime="20240502 20:19:07.471" starttime="20240502 20:19:07.470" status="NOT RUN"/>
         </iter>
         <status endtime="20240502 20:19:07.471" starttime="20240502 20:19:07.470" status="NOT RUN"/>
        </for>
        <status endtime="20240502 20:19:07.471" starttime="20240502 20:19:07.469" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Call Method">
        <arg>
         ${chrome_options}
        </arg>
        <arg>
         add_experimental_option
        </arg>
        <arg>
         prefs
        </arg>
        <arg>
         ${kw_prefs}
        </arg>
        <doc>
         Calls the named method of the given object with the provided arguments.
        </doc>
        <status endtime="20240502 20:19:07.471" starttime="20240502 20:19:07.471" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Global Variable">
        <arg>
         ${global_browser_options}
        </arg>
        <arg>
         ${chrome options}
        </arg>
        <doc>
         Makes a variable available globally in all tests and suites.
        </doc>
        <msg level="INFO" timestamp="20240502 20:19:07.472">
         ${global_browser_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x0000029DABA4A060&gt;
        </msg>
        <status endtime="20240502 20:19:07.472" starttime="20240502 20:19:07.472" status="PASS"/>
       </kw>
       <status endtime="20240502 20:19:07.472" starttime="20240502 20:19:07.461" status="PASS"/>
      </kw>
      <status endtime="20240502 20:19:07.472" starttime="20240502 20:19:02.963" status="PASS"/>
     </kw>
     <status endtime="20240502 20:19:07.472" starttime="20240502 20:19:02.963" status="PASS"/>
    </kw>
    <status endtime="20240502 20:19:07.473" starttime="20240502 20:19:02.962" status="PASS"/>
   </kw>
   <kw library="BuiltIn" name="Set Suite Metadata">
    <arg>
     environment
    </arg>
    <arg>
     ${test_server}
    </arg>
    <doc>
     Sets metadata for the current test suite.
    </doc>
    <msg level="INFO" timestamp="20240502 20:19:07.473">
     Set suite metadata 'environment' to value 'Dev'.
    </msg>
    <status endtime="20240502 20:19:07.473" starttime="20240502 20:19:07.473" status="PASS"/>
   </kw>
   <kw library="BuiltIn" name="Set Variable">
    <var>
     ${d.test_server}
    </var>
    <arg>
     ${test_server}
    </arg>
    <doc>
     Returns the given values which can then be assigned to a variables.
    </doc>
    <msg level="INFO" timestamp="20240502 20:19:40.560">
     ${d.test_server} = Dev
    </msg>
    <status endtime="20240502 20:19:40.560" starttime="20240502 20:19:40.560" status="PASS"/>
   </kw>
   <kw library="Support" name="Reset screenshot count variable">
    <kw library="BuiltIn" name="Set Variable">
     <var>
      ${screenshotCount}
     </var>
     <arg>
      ${PABOTQUEUEINDEX}_1
     </arg>
     <doc>
      Returns the given values which can then be assigned to a variables.
     </doc>
     <msg level="INFO" timestamp="20240502 20:19:40.560">
      ${screenshotCount} = 14_1
     </msg>
     <status endtime="20240502 20:19:40.560" starttime="20240502 20:19:40.560" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Set Global Variable">
     <arg>
      ${screenshotCount}
     </arg>
     <doc>
      Makes a variable available globally in all tests and suites.
     </doc>
     <msg level="INFO" timestamp="20240502 20:19:40.560">
      ${screenshotCount} = 14_1
     </msg>
     <status endtime="20240502 20:19:40.560" starttime="20240502 20:19:40.560" status="PASS"/>
    </kw>
    <kw library="Support" name="Set up screenshot directory">
     <kw library="OperatingSystem" name="Create Directory">
      <arg>
       ${OUTPUTDIR}${/}${wvar('screenshot_dir')}
      </arg>
      <doc>
       Creates the specified directory.
      </doc>
      <msg level="INFO" timestamp="20240502 20:19:40.560">
       Web.Dev.screenshot_dir: Screenshot
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:19:40.571">
       Created directory '&lt;a href="file://C:\SAP_Testing\SAPtesting\Output\pabot_results\14\Screenshot"&gt;C:\SAP_Testing\SAPtesting\Output\pabot_results\14\Screenshot&lt;/a&gt;'.
      </msg>
      <status endtime="20240502 20:19:40.571" starttime="20240502 20:19:40.560" status="PASS"/>
     </kw>
     <status endtime="20240502 20:19:40.571" starttime="20240502 20:19:40.560" status="PASS"/>
    </kw>
    <status endtime="20240502 20:19:40.571" starttime="20240502 20:19:40.560" status="PASS"/>
   </kw>
   <kw library="BuiltIn" name="Set Global Variable">
    <arg>
     ${screenshot_taking}
    </arg>
    <arg>
     ${True}
    </arg>
    <doc>
     Makes a variable available globally in all tests and suites.
    </doc>
    <msg level="INFO" timestamp="20240502 20:19:40.571">
     ${screenshot_taking} = True
    </msg>
    <status endtime="20240502 20:19:40.571" starttime="20240502 20:19:40.571" status="PASS"/>
   </kw>
   <kw library="Support" name="Setup linux execution">
    <kw library="BuiltIn" name="Run Keyword And Return Status">
     <var>
      ${web_test_check}
     </var>
     <arg>
      Variable Should Exist
     </arg>
     <arg>
      ${web_test}
     </arg>
     <doc>
      Runs the given keyword with given arguments and returns the status as a Boolean value.
     </doc>
     <kw library="BuiltIn" name="Variable Should Exist">
      <arg>
       ${web_test}
      </arg>
      <doc>
       Fails unless the given variable exists within the current scope.
      </doc>
      <status endtime="20240502 20:19:40.571" starttime="20240502 20:19:40.571" status="PASS"/>
     </kw>
     <msg level="INFO" timestamp="20240502 20:19:40.571">
      ${web_test_check} = True
     </msg>
     <status endtime="20240502 20:19:40.571" starttime="20240502 20:19:40.571" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Run Keyword If">
     <arg>
      ${web_test_check}
     </arg>
     <arg>
      Setup Docker Execution Options
     </arg>
     <doc>
      Runs the given keyword with the given arguments, if ``condition`` is true.
     </doc>
     <kw library="Support_Web" name="Setup Docker Execution Options">
      <kw library="Support_Web" name="Setup Suite Metadata">
       <arg>
        ${browser}
       </arg>
       <kw library="BrowserSupport" name="Get Browser Metadata">
        <var>
         &amp;{browser_information}
        </var>
        <arg>
         browser=${browser}
        </arg>
        <doc>
         Fetches browser metadata information
:param browser: Name of the browser for which information is fetched
:param reload: Re-read the metadata based on the browser
:return: Browser metadata information, dict of format
            {"browser_version": browser version value,
             "driver_version": driver version value}
        </doc>
        <msg level="INFO" timestamp="20240502 20:19:43.809">
         &amp;{browser_information} = { browser_version=124.0.6367.118 | driver_version=124.0.6367.91  }
        </msg>
        <status endtime="20240502 20:19:43.809" starttime="20240502 20:19:40.571" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Suite Metadata">
        <arg>
         test_browser_name
        </arg>
        <arg>
         ${browser}
        </arg>
        <doc>
         Sets metadata for the current test suite.
        </doc>
        <msg level="INFO" timestamp="20240502 20:19:43.809">
         Set suite metadata 'test_browser_name' to value 'chrome'.
        </msg>
        <status endtime="20240502 20:19:43.809" starttime="20240502 20:19:43.809" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Suite Metadata">
        <arg>
         test_browser_version
        </arg>
        <arg>
         ${browser_information.browser_version}
        </arg>
        <doc>
         Sets metadata for the current test suite.
        </doc>
        <msg level="INFO" timestamp="20240502 20:19:43.809">
         Set suite metadata 'test_browser_version' to value '124.0.6367.118'.
        </msg>
        <status endtime="20240502 20:19:43.809" starttime="20240502 20:19:43.809" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Suite Metadata">
        <arg>
         test_driver_version
        </arg>
        <arg>
         ${browser_information.driver_version}
        </arg>
        <doc>
         Sets metadata for the current test suite.
        </doc>
        <msg level="INFO" timestamp="20240502 20:19:43.809">
         Set suite metadata 'test_driver_version' to value '124.0.6367.91 '.
        </msg>
        <status endtime="20240502 20:19:43.809" starttime="20240502 20:19:43.809" status="PASS"/>
       </kw>
       <status endtime="20240502 20:19:43.809" starttime="20240502 20:19:40.571" status="PASS"/>
      </kw>
      <kw library="Support_Web" name="Setup Global Docker Execution Options">
       <kw library="BuiltIn" name="Set Global Variable">
        <arg>
         ${global_browser_options}
        </arg>
        <arg>
         None
        </arg>
        <doc>
         Makes a variable available globally in all tests and suites.
        </doc>
        <msg level="INFO" timestamp="20240502 20:19:43.809">
         ${global_browser_options} = None
        </msg>
        <status endtime="20240502 20:19:43.809" starttime="20240502 20:19:43.809" status="PASS"/>
       </kw>
       <kw library="OperatingSystem" name="Get Environment Variable">
        <var>
         ${docker_check}
        </var>
        <arg>
         EXECUTION_ENVIRONMENT
        </arg>
        <arg>
         not_found
        </arg>
        <doc>
         Returns the value of an environment variable with the given name.
        </doc>
        <msg level="INFO" timestamp="20240502 20:19:43.809">
         ${docker_check} = not_found
        </msg>
        <status endtime="20240502 20:19:43.809" starttime="20240502 20:19:43.809" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Run Keyword And Return If">
        <arg>
         "${docker_check}"!="docker"
        </arg>
        <arg>
         Log
        </arg>
        <arg>
         Not executing on Docker
        </arg>
        <doc>
         Runs the specified keyword and returns from the enclosing user keyword.
        </doc>
        <kw library="BuiltIn" name="Log">
         <arg>
          Not executing on Docker
         </arg>
         <doc>
          Logs the given message with the given level.
         </doc>
         <msg level="INFO" timestamp="20240502 20:19:43.809">
          Not executing on Docker
         </msg>
         <status endtime="20240502 20:19:43.809" starttime="20240502 20:19:43.809" status="PASS"/>
        </kw>
        <msg level="INFO" timestamp="20240502 20:19:43.809">
         Returning from the enclosing user keyword.
        </msg>
        <status endtime="20240502 20:19:43.809" starttime="20240502 20:19:43.809" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Create List">
        <var>
         @{options}
        </var>
        <arg>
         --headless
        </arg>
        <arg>
         --no-sandbox
        </arg>
        <arg>
         --disable-dev-shm-usage
        </arg>
        <doc>
         Returns a list containing given items.
        </doc>
        <status endtime="20240502 20:19:43.809" starttime="20240502 20:19:43.809" status="NOT RUN"/>
       </kw>
       <kw library="BuiltIn" name="Set Global Variable">
        <arg>
         @{docker_options}
        </arg>
        <arg>
         @{options}
        </arg>
        <doc>
         Makes a variable available globally in all tests and suites.
        </doc>
        <status endtime="20240502 20:19:43.809" starttime="20240502 20:19:43.809" status="NOT RUN"/>
       </kw>
       <status endtime="20240502 20:19:43.809" starttime="20240502 20:19:43.809" status="PASS"/>
      </kw>
      <kw library="Support_Web" name="Create Webdriver for chrome preferences">
       <kw library="Support_Web" name="Update Docker Execution Options">
        <var>
         ${list_prefs}
        </var>
        <arg>
         ${list_prefs}
        </arg>
        <kw library="BuiltIn" name="Run Keyword And Return Status">
         <var>
          ${docker_check}
         </var>
         <arg>
          Variable Should Exist
         </arg>
         <arg>
          ${docker_options}
         </arg>
         <doc>
          Runs the given keyword with given arguments and returns the status as a Boolean value.
         </doc>
         <kw library="BuiltIn" name="Variable Should Exist">
          <arg>
           ${docker_options}
          </arg>
          <doc>
           Fails unless the given variable exists within the current scope.
          </doc>
          <msg level="FAIL" timestamp="20240502 20:19:43.809">
           Variable '${docker_options}' does not exist.
          </msg>
          <status endtime="20240502 20:19:43.809" starttime="20240502 20:19:43.809" status="FAIL"/>
         </kw>
         <msg level="INFO" timestamp="20240502 20:19:43.809">
          ${docker_check} = False
         </msg>
         <status endtime="20240502 20:19:43.809" starttime="20240502 20:19:43.809" status="PASS"/>
        </kw>
        <kw library="BuiltIn" name="Get Length">
         <var>
          ${list_prefs_length}
         </var>
         <arg>
          ${list_prefs}
         </arg>
         <doc>
          Returns and logs the length of the given item as an integer.
         </doc>
         <msg level="INFO" timestamp="20240502 20:19:43.809">
          Length is 1
         </msg>
         <msg level="INFO" timestamp="20240502 20:19:43.809">
          ${list_prefs_length} = 1
         </msg>
         <status endtime="20240502 20:19:43.809" starttime="20240502 20:19:43.809" status="PASS"/>
        </kw>
        <kw library="BuiltIn" name="Run Keyword If">
         <var>
          ${list_prefs}
         </var>
         <arg>
          ${docker_check} and ${list_prefs_length}&gt;0 and ${list_prefs}[0] != []
         </arg>
         <arg>
          Combine Lists
         </arg>
         <arg>
          ${list_prefs}
         </arg>
         <arg>
          ${docker_options}
         </arg>
         <arg>
          ELSE IF
         </arg>
         <arg>
          ${docker_check}
         </arg>
         <arg>
          Set Variable
         </arg>
         <arg>
          ${docker_options}
         </arg>
         <arg>
          ELSE
         </arg>
         <arg>
          Set Variable
         </arg>
         <arg>
          ${list_prefs}
         </arg>
         <doc>
          Runs the given keyword with the given arguments, if ``condition`` is true.
         </doc>
         <kw library="BuiltIn" name="Set Variable">
          <arg>
           ${list_prefs}
          </arg>
          <doc>
           Returns the given values which can then be assigned to a variables.
          </doc>
          <status endtime="20240502 20:19:43.809" starttime="20240502 20:19:43.809" status="PASS"/>
         </kw>
         <msg level="INFO" timestamp="20240502 20:19:43.809">
          ${list_prefs} = [[]]
         </msg>
         <status endtime="20240502 20:19:43.809" starttime="20240502 20:19:43.809" status="PASS"/>
        </kw>
        <msg level="INFO" timestamp="20240502 20:19:43.809">
         ${list_prefs} = [[]]
        </msg>
        <status endtime="20240502 20:19:43.809" starttime="20240502 20:19:43.809" status="PASS"/>
       </kw>
       <kw library="Support_Web" name="Create Chrome Options for download preferences">
        <var>
         ${chrome_options}
        </var>
        <kw library="BuiltIn" name="Evaluate">
         <var>
          ${chrome_options}
         </var>
         <arg>
          sys.modules['selenium.webdriver'].ChromeOptions()
         </arg>
         <arg>
          sys
         </arg>
         <doc>
          Evaluates the given expression in Python and returns the result.
         </doc>
         <msg level="INFO" timestamp="20240502 20:19:43.809">
          ${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x0000026AA7C15FA0&gt;
         </msg>
         <status endtime="20240502 20:19:43.809" starttime="20240502 20:19:43.809" status="PASS"/>
        </kw>
        <msg level="INFO" timestamp="20240502 20:19:43.809">
         ${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x0000026AA7C15FA0&gt;
        </msg>
        <status endtime="20240502 20:19:43.809" starttime="20240502 20:19:43.809" status="PASS"/>
       </kw>
       <kw library="Support_Web" name="Update Preferences List">
        <arg>
         ${chrome_options}
        </arg>
        <arg>
         @{list_prefs}
        </arg>
        <kw library="BuiltIn" name="Convert To String">
         <var>
          ${string_prefs}
         </var>
         <arg>
          ${list_prefs}
         </arg>
         <doc>
          Converts the given item to a Unicode string.
         </doc>
         <msg level="INFO" timestamp="20240502 20:19:43.825">
          ${string_prefs} = [[]]
         </msg>
         <status endtime="20240502 20:19:43.825" starttime="20240502 20:19:43.825" status="PASS"/>
        </kw>
        <kw library="BuiltIn" name="Return From Keyword If">
         <arg>
          ${string_prefs} == [[]]
         </arg>
         <doc>
          Returns from the enclosing user keyword if ``condition`` is true.
         </doc>
         <msg level="INFO" timestamp="20240502 20:19:43.825">
          Returning from the enclosing user keyword.
         </msg>
         <status endtime="20240502 20:19:43.825" starttime="20240502 20:19:43.825" status="PASS"/>
        </kw>
        <for flavor="IN">
         <var>
          ${preference}
         </var>
         <value>
          @{list_prefs}
         </value>
         <iter>
          <var name="${preference}"/>
          <kw library="BuiltIn" name="Call Method">
           <arg>
            ${chrome_options}
           </arg>
           <arg>
            add_argument
           </arg>
           <arg>
            ${preference}
           </arg>
           <doc>
            Calls the named method of the given object with the provided arguments.
           </doc>
           <status endtime="20240502 20:19:43.825" starttime="20240502 20:19:43.825" status="NOT RUN"/>
          </kw>
          <status endtime="20240502 20:19:43.825" starttime="20240502 20:19:43.825" status="NOT RUN"/>
         </iter>
         <status endtime="20240502 20:19:43.825" starttime="20240502 20:19:43.825" status="NOT RUN"/>
        </for>
        <status endtime="20240502 20:19:43.825" starttime="20240502 20:19:43.809" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Call Method">
        <arg>
         ${chrome_options}
        </arg>
        <arg>
         add_experimental_option
        </arg>
        <arg>
         prefs
        </arg>
        <arg>
         ${kw_prefs}
        </arg>
        <doc>
         Calls the named method of the given object with the provided arguments.
        </doc>
        <status endtime="20240502 20:19:43.825" starttime="20240502 20:19:43.825" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Global Variable">
        <arg>
         ${global_browser_options}
        </arg>
        <arg>
         ${chrome options}
        </arg>
        <doc>
         Makes a variable available globally in all tests and suites.
        </doc>
        <msg level="INFO" timestamp="20240502 20:19:43.825">
         ${global_browser_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x0000026AA7C15FA0&gt;
        </msg>
        <status endtime="20240502 20:19:43.825" starttime="20240502 20:19:43.825" status="PASS"/>
       </kw>
       <status endtime="20240502 20:19:43.825" starttime="20240502 20:19:43.809" status="PASS"/>
      </kw>
      <status endtime="20240502 20:19:43.825" starttime="20240502 20:19:40.571" status="PASS"/>
     </kw>
     <status endtime="20240502 20:19:43.825" starttime="20240502 20:19:40.571" status="PASS"/>
    </kw>
    <status endtime="20240502 20:19:43.825" starttime="20240502 20:19:40.571" status="PASS"/>
   </kw>
   <kw library="BuiltIn" name="Set Suite Metadata">
    <arg>
     environment
    </arg>
    <arg>
     ${test_server}
    </arg>
    <doc>
     Sets metadata for the current test suite.
    </doc>
    <msg level="INFO" timestamp="20240502 20:19:43.825">
     Set suite metadata 'environment' to value 'Dev'.
    </msg>
    <status endtime="20240502 20:19:43.825" starttime="20240502 20:19:43.825" status="PASS"/>
   </kw>
   <kw library="BuiltIn" name="Set Variable">
    <var>
     ${d.test_server}
    </var>
    <arg>
     ${test_server}
    </arg>
    <doc>
     Returns the given values which can then be assigned to a variables.
    </doc>
    <msg level="INFO" timestamp="20240502 20:19:57.153">
     ${d.test_server} = Dev
    </msg>
    <status endtime="20240502 20:19:57.153" starttime="20240502 20:19:57.153" status="PASS"/>
   </kw>
   <kw library="Support" name="Reset screenshot count variable">
    <kw library="BuiltIn" name="Set Variable">
     <var>
      ${screenshotCount}
     </var>
     <arg>
      ${PABOTQUEUEINDEX}_1
     </arg>
     <doc>
      Returns the given values which can then be assigned to a variables.
     </doc>
     <msg level="INFO" timestamp="20240502 20:19:57.153">
      ${screenshotCount} = 15_1
     </msg>
     <status endtime="20240502 20:19:57.153" starttime="20240502 20:19:57.153" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Set Global Variable">
     <arg>
      ${screenshotCount}
     </arg>
     <doc>
      Makes a variable available globally in all tests and suites.
     </doc>
     <msg level="INFO" timestamp="20240502 20:19:57.153">
      ${screenshotCount} = 15_1
     </msg>
     <status endtime="20240502 20:19:57.153" starttime="20240502 20:19:57.153" status="PASS"/>
    </kw>
    <kw library="Support" name="Set up screenshot directory">
     <kw library="OperatingSystem" name="Create Directory">
      <arg>
       ${OUTPUTDIR}${/}${wvar('screenshot_dir')}
      </arg>
      <doc>
       Creates the specified directory.
      </doc>
      <msg level="INFO" timestamp="20240502 20:19:57.153">
       Web.Dev.screenshot_dir: Screenshot
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:19:57.171">
       Created directory '&lt;a href="file://C:\SAP_Testing\SAPtesting\Output\pabot_results\15\Screenshot"&gt;C:\SAP_Testing\SAPtesting\Output\pabot_results\15\Screenshot&lt;/a&gt;'.
      </msg>
      <status endtime="20240502 20:19:57.171" starttime="20240502 20:19:57.153" status="PASS"/>
     </kw>
     <status endtime="20240502 20:19:57.171" starttime="20240502 20:19:57.153" status="PASS"/>
    </kw>
    <status endtime="20240502 20:19:57.171" starttime="20240502 20:19:57.153" status="PASS"/>
   </kw>
   <kw library="BuiltIn" name="Set Global Variable">
    <arg>
     ${screenshot_taking}
    </arg>
    <arg>
     ${True}
    </arg>
    <doc>
     Makes a variable available globally in all tests and suites.
    </doc>
    <msg level="INFO" timestamp="20240502 20:19:57.171">
     ${screenshot_taking} = True
    </msg>
    <status endtime="20240502 20:19:57.171" starttime="20240502 20:19:57.171" status="PASS"/>
   </kw>
   <kw library="Support" name="Setup linux execution">
    <kw library="BuiltIn" name="Run Keyword And Return Status">
     <var>
      ${web_test_check}
     </var>
     <arg>
      Variable Should Exist
     </arg>
     <arg>
      ${web_test}
     </arg>
     <doc>
      Runs the given keyword with given arguments and returns the status as a Boolean value.
     </doc>
     <kw library="BuiltIn" name="Variable Should Exist">
      <arg>
       ${web_test}
      </arg>
      <doc>
       Fails unless the given variable exists within the current scope.
      </doc>
      <status endtime="20240502 20:19:57.171" starttime="20240502 20:19:57.171" status="PASS"/>
     </kw>
     <msg level="INFO" timestamp="20240502 20:19:57.171">
      ${web_test_check} = True
     </msg>
     <status endtime="20240502 20:19:57.171" starttime="20240502 20:19:57.171" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Run Keyword If">
     <arg>
      ${web_test_check}
     </arg>
     <arg>
      Setup Docker Execution Options
     </arg>
     <doc>
      Runs the given keyword with the given arguments, if ``condition`` is true.
     </doc>
     <kw library="Support_Web" name="Setup Docker Execution Options">
      <kw library="Support_Web" name="Setup Suite Metadata">
       <arg>
        ${browser}
       </arg>
       <kw library="BrowserSupport" name="Get Browser Metadata">
        <var>
         &amp;{browser_information}
        </var>
        <arg>
         browser=${browser}
        </arg>
        <doc>
         Fetches browser metadata information
:param browser: Name of the browser for which information is fetched
:param reload: Re-read the metadata based on the browser
:return: Browser metadata information, dict of format
            {"browser_version": browser version value,
             "driver_version": driver version value}
        </doc>
        <msg level="INFO" timestamp="20240502 20:20:01.759">
         &amp;{browser_information} = { browser_version=124.0.6367.118 | driver_version=124.0.6367.91  }
        </msg>
        <status endtime="20240502 20:20:01.759" starttime="20240502 20:19:57.177" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Suite Metadata">
        <arg>
         test_browser_name
        </arg>
        <arg>
         ${browser}
        </arg>
        <doc>
         Sets metadata for the current test suite.
        </doc>
        <msg level="INFO" timestamp="20240502 20:20:01.759">
         Set suite metadata 'test_browser_name' to value 'chrome'.
        </msg>
        <status endtime="20240502 20:20:01.759" starttime="20240502 20:20:01.759" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Suite Metadata">
        <arg>
         test_browser_version
        </arg>
        <arg>
         ${browser_information.browser_version}
        </arg>
        <doc>
         Sets metadata for the current test suite.
        </doc>
        <msg level="INFO" timestamp="20240502 20:20:01.759">
         Set suite metadata 'test_browser_version' to value '124.0.6367.118'.
        </msg>
        <status endtime="20240502 20:20:01.759" starttime="20240502 20:20:01.759" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Suite Metadata">
        <arg>
         test_driver_version
        </arg>
        <arg>
         ${browser_information.driver_version}
        </arg>
        <doc>
         Sets metadata for the current test suite.
        </doc>
        <msg level="INFO" timestamp="20240502 20:20:01.759">
         Set suite metadata 'test_driver_version' to value '124.0.6367.91 '.
        </msg>
        <status endtime="20240502 20:20:01.759" starttime="20240502 20:20:01.759" status="PASS"/>
       </kw>
       <status endtime="20240502 20:20:01.763" starttime="20240502 20:19:57.177" status="PASS"/>
      </kw>
      <kw library="Support_Web" name="Setup Global Docker Execution Options">
       <kw library="BuiltIn" name="Set Global Variable">
        <arg>
         ${global_browser_options}
        </arg>
        <arg>
         None
        </arg>
        <doc>
         Makes a variable available globally in all tests and suites.
        </doc>
        <msg level="INFO" timestamp="20240502 20:20:01.763">
         ${global_browser_options} = None
        </msg>
        <status endtime="20240502 20:20:01.763" starttime="20240502 20:20:01.763" status="PASS"/>
       </kw>
       <kw library="OperatingSystem" name="Get Environment Variable">
        <var>
         ${docker_check}
        </var>
        <arg>
         EXECUTION_ENVIRONMENT
        </arg>
        <arg>
         not_found
        </arg>
        <doc>
         Returns the value of an environment variable with the given name.
        </doc>
        <msg level="INFO" timestamp="20240502 20:20:01.763">
         ${docker_check} = not_found
        </msg>
        <status endtime="20240502 20:20:01.763" starttime="20240502 20:20:01.763" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Run Keyword And Return If">
        <arg>
         "${docker_check}"!="docker"
        </arg>
        <arg>
         Log
        </arg>
        <arg>
         Not executing on Docker
        </arg>
        <doc>
         Runs the specified keyword and returns from the enclosing user keyword.
        </doc>
        <kw library="BuiltIn" name="Log">
         <arg>
          Not executing on Docker
         </arg>
         <doc>
          Logs the given message with the given level.
         </doc>
         <msg level="INFO" timestamp="20240502 20:20:01.763">
          Not executing on Docker
         </msg>
         <status endtime="20240502 20:20:01.763" starttime="20240502 20:20:01.763" status="PASS"/>
        </kw>
        <msg level="INFO" timestamp="20240502 20:20:01.763">
         Returning from the enclosing user keyword.
        </msg>
        <status endtime="20240502 20:20:01.763" starttime="20240502 20:20:01.763" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Create List">
        <var>
         @{options}
        </var>
        <arg>
         --headless
        </arg>
        <arg>
         --no-sandbox
        </arg>
        <arg>
         --disable-dev-shm-usage
        </arg>
        <doc>
         Returns a list containing given items.
        </doc>
        <status endtime="20240502 20:20:01.763" starttime="20240502 20:20:01.763" status="NOT RUN"/>
       </kw>
       <kw library="BuiltIn" name="Set Global Variable">
        <arg>
         @{docker_options}
        </arg>
        <arg>
         @{options}
        </arg>
        <doc>
         Makes a variable available globally in all tests and suites.
        </doc>
        <status endtime="20240502 20:20:01.763" starttime="20240502 20:20:01.763" status="NOT RUN"/>
       </kw>
       <status endtime="20240502 20:20:01.763" starttime="20240502 20:20:01.763" status="PASS"/>
      </kw>
      <kw library="Support_Web" name="Create Webdriver for chrome preferences">
       <kw library="Support_Web" name="Update Docker Execution Options">
        <var>
         ${list_prefs}
        </var>
        <arg>
         ${list_prefs}
        </arg>
        <kw library="BuiltIn" name="Run Keyword And Return Status">
         <var>
          ${docker_check}
         </var>
         <arg>
          Variable Should Exist
         </arg>
         <arg>
          ${docker_options}
         </arg>
         <doc>
          Runs the given keyword with given arguments and returns the status as a Boolean value.
         </doc>
         <kw library="BuiltIn" name="Variable Should Exist">
          <arg>
           ${docker_options}
          </arg>
          <doc>
           Fails unless the given variable exists within the current scope.
          </doc>
          <msg level="FAIL" timestamp="20240502 20:20:01.763">
           Variable '${docker_options}' does not exist.
          </msg>
          <status endtime="20240502 20:20:01.763" starttime="20240502 20:20:01.763" status="FAIL"/>
         </kw>
         <msg level="INFO" timestamp="20240502 20:20:01.763">
          ${docker_check} = False
         </msg>
         <status endtime="20240502 20:20:01.763" starttime="20240502 20:20:01.763" status="PASS"/>
        </kw>
        <kw library="BuiltIn" name="Get Length">
         <var>
          ${list_prefs_length}
         </var>
         <arg>
          ${list_prefs}
         </arg>
         <doc>
          Returns and logs the length of the given item as an integer.
         </doc>
         <msg level="INFO" timestamp="20240502 20:20:01.763">
          Length is 1
         </msg>
         <msg level="INFO" timestamp="20240502 20:20:01.763">
          ${list_prefs_length} = 1
         </msg>
         <status endtime="20240502 20:20:01.763" starttime="20240502 20:20:01.763" status="PASS"/>
        </kw>
        <kw library="BuiltIn" name="Run Keyword If">
         <var>
          ${list_prefs}
         </var>
         <arg>
          ${docker_check} and ${list_prefs_length}&gt;0 and ${list_prefs}[0] != []
         </arg>
         <arg>
          Combine Lists
         </arg>
         <arg>
          ${list_prefs}
         </arg>
         <arg>
          ${docker_options}
         </arg>
         <arg>
          ELSE IF
         </arg>
         <arg>
          ${docker_check}
         </arg>
         <arg>
          Set Variable
         </arg>
         <arg>
          ${docker_options}
         </arg>
         <arg>
          ELSE
         </arg>
         <arg>
          Set Variable
         </arg>
         <arg>
          ${list_prefs}
         </arg>
         <doc>
          Runs the given keyword with the given arguments, if ``condition`` is true.
         </doc>
         <kw library="BuiltIn" name="Set Variable">
          <arg>
           ${list_prefs}
          </arg>
          <doc>
           Returns the given values which can then be assigned to a variables.
          </doc>
          <status endtime="20240502 20:20:01.763" starttime="20240502 20:20:01.763" status="PASS"/>
         </kw>
         <msg level="INFO" timestamp="20240502 20:20:01.763">
          ${list_prefs} = [[]]
         </msg>
         <status endtime="20240502 20:20:01.763" starttime="20240502 20:20:01.763" status="PASS"/>
        </kw>
        <msg level="INFO" timestamp="20240502 20:20:01.763">
         ${list_prefs} = [[]]
        </msg>
        <status endtime="20240502 20:20:01.763" starttime="20240502 20:20:01.763" status="PASS"/>
       </kw>
       <kw library="Support_Web" name="Create Chrome Options for download preferences">
        <var>
         ${chrome_options}
        </var>
        <kw library="BuiltIn" name="Evaluate">
         <var>
          ${chrome_options}
         </var>
         <arg>
          sys.modules['selenium.webdriver'].ChromeOptions()
         </arg>
         <arg>
          sys
         </arg>
         <doc>
          Evaluates the given expression in Python and returns the result.
         </doc>
         <msg level="INFO" timestamp="20240502 20:20:01.763">
          ${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x0000018841FF9FD0&gt;
         </msg>
         <status endtime="20240502 20:20:01.763" starttime="20240502 20:20:01.763" status="PASS"/>
        </kw>
        <msg level="INFO" timestamp="20240502 20:20:01.763">
         ${chrome_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x0000018841FF9FD0&gt;
        </msg>
        <status endtime="20240502 20:20:01.763" starttime="20240502 20:20:01.763" status="PASS"/>
       </kw>
       <kw library="Support_Web" name="Update Preferences List">
        <arg>
         ${chrome_options}
        </arg>
        <arg>
         @{list_prefs}
        </arg>
        <kw library="BuiltIn" name="Convert To String">
         <var>
          ${string_prefs}
         </var>
         <arg>
          ${list_prefs}
         </arg>
         <doc>
          Converts the given item to a Unicode string.
         </doc>
         <msg level="INFO" timestamp="20240502 20:20:01.763">
          ${string_prefs} = [[]]
         </msg>
         <status endtime="20240502 20:20:01.763" starttime="20240502 20:20:01.763" status="PASS"/>
        </kw>
        <kw library="BuiltIn" name="Return From Keyword If">
         <arg>
          ${string_prefs} == [[]]
         </arg>
         <doc>
          Returns from the enclosing user keyword if ``condition`` is true.
         </doc>
         <msg level="INFO" timestamp="20240502 20:20:01.763">
          Returning from the enclosing user keyword.
         </msg>
         <status endtime="20240502 20:20:01.763" starttime="20240502 20:20:01.763" status="PASS"/>
        </kw>
        <for flavor="IN">
         <var>
          ${preference}
         </var>
         <value>
          @{list_prefs}
         </value>
         <iter>
          <var name="${preference}"/>
          <kw library="BuiltIn" name="Call Method">
           <arg>
            ${chrome_options}
           </arg>
           <arg>
            add_argument
           </arg>
           <arg>
            ${preference}
           </arg>
           <doc>
            Calls the named method of the given object with the provided arguments.
           </doc>
           <status endtime="20240502 20:20:01.763" starttime="20240502 20:20:01.763" status="NOT RUN"/>
          </kw>
          <status endtime="20240502 20:20:01.763" starttime="20240502 20:20:01.763" status="NOT RUN"/>
         </iter>
         <status endtime="20240502 20:20:01.763" starttime="20240502 20:20:01.763" status="NOT RUN"/>
        </for>
        <status endtime="20240502 20:20:01.763" starttime="20240502 20:20:01.763" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Call Method">
        <arg>
         ${chrome_options}
        </arg>
        <arg>
         add_experimental_option
        </arg>
        <arg>
         prefs
        </arg>
        <arg>
         ${kw_prefs}
        </arg>
        <doc>
         Calls the named method of the given object with the provided arguments.
        </doc>
        <status endtime="20240502 20:20:01.763" starttime="20240502 20:20:01.763" status="PASS"/>
       </kw>
       <kw library="BuiltIn" name="Set Global Variable">
        <arg>
         ${global_browser_options}
        </arg>
        <arg>
         ${chrome options}
        </arg>
        <doc>
         Makes a variable available globally in all tests and suites.
        </doc>
        <msg level="INFO" timestamp="20240502 20:20:01.763">
         ${global_browser_options} = &lt;selenium.webdriver.chrome.options.Options object at 0x0000018841FF9FD0&gt;
        </msg>
        <status endtime="20240502 20:20:01.763" starttime="20240502 20:20:01.763" status="PASS"/>
       </kw>
       <status endtime="20240502 20:20:01.763" starttime="20240502 20:20:01.763" status="PASS"/>
      </kw>
      <status endtime="20240502 20:20:01.763" starttime="20240502 20:19:57.177" status="PASS"/>
     </kw>
     <status endtime="20240502 20:20:01.763" starttime="20240502 20:19:57.177" status="PASS"/>
    </kw>
    <status endtime="20240502 20:20:01.763" starttime="20240502 20:19:57.171" status="PASS"/>
   </kw>
   <kw library="BuiltIn" name="Set Suite Metadata">
    <arg>
     environment
    </arg>
    <arg>
     ${test_server}
    </arg>
    <doc>
     Sets metadata for the current test suite.
    </doc>
    <msg level="INFO" timestamp="20240502 20:20:01.763">
     Set suite metadata 'environment' to value 'Dev'.
    </msg>
    <status endtime="20240502 20:20:01.779" starttime="20240502 20:20:01.763" status="PASS"/>
   </kw>
   <status endtime="20240502 20:12:21.954" starttime="20240502 20:12:15.769" status="PASS"/>
  </kw>
  <suite id="s1-s1" name="Test AL11" source="C:\SAP_Testing\SAPtesting\Tests\Test_AL11.robot">
   <kw library="AL11" name="System Logon" type="SETUP">
    <kw library="Process" name="Start Process">
     <arg>
      ${symvar('SAP_SERVER')}
     </arg>
     <doc>
      Starts a new process on background.
     </doc>
     <msg level="INFO" timestamp="20240502 20:12:21.970">
      Sym.Dev.SAP_SERVER: C:\Program Files\SAP\FrontEnd\SAPGUI\saplogon.exe
     </msg>
     <msg level="INFO" timestamp="20240502 20:12:21.970">
      Starting process:
"C:\Program Files\SAP\FrontEnd\SAPGUI\saplogon.exe"
     </msg>
     <status endtime="20240502 20:12:22.111" starttime="20240502 20:12:21.970" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      10s
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240502 20:12:32.111">
      Slept 10 seconds
     </msg>
     <status endtime="20240502 20:12:32.111" starttime="20240502 20:12:22.111" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Connect To Session">
     <doc>
      Connects to an open session SAP.
     </doc>
     <status endtime="20240502 20:12:32.121" starttime="20240502 20:12:32.111" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Open Connection">
     <arg>
      ${symvar('SAP_connection')}
     </arg>
     <doc>
      Opens a connection to the given connection name. Be sure to provide the full connection name, including the bracket part.
     </doc>
     <msg level="INFO" timestamp="20240502 20:12:32.121">
      Sym.Dev.SAP_connection: BIS
     </msg>
     <status endtime="20240502 20:12:33.414" starttime="20240502 20:12:32.121" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Input Text">
     <arg>
      wnd[0]/usr/txtRSYST-MANDT
     </arg>
     <arg>
      ${symvar('Client_Id')}
     </arg>
     <doc>
      Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.
     </doc>
     <msg level="INFO" timestamp="20240502 20:12:33.414">
      Sym.Dev.Client_Id: 001
     </msg>
     <msg level="INFO" timestamp="20240502 20:12:33.530">
      Typing text '001' into text field 'wnd[0]/usr/txtRSYST-MANDT'.
     </msg>
     <status endtime="20240502 20:12:33.546" starttime="20240502 20:12:33.414" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Input Text">
     <arg>
      wnd[0]/usr/txtRSYST-BNAME
     </arg>
     <arg>
      ${symvar('User_Name')}
     </arg>
     <doc>
      Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.
     </doc>
     <msg level="INFO" timestamp="20240502 20:12:33.546">
      Sym.Dev.User_Name: SELENIUM
     </msg>
     <msg level="INFO" timestamp="20240502 20:12:33.640">
      Typing text 'SELENIUM' into text field 'wnd[0]/usr/txtRSYST-BNAME'.
     </msg>
     <status endtime="20240502 20:12:33.640" starttime="20240502 20:12:33.546" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Input Password">
     <arg>
      wnd[0]/usr/pwdRSYST-BCODE
     </arg>
     <arg>
      %{SAP_PASSWORD}
     </arg>
     <doc>
      Inserts the given password into the text field identified by locator.
The password is not recorded in the log.
     </doc>
     <msg level="INFO" timestamp="20240502 20:12:33.655">
      Typing password into text field 'wnd[0]/usr/pwdRSYST-BCODE'.
     </msg>
     <status endtime="20240502 20:12:33.671" starttime="20240502 20:12:33.640" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Send Vkey">
     <arg>
      0
     </arg>
     <doc>
      Sends a SAP virtual key combination to the window, not into an element.
If you want to send a value to a text field, use `input text` instead.
     </doc>
     <status endtime="20240502 20:12:34.485" starttime="20240502 20:12:33.671" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Take Screenshot">
     <arg>
      00a_loginpage.jpg
     </arg>
     <doc>
      Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
     </doc>
     <msg html="true" level="INFO" timestamp="20240502 20:12:34.591">
      &lt;a href="pabot_results%5C0%5C00a_loginpage.jpg"&gt;&lt;img src="pabot_results%5C0%5C00a_loginpage.jpg" width="800px"&gt;&lt;/a&gt;
     </msg>
     <status endtime="20240502 20:12:34.591" starttime="20240502 20:12:34.485" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Multiple Logon Handling">
     <arg>
      wnd[1]
     </arg>
     <arg>
      wnd[1]/usr/radMULTI_LOGON_OPT2
     </arg>
     <arg>
      wnd[1]/tbar[0]/btn[0]
     </arg>
     <status endtime="20240502 20:12:34.591" starttime="20240502 20:12:34.591" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      1
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240502 20:12:35.616">
      Slept 1 second
     </msg>
     <status endtime="20240502 20:12:35.616" starttime="20240502 20:12:34.591" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Take Screenshot">
     <arg>
      00_multi_logon_handling.jpg
     </arg>
     <doc>
      Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
     </doc>
     <msg html="true" level="INFO" timestamp="20240502 20:12:35.699">
      &lt;a href="pabot_results%5C0%5C00_multi_logon_handling.jpg"&gt;&lt;img src="pabot_results%5C0%5C00_multi_logon_handling.jpg" width="800px"&gt;&lt;/a&gt;
     </msg>
     <status endtime="20240502 20:12:35.699" starttime="20240502 20:12:35.616" status="PASS"/>
    </kw>
    <status endtime="20240502 20:12:35.699" starttime="20240502 20:12:21.970" status="PASS"/>
   </kw>
   <test id="s1-s1-t1" line="10" name="Executing AL11">
    <kw library="AL11" name="Transaction AL11">
     <kw library="SAP_Tcode_Library" name="Run Transaction">
      <arg>
       /nal11
      </arg>
      <doc>
       Runs a Sap transaction. An error is given when an unknown transaction is specified.
      </doc>
      <status endtime="20240502 20:12:36.989" starttime="20240502 20:12:35.699" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Send Vkey">
      <arg>
       0
      </arg>
      <doc>
       Sends a SAP virtual key combination to the window, not into an element.
If you want to send a value to a text field, use `input text` instead.
      </doc>
      <status endtime="20240502 20:12:37.497" starttime="20240502 20:12:36.989" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       025_al11.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240502 20:12:37.561">
       &lt;a href="pabot_results%5C0%5C025_al11.jpg"&gt;&lt;img src="pabot_results%5C0%5C025_al11.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:12:37.561" starttime="20240502 20:12:37.497" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:12:39.561">
       Slept 2 seconds
      </msg>
      <status endtime="20240502 20:12:39.561" starttime="20240502 20:12:37.561" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Table Scroll">
      <arg>
       wnd[0]/usr/cntlEXT_COM/shellcont/shell
      </arg>
      <arg>
       23
      </arg>
      <status endtime="20240502 20:12:39.837" starttime="20240502 20:12:39.561" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:12:41.837">
       Slept 2 seconds
      </msg>
      <status endtime="20240502 20:12:41.837" starttime="20240502 20:12:39.837" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       026_al11.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240502 20:12:41.907">
       &lt;a href="pabot_results%5C0%5C026_al11.jpg"&gt;&lt;img src="pabot_results%5C0%5C026_al11.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:12:41.907" starttime="20240502 20:12:41.837" status="PASS"/>
     </kw>
     <status endtime="20240502 20:12:41.908" starttime="20240502 20:12:35.699" status="PASS"/>
    </kw>
    <tag>
     Migration
    </tag>
    <status endtime="20240502 20:12:41.908" starttime="20240502 20:12:35.699" status="PASS"/>
   </test>
   <kw library="AL11" name="System Logout" type="TEARDOWN">
    <kw library="SAP_Tcode_Library" name="Run Transaction">
     <arg>
      /nex
     </arg>
     <doc>
      Runs a Sap transaction. An error is given when an unknown transaction is specified.
     </doc>
     <status endtime="20240502 20:12:42.122" starttime="20240502 20:12:41.909" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      5
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240502 20:12:47.124">
      Slept 5 seconds
     </msg>
     <status endtime="20240502 20:12:47.124" starttime="20240502 20:12:42.122" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Take Screenshot">
     <arg>
      logoutpage.jpg
     </arg>
     <doc>
      Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
     </doc>
     <msg level="WARN" timestamp="20240502 20:12:47.124">
      Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
     </msg>
     <msg html="true" level="INFO" timestamp="20240502 20:12:47.124">
      &lt;a href="pabot_results%5C11%5Clogoutpage.jpg"&gt;&lt;img src="pabot_results%5C11%5Clogoutpage.jpg" width="800px"&gt;&lt;/a&gt;
     </msg>
     <status endtime="20240502 20:12:47.124" starttime="20240502 20:12:47.124" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      10
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240502 20:12:57.130">
      Slept 10 seconds
     </msg>
     <status endtime="20240502 20:12:57.130" starttime="20240502 20:12:47.129" status="PASS"/>
    </kw>
    <status endtime="20240502 20:12:57.130" starttime="20240502 20:12:41.909" status="PASS"/>
   </kw>
   <status endtime="20240502 20:12:57.130" starttime="20240502 20:12:21.954" status="PASS"/>
  </suite>
  <suite id="s1-s2" name="Test Migration tcodes" source="C:\SAP_Testing\SAPtesting\Tests\Test_Migration_tcodes.robot">
   <kw library="Common_SAP_Tcodefn" name="System Logon" type="SETUP">
    <kw library="Process" name="Start Process">
     <arg>
      ${symvar('SAP_SERVER')}
     </arg>
     <doc>
      Starts a new process on background.
     </doc>
     <msg level="INFO" timestamp="20240502 20:12:22.048">
      Sym.Dev.SAP_SERVER: C:\Program Files\SAP\FrontEnd\SAPGUI\saplogon.exe
     </msg>
     <msg level="INFO" timestamp="20240502 20:12:22.048">
      Starting process:
"C:\Program Files\SAP\FrontEnd\SAPGUI\saplogon.exe"
     </msg>
     <status endtime="20240502 20:12:22.129" starttime="20240502 20:12:22.033" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      10s
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240502 20:12:32.129">
      Slept 10 seconds
     </msg>
     <status endtime="20240502 20:12:32.129" starttime="20240502 20:12:22.129" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Connect To Session">
     <doc>
      Connects to an open session SAP.
     </doc>
     <status endtime="20240502 20:12:32.328" starttime="20240502 20:12:32.129" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Open Connection">
     <arg>
      ${symvar('SAP_connection')}
     </arg>
     <doc>
      Opens a connection to the given connection name. Be sure to provide the full connection name, including the bracket part.
     </doc>
     <msg level="INFO" timestamp="20240502 20:12:32.328">
      Sym.Dev.SAP_connection: BIS
     </msg>
     <status endtime="20240502 20:12:33.655" starttime="20240502 20:12:32.328" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Input Text">
     <arg>
      wnd[0]/usr/txtRSYST-MANDT
     </arg>
     <arg>
      ${symvar('Client_Id')}
     </arg>
     <doc>
      Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.
     </doc>
     <msg level="INFO" timestamp="20240502 20:12:33.655">
      Sym.Dev.Client_Id: 001
     </msg>
     <msg level="INFO" timestamp="20240502 20:12:33.671">
      Typing text '001' into text field 'wnd[0]/usr/txtRSYST-MANDT'.
     </msg>
     <status endtime="20240502 20:12:33.671" starttime="20240502 20:12:33.655" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Input Text">
     <arg>
      wnd[0]/usr/txtRSYST-BNAME
     </arg>
     <arg>
      ${symvar('User_Name')}
     </arg>
     <doc>
      Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.
     </doc>
     <msg level="INFO" timestamp="20240502 20:12:33.671">
      Sym.Dev.User_Name: SELENIUM
     </msg>
     <msg level="INFO" timestamp="20240502 20:12:33.702">
      Typing text 'SELENIUM' into text field 'wnd[0]/usr/txtRSYST-BNAME'.
     </msg>
     <status endtime="20240502 20:12:33.702" starttime="20240502 20:12:33.671" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Input Password">
     <arg>
      wnd[0]/usr/pwdRSYST-BCODE
     </arg>
     <arg>
      %{SAP_PASSWORD}
     </arg>
     <doc>
      Inserts the given password into the text field identified by locator.
The password is not recorded in the log.
     </doc>
     <msg level="INFO" timestamp="20240502 20:12:33.702">
      Typing password into text field 'wnd[0]/usr/pwdRSYST-BCODE'.
     </msg>
     <status endtime="20240502 20:12:33.718" starttime="20240502 20:12:33.702" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Send Vkey">
     <arg>
      0
     </arg>
     <doc>
      Sends a SAP virtual key combination to the window, not into an element.
If you want to send a value to a text field, use `input text` instead.
     </doc>
     <status endtime="20240502 20:12:34.210" starttime="20240502 20:12:33.718" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Multiple Logon Handling">
     <arg>
      wnd[1]
     </arg>
     <arg>
      wnd[1]/usr/radMULTI_LOGON_OPT2
     </arg>
     <arg>
      wnd[1]/tbar[0]/btn[0]
     </arg>
     <msg level="INFO" timestamp="20240502 20:12:34.906">
      Multiple logon exists
     </msg>
     <status endtime="20240502 20:12:34.906" starttime="20240502 20:12:34.210" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      1
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240502 20:12:35.906">
      Slept 1 second
     </msg>
     <status endtime="20240502 20:12:35.906" starttime="20240502 20:12:34.906" status="PASS"/>
    </kw>
    <status endtime="20240502 20:12:35.906" starttime="20240502 20:12:22.033" status="PASS"/>
   </kw>
   <test id="s1-s2-t1" line="9" name="Executing SM69">
    <kw library="Migration_tcodes" name="Transaction SM69">
     <kw library="SAP_Tcode_Library" name="Run Transaction">
      <arg>
       /nsm69
      </arg>
      <doc>
       Runs a Sap transaction. An error is given when an unknown transaction is specified.
      </doc>
      <status endtime="20240502 20:12:37.326" starttime="20240502 20:12:35.908" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Send Vkey">
      <arg>
       0
      </arg>
      <doc>
       Sends a SAP virtual key combination to the window, not into an element.
If you want to send a value to a text field, use `input text` instead.
      </doc>
      <status endtime="20240502 20:12:37.954" starttime="20240502 20:12:37.326" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:12:38.955">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:12:38.955" starttime="20240502 20:12:37.955" status="PASS"/>
     </kw>
     <status endtime="20240502 20:12:38.955" starttime="20240502 20:12:35.907" status="PASS"/>
    </kw>
    <kw library="Migration_tcodes" name="External Operating System Commands">
     <kw library="SAP_Tcode_Library" name="Selected Rows">
      <arg>
       wnd[0]/usr/cntlEXT_COM/shellcont/shell
      </arg>
      <arg>
       23
      </arg>
      <status endtime="20240502 20:12:39.753" starttime="20240502 20:12:38.955" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:12:40.753">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:12:40.753" starttime="20240502 20:12:39.753" status="PASS"/>
     </kw>
     <status endtime="20240502 20:12:40.753" starttime="20240502 20:12:38.955" status="PASS"/>
    </kw>
    <kw library="Migration_tcodes" name="SM69 Scroll">
     <kw library="SAP_Tcode_Library" name="Selected Rows">
      <arg>
       wnd[0]/usr/cntlEXT_COM/shellcont/shell
      </arg>
      <arg>
       46
      </arg>
      <status endtime="20240502 20:12:41.386" starttime="20240502 20:12:40.753" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:12:42.387">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:12:42.387" starttime="20240502 20:12:41.386" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Selected Rows">
      <arg>
       wnd[0]/usr/cntlEXT_COM/shellcont/shell
      </arg>
      <arg>
       69
      </arg>
      <status endtime="20240502 20:12:42.689" starttime="20240502 20:12:42.387" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:12:43.689">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:12:43.689" starttime="20240502 20:12:42.689" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Selected Rows">
      <arg>
       wnd[0]/usr/cntlEXT_COM/shellcont/shell
      </arg>
      <arg>
       92
      </arg>
      <status endtime="20240502 20:12:43.718" starttime="20240502 20:12:43.689" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:12:44.720">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:12:44.720" starttime="20240502 20:12:43.718" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Selected Rows">
      <arg>
       wnd[0]/usr/cntlEXT_COM/shellcont/shell
      </arg>
      <arg>
       103
      </arg>
      <status endtime="20240502 20:12:44.746" starttime="20240502 20:12:44.720" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:12:45.746">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:12:45.746" starttime="20240502 20:12:44.746" status="PASS"/>
     </kw>
     <status endtime="20240502 20:12:45.746" starttime="20240502 20:12:40.753" status="PASS"/>
    </kw>
    <tag>
     migration
    </tag>
    <status endtime="20240502 20:12:45.746" starttime="20240502 20:12:35.906" status="PASS"/>
   </test>
   <test id="s1-s2-t2" line="14" name="Executing SMQS">
    <kw library="Migration_tcodes" name="Transaction SMQS">
     <kw library="SAP_Tcode_Library" name="Run Transaction">
      <arg>
       /nsmqs
      </arg>
      <doc>
       Runs a Sap transaction. An error is given when an unknown transaction is specified.
      </doc>
      <status endtime="20240502 20:12:46.029" starttime="20240502 20:12:45.746" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Send Vkey">
      <arg>
       0
      </arg>
      <doc>
       Sends a SAP virtual key combination to the window, not into an element.
If you want to send a value to a text field, use `input text` instead.
      </doc>
      <status endtime="20240502 20:12:46.268" starttime="20240502 20:12:46.029" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       007_smqs_QRFC Monitor.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:12:46.268">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:12:46.268">
       &lt;a href="007_smqs_QRFC%2520Monitor.jpg"&gt;&lt;img src="007_smqs_QRFC%2520Monitor.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:12:46.268" starttime="20240502 20:12:46.268" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:12:47.269">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:12:47.269" starttime="20240502 20:12:46.268" status="PASS"/>
     </kw>
     <status endtime="20240502 20:12:47.269" starttime="20240502 20:12:45.746" status="PASS"/>
    </kw>
    <kw library="Migration_tcodes" name="QRFC Administration">
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/mbar/menu[2]/menu[0]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:12:47.519" starttime="20240502 20:12:47.269" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       008_smqs_QRFC Administration1.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:12:47.519">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:12:47.519">
       &lt;a href="008_smqs_QRFC%2520Administration1.jpg"&gt;&lt;img src="008_smqs_QRFC%2520Administration1.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:12:47.519" starttime="20240502 20:12:47.519" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Send Vkey">
      <arg>
       82
      </arg>
      <doc>
       Sends a SAP virtual key combination to the window, not into an element.
If you want to send a value to a text field, use `input text` instead.
      </doc>
      <status endtime="20240502 20:12:47.776" starttime="20240502 20:12:47.519" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       009_smqs_QRFC Administration2.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:12:47.786">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:12:47.786">
       &lt;a href="009_smqs_QRFC%2520Administration2.jpg"&gt;&lt;img src="009_smqs_QRFC%2520Administration2.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:12:47.786" starttime="20240502 20:12:47.776" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Send Vkey">
      <arg>
       82
      </arg>
      <doc>
       Sends a SAP virtual key combination to the window, not into an element.
If you want to send a value to a text field, use `input text` instead.
      </doc>
      <status endtime="20240502 20:12:48.036" starttime="20240502 20:12:47.786" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       010_smqs_QRFC Administration3.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:12:48.036">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:12:48.046">
       &lt;a href="010_smqs_QRFC%2520Administration3.jpg"&gt;&lt;img src="010_smqs_QRFC%2520Administration3.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:12:48.046" starttime="20240502 20:12:48.036" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Send Vkey">
      <arg>
       82
      </arg>
      <doc>
       Sends a SAP virtual key combination to the window, not into an element.
If you want to send a value to a text field, use `input text` instead.
      </doc>
      <status endtime="20240502 20:12:48.392" starttime="20240502 20:12:48.046" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       011_smqs_QRFC Administration4.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:12:48.392">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:12:48.403">
       &lt;a href="011_smqs_QRFC%2520Administration4.jpg"&gt;&lt;img src="011_smqs_QRFC%2520Administration4.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:12:48.403" starttime="20240502 20:12:48.392" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/tbar[0]/btn[3]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:12:48.651" starttime="20240502 20:12:48.403" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:12:49.652">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:12:49.652" starttime="20240502 20:12:48.651" status="PASS"/>
     </kw>
     <status endtime="20240502 20:12:49.652" starttime="20240502 20:12:47.269" status="PASS"/>
    </kw>
    <kw library="Migration_tcodes" name="QRFC Administration INBOUND">
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/mbar/menu[2]/menu[0]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:12:49.912" starttime="20240502 20:12:49.652" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/mbar/menu[2]/menu[0]/menu[1]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:12:50.162" starttime="20240502 20:12:49.912" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:12:51.172">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:12:51.172" starttime="20240502 20:12:50.172" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       012_smqs_QRFC Administration INBOUND.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:12:51.172">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:12:51.172">
       &lt;a href="012_smqs_QRFC%2520Administration%2520INBOUND.jpg"&gt;&lt;img src="012_smqs_QRFC%2520Administration%2520INBOUND.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:12:51.172" starttime="20240502 20:12:51.172" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/tbar[0]/btn[3]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:12:51.428" starttime="20240502 20:12:51.172" status="PASS"/>
     </kw>
     <status endtime="20240502 20:12:51.428" starttime="20240502 20:12:49.652" status="PASS"/>
    </kw>
    <kw library="Migration_tcodes" name="QRFC Administration OUTBOUND">
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/mbar/menu[2]/menu[0]/menu[0]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:12:51.699" starttime="20240502 20:12:51.428" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:12:52.700">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:12:52.700" starttime="20240502 20:12:51.699" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       013_smqs_QRFC Administration OUTBOUND.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:12:52.703">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:12:52.704">
       &lt;a href="013_smqs_QRFC%2520Administration%2520OUTBOUND.jpg"&gt;&lt;img src="013_smqs_QRFC%2520Administration%2520OUTBOUND.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:12:52.704" starttime="20240502 20:12:52.700" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/tbar[0]/btn[3]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:12:52.957" starttime="20240502 20:12:52.704" status="PASS"/>
     </kw>
     <status endtime="20240502 20:12:52.957" starttime="20240502 20:12:51.428" status="PASS"/>
    </kw>
    <kw library="Migration_tcodes" name="QRFC Administration OUTBOUND SCHEDULER">
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/mbar/menu[2]/menu[0]/menu[2]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:12:53.229" starttime="20240502 20:12:52.957" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:12:54.229">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:12:54.229" starttime="20240502 20:12:53.229" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       014_smqs_QRFC Administration OUTBOUND SCHEDULER.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:12:54.229">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:12:54.229">
       &lt;a href="014_smqs_QRFC%2520Administration%2520OUTBOUND%2520SCHEDULER.jpg"&gt;&lt;img src="014_smqs_QRFC%2520Administration%2520OUTBOUND%2520SCHEDULER.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:12:54.229" starttime="20240502 20:12:54.229" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/tbar[0]/btn[3]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:12:54.484" starttime="20240502 20:12:54.229" status="PASS"/>
     </kw>
     <status endtime="20240502 20:12:54.484" starttime="20240502 20:12:52.957" status="PASS"/>
    </kw>
    <kw library="Migration_tcodes" name="QRFC Administration INBOUND SCHEDULER">
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/mbar/menu[2]/menu[0]/menu[3]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:12:54.835" starttime="20240502 20:12:54.484" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:12:55.836">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:12:55.836" starttime="20240502 20:12:54.835" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       015_smqs_QRFC Administration INBOUND SCHEDULER.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:12:55.836">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:12:55.836">
       &lt;a href="015_smqs_QRFC%2520Administration%2520INBOUND%2520SCHEDULER.jpg"&gt;&lt;img src="015_smqs_QRFC%2520Administration%2520INBOUND%2520SCHEDULER.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:12:55.836" starttime="20240502 20:12:55.836" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/tbar[0]/btn[3]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:12:56.081" starttime="20240502 20:12:55.836" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/tbar[0]/btn[3]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:12:56.348" starttime="20240502 20:12:56.081" status="PASS"/>
     </kw>
     <status endtime="20240502 20:12:56.348" starttime="20240502 20:12:54.484" status="PASS"/>
    </kw>
    <kw library="Migration_tcodes" name="Display Possible Resources">
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/mbar/menu[2]/menu[1]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:12:56.597" starttime="20240502 20:12:56.349" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:12:57.598">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:12:57.598" starttime="20240502 20:12:56.597" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       016_smqs_Display Possible Resources.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:12:57.598">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:12:57.598">
       &lt;a href="016_smqs_Display%2520Possible%2520Resources.jpg"&gt;&lt;img src="016_smqs_Display%2520Possible%2520Resources.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:12:57.598" starttime="20240502 20:12:57.598" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/tbar[0]/btn[3]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:12:57.871" starttime="20240502 20:12:57.598" status="PASS"/>
     </kw>
     <status endtime="20240502 20:12:57.871" starttime="20240502 20:12:56.348" status="PASS"/>
    </kw>
    <tag>
     migration
    </tag>
    <status endtime="20240502 20:12:57.872" starttime="20240502 20:12:45.746" status="PASS"/>
   </test>
   <test id="s1-s2-t3" line="23" name="Executing SCOT">
    <kw library="Migration_tcodes" name="Transaction SCOT">
     <kw library="SAP_Tcode_Library" name="Run Transaction">
      <arg>
       /nscot
      </arg>
      <doc>
       Runs a Sap transaction. An error is given when an unknown transaction is specified.
      </doc>
      <status endtime="20240502 20:12:58.855" starttime="20240502 20:12:57.873" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Send Vkey">
      <arg>
       0
      </arg>
      <doc>
       Sends a SAP virtual key combination to the window, not into an element.
If you want to send a value to a text field, use `input text` instead.
      </doc>
      <status endtime="20240502 20:12:59.091" starttime="20240502 20:12:58.856" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       017_scot.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:12:59.106">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:12:59.106">
       &lt;a href="017_scot.jpg"&gt;&lt;img src="017_scot.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:12:59.106" starttime="20240502 20:12:59.091" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:13:00.107">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:13:00.107" starttime="20240502 20:12:59.106" status="PASS"/>
     </kw>
     <status endtime="20240502 20:13:00.107" starttime="20240502 20:12:57.873" status="PASS"/>
    </kw>
    <kw library="Migration_tcodes" name="SMTP Nodes">
     <kw library="SAP_Tcode_Library" name="Click Toolbar Button">
      <arg>
       wnd[0]/usr/subCONTENT:SAPLSBCS_ADM:0104/subSUB_CONTENT:SAPLSBCS_NODES:0100/cntlSMTP_NODES_TOOLBAR_CONTAINER/shellcont/shell
      </arg>
      <arg>
       EXPA
      </arg>
      <doc>
       Clicks a button of a toolbar within a GridView 'table_id' which is contained within a shell object.
Use the Scripting tracker recorder to find the 'button_id' of the button to click
      </doc>
      <msg level="WARN" timestamp="20240502 20:13:00.107">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:13:00.107">
       &lt;a href="sap-screenshot_1.jpg"&gt;&lt;img src="sap-screenshot_1.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:13:01.063" starttime="20240502 20:13:00.107" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Doubleclick Element">
      <arg>
       wnd[0]/usr/subCONTENT:SAPLSBCS_ADM:0104/subSUB_CONTENT:SAPLSBCS_NODES:0100/cntlSMTP_NODES_COLUMN_TREE_CONT/shellcont/shell
      </arg>
      <arg>
       SMTP
      </arg>
      <arg>
       Node
      </arg>
      <doc>
       Performs a double-click on a given element. Used only for shell objects.
      </doc>
      <status endtime="20240502 20:13:01.528" starttime="20240502 20:13:01.063" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:13:02.529">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:13:02.529" starttime="20240502 20:13:01.529" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       018_SMTP.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:13:02.529">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:13:02.529">
       &lt;a href="pabot_results%5C3%5C018_SMTP.jpg"&gt;&lt;img src="pabot_results%5C3%5C018_SMTP.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:13:02.529" starttime="20240502 20:13:02.529" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Send Vkey">
      <arg>
       0
      </arg>
      <doc>
       Sends a SAP virtual key combination to the window, not into an element.
If you want to send a value to a text field, use `input text` instead.
      </doc>
      <status endtime="20240502 20:13:02.884" starttime="20240502 20:13:02.529" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Doubleclick Element">
      <arg>
       wnd[0]/usr/subCONTENT:SAPLSBCS_ADM:0104/subSUB_CONTENT:SAPLSBCS_NODES:0100/cntlSMTP_NODES_COLUMN_TREE_CONT/shellcont/shell
      </arg>
      <arg>
       SMTP&amp;-&amp;INT
      </arg>
      <arg>
       Node
      </arg>
      <doc>
       Performs a double-click on a given element. Used only for shell objects.
      </doc>
      <status endtime="20240502 20:13:03.281" starttime="20240502 20:13:02.884" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:13:04.281">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:13:04.281" starttime="20240502 20:13:03.281" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       019_SMTP&amp;INT.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:13:04.281">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:13:04.281">
       &lt;a href="pabot_results%5C3%5C019_SMTP%26INT.jpg"&gt;&lt;img src="pabot_results%5C3%5C019_SMTP%26INT.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:13:04.281" starttime="20240502 20:13:04.281" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Send Vkey">
      <arg>
       0
      </arg>
      <doc>
       Sends a SAP virtual key combination to the window, not into an element.
If you want to send a value to a text field, use `input text` instead.
      </doc>
      <status endtime="20240502 20:13:04.638" starttime="20240502 20:13:04.281" status="PASS"/>
     </kw>
     <status endtime="20240502 20:13:04.638" starttime="20240502 20:13:00.107" status="PASS"/>
    </kw>
    <kw library="Migration_tcodes" name="Settings Nodes">
     <kw library="SAP_Tcode_Library" name="Scot Tree">
      <arg>
       wnd[0]/shellcont/shell/shellcont[1]/shell
      </arg>
      <status endtime="20240502 20:13:05.243" starttime="20240502 20:13:04.638" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:13:06.243">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:13:06.243" starttime="20240502 20:13:05.243" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       020_OutboundSettings.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:13:06.244">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:13:06.244">
       &lt;a href="pabot_results%5C3%5C020_OutboundSettings.jpg"&gt;&lt;img src="pabot_results%5C3%5C020_OutboundSettings.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:13:06.244" starttime="20240502 20:13:06.243" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/usr/subCONTENT:SAPLSBCS_ADM:0104/subSUB_CONTENT:SAPLSBCS_SETTINGS:0200/tabsGV_CNT_TABSTR_OUT/tabpSTATUS
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:13:06.584" starttime="20240502 20:13:06.244" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:13:07.584">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:13:07.584" starttime="20240502 20:13:06.584" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       021_Statusrequest.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:13:07.584">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:13:07.584">
       &lt;a href="pabot_results%5C3%5C021_Statusrequest.jpg"&gt;&lt;img src="pabot_results%5C3%5C021_Statusrequest.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:13:07.584" starttime="20240502 20:13:07.584" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/usr/subCONTENT:SAPLSBCS_ADM:0104/subSUB_CONTENT:SAPLSBCS_SETTINGS:0200/tabsGV_CNT_TABSTR_OUT/tabpA_OUT
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:13:07.970" starttime="20240502 20:13:07.584" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:13:08.971">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:13:08.971" starttime="20240502 20:13:07.970" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       022_Anlys.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:13:08.975">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:13:08.975">
       &lt;a href="pabot_results%5C3%5C022_Anlys.jpg"&gt;&lt;img src="pabot_results%5C3%5C022_Anlys.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:13:08.975" starttime="20240502 20:13:08.971" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/usr/subCONTENT:SAPLSBCS_ADM:0104/subSUB_CONTENT:SAPLSBCS_SETTINGS:0200/tabsGV_CNT_TABSTR_OUT/tabpSIGN_ENCRYPT
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:13:09.293" starttime="20240502 20:13:08.975" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:13:10.294">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:13:10.294" starttime="20240502 20:13:09.293" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       023_sig&amp;encry.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:13:10.294">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:13:10.294">
       &lt;a href="pabot_results%5C3%5C023_sig%26encry.jpg"&gt;&lt;img src="pabot_results%5C3%5C023_sig%26encry.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:13:10.294" starttime="20240502 20:13:10.294" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:13:11.294">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:13:11.294" starttime="20240502 20:13:10.294" status="PASS"/>
     </kw>
     <status endtime="20240502 20:13:11.294" starttime="20240502 20:13:04.638" status="PASS"/>
    </kw>
    <tag>
     migration
    </tag>
    <status endtime="20240502 20:13:11.294" starttime="20240502 20:12:57.872" status="PASS"/>
   </test>
   <test id="s1-s2-t4" line="28" name="Executing SMQR">
    <kw library="Migration_tcodes" name="Transaction SMQR">
     <kw library="SAP_Tcode_Library" name="Run Transaction">
      <arg>
       /nsmqr
      </arg>
      <doc>
       Runs a Sap transaction. An error is given when an unknown transaction is specified.
      </doc>
      <status endtime="20240502 20:13:11.650" starttime="20240502 20:13:11.294" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Send Vkey">
      <arg>
       0
      </arg>
      <doc>
       Sends a SAP virtual key combination to the window, not into an element.
If you want to send a value to a text field, use `input text` instead.
      </doc>
      <status endtime="20240502 20:13:11.912" starttime="20240502 20:13:11.650" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       024_smqr.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:13:11.923">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:13:11.923">
       &lt;a href="024_smqr.jpg"&gt;&lt;img src="024_smqr.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:13:11.923" starttime="20240502 20:13:11.912" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:13:12.923">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:13:12.923" starttime="20240502 20:13:11.923" status="PASS"/>
     </kw>
     <status endtime="20240502 20:13:12.923" starttime="20240502 20:13:11.294" status="PASS"/>
    </kw>
    <tag>
     migration
    </tag>
    <status endtime="20240502 20:13:12.923" starttime="20240502 20:13:11.294" status="PASS"/>
   </test>
   <test id="s1-s2-t5" line="31" name="Executing AL11">
    <kw library="Migration_tcodes" name="Transaction AL11">
     <kw library="SAP_Tcode_Library" name="Run Transaction">
      <arg>
       /nal11
      </arg>
      <doc>
       Runs a Sap transaction. An error is given when an unknown transaction is specified.
      </doc>
      <status endtime="20240502 20:13:13.615" starttime="20240502 20:13:12.923" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Send Vkey">
      <arg>
       0
      </arg>
      <doc>
       Sends a SAP virtual key combination to the window, not into an element.
If you want to send a value to a text field, use `input text` instead.
      </doc>
      <status endtime="20240502 20:13:14.312" starttime="20240502 20:13:13.615" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       025_al11.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:13:14.343">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:13:14.343">
       &lt;a href="pabot_results%5C0%5C025_al11.jpg"&gt;&lt;img src="pabot_results%5C0%5C025_al11.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:13:14.343" starttime="20240502 20:13:14.343" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:13:16.344">
       Slept 2 seconds
      </msg>
      <status endtime="20240502 20:13:16.344" starttime="20240502 20:13:14.343" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Table Scroll">
      <arg>
       wnd[0]/usr/cntlEXT_COM/shellcont/shell
      </arg>
      <arg>
       23
      </arg>
      <status endtime="20240502 20:13:16.430" starttime="20240502 20:13:16.344" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:13:18.440">
       Slept 2 seconds
      </msg>
      <status endtime="20240502 20:13:18.440" starttime="20240502 20:13:16.440" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       026_al11.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:13:18.440">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:13:18.440">
       &lt;a href="pabot_results%5C0%5C026_al11.jpg"&gt;&lt;img src="pabot_results%5C0%5C026_al11.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:13:18.440" starttime="20240502 20:13:18.440" status="PASS"/>
     </kw>
     <status endtime="20240502 20:13:18.440" starttime="20240502 20:13:12.923" status="PASS"/>
    </kw>
    <tag>
     migration
    </tag>
    <status endtime="20240502 20:13:18.440" starttime="20240502 20:13:12.923" status="PASS"/>
   </test>
   <test id="s1-s2-t6" line="34" name="Executing SHMM">
    <kw library="Migration_tcodes" name="Transaction SHMM">
     <kw library="SAP_Tcode_Library" name="Run Transaction">
      <arg>
       /nshmm
      </arg>
      <doc>
       Runs a Sap transaction. An error is given when an unknown transaction is specified.
      </doc>
      <status endtime="20240502 20:13:18.818" starttime="20240502 20:13:18.440" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Send Vkey">
      <arg>
       0
      </arg>
      <doc>
       Sends a SAP virtual key combination to the window, not into an element.
If you want to send a value to a text field, use `input text` instead.
      </doc>
      <status endtime="20240502 20:13:19.132" starttime="20240502 20:13:18.818" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       027_shmm.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:13:19.140">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:13:19.140">
       &lt;a href="027_shmm.jpg"&gt;&lt;img src="027_shmm.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:13:19.140" starttime="20240502 20:13:19.132" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:13:20.141">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:13:20.141" starttime="20240502 20:13:19.140" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/usr/tabsTAB_0100/tabpTAB_0100_TUNE
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:13:20.407" starttime="20240502 20:13:20.141" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       028_shmm_shared_Memory.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:13:20.423">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:13:20.423">
       &lt;a href="028_shmm_shared_Memory.jpg"&gt;&lt;img src="028_shmm_shared_Memory.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:13:20.423" starttime="20240502 20:13:20.407" status="PASS"/>
     </kw>
     <status endtime="20240502 20:13:20.423" starttime="20240502 20:13:18.440" status="PASS"/>
    </kw>
    <tag>
     migration
    </tag>
    <status endtime="20240502 20:13:20.423" starttime="20240502 20:13:18.440" status="PASS"/>
   </test>
   <test id="s1-s2-t7" line="37" name="Executing STRUST">
    <kw library="Migration_tcodes" name="Transaction STRUST">
     <kw library="SAP_Tcode_Library" name="Run Transaction">
      <arg>
       /nstrust
      </arg>
      <doc>
       Runs a Sap transaction. An error is given when an unknown transaction is specified.
      </doc>
      <status endtime="20240502 20:13:21.185" starttime="20240502 20:13:20.423" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Send Vkey">
      <arg>
       0
      </arg>
      <doc>
       Sends a SAP virtual key combination to the window, not into an element.
If you want to send a value to a text field, use `input text` instead.
      </doc>
      <status endtime="20240502 20:13:21.648" starttime="20240502 20:13:21.185" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       029_PSE.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:13:21.664">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:13:21.664">
       &lt;a href="pabot_results%5C12%5C029_PSE.jpg"&gt;&lt;img src="pabot_results%5C12%5C029_PSE.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:13:21.664" starttime="20240502 20:13:21.648" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:13:23.664">
       Slept 2 seconds
      </msg>
      <status endtime="20240502 20:13:23.664" starttime="20240502 20:13:21.664" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Scroll Pagedown">
      <arg>
       wnd[0]/usr/btnCERTDETAIL
      </arg>
      <status endtime="20240502 20:13:23.736" starttime="20240502 20:13:23.664" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:13:25.739">
       Slept 2 seconds
      </msg>
      <status endtime="20240502 20:13:25.739" starttime="20240502 20:13:23.736" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       030_PSE.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:13:25.739">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:13:25.743">
       &lt;a href="pabot_results%5C12%5C030_PSE.jpg"&gt;&lt;img src="pabot_results%5C12%5C030_PSE.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:13:25.743" starttime="20240502 20:13:25.739" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:13:27.744">
       Slept 2 seconds
      </msg>
      <status endtime="20240502 20:13:27.744" starttime="20240502 20:13:25.743" status="PASS"/>
     </kw>
     <status endtime="20240502 20:13:27.744" starttime="20240502 20:13:20.423" status="PASS"/>
    </kw>
    <kw library="Migration_tcodes" name="SSL server standard">
     <kw library="SAP_Tcode_Library" name="Double Click On Tree Item">
      <arg>
       wnd[0]/shellcont/shell
      </arg>
      <arg>
       SSLSDFAULT
      </arg>
      <status endtime="20240502 20:13:28.249" starttime="20240502 20:13:27.744" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:13:30.250">
       Slept 2 seconds
      </msg>
      <status endtime="20240502 20:13:30.250" starttime="20240502 20:13:28.250" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       031_SSLSDFAULT.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:13:30.250">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:13:30.250">
       &lt;a href="pabot_results%5C12%5C031_SSLSDFAULT.jpg"&gt;&lt;img src="pabot_results%5C12%5C031_SSLSDFAULT.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:13:30.250" starttime="20240502 20:13:30.250" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:13:32.250">
       Slept 2 seconds
      </msg>
      <status endtime="20240502 20:13:32.250" starttime="20240502 20:13:30.250" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Scroll Pagedown">
      <arg>
       wnd[0]/usr/btnCERTDETAIL
      </arg>
      <status endtime="20240502 20:13:32.307" starttime="20240502 20:13:32.250" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:13:34.308">
       Slept 2 seconds
      </msg>
      <status endtime="20240502 20:13:34.308" starttime="20240502 20:13:32.307" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       032_SSLSDFAULT.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:13:34.308">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:13:34.308">
       &lt;a href="pabot_results%5C12%5C032_SSLSDFAULT.jpg"&gt;&lt;img src="pabot_results%5C12%5C032_SSLSDFAULT.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:13:34.308" starttime="20240502 20:13:34.308" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:13:36.308">
       Slept 2 seconds
      </msg>
      <status endtime="20240502 20:13:36.308" starttime="20240502 20:13:34.308" status="PASS"/>
     </kw>
     <status endtime="20240502 20:13:36.308" starttime="20240502 20:13:27.744" status="PASS"/>
    </kw>
    <kw library="Migration_tcodes" name="SSL client SSL Client (Anonymous)">
     <kw library="SAP_Tcode_Library" name="Double Click On Tree Item">
      <arg>
       wnd[0]/shellcont/shell
      </arg>
      <arg>
       SSLCANONYM
      </arg>
      <status endtime="20240502 20:13:36.787" starttime="20240502 20:13:36.308" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:13:38.787">
       Slept 2 seconds
      </msg>
      <status endtime="20240502 20:13:38.787" starttime="20240502 20:13:36.787" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       033_SSLCANONYM.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:13:38.790">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:13:38.791">
       &lt;a href="pabot_results%5C12%5C033_SSLCANONYM.jpg"&gt;&lt;img src="pabot_results%5C12%5C033_SSLCANONYM.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:13:38.791" starttime="20240502 20:13:38.787" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:13:40.792">
       Slept 2 seconds
      </msg>
      <status endtime="20240502 20:13:40.792" starttime="20240502 20:13:38.791" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Scroll Pagedown">
      <arg>
       wnd[0]/usr/btnCERTDETAIL
      </arg>
      <status endtime="20240502 20:13:40.854" starttime="20240502 20:13:40.792" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:13:43.010">
       Slept 2 seconds
      </msg>
      <status endtime="20240502 20:13:43.010" starttime="20240502 20:13:40.854" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       034_SSLCANONYM.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:13:43.010">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:13:43.010">
       &lt;a href="pabot_results%5C12%5C034_SSLCANONYM.jpg"&gt;&lt;img src="pabot_results%5C12%5C034_SSLCANONYM.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:13:43.010" starttime="20240502 20:13:43.010" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:13:45.011">
       Slept 2 seconds
      </msg>
      <status endtime="20240502 20:13:45.011" starttime="20240502 20:13:43.010" status="PASS"/>
     </kw>
     <status endtime="20240502 20:13:45.011" starttime="20240502 20:13:36.308" status="PASS"/>
    </kw>
    <kw library="Migration_tcodes" name="SSL client SSL Client (Standard)">
     <kw library="SAP_Tcode_Library" name="Double Click On Tree Item">
      <arg>
       wnd[0]/shellcont/shell
      </arg>
      <arg>
       SSLCDFAULT
      </arg>
      <status endtime="20240502 20:13:45.643" starttime="20240502 20:13:45.011" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:13:47.644">
       Slept 2 seconds
      </msg>
      <status endtime="20240502 20:13:47.644" starttime="20240502 20:13:45.643" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       035_SSLCDFAULT.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:13:47.644">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:13:47.644">
       &lt;a href="pabot_results%5C12%5C035_SSLCDFAULT.jpg"&gt;&lt;img src="pabot_results%5C12%5C035_SSLCDFAULT.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:13:47.644" starttime="20240502 20:13:47.644" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:13:49.644">
       Slept 2 seconds
      </msg>
      <status endtime="20240502 20:13:49.644" starttime="20240502 20:13:47.644" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Scroll Pagedown">
      <arg>
       wnd[0]/usr/btnCERTDETAIL
      </arg>
      <status endtime="20240502 20:13:49.714" starttime="20240502 20:13:49.644" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:13:51.714">
       Slept 2 seconds
      </msg>
      <status endtime="20240502 20:13:51.714" starttime="20240502 20:13:49.714" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       036_SSLCDFAULT.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:13:51.718">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:13:51.719">
       &lt;a href="pabot_results%5C12%5C036_SSLCDFAULT.jpg"&gt;&lt;img src="pabot_results%5C12%5C036_SSLCDFAULT.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:13:51.719" starttime="20240502 20:13:51.714" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:13:53.721">
       Slept 2 seconds
      </msg>
      <status endtime="20240502 20:13:53.721" starttime="20240502 20:13:51.719" status="PASS"/>
     </kw>
     <status endtime="20240502 20:13:53.721" starttime="20240502 20:13:45.011" status="PASS"/>
    </kw>
    <kw library="Migration_tcodes" name="WS Security Other System Encryption">
     <kw library="SAP_Tcode_Library" name="Double Click On Tree Item">
      <arg>
       wnd[0]/shellcont/shell
      </arg>
      <arg>
       WSSEWSSCRT
      </arg>
      <status endtime="20240502 20:13:54.275" starttime="20240502 20:13:53.722" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:13:56.278">
       Slept 2 seconds
      </msg>
      <status endtime="20240502 20:13:56.279" starttime="20240502 20:13:54.275" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       037_WSSEWSSCRT.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:13:56.281">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:13:56.282">
       &lt;a href="pabot_results%5C12%5C037_WSSEWSSCRT.jpg"&gt;&lt;img src="pabot_results%5C12%5C037_WSSEWSSCRT.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:13:56.282" starttime="20240502 20:13:56.279" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:13:58.283">
       Slept 2 seconds
      </msg>
      <status endtime="20240502 20:13:58.283" starttime="20240502 20:13:56.282" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Scroll Pagedown">
      <arg>
       wnd[0]/usr/btnCERTDETAIL
      </arg>
      <status endtime="20240502 20:13:58.364" starttime="20240502 20:13:58.283" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:14:00.364">
       Slept 2 seconds
      </msg>
      <status endtime="20240502 20:14:00.364" starttime="20240502 20:13:58.364" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       038_WSSEWSSCRT.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:14:00.369">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:14:00.370">
       &lt;a href="038_WSSEWSSCRT.jpg"&gt;&lt;img src="038_WSSEWSSCRT.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:14:00.370" starttime="20240502 20:14:00.364" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:14:02.371">
       Slept 2 seconds
      </msg>
      <status endtime="20240502 20:14:02.371" starttime="20240502 20:14:00.370" status="PASS"/>
     </kw>
     <status endtime="20240502 20:14:02.371" starttime="20240502 20:13:53.721" status="PASS"/>
    </kw>
    <kw library="Migration_tcodes" name="SSF Logon Ticket">
     <kw library="SAP_Tcode_Library" name="Double Click On Tree Item">
      <arg>
       wnd[0]/shellcont/shell
      </arg>
      <arg>
       SSFASSO2
      </arg>
      <status endtime="20240502 20:14:02.879" starttime="20240502 20:14:02.371" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:14:04.879">
       Slept 2 seconds
      </msg>
      <status endtime="20240502 20:14:04.879" starttime="20240502 20:14:02.879" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       039_SSFASSO2.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240502 20:14:04.957">
       &lt;a href="pabot_results%5C1%5C039_SSFASSO2.jpg"&gt;&lt;img src="pabot_results%5C1%5C039_SSFASSO2.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:14:04.957" starttime="20240502 20:14:04.879" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:14:06.957">
       Slept 2 seconds
      </msg>
      <status endtime="20240502 20:14:06.957" starttime="20240502 20:14:04.957" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Scroll Pagedown">
      <arg>
       wnd[0]/usr/btnCERTDETAIL
      </arg>
      <status endtime="20240502 20:14:07.013" starttime="20240502 20:14:06.957" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:14:09.013">
       Slept 2 seconds
      </msg>
      <status endtime="20240502 20:14:09.013" starttime="20240502 20:14:07.013" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       040_SSFASSO2.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240502 20:14:09.056">
       &lt;a href="pabot_results%5C1%5C040_SSFASSO2.jpg"&gt;&lt;img src="pabot_results%5C1%5C040_SSFASSO2.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:14:09.056" starttime="20240502 20:14:09.013" status="PASS"/>
     </kw>
     <status endtime="20240502 20:14:09.066" starttime="20240502 20:14:02.371" status="PASS"/>
    </kw>
    <tag>
     migration
    </tag>
    <status endtime="20240502 20:14:09.066" starttime="20240502 20:13:20.423" status="PASS"/>
   </test>
   <test id="s1-s2-t8" line="45" name="Executing SMLG">
    <kw library="Migration_tcodes" name="Transaction SMLG">
     <kw library="SAP_Tcode_Library" name="Run Transaction">
      <arg>
       /nSMLG
      </arg>
      <doc>
       Runs a Sap transaction. An error is given when an unknown transaction is specified.
      </doc>
      <status endtime="20240502 20:14:09.579" starttime="20240502 20:14:09.066" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:14:10.590">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:14:10.590" starttime="20240502 20:14:09.579" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       041_smlg.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240502 20:14:10.647">
       &lt;a href="pabot_results%5C1%5C041_smlg.jpg"&gt;&lt;img src="pabot_results%5C1%5C041_smlg.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:14:10.648" starttime="20240502 20:14:10.590" status="PASS"/>
     </kw>
     <status endtime="20240502 20:14:10.648" starttime="20240502 20:14:09.066" status="PASS"/>
    </kw>
    <kw library="Migration_tcodes" name="SMLG Attributes">
     <kw library="SAP_Tcode_Library" name="Select Item From Guilabel">
      <arg>
       wnd[0]/usr
      </arg>
      <arg>
       BCSIDESSYS_BIS_00
      </arg>
      <msg level="INFO" timestamp="20240502 20:14:11.033">
       Element found: BCSIDESSYS_BIS_00
      </msg>
      <status endtime="20240502 20:14:11.033" starttime="20240502 20:14:10.648" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:14:12.034">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:14:12.034" starttime="20240502 20:14:11.033" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       042_smlg.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240502 20:14:12.097">
       &lt;a href="pabot_results%5C1%5C042_smlg.jpg"&gt;&lt;img src="pabot_results%5C1%5C042_smlg.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:14:12.097" starttime="20240502 20:14:12.034" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/tbar[1]/btn[14]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:14:12.426" starttime="20240502 20:14:12.097" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:14:13.427">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:14:13.427" starttime="20240502 20:14:12.426" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       043_smlg.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240502 20:14:13.479">
       &lt;a href="pabot_results%5C1%5C043_smlg.jpg"&gt;&lt;img src="pabot_results%5C1%5C043_smlg.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:14:13.479" starttime="20240502 20:14:13.427" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[1]/usr/tabsSEL_TAB/tabpPROP
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:14:13.734" starttime="20240502 20:14:13.479" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:14:14.735">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:14:14.735" starttime="20240502 20:14:13.734" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       044_smlg.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240502 20:14:14.772">
       &lt;a href="pabot_results%5C1%5C044_smlg.jpg"&gt;&lt;img src="pabot_results%5C1%5C044_smlg.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:14:14.773" starttime="20240502 20:14:14.735" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[1]/tbar[0]/btn[12]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:14:15.073" starttime="20240502 20:14:14.773" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:14:16.074">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:14:16.074" starttime="20240502 20:14:15.073" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       045_smlg.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240502 20:14:16.102">
       &lt;a href="pabot_results%5C1%5C045_smlg.jpg"&gt;&lt;img src="pabot_results%5C1%5C045_smlg.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:14:16.112" starttime="20240502 20:14:16.074" status="PASS"/>
     </kw>
     <status endtime="20240502 20:14:16.112" starttime="20240502 20:14:10.648" status="PASS"/>
    </kw>
    <kw library="Migration_tcodes" name="SMLG Load Distributions">
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/tbar[1]/btn[5]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:14:16.538" starttime="20240502 20:14:16.112" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:14:17.538">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:14:17.538" starttime="20240502 20:14:16.538" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       046_smlg.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:14:17.538">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:14:17.538">
       &lt;a href="046_smlg.jpg"&gt;&lt;img src="046_smlg.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:14:17.538" starttime="20240502 20:14:17.538" status="PASS"/>
     </kw>
     <status endtime="20240502 20:14:17.538" starttime="20240502 20:14:16.112" status="PASS"/>
    </kw>
    <tag>
     migration
    </tag>
    <status endtime="20240502 20:14:17.538" starttime="20240502 20:14:09.066" status="PASS"/>
   </test>
   <test id="s1-s2-t9" line="50" name="Executing Uconcockpit">
    <kw library="Migration_tcodes" name="Transaction Uconcockpit">
     <kw library="SAP_Tcode_Library" name="Run Transaction">
      <arg>
       /nUconcockpit
      </arg>
      <doc>
       Runs a Sap transaction. An error is given when an unknown transaction is specified.
      </doc>
      <status endtime="20240502 20:14:17.820" starttime="20240502 20:14:17.538" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Send Vkey">
      <arg>
       0
      </arg>
      <doc>
       Sends a SAP virtual key combination to the window, not into an element.
If you want to send a value to a text field, use `input text` instead.
      </doc>
      <status endtime="20240502 20:14:18.275" starttime="20240502 20:14:17.820" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       047_Uconcockpit.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:14:18.285">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:14:18.285">
       &lt;a href="047_Uconcockpit.jpg"&gt;&lt;img src="047_Uconcockpit.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:14:18.285" starttime="20240502 20:14:18.275" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:14:20.286">
       Slept 2 seconds
      </msg>
      <status endtime="20240502 20:14:20.286" starttime="20240502 20:14:18.285" status="PASS"/>
     </kw>
     <status endtime="20240502 20:14:20.286" starttime="20240502 20:14:17.538" status="PASS"/>
    </kw>
    <kw library="Migration_tcodes" name="RFC Basic Scenario">
     <kw library="SAP_Tcode_Library" name="Select From List By Label">
      <arg>
       wnd[0]/usr/cmbP_SCEN
      </arg>
      <arg>
       RFC Basic Scenario
      </arg>
      <doc>
       Selects the specified option from the selection list.
      </doc>
      <status endtime="20240502 20:14:20.523" starttime="20240502 20:14:20.287" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:14:22.532">
       Slept 2 seconds
      </msg>
      <status endtime="20240502 20:14:22.532" starttime="20240502 20:14:20.532" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       048_Uconcockpit.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:14:22.535">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:14:22.535">
       &lt;a href="048_Uconcockpit.jpg"&gt;&lt;img src="048_Uconcockpit.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:14:22.535" starttime="20240502 20:14:22.532" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/tbar[1]/btn[8]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:14:23.354" starttime="20240502 20:14:22.535" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:14:25.355">
       Slept 2 seconds
      </msg>
      <status endtime="20240502 20:14:25.355" starttime="20240502 20:14:23.354" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       049_Uconcockpit.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:14:25.358">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:14:25.358">
       &lt;a href="049_Uconcockpit.jpg"&gt;&lt;img src="049_Uconcockpit.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:14:25.358" starttime="20240502 20:14:25.355" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/tbar[0]/btn[3]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:14:25.623" starttime="20240502 20:14:25.358" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:14:27.624">
       Slept 2 seconds
      </msg>
      <status endtime="20240502 20:14:27.624" starttime="20240502 20:14:25.623" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       050_Uconcockpit.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:14:27.624">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:14:27.624">
       &lt;a href="050_Uconcockpit.jpg"&gt;&lt;img src="050_Uconcockpit.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:14:27.624" starttime="20240502 20:14:27.624" status="PASS"/>
     </kw>
     <status endtime="20240502 20:14:27.624" starttime="20240502 20:14:20.287" status="PASS"/>
    </kw>
    <kw library="Migration_tcodes" name="Role Building Scenario">
     <kw library="SAP_Tcode_Library" name="Select From List By Label">
      <arg>
       wnd[0]/usr/cmbP_SCEN
      </arg>
      <arg>
       Role Building Scenario
      </arg>
      <doc>
       Selects the specified option from the selection list.
      </doc>
      <status endtime="20240502 20:14:27.914" starttime="20240502 20:14:27.624" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:14:29.915">
       Slept 2 seconds
      </msg>
      <status endtime="20240502 20:14:29.915" starttime="20240502 20:14:27.914" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       051_Uconcockpit.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:14:29.915">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:14:29.915">
       &lt;a href="051_Uconcockpit.jpg"&gt;&lt;img src="051_Uconcockpit.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:14:29.915" starttime="20240502 20:14:29.915" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/tbar[1]/btn[8]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:14:30.769" starttime="20240502 20:14:29.915" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:14:32.771">
       Slept 2 seconds
      </msg>
      <status endtime="20240502 20:14:32.771" starttime="20240502 20:14:30.770" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       052_Uconcockpit.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:14:32.771">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:14:32.771">
       &lt;a href="052_Uconcockpit.jpg"&gt;&lt;img src="052_Uconcockpit.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:14:32.771" starttime="20240502 20:14:32.771" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/tbar[0]/btn[3]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:14:33.050" starttime="20240502 20:14:32.771" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:14:35.050">
       Slept 2 seconds
      </msg>
      <status endtime="20240502 20:14:35.050" starttime="20240502 20:14:33.050" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       053_Uconcockpit.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:14:35.054">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:14:35.054">
       &lt;a href="053_Uconcockpit.jpg"&gt;&lt;img src="053_Uconcockpit.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:14:35.054" starttime="20240502 20:14:35.050" status="PASS"/>
     </kw>
     <status endtime="20240502 20:14:35.054" starttime="20240502 20:14:27.624" status="PASS"/>
    </kw>
    <tag>
     migration
    </tag>
    <status endtime="20240502 20:14:35.054" starttime="20240502 20:14:17.538" status="PASS"/>
   </test>
   <test id="s1-s2-t10" line="55" name="Executing OACO">
    <kw library="Migration_tcodes" name="Transaction OACO">
     <kw library="SAP_Tcode_Library" name="Run Transaction">
      <arg>
       /nOAC0
      </arg>
      <doc>
       Runs a Sap transaction. An error is given when an unknown transaction is specified.
      </doc>
      <status endtime="20240502 20:14:35.356" starttime="20240502 20:14:35.054" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:14:36.359">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:14:36.359" starttime="20240502 20:14:35.357" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:14:36.365">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:14:36.366">
       &lt;a href="sap-screenshot_1.jpg"&gt;&lt;img src="sap-screenshot_1.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:14:36.366" starttime="20240502 20:14:36.359" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Scroll">
      <arg>
       wnd[0]/usr/tblSAPLSCMS_CREPC_SREP
      </arg>
      <arg>
       35
      </arg>
      <doc>
       Scrolls the scrollbar of an element 'element_id' that is contained within a shell object.
'Position' is the number of rows to scroll.
      </doc>
      <status endtime="20240502 20:14:36.796" starttime="20240502 20:14:36.366" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:14:37.797">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:14:37.797" starttime="20240502 20:14:36.796" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       054_OACO.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:14:37.797">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:14:37.797">
       &lt;a href="054_OACO.jpg"&gt;&lt;img src="054_OACO.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:14:37.797" starttime="20240502 20:14:37.797" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Scroll">
      <arg>
       wnd[0]/usr/tblSAPLSCMS_CREPC_SREP
      </arg>
      <arg>
       70
      </arg>
      <doc>
       Scrolls the scrollbar of an element 'element_id' that is contained within a shell object.
'Position' is the number of rows to scroll.
      </doc>
      <status endtime="20240502 20:14:38.198" starttime="20240502 20:14:37.797" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:14:39.199">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:14:39.199" starttime="20240502 20:14:38.199" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       055_OACO.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:14:39.199">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:14:39.199">
       &lt;a href="055_OACO.jpg"&gt;&lt;img src="055_OACO.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:14:39.199" starttime="20240502 20:14:39.199" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Scroll">
      <arg>
       wnd[0]/usr/tblSAPLSCMS_CREPC_SREP
      </arg>
      <arg>
       105
      </arg>
      <doc>
       Scrolls the scrollbar of an element 'element_id' that is contained within a shell object.
'Position' is the number of rows to scroll.
      </doc>
      <status endtime="20240502 20:14:39.616" starttime="20240502 20:14:39.199" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:14:40.618">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:14:40.618" starttime="20240502 20:14:39.617" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       056_OACO.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:14:40.619">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:14:40.619">
       &lt;a href="056_OACO.jpg"&gt;&lt;img src="056_OACO.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:14:40.619" starttime="20240502 20:14:40.618" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Scroll">
      <arg>
       wnd[0]/usr/tblSAPLSCMS_CREPC_SREP
      </arg>
      <arg>
       140
      </arg>
      <doc>
       Scrolls the scrollbar of an element 'element_id' that is contained within a shell object.
'Position' is the number of rows to scroll.
      </doc>
      <status endtime="20240502 20:14:41.123" starttime="20240502 20:14:40.619" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:14:42.123">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:14:42.123" starttime="20240502 20:14:41.123" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       057_OACO.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:14:42.123">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:14:42.130">
       &lt;a href="057_OACO.jpg"&gt;&lt;img src="057_OACO.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:14:42.130" starttime="20240502 20:14:42.123" status="PASS"/>
     </kw>
     <status endtime="20240502 20:14:42.130" starttime="20240502 20:14:35.054" status="PASS"/>
    </kw>
    <tag>
     migration
    </tag>
    <status endtime="20240502 20:14:42.130" starttime="20240502 20:14:35.054" status="PASS"/>
   </test>
   <test id="s1-s2-t11" line="58" name="Executing SPAD">
    <kw library="Migration_tcodes" name="Transaction SPAD">
     <kw library="SAP_Tcode_Library" name="Run Transaction">
      <arg>
       /nSPAD
      </arg>
      <doc>
       Runs a Sap transaction. An error is given when an unknown transaction is specified.
      </doc>
      <status endtime="20240502 20:14:42.416" starttime="20240502 20:14:42.130" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:14:43.427">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:14:43.427" starttime="20240502 20:14:42.426" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       058_spad.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:14:43.427">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:14:43.427">
       &lt;a href="058_spad.jpg"&gt;&lt;img src="058_spad.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:14:43.427" starttime="20240502 20:14:43.427" status="PASS"/>
     </kw>
     <status endtime="20240502 20:14:43.427" starttime="20240502 20:14:42.130" status="PASS"/>
    </kw>
    <kw library="Migration_tcodes" name="ARCH Screenshot">
     <kw library="SAP_Tcode_Library" name="Input Text">
      <arg>
       wnd[0]/usr/tabsSELECTIONS/tabpSEL1/ssubPAGE:SAPMSPAD:1041/ctxtRSPOSEL-DEVICE
      </arg>
      <arg>
       ARCH
      </arg>
      <doc>
       Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.
      </doc>
      <msg level="INFO" timestamp="20240502 20:14:43.427">
       Typing text 'ARCH' into text field 'wnd[0]/usr/tabsSELECTIONS/tabpSEL1/ssubPAGE:SAPMSPAD:1041/ctxtRSPOSEL-DEVICE'.
      </msg>
      <status endtime="20240502 20:14:43.427" starttime="20240502 20:14:43.427" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       059_spad_arch.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:14:43.442">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:14:43.442">
       &lt;a href="059_spad_arch.jpg"&gt;&lt;img src="059_spad_arch.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:14:43.442" starttime="20240502 20:14:43.427" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/usr/tabsSELECTIONS/tabpSEL1/ssubPAGE:SAPMSPAD:1041/btn%#AUTOTEXT001
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:14:43.976" starttime="20240502 20:14:43.442" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:14:45.019">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:14:45.019" starttime="20240502 20:14:43.976" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       060_spad_arch.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:14:45.019">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:14:45.019">
       &lt;a href="060_spad_arch.jpg"&gt;&lt;img src="060_spad_arch.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:14:45.019" starttime="20240502 20:14:45.019" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/tbar[0]/btn[3]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:14:45.321" starttime="20240502 20:14:45.019" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:14:46.321">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:14:46.321" starttime="20240502 20:14:45.321" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       061_spad_arch.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:14:46.321">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:14:46.321">
       &lt;a href="061_spad_arch.jpg"&gt;&lt;img src="061_spad_arch.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:14:46.321" starttime="20240502 20:14:46.321" status="PASS"/>
     </kw>
     <status endtime="20240502 20:14:46.321" starttime="20240502 20:14:43.427" status="PASS"/>
    </kw>
    <kw library="Migration_tcodes" name="LOCL Screenshot">
     <kw library="SAP_Tcode_Library" name="Input Text">
      <arg>
       wnd[0]/usr/tabsSELECTIONS/tabpSEL1/ssubPAGE:SAPMSPAD:1041/ctxtRSPOSEL-DEVICE
      </arg>
      <arg>
       Ctrl+A
      </arg>
      <doc>
       Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.
      </doc>
      <msg level="INFO" timestamp="20240502 20:14:46.328">
       Typing text 'Ctrl+A' into text field 'wnd[0]/usr/tabsSELECTIONS/tabpSEL1/ssubPAGE:SAPMSPAD:1041/ctxtRSPOSEL-DEVICE'.
      </msg>
      <status endtime="20240502 20:14:46.328" starttime="20240502 20:14:46.321" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Input Text">
      <arg>
       wnd[0]/usr/tabsSELECTIONS/tabpSEL1/ssubPAGE:SAPMSPAD:1041/ctxtRSPOSEL-DEVICE
      </arg>
      <arg>
       LOCL
      </arg>
      <doc>
       Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.
      </doc>
      <msg level="INFO" timestamp="20240502 20:14:46.349">
       Typing text 'LOCL' into text field 'wnd[0]/usr/tabsSELECTIONS/tabpSEL1/ssubPAGE:SAPMSPAD:1041/ctxtRSPOSEL-DEVICE'.
      </msg>
      <status endtime="20240502 20:14:46.349" starttime="20240502 20:14:46.338" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       062_spad_locl.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:14:46.349">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:14:46.349">
       &lt;a href="062_spad_locl.jpg"&gt;&lt;img src="062_spad_locl.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:14:46.349" starttime="20240502 20:14:46.349" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/usr/tabsSELECTIONS/tabpSEL1/ssubPAGE:SAPMSPAD:1041/btn%#AUTOTEXT001
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:14:46.707" starttime="20240502 20:14:46.349" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:14:47.707">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:14:47.707" starttime="20240502 20:14:46.707" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       063_spad_locl.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:14:47.711">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:14:47.712">
       &lt;a href="063_spad_locl.jpg"&gt;&lt;img src="063_spad_locl.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:14:47.712" starttime="20240502 20:14:47.707" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/tbar[0]/btn[3]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:14:47.966" starttime="20240502 20:14:47.712" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:14:48.981">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:14:48.981" starttime="20240502 20:14:47.966" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       064_spad_locl.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:14:48.997">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:14:48.997">
       &lt;a href="064_spad_locl.jpg"&gt;&lt;img src="064_spad_locl.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:14:48.997" starttime="20240502 20:14:48.981" status="PASS"/>
     </kw>
     <status endtime="20240502 20:14:48.997" starttime="20240502 20:14:46.321" status="PASS"/>
    </kw>
    <kw library="Migration_tcodes" name="LP01 Screenshot">
     <kw library="SAP_Tcode_Library" name="Input Text">
      <arg>
       wnd[0]/usr/tabsSELECTIONS/tabpSEL1/ssubPAGE:SAPMSPAD:1041/ctxtRSPOSEL-DEVICE
      </arg>
      <arg>
       Ctrl+A
      </arg>
      <doc>
       Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.
      </doc>
      <msg level="INFO" timestamp="20240502 20:14:49.018">
       Typing text 'Ctrl+A' into text field 'wnd[0]/usr/tabsSELECTIONS/tabpSEL1/ssubPAGE:SAPMSPAD:1041/ctxtRSPOSEL-DEVICE'.
      </msg>
      <status endtime="20240502 20:14:49.018" starttime="20240502 20:14:49.002" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Input Text">
      <arg>
       wnd[0]/usr/tabsSELECTIONS/tabpSEL1/ssubPAGE:SAPMSPAD:1041/ctxtRSPOSEL-DEVICE
      </arg>
      <arg>
       LP01
      </arg>
      <doc>
       Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.
      </doc>
      <msg level="INFO" timestamp="20240502 20:14:49.034">
       Typing text 'LP01' into text field 'wnd[0]/usr/tabsSELECTIONS/tabpSEL1/ssubPAGE:SAPMSPAD:1041/ctxtRSPOSEL-DEVICE'.
      </msg>
      <status endtime="20240502 20:14:49.034" starttime="20240502 20:14:49.018" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       065_spad_lp01.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:14:49.034">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:14:49.034">
       &lt;a href="065_spad_lp01.jpg"&gt;&lt;img src="065_spad_lp01.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:14:49.034" starttime="20240502 20:14:49.034" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/usr/tabsSELECTIONS/tabpSEL1/ssubPAGE:SAPMSPAD:1041/btn%#AUTOTEXT001
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:14:49.408" starttime="20240502 20:14:49.034" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:14:50.408">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:14:50.408" starttime="20240502 20:14:49.408" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       066_spad_lp01.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:14:50.408">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:14:50.408">
       &lt;a href="066_spad_lp01.jpg"&gt;&lt;img src="066_spad_lp01.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:14:50.408" starttime="20240502 20:14:50.408" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/tbar[0]/btn[3]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:14:50.667" starttime="20240502 20:14:50.408" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:14:51.667">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:14:51.667" starttime="20240502 20:14:50.667" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       067_spad_lp01.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:14:51.667">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:14:51.667">
       &lt;a href="067_spad_lp01.jpg"&gt;&lt;img src="067_spad_lp01.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:14:51.667" starttime="20240502 20:14:51.667" status="PASS"/>
     </kw>
     <status endtime="20240502 20:14:51.667" starttime="20240502 20:14:48.997" status="PASS"/>
    </kw>
    <kw library="Migration_tcodes" name="ZPDF Screenshot">
     <kw library="SAP_Tcode_Library" name="Input Text">
      <arg>
       wnd[0]/usr/tabsSELECTIONS/tabpSEL1/ssubPAGE:SAPMSPAD:1041/ctxtRSPOSEL-DEVICE
      </arg>
      <arg>
       Ctrl+A
      </arg>
      <doc>
       Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.
      </doc>
      <msg level="INFO" timestamp="20240502 20:14:51.677">
       Typing text 'Ctrl+A' into text field 'wnd[0]/usr/tabsSELECTIONS/tabpSEL1/ssubPAGE:SAPMSPAD:1041/ctxtRSPOSEL-DEVICE'.
      </msg>
      <status endtime="20240502 20:14:51.677" starttime="20240502 20:14:51.667" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Input Text">
      <arg>
       wnd[0]/usr/tabsSELECTIONS/tabpSEL1/ssubPAGE:SAPMSPAD:1041/ctxtRSPOSEL-DEVICE
      </arg>
      <arg>
       ZPDF
      </arg>
      <doc>
       Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.
      </doc>
      <msg level="INFO" timestamp="20240502 20:14:51.677">
       Typing text 'ZPDF' into text field 'wnd[0]/usr/tabsSELECTIONS/tabpSEL1/ssubPAGE:SAPMSPAD:1041/ctxtRSPOSEL-DEVICE'.
      </msg>
      <status endtime="20240502 20:14:51.677" starttime="20240502 20:14:51.677" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       068_spad_zpdf.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:14:51.677">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:14:51.677">
       &lt;a href="068_spad_zpdf.jpg"&gt;&lt;img src="068_spad_zpdf.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:14:51.677" starttime="20240502 20:14:51.677" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/usr/tabsSELECTIONS/tabpSEL1/ssubPAGE:SAPMSPAD:1041/btn%#AUTOTEXT001
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:14:52.001" starttime="20240502 20:14:51.677" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:14:53.002">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:14:53.002" starttime="20240502 20:14:52.001" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       069_spad_zpdf.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:14:53.002">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:14:53.002">
       &lt;a href="069_spad_zpdf.jpg"&gt;&lt;img src="069_spad_zpdf.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:14:53.002" starttime="20240502 20:14:53.002" status="PASS"/>
     </kw>
     <status endtime="20240502 20:14:53.002" starttime="20240502 20:14:51.667" status="PASS"/>
    </kw>
    <tag>
     migration
    </tag>
    <status endtime="20240502 20:14:53.002" starttime="20240502 20:14:42.130" status="PASS"/>
   </test>
   <test id="s1-s2-t12" line="65" name="Executing SLDAPICUST">
    <kw library="Migration_tcodes" name="Transaction SLDAPICUST">
     <kw library="SAP_Tcode_Library" name="Run Transaction">
      <arg>
       /nSldapicust
      </arg>
      <doc>
       Runs a Sap transaction. An error is given when an unknown transaction is specified.
      </doc>
      <status endtime="20240502 20:14:53.589" starttime="20240502 20:14:53.002" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:14:54.590">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:14:54.590" starttime="20240502 20:14:53.589" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       070_Sldapicust.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:14:54.590">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:14:54.590">
       &lt;a href="pabot_results%5C5%5C070_Sldapicust.jpg"&gt;&lt;img src="pabot_results%5C5%5C070_Sldapicust.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:14:54.590" starttime="20240502 20:14:54.590" status="PASS"/>
     </kw>
     <status endtime="20240502 20:14:54.590" starttime="20240502 20:14:53.002" status="PASS"/>
    </kw>
    <kw library="Migration_tcodes" name="Sldapicust display">
     <kw library="SAP_Tcode_Library" name="Get Cell Value From Gridtable">
      <var>
       ${destination}
      </var>
      <arg>
       wnd[0]/usr/cntlCONTAINER/shellcont/shell
      </arg>
      <msg level="INFO" timestamp="20240502 20:14:54.595">
       1 4
0
SLD_BCSCLNTPO
      </msg>
      <msg level="INFO" timestamp="20240502 20:14:54.595">
       ${destination} = SLD_BCSCLNTPO
      </msg>
      <status endtime="20240502 20:14:54.595" starttime="20240502 20:14:54.590" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Log">
      <arg>
       ${destination}
      </arg>
      <doc>
       Logs the given message with the given level.
      </doc>
      <msg level="INFO" timestamp="20240502 20:14:54.595">
       SLD_BCSCLNTPO
      </msg>
      <status endtime="20240502 20:14:54.595" starttime="20240502 20:14:54.595" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Run Transaction">
      <arg>
       /nsm59
      </arg>
      <doc>
       Runs a Sap transaction. An error is given when an unknown transaction is specified.
      </doc>
      <status endtime="20240502 20:14:55.196" starttime="20240502 20:14:54.595" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/mbar/menu[1]/menu[5]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:14:55.748" starttime="20240502 20:14:55.196" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Input Text">
      <arg>
       wnd[1]/usr/tabsG_SELONETABSTRIP/tabpTAB001/ssubSUBSCR_PRESEL:SAPLSDH4:0220/sub:SAPLSDH4:0220/txtG_SELFLD_TAB-LOW[0,24]
      </arg>
      <arg>
       SLD_BCSCLNTPO
      </arg>
      <doc>
       Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.
      </doc>
      <msg level="INFO" timestamp="20240502 20:14:55.789">
       Typing text 'SLD_BCSCLNTPO' into text field 'wnd[1]/usr/tabsG_SELONETABSTRIP/tabpTAB001/ssubSUBSCR_PRESEL:SAPLSDH4:0220/sub:SAPLSDH4:0220/txtG_SELFLD_TAB-LOW[0,24]'.
      </msg>
      <status endtime="20240502 20:14:55.789" starttime="20240502 20:14:55.748" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       5
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:15:00.790">
       Slept 5 seconds
      </msg>
      <status endtime="20240502 20:15:00.790" starttime="20240502 20:14:55.789" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[1]/tbar[0]/btn[0]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:15:01.149" starttime="20240502 20:15:00.790" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       5s
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:15:06.150">
       Slept 5 seconds
      </msg>
      <status endtime="20240502 20:15:06.150" starttime="20240502 20:15:01.149" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[1]/tbar[0]/btn[0]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:15:06.528" starttime="20240502 20:15:06.150" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       5s
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:15:11.528">
       Slept 5 seconds
      </msg>
      <status endtime="20240502 20:15:11.528" starttime="20240502 20:15:06.528" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       071_display.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:15:11.530">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:15:11.530">
       &lt;a href="071_display.jpg"&gt;&lt;img src="071_display.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:15:11.530" starttime="20240502 20:15:11.528" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       5s
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:15:16.530">
       Slept 5 seconds
      </msg>
      <status endtime="20240502 20:15:16.530" starttime="20240502 20:15:11.530" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/usr/tabsTAB_SM59/tabpSIGN
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:15:16.904" starttime="20240502 20:15:16.530" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       5s
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:15:21.904">
       Slept 5 seconds
      </msg>
      <status endtime="20240502 20:15:21.904" starttime="20240502 20:15:16.904" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       072_display.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240502 20:15:21.977">
       &lt;a href="pabot_results%5C1%5C072_display.jpg"&gt;&lt;img src="pabot_results%5C1%5C072_display.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:15:21.977" starttime="20240502 20:15:21.904" status="PASS"/>
     </kw>
     <status endtime="20240502 20:15:21.977" starttime="20240502 20:14:54.590" status="PASS"/>
    </kw>
    <tag>
     migration
    </tag>
    <status endtime="20240502 20:15:21.977" starttime="20240502 20:14:53.002" status="PASS"/>
   </test>
   <test id="s1-s2-t13" line="70" name="Executing STMS">
    <kw library="Migration_tcodes" name="Transaction STMS">
     <kw library="SAP_Tcode_Library" name="Run Transaction">
      <arg>
       /nSTMS
      </arg>
      <doc>
       Runs a Sap transaction. An error is given when an unknown transaction is specified.
      </doc>
      <status endtime="20240502 20:15:22.922" starttime="20240502 20:15:21.977" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:15:23.923">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:15:23.923" starttime="20240502 20:15:22.922" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       073_stms.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240502 20:15:23.999">
       &lt;a href="pabot_results%5C1%5C073_stms.jpg"&gt;&lt;img src="pabot_results%5C1%5C073_stms.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:15:23.999" starttime="20240502 20:15:23.923" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/mbar/menu[0]/menu[4]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:15:24.612" starttime="20240502 20:15:23.999" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:15:25.617">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:15:25.617" starttime="20240502 20:15:24.612" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       074_stms.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240502 20:15:25.682">
       &lt;a href="pabot_results%5C1%5C074_stms.jpg"&gt;&lt;img src="pabot_results%5C1%5C074_stms.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:15:25.682" starttime="20240502 20:15:25.617" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Rows From Stms">
      <arg>
       wnd[0]/usr/cntlGRID1/shellcont/shell
      </arg>
      <msg level="INFO" timestamp="20240502 20:15:26.262">
       wnd[0]/usr/cntlGRID1/shellcont/shell
6
6
0
BIS
      </msg>
      <status endtime="20240502 20:15:26.262" starttime="20240502 20:15:25.682" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:15:27.278">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:15:27.278" starttime="20240502 20:15:26.262" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       075_stms.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240502 20:15:27.332">
       &lt;a href="pabot_results%5C1%5C075_stms.jpg"&gt;&lt;img src="pabot_results%5C1%5C075_stms.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:15:27.332" starttime="20240502 20:15:27.278" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/usr/tabsGN_DYN150_TAB_STRIP/tabpATTR
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:15:27.342" starttime="20240502 20:15:27.332" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:15:29.343">
       Slept 2 seconds
      </msg>
      <status endtime="20240502 20:15:29.343" starttime="20240502 20:15:27.342" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       076_stms.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240502 20:15:29.387">
       &lt;a href="pabot_results%5C1%5C076_stms.jpg"&gt;&lt;img src="pabot_results%5C1%5C076_stms.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:15:29.387" starttime="20240502 20:15:29.343" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/usr/tabsGN_DYN150_TAB_STRIP/tabpDOMA
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:15:29.860" starttime="20240502 20:15:29.387" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:15:30.861">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:15:30.861" starttime="20240502 20:15:29.860" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       077_stms.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240502 20:15:30.924">
       &lt;a href="pabot_results%5C1%5C077_stms.jpg"&gt;&lt;img src="pabot_results%5C1%5C077_stms.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:15:30.924" starttime="20240502 20:15:30.861" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/usr/tabsGN_DYN150_TAB_STRIP/tabpTPPE
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:15:31.397" starttime="20240502 20:15:30.925" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:15:32.398">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:15:32.398" starttime="20240502 20:15:31.397" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       078_stms.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240502 20:15:32.436">
       &lt;a href="pabot_results%5C1%5C078_stms.jpg"&gt;&lt;img src="pabot_results%5C1%5C078_stms.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:15:32.436" starttime="20240502 20:15:32.398" status="PASS"/>
     </kw>
     <status endtime="20240502 20:15:32.436" starttime="20240502 20:15:21.977" status="PASS"/>
    </kw>
    <kw library="Migration_tcodes" name="Import Overview">
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/tbar[0]/btn[3]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:15:33.140" starttime="20240502 20:15:32.436" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:15:34.142">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:15:34.142" starttime="20240502 20:15:33.140" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       079_stms.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240502 20:15:34.181">
       &lt;a href="pabot_results%5C1%5C079_stms.jpg"&gt;&lt;img src="pabot_results%5C1%5C079_stms.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:15:34.181" starttime="20240502 20:15:34.142" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/tbar[0]/btn[3]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:15:34.651" starttime="20240502 20:15:34.181" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:15:35.652">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:15:35.652" starttime="20240502 20:15:34.651" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       080_stms.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240502 20:15:35.704">
       &lt;a href="pabot_results%5C1%5C080_stms.jpg"&gt;&lt;img src="pabot_results%5C1%5C080_stms.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:15:35.704" starttime="20240502 20:15:35.652" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/tbar[1]/btn[5]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:15:35.963" starttime="20240502 20:15:35.705" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:15:36.964">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:15:36.964" starttime="20240502 20:15:35.963" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       081_stms.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240502 20:15:37.032">
       &lt;a href="pabot_results%5C1%5C081_stms.jpg"&gt;&lt;img src="pabot_results%5C1%5C081_stms.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:15:37.032" starttime="20240502 20:15:36.964" status="PASS"/>
     </kw>
     <status endtime="20240502 20:15:37.032" starttime="20240502 20:15:32.436" status="PASS"/>
    </kw>
    <kw library="Migration_tcodes" name="Transport Routes">
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/tbar[0]/btn[3]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:15:37.311" starttime="20240502 20:15:37.032" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:15:38.311">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:15:38.311" starttime="20240502 20:15:37.311" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       082a_stms.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240502 20:15:38.360">
       &lt;a href="pabot_results%5C1%5C082a_stms.jpg"&gt;&lt;img src="pabot_results%5C1%5C082a_stms.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:15:38.360" starttime="20240502 20:15:38.311" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/tbar[1]/btn[19]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:15:39.566" starttime="20240502 20:15:38.360" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:15:40.576">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:15:40.576" starttime="20240502 20:15:39.566" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       082b_stms.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240502 20:15:40.634">
       &lt;a href="pabot_results%5C1%5C082b_stms.jpg"&gt;&lt;img src="pabot_results%5C1%5C082b_stms.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:15:40.634" starttime="20240502 20:15:40.576" status="PASS"/>
     </kw>
     <status endtime="20240502 20:15:40.634" starttime="20240502 20:15:37.032" status="PASS"/>
    </kw>
    <kw library="Migration_tcodes" name="Transport Layers">
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/mbar/menu[2]/menu[1]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:15:41.781" starttime="20240502 20:15:40.634" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:15:42.781">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:15:42.781" starttime="20240502 20:15:41.781" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       083_stms.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:15:42.782">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:15:42.782">
       &lt;a href="pabot_results%5C11%5C083_stms.jpg"&gt;&lt;img src="pabot_results%5C11%5C083_stms.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:15:42.782" starttime="20240502 20:15:42.781" status="PASS"/>
     </kw>
     <status endtime="20240502 20:15:42.782" starttime="20240502 20:15:40.634" status="PASS"/>
    </kw>
    <tag>
     migration
    </tag>
    <status endtime="20240502 20:15:42.782" starttime="20240502 20:15:21.977" status="PASS"/>
   </test>
   <test id="s1-s2-t14" line="76" name="Executing WE20">
    <kw library="Migration_tcodes" name="Transaction WE20">
     <kw library="SAP_Tcode_Library" name="Run Transaction">
      <arg>
       /nwe20
      </arg>
      <doc>
       Runs a Sap transaction. An error is given when an unknown transaction is specified.
      </doc>
      <status endtime="20240502 20:15:43.464" starttime="20240502 20:15:42.782" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:15:44.465">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:15:44.465" starttime="20240502 20:15:43.464" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       084_WE20.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:15:44.468">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:15:44.468">
       &lt;a href="pabot_results%5C14%5C084_WE20.jpg"&gt;&lt;img src="pabot_results%5C14%5C084_WE20.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:15:44.468" starttime="20240502 20:15:44.465" status="PASS"/>
     </kw>
     <status endtime="20240502 20:15:44.468" starttime="20240502 20:15:42.782" status="PASS"/>
    </kw>
    <kw library="Migration_tcodes" name="Partner type LS">
     <kw library="SAP_Tcode_Library" name="Select Node">
      <arg>
       wnd[0]/shellcont/shell
      </arg>
      <arg>
       LS
      </arg>
      <doc>
       Selects a node of a TableTreeControl 'tree_id' which is contained within a shell object.
      </doc>
      <status endtime="20240502 20:15:44.478" starttime="20240502 20:15:44.468" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:15:45.478">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:15:45.478" starttime="20240502 20:15:44.478" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       085_typeLS.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:15:45.481">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:15:45.481">
       &lt;a href="pabot_results%5C14%5C085_typeLS.jpg"&gt;&lt;img src="pabot_results%5C14%5C085_typeLS.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:15:45.481" starttime="20240502 20:15:45.478" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/tbar[1]/btn[46]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:15:45.803" starttime="20240502 20:15:45.481" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:15:46.803">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:15:46.803" starttime="20240502 20:15:45.803" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       086_typeLS.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:15:46.803">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:15:46.807">
       &lt;a href="pabot_results%5C14%5C086_typeLS.jpg"&gt;&lt;img src="pabot_results%5C14%5C086_typeLS.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:15:46.807" starttime="20240502 20:15:46.803" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Input Text">
      <arg>
       wnd[1]/usr/ctxtGSO_PTYP-LOW
      </arg>
      <arg>
       LS
      </arg>
      <doc>
       Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.
      </doc>
      <msg level="INFO" timestamp="20240502 20:15:46.807">
       Typing text 'LS' into text field 'wnd[1]/usr/ctxtGSO_PTYP-LOW'.
      </msg>
      <status endtime="20240502 20:15:46.807" starttime="20240502 20:15:46.807" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:15:47.807">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:15:47.807" starttime="20240502 20:15:46.807" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       087_typeLS.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:15:47.811">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:15:47.811">
       &lt;a href="pabot_results%5C14%5C087_typeLS.jpg"&gt;&lt;img src="pabot_results%5C14%5C087_typeLS.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:15:47.811" starttime="20240502 20:15:47.807" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[1]/tbar[0]/btn[8]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:15:48.393" starttime="20240502 20:15:47.811" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:15:50.395">
       Slept 2 seconds
      </msg>
      <status endtime="20240502 20:15:50.395" starttime="20240502 20:15:48.393" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       088_typeLS.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:15:50.398">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:15:50.398">
       &lt;a href="pabot_results%5C14%5C088_typeLS.jpg"&gt;&lt;img src="pabot_results%5C14%5C088_typeLS.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:15:50.398" starttime="20240502 20:15:50.395" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Get No Entries Found Text">
      <arg>
       wnd[0]/sbar/pane[0]
      </arg>
      <msg level="INFO" timestamp="20240502 20:15:50.398">
       Entries are displayed
      </msg>
      <status endtime="20240502 20:15:50.398" starttime="20240502 20:15:50.398" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:15:51.399">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:15:51.399" starttime="20240502 20:15:50.398" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       089_typeLS.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:15:51.403">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:15:51.403">
       &lt;a href="pabot_results%5C14%5C089_typeLS.jpg"&gt;&lt;img src="pabot_results%5C14%5C089_typeLS.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:15:51.403" starttime="20240502 20:15:51.399" status="PASS"/>
     </kw>
     <status endtime="20240502 20:15:51.404" starttime="20240502 20:15:44.468" status="PASS"/>
    </kw>
    <kw library="Migration_tcodes" name="Partner type LI">
     <kw library="SAP_Tcode_Library" name="Select Node">
      <arg>
       wnd[0]/shellcont/shell
      </arg>
      <arg>
       LI
      </arg>
      <doc>
       Selects a node of a TableTreeControl 'tree_id' which is contained within a shell object.
      </doc>
      <status endtime="20240502 20:15:51.411" starttime="20240502 20:15:51.404" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:15:52.412">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:15:52.412" starttime="20240502 20:15:51.411" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       090_typeLI.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:15:52.412">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:15:52.412">
       &lt;a href="pabot_results%5C14%5C090_typeLI.jpg"&gt;&lt;img src="pabot_results%5C14%5C090_typeLI.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:15:52.412" starttime="20240502 20:15:52.412" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/tbar[1]/btn[46]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:15:52.759" starttime="20240502 20:15:52.412" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:15:53.782">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:15:53.782" starttime="20240502 20:15:52.781" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       091_typeLI.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:15:53.782">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:15:53.782">
       &lt;a href="pabot_results%5C14%5C091_typeLI.jpg"&gt;&lt;img src="pabot_results%5C14%5C091_typeLI.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:15:53.782" starttime="20240502 20:15:53.782" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Input Text">
      <arg>
       wnd[1]/usr/ctxtGSO_PTYP-LOW
      </arg>
      <arg>
       LI
      </arg>
      <doc>
       Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.
      </doc>
      <msg level="INFO" timestamp="20240502 20:15:53.791">
       Typing text 'LI' into text field 'wnd[1]/usr/ctxtGSO_PTYP-LOW'.
      </msg>
      <status endtime="20240502 20:15:53.791" starttime="20240502 20:15:53.782" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:15:54.791">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:15:54.791" starttime="20240502 20:15:53.791" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       092_typeLI.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:15:54.792">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:15:54.792">
       &lt;a href="pabot_results%5C14%5C092_typeLI.jpg"&gt;&lt;img src="pabot_results%5C14%5C092_typeLI.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:15:54.792" starttime="20240502 20:15:54.792" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[1]/tbar[0]/btn[8]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:15:55.149" starttime="20240502 20:15:54.792" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:15:57.150">
       Slept 2 seconds
      </msg>
      <status endtime="20240502 20:15:57.150" starttime="20240502 20:15:55.149" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       093_typeLI.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:15:57.154">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:15:57.154">
       &lt;a href="pabot_results%5C14%5C093_typeLI.jpg"&gt;&lt;img src="pabot_results%5C14%5C093_typeLI.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:15:57.154" starttime="20240502 20:15:57.150" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Get No Entries Found Text">
      <arg>
       wnd[0]/sbar/pane[0]
      </arg>
      <msg level="INFO" timestamp="20240502 20:15:57.157">
       No entries found that match selection criteria
      </msg>
      <status endtime="20240502 20:15:57.157" starttime="20240502 20:15:57.154" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:15:58.158">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:15:58.158" starttime="20240502 20:15:57.158" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       094_typeLI.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:15:58.158">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:15:58.158">
       &lt;a href="pabot_results%5C14%5C094_typeLI.jpg"&gt;&lt;img src="pabot_results%5C14%5C094_typeLI.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:15:58.158" starttime="20240502 20:15:58.158" status="PASS"/>
     </kw>
     <status endtime="20240502 20:15:58.158" starttime="20240502 20:15:51.404" status="PASS"/>
    </kw>
    <tag>
     migration
    </tag>
    <status endtime="20240502 20:15:58.158" starttime="20240502 20:15:42.782" status="PASS"/>
   </test>
   <test id="s1-s2-t15" line="81" name="Executing WE21">
    <kw library="Migration_tcodes" name="Transaction WE21">
     <kw library="SAP_Tcode_Library" name="Run Transaction">
      <arg>
       /nwe21
      </arg>
      <doc>
       Runs a Sap transaction. An error is given when an unknown transaction is specified.
      </doc>
      <status endtime="20240502 20:15:58.716" starttime="20240502 20:15:58.163" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:15:59.717">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:15:59.717" starttime="20240502 20:15:58.716" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       095_WE21.JPG
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:15:59.718">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:15:59.718">
       &lt;a href="pabot_results%5C15%5C095_WE21.JPG"&gt;&lt;img src="pabot_results%5C15%5C095_WE21.JPG" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:15:59.718" starttime="20240502 20:15:59.717" status="PASS"/>
     </kw>
     <status endtime="20240502 20:15:59.718" starttime="20240502 20:15:58.163" status="PASS"/>
    </kw>
    <kw library="Migration_tcodes" name="Transactional RFC">
     <kw library="SAP_Tcode_Library" name="Select Node">
      <arg>
       wnd[0]/shellcont/shell
      </arg>
      <arg>
       A
      </arg>
      <doc>
       Selects a node of a TableTreeControl 'tree_id' which is contained within a shell object.
      </doc>
      <status endtime="20240502 20:15:59.718" starttime="20240502 20:15:59.718" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:16:00.718">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:16:00.718" starttime="20240502 20:15:59.718" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       096_rfc.JPG
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:16:00.721">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:16:00.722">
       &lt;a href="pabot_results%5C15%5C096_rfc.JPG"&gt;&lt;img src="pabot_results%5C15%5C096_rfc.JPG" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:16:00.722" starttime="20240502 20:16:00.718" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/mbar/menu[0]/menu[2]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:16:01.000" starttime="20240502 20:16:00.722" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:16:02.011">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:16:02.011" starttime="20240502 20:16:01.010" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       097_rfc.JPG
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:16:02.011">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:16:02.011">
       &lt;a href="pabot_results%5C15%5C097_rfc.JPG"&gt;&lt;img src="pabot_results%5C15%5C097_rfc.JPG" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:16:02.011" starttime="20240502 20:16:02.011" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[1]/tbar[0]/btn[0]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:16:02.500" starttime="20240502 20:16:02.011" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:16:03.510">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:16:03.510" starttime="20240502 20:16:02.500" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       098_rfc.JPG
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:16:03.510">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:16:03.514">
       &lt;a href="pabot_results%5C15%5C098_rfc.JPG"&gt;&lt;img src="pabot_results%5C15%5C098_rfc.JPG" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:16:03.514" starttime="20240502 20:16:03.510" status="PASS"/>
     </kw>
     <status endtime="20240502 20:16:03.514" starttime="20240502 20:15:59.718" status="PASS"/>
    </kw>
    <kw library="Migration_tcodes" name="File Port">
     <kw library="SAP_Tcode_Library" name="Select Node">
      <arg>
       wnd[0]/shellcont/shell
      </arg>
      <arg>
       D
      </arg>
      <doc>
       Selects a node of a TableTreeControl 'tree_id' which is contained within a shell object.
      </doc>
      <status endtime="20240502 20:16:03.514" starttime="20240502 20:16:03.514" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:16:04.515">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:16:04.515" starttime="20240502 20:16:03.514" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       099_fileport.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:16:04.518">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:16:04.519">
       &lt;a href="pabot_results%5C15%5C099_fileport.jpg"&gt;&lt;img src="pabot_results%5C15%5C099_fileport.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:16:04.519" starttime="20240502 20:16:04.515" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/tbar[1]/btn[20]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:16:04.791" starttime="20240502 20:16:04.519" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:16:05.792">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:16:05.792" starttime="20240502 20:16:04.791" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       100_fileport.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:16:05.792">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:16:05.792">
       &lt;a href="pabot_results%5C15%5C100_fileport.jpg"&gt;&lt;img src="pabot_results%5C15%5C100_fileport.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:16:05.792" starttime="20240502 20:16:05.792" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[1]/tbar[0]/btn[0]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:16:06.283" starttime="20240502 20:16:05.792" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:16:07.284">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:16:07.284" starttime="20240502 20:16:06.283" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       101_fileport.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:16:07.284">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:16:07.287">
       &lt;a href="pabot_results%5C15%5C101_fileport.jpg"&gt;&lt;img src="pabot_results%5C15%5C101_fileport.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:16:07.287" starttime="20240502 20:16:07.284" status="PASS"/>
     </kw>
     <status endtime="20240502 20:16:07.287" starttime="20240502 20:16:03.514" status="PASS"/>
    </kw>
    <kw library="Migration_tcodes" name="ABAP-PI">
     <kw library="SAP_Tcode_Library" name="Select Node">
      <arg>
       wnd[0]/shellcont/shell
      </arg>
      <arg>
       S
      </arg>
      <doc>
       Selects a node of a TableTreeControl 'tree_id' which is contained within a shell object.
      </doc>
      <status endtime="20240502 20:16:07.287" starttime="20240502 20:16:07.287" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:16:08.292">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:16:08.292" starttime="20240502 20:16:07.287" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       102_ABAP-PI.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:16:08.294">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:16:08.294">
       &lt;a href="pabot_results%5C15%5C102_ABAP-PI.jpg"&gt;&lt;img src="pabot_results%5C15%5C102_ABAP-PI.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:16:08.295" starttime="20240502 20:16:08.292" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/tbar[1]/btn[20]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:16:08.646" starttime="20240502 20:16:08.295" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:16:09.648">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:16:09.648" starttime="20240502 20:16:08.646" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       103_ABAP-PI.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:16:09.652">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:16:09.653">
       &lt;a href="pabot_results%5C15%5C103_ABAP-PI.jpg"&gt;&lt;img src="pabot_results%5C15%5C103_ABAP-PI.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:16:09.653" starttime="20240502 20:16:09.648" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[1]/tbar[0]/btn[0]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:16:10.119" starttime="20240502 20:16:09.653" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:16:11.119">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:16:11.119" starttime="20240502 20:16:10.119" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       104_ABAP-PI.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:16:11.119">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:16:11.119">
       &lt;a href="pabot_results%5C15%5C104_ABAP-PI.jpg"&gt;&lt;img src="pabot_results%5C15%5C104_ABAP-PI.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:16:11.119" starttime="20240502 20:16:11.119" status="PASS"/>
     </kw>
     <status endtime="20240502 20:16:11.119" starttime="20240502 20:16:07.287" status="PASS"/>
    </kw>
    <kw library="Migration_tcodes" name="XML File">
     <kw library="SAP_Tcode_Library" name="Select Node">
      <arg>
       wnd[0]/shellcont/shell
      </arg>
      <arg>
       X
      </arg>
      <doc>
       Selects a node of a TableTreeControl 'tree_id' which is contained within a shell object.
      </doc>
      <status endtime="20240502 20:16:11.119" starttime="20240502 20:16:11.119" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:16:12.136">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:16:12.136" starttime="20240502 20:16:11.119" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       105_XML.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:16:12.136">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:16:12.136">
       &lt;a href="pabot_results%5C15%5C105_XML.jpg"&gt;&lt;img src="pabot_results%5C15%5C105_XML.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:16:12.136" starttime="20240502 20:16:12.136" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/tbar[1]/btn[20]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:16:12.469" starttime="20240502 20:16:12.136" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:16:13.471">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:16:13.471" starttime="20240502 20:16:12.470" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       106_XML.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:16:13.476">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:16:13.477">
       &lt;a href="pabot_results%5C15%5C106_XML.jpg"&gt;&lt;img src="pabot_results%5C15%5C106_XML.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:16:13.477" starttime="20240502 20:16:13.471" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[1]/tbar[0]/btn[0]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:16:13.986" starttime="20240502 20:16:13.477" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:16:15.024">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:16:15.024" starttime="20240502 20:16:13.987" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       107_XML.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:16:15.024">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:16:15.024">
       &lt;a href="pabot_results%5C15%5C107_XML.jpg"&gt;&lt;img src="pabot_results%5C15%5C107_XML.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:16:15.024" starttime="20240502 20:16:15.024" status="PASS"/>
     </kw>
     <status endtime="20240502 20:16:15.024" starttime="20240502 20:16:11.119" status="PASS"/>
    </kw>
    <kw library="Migration_tcodes" name="XML HTTP">
     <kw library="SAP_Tcode_Library" name="Select Node">
      <arg>
       wnd[0]/shellcont/shell
      </arg>
      <arg>
       H
      </arg>
      <doc>
       Selects a node of a TableTreeControl 'tree_id' which is contained within a shell object.
      </doc>
      <status endtime="20240502 20:16:15.048" starttime="20240502 20:16:15.034" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:16:16.049">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:16:16.049" starttime="20240502 20:16:15.048" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       108_HTTP.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:16:16.051">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:16:16.051">
       &lt;a href="pabot_results%5C15%5C108_HTTP.jpg"&gt;&lt;img src="pabot_results%5C15%5C108_HTTP.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:16:16.051" starttime="20240502 20:16:16.049" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/tbar[1]/btn[20]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:16:16.379" starttime="20240502 20:16:16.051" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:16:17.383">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:16:17.383" starttime="20240502 20:16:16.379" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       109_HTTP.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:16:17.383">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:16:17.389">
       &lt;a href="pabot_results%5C15%5C109_HTTP.jpg"&gt;&lt;img src="pabot_results%5C15%5C109_HTTP.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:16:17.389" starttime="20240502 20:16:17.383" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[1]/tbar[0]/btn[0]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:16:17.894" starttime="20240502 20:16:17.389" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:16:18.900">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:16:18.900" starttime="20240502 20:16:17.900" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       110_HTTP.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:16:18.901">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:16:18.901">
       &lt;a href="pabot_results%5C15%5C110_HTTP.jpg"&gt;&lt;img src="pabot_results%5C15%5C110_HTTP.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:16:18.901" starttime="20240502 20:16:18.901" status="PASS"/>
     </kw>
     <status endtime="20240502 20:16:18.901" starttime="20240502 20:16:15.034" status="PASS"/>
    </kw>
    <tag>
     migration
    </tag>
    <status endtime="20240502 20:16:18.901" starttime="20240502 20:15:58.163" status="PASS"/>
   </test>
   <kw library="Common_SAP_Tcodefn" name="System Logout" type="TEARDOWN">
    <kw library="SAP_Tcode_Library" name="Run Transaction">
     <arg>
      /nex
     </arg>
     <doc>
      Runs a Sap transaction. An error is given when an unknown transaction is specified.
     </doc>
     <status endtime="20240502 20:16:19.276" starttime="20240502 20:16:18.901" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      5
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240502 20:16:24.322">
      Slept 5 seconds
     </msg>
     <status endtime="20240502 20:16:24.322" starttime="20240502 20:16:19.276" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      10
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240502 20:16:34.322">
      Slept 10 seconds
     </msg>
     <status endtime="20240502 20:16:34.322" starttime="20240502 20:16:24.322" status="PASS"/>
    </kw>
    <status endtime="20240502 20:16:34.322" starttime="20240502 20:16:18.901" status="PASS"/>
   </kw>
   <status endtime="20240502 20:16:34.322" starttime="20240502 20:12:22.001" status="PASS"/>
  </suite>
  <suite id="s1-s3" name="Test OAC0" source="C:\SAP_Testing\SAPtesting\Tests\Test_OAC0.robot">
   <kw library="OAC0" name="System Logon" type="SETUP">
    <kw library="Process" name="Start Process">
     <arg>
      ${symvar('SAP_SERVER')}
     </arg>
     <doc>
      Starts a new process on background.
     </doc>
     <msg level="INFO" timestamp="20240502 20:13:03.548">
      Sym.Dev.SAP_SERVER: C:\Program Files\SAP\FrontEnd\SAPGUI\saplogon.exe
     </msg>
     <msg level="INFO" timestamp="20240502 20:13:03.549">
      Starting process:
"C:\Program Files\SAP\FrontEnd\SAPGUI\saplogon.exe"
     </msg>
     <status endtime="20240502 20:13:03.553" starttime="20240502 20:13:03.548" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      10s
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240502 20:13:13.554">
      Slept 10 seconds
     </msg>
     <status endtime="20240502 20:13:13.554" starttime="20240502 20:13:03.553" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Connect To Session">
     <doc>
      Connects to an open session SAP.
     </doc>
     <status endtime="20240502 20:13:13.631" starttime="20240502 20:13:13.554" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Open Connection">
     <arg>
      ${symvar('SAP_connection')}
     </arg>
     <doc>
      Opens a connection to the given connection name. Be sure to provide the full connection name, including the bracket part.
     </doc>
     <msg level="INFO" timestamp="20240502 20:13:13.631">
      Sym.Dev.SAP_connection: BIS
     </msg>
     <status endtime="20240502 20:13:14.851" starttime="20240502 20:13:13.631" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Input Text">
     <arg>
      wnd[0]/usr/txtRSYST-MANDT
     </arg>
     <arg>
      ${symvar('Client_Id')}
     </arg>
     <doc>
      Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.
     </doc>
     <msg level="INFO" timestamp="20240502 20:13:14.851">
      Sym.Dev.Client_Id: 001
     </msg>
     <msg level="INFO" timestamp="20240502 20:13:14.867">
      Typing text '001' into text field 'wnd[0]/usr/txtRSYST-MANDT'.
     </msg>
     <status endtime="20240502 20:13:14.867" starttime="20240502 20:13:14.851" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Input Text">
     <arg>
      wnd[0]/usr/txtRSYST-BNAME
     </arg>
     <arg>
      ${symvar('User_Name')}
     </arg>
     <doc>
      Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.
     </doc>
     <msg level="INFO" timestamp="20240502 20:13:14.867">
      Sym.Dev.User_Name: SELENIUM
     </msg>
     <msg level="INFO" timestamp="20240502 20:13:14.882">
      Typing text 'SELENIUM' into text field 'wnd[0]/usr/txtRSYST-BNAME'.
     </msg>
     <status endtime="20240502 20:13:14.882" starttime="20240502 20:13:14.867" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Input Password">
     <arg>
      wnd[0]/usr/pwdRSYST-BCODE
     </arg>
     <arg>
      %{SAP_PASSWORD}
     </arg>
     <doc>
      Inserts the given password into the text field identified by locator.
The password is not recorded in the log.
     </doc>
     <msg level="INFO" timestamp="20240502 20:13:14.882">
      Typing password into text field 'wnd[0]/usr/pwdRSYST-BCODE'.
     </msg>
     <status endtime="20240502 20:13:14.882" starttime="20240502 20:13:14.882" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Send Vkey">
     <arg>
      0
     </arg>
     <doc>
      Sends a SAP virtual key combination to the window, not into an element.
If you want to send a value to a text field, use `input text` instead.
     </doc>
     <status endtime="20240502 20:13:15.392" starttime="20240502 20:13:14.882" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Take Screenshot">
     <arg>
      00a_loginpage.jpg
     </arg>
     <doc>
      Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
     </doc>
     <msg level="WARN" timestamp="20240502 20:13:15.402">
      Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
     </msg>
     <msg html="true" level="INFO" timestamp="20240502 20:13:15.402">
      &lt;a href="pabot_results%5C0%5C00a_loginpage.jpg"&gt;&lt;img src="pabot_results%5C0%5C00a_loginpage.jpg" width="800px"&gt;&lt;/a&gt;
     </msg>
     <status endtime="20240502 20:13:15.402" starttime="20240502 20:13:15.392" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Multiple Logon Handling">
     <arg>
      wnd[1]
     </arg>
     <arg>
      wnd[1]/usr/radMULTI_LOGON_OPT2
     </arg>
     <arg>
      wnd[1]/tbar[0]/btn[0]
     </arg>
     <msg level="INFO" timestamp="20240502 20:13:16.162">
      Multiple logon exists
     </msg>
     <status endtime="20240502 20:13:16.162" starttime="20240502 20:13:15.402" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      1
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240502 20:13:17.162">
      Slept 1 second
     </msg>
     <status endtime="20240502 20:13:17.162" starttime="20240502 20:13:16.162" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Take Screenshot">
     <arg>
      00_multi_logon_handling.jpg
     </arg>
     <doc>
      Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
     </doc>
     <msg level="WARN" timestamp="20240502 20:13:17.166">
      Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
     </msg>
     <msg html="true" level="INFO" timestamp="20240502 20:13:17.166">
      &lt;a href="pabot_results%5C0%5C00_multi_logon_handling.jpg"&gt;&lt;img src="pabot_results%5C0%5C00_multi_logon_handling.jpg" width="800px"&gt;&lt;/a&gt;
     </msg>
     <status endtime="20240502 20:13:17.166" starttime="20240502 20:13:17.162" status="PASS"/>
    </kw>
    <status endtime="20240502 20:13:17.166" starttime="20240502 20:13:03.546" status="PASS"/>
   </kw>
   <test id="s1-s3-t1" line="9" name="Executing OACO">
    <kw library="OAC0" name="Transaction OACO">
     <kw library="SAP_Tcode_Library" name="Run Transaction">
      <arg>
       /nOAC0
      </arg>
      <doc>
       Runs a Sap transaction. An error is given when an unknown transaction is specified.
      </doc>
      <status endtime="20240502 20:13:17.766" starttime="20240502 20:13:17.166" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:13:18.786">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:13:18.786" starttime="20240502 20:13:17.766" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:13:18.786">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:13:18.786">
       &lt;a href="sap-screenshot_1.jpg"&gt;&lt;img src="sap-screenshot_1.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:13:18.786" starttime="20240502 20:13:18.786" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Scroll">
      <arg>
       wnd[0]/usr/tblSAPLSCMS_CREPC_SREP
      </arg>
      <arg>
       35
      </arg>
      <doc>
       Scrolls the scrollbar of an element 'element_id' that is contained within a shell object.
'Position' is the number of rows to scroll.
      </doc>
      <status endtime="20240502 20:13:19.110" starttime="20240502 20:13:18.786" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:13:20.126">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:13:20.126" starttime="20240502 20:13:19.126" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       054_OACO.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:13:20.126">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:13:20.126">
       &lt;a href="054_OACO.jpg"&gt;&lt;img src="054_OACO.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:13:20.126" starttime="20240502 20:13:20.126" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Scroll">
      <arg>
       wnd[0]/usr/tblSAPLSCMS_CREPC_SREP
      </arg>
      <arg>
       70
      </arg>
      <doc>
       Scrolls the scrollbar of an element 'element_id' that is contained within a shell object.
'Position' is the number of rows to scroll.
      </doc>
      <status endtime="20240502 20:13:20.461" starttime="20240502 20:13:20.126" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:13:21.462">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:13:21.462" starttime="20240502 20:13:20.461" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       055_OACO.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:13:21.462">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:13:21.470">
       &lt;a href="055_OACO.jpg"&gt;&lt;img src="055_OACO.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:13:21.470" starttime="20240502 20:13:21.462" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Scroll">
      <arg>
       wnd[0]/usr/tblSAPLSCMS_CREPC_SREP
      </arg>
      <arg>
       105
      </arg>
      <doc>
       Scrolls the scrollbar of an element 'element_id' that is contained within a shell object.
'Position' is the number of rows to scroll.
      </doc>
      <status endtime="20240502 20:13:21.740" starttime="20240502 20:13:21.470" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:13:22.741">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:13:22.741" starttime="20240502 20:13:21.740" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       056_OACO.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:13:22.741">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:13:22.741">
       &lt;a href="056_OACO.jpg"&gt;&lt;img src="056_OACO.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:13:22.741" starttime="20240502 20:13:22.741" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Scroll">
      <arg>
       wnd[0]/usr/tblSAPLSCMS_CREPC_SREP
      </arg>
      <arg>
       140
      </arg>
      <doc>
       Scrolls the scrollbar of an element 'element_id' that is contained within a shell object.
'Position' is the number of rows to scroll.
      </doc>
      <status endtime="20240502 20:13:23.006" starttime="20240502 20:13:22.741" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:13:24.016">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:13:24.016" starttime="20240502 20:13:23.016" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       057_OACO.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:13:24.019">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:13:24.019">
       &lt;a href="057_OACO.jpg"&gt;&lt;img src="057_OACO.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:13:24.019" starttime="20240502 20:13:24.016" status="PASS"/>
     </kw>
     <status endtime="20240502 20:13:24.019" starttime="20240502 20:13:17.166" status="PASS"/>
    </kw>
    <tag>
     Migration
    </tag>
    <status endtime="20240502 20:13:24.019" starttime="20240502 20:13:17.166" status="PASS"/>
   </test>
   <kw library="OAC0" name="System Logout" type="TEARDOWN">
    <kw library="SAP_Tcode_Library" name="Run Transaction">
     <arg>
      /nex
     </arg>
     <doc>
      Runs a Sap transaction. An error is given when an unknown transaction is specified.
     </doc>
     <status endtime="20240502 20:13:24.317" starttime="20240502 20:13:24.019" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      5
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240502 20:13:29.327">
      Slept 5 seconds
     </msg>
     <status endtime="20240502 20:13:29.327" starttime="20240502 20:13:24.317" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Take Screenshot">
     <arg>
      logoutpage.jpg
     </arg>
     <doc>
      Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
     </doc>
     <msg level="WARN" timestamp="20240502 20:13:29.329">
      Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
     </msg>
     <msg html="true" level="INFO" timestamp="20240502 20:13:29.329">
      &lt;a href="pabot_results%5C11%5Clogoutpage.jpg"&gt;&lt;img src="pabot_results%5C11%5Clogoutpage.jpg" width="800px"&gt;&lt;/a&gt;
     </msg>
     <status endtime="20240502 20:13:29.329" starttime="20240502 20:13:29.327" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      10
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240502 20:13:39.330">
      Slept 10 seconds
     </msg>
     <status endtime="20240502 20:13:39.330" starttime="20240502 20:13:29.329" status="PASS"/>
    </kw>
    <status endtime="20240502 20:13:39.330" starttime="20240502 20:13:24.019" status="PASS"/>
   </kw>
   <status endtime="20240502 20:13:39.330" starttime="20240502 20:13:03.526" status="PASS"/>
  </suite>
  <suite id="s1-s4" name="Test SCOT" source="C:\SAP_Testing\SAPtesting\Tests\Test_SCOT.robot">
   <kw library="SCOT" name="System Logon" type="SETUP">
    <kw library="Process" name="Start Process">
     <arg>
      ${symvar('SAP_SERVER')}
     </arg>
     <doc>
      Starts a new process on background.
     </doc>
     <msg level="INFO" timestamp="20240502 20:13:45.279">
      Sym.Dev.SAP_SERVER: C:\Program Files\SAP\FrontEnd\SAPGUI\saplogon.exe
     </msg>
     <msg level="INFO" timestamp="20240502 20:13:45.279">
      Starting process:
"C:\Program Files\SAP\FrontEnd\SAPGUI\saplogon.exe"
     </msg>
     <status endtime="20240502 20:13:45.279" starttime="20240502 20:13:45.279" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      10s
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240502 20:13:55.279">
      Slept 10 seconds
     </msg>
     <status endtime="20240502 20:13:55.279" starttime="20240502 20:13:45.279" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Connect To Session">
     <doc>
      Connects to an open session SAP.
     </doc>
     <status endtime="20240502 20:13:55.282" starttime="20240502 20:13:55.279" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Open Connection">
     <arg>
      ${symvar('SAP_connection')}
     </arg>
     <doc>
      Opens a connection to the given connection name. Be sure to provide the full connection name, including the bracket part.
     </doc>
     <msg level="INFO" timestamp="20240502 20:13:55.282">
      Sym.Dev.SAP_connection: BIS
     </msg>
     <status endtime="20240502 20:13:56.364" starttime="20240502 20:13:55.282" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Input Text">
     <arg>
      wnd[0]/usr/txtRSYST-MANDT
     </arg>
     <arg>
      ${symvar('Client_Id')}
     </arg>
     <doc>
      Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.
     </doc>
     <msg level="INFO" timestamp="20240502 20:13:56.374">
      Sym.Dev.Client_Id: 001
     </msg>
     <msg level="INFO" timestamp="20240502 20:13:56.390">
      Typing text '001' into text field 'wnd[0]/usr/txtRSYST-MANDT'.
     </msg>
     <status endtime="20240502 20:13:56.390" starttime="20240502 20:13:56.364" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Input Text">
     <arg>
      wnd[0]/usr/txtRSYST-BNAME
     </arg>
     <arg>
      ${symvar('User_Name')}
     </arg>
     <doc>
      Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.
     </doc>
     <msg level="INFO" timestamp="20240502 20:13:56.400">
      Sym.Dev.User_Name: SELENIUM
     </msg>
     <msg level="INFO" timestamp="20240502 20:13:56.416">
      Typing text 'SELENIUM' into text field 'wnd[0]/usr/txtRSYST-BNAME'.
     </msg>
     <status endtime="20240502 20:13:56.423" starttime="20240502 20:13:56.390" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Input Password">
     <arg>
      wnd[0]/usr/pwdRSYST-BCODE
     </arg>
     <arg>
      %{SAP_PASSWORD}
     </arg>
     <doc>
      Inserts the given password into the text field identified by locator.
The password is not recorded in the log.
     </doc>
     <msg level="INFO" timestamp="20240502 20:13:56.439">
      Typing password into text field 'wnd[0]/usr/pwdRSYST-BCODE'.
     </msg>
     <status endtime="20240502 20:13:56.439" starttime="20240502 20:13:56.423" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Send Vkey">
     <arg>
      0
     </arg>
     <doc>
      Sends a SAP virtual key combination to the window, not into an element.
If you want to send a value to a text field, use `input text` instead.
     </doc>
     <status endtime="20240502 20:13:56.906" starttime="20240502 20:13:56.439" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Take Screenshot">
     <arg>
      00a_loginpage.jpg
     </arg>
     <doc>
      Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
     </doc>
     <msg level="WARN" timestamp="20240502 20:13:56.921">
      Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
     </msg>
     <msg html="true" level="INFO" timestamp="20240502 20:13:56.921">
      &lt;a href="pabot_results%5C0%5C00a_loginpage.jpg"&gt;&lt;img src="pabot_results%5C0%5C00a_loginpage.jpg" width="800px"&gt;&lt;/a&gt;
     </msg>
     <status endtime="20240502 20:13:56.921" starttime="20240502 20:13:56.906" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Multiple Logon Handling">
     <arg>
      wnd[1]
     </arg>
     <arg>
      wnd[1]/usr/radMULTI_LOGON_OPT2
     </arg>
     <arg>
      wnd[1]/tbar[0]/btn[0]
     </arg>
     <msg level="INFO" timestamp="20240502 20:13:57.577">
      Multiple logon exists
     </msg>
     <status endtime="20240502 20:13:57.577" starttime="20240502 20:13:56.921" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      1
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240502 20:13:58.578">
      Slept 1 second
     </msg>
     <status endtime="20240502 20:13:58.578" starttime="20240502 20:13:57.577" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Take Screenshot">
     <arg>
      00_multi_logon_handling.jpg
     </arg>
     <doc>
      Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
     </doc>
     <msg level="WARN" timestamp="20240502 20:13:58.578">
      Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
     </msg>
     <msg html="true" level="INFO" timestamp="20240502 20:13:58.578">
      &lt;a href="pabot_results%5C0%5C00_multi_logon_handling.jpg"&gt;&lt;img src="pabot_results%5C0%5C00_multi_logon_handling.jpg" width="800px"&gt;&lt;/a&gt;
     </msg>
     <status endtime="20240502 20:13:58.578" starttime="20240502 20:13:58.578" status="PASS"/>
    </kw>
    <status endtime="20240502 20:13:58.578" starttime="20240502 20:13:45.279" status="PASS"/>
   </kw>
   <test id="s1-s4-t1" line="9" name="Executing SCOT">
    <kw library="SCOT" name="Transaction SCOT">
     <kw library="SAP_Tcode_Library" name="Run Transaction">
      <arg>
       /nscot
      </arg>
      <doc>
       Runs a Sap transaction. An error is given when an unknown transaction is specified.
      </doc>
      <status endtime="20240502 20:14:00.046" starttime="20240502 20:13:58.578" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Send Vkey">
      <arg>
       0
      </arg>
      <doc>
       Sends a SAP virtual key combination to the window, not into an element.
If you want to send a value to a text field, use `input text` instead.
      </doc>
      <status endtime="20240502 20:14:00.338" starttime="20240502 20:14:00.046" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       017_scot.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:14:00.338">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:14:00.338">
       &lt;a href="017_scot.jpg"&gt;&lt;img src="017_scot.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:14:00.338" starttime="20240502 20:14:00.338" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:14:01.345">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:14:01.345" starttime="20240502 20:14:00.338" status="PASS"/>
     </kw>
     <status endtime="20240502 20:14:01.345" starttime="20240502 20:13:58.578" status="PASS"/>
    </kw>
    <kw library="SCOT" name="SMTP Nodes">
     <kw library="SAP_Tcode_Library" name="Click Toolbar Button">
      <arg>
       wnd[0]/usr/subCONTENT:SAPLSBCS_ADM:0104/subSUB_CONTENT:SAPLSBCS_NODES:0100/cntlSMTP_NODES_TOOLBAR_CONTAINER/shellcont/shell
      </arg>
      <arg>
       EXPA
      </arg>
      <doc>
       Clicks a button of a toolbar within a GridView 'table_id' which is contained within a shell object.
Use the Scripting tracker recorder to find the 'button_id' of the button to click
      </doc>
      <msg level="WARN" timestamp="20240502 20:14:01.367">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:14:01.367">
       &lt;a href="sap-screenshot_1.jpg"&gt;&lt;img src="sap-screenshot_1.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:14:02.278" starttime="20240502 20:14:01.345" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Doubleclick Element">
      <arg>
       wnd[0]/usr/subCONTENT:SAPLSBCS_ADM:0104/subSUB_CONTENT:SAPLSBCS_NODES:0100/cntlSMTP_NODES_COLUMN_TREE_CONT/shellcont/shell
      </arg>
      <arg>
       SMTP
      </arg>
      <arg>
       Node
      </arg>
      <doc>
       Performs a double-click on a given element. Used only for shell objects.
      </doc>
      <status endtime="20240502 20:14:02.582" starttime="20240502 20:14:02.288" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:14:03.582">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:14:03.582" starttime="20240502 20:14:02.582" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       018_SMTP.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240502 20:14:03.652">
       &lt;a href="pabot_results%5C3%5C018_SMTP.jpg"&gt;&lt;img src="pabot_results%5C3%5C018_SMTP.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:14:03.652" starttime="20240502 20:14:03.582" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Send Vkey">
      <arg>
       0
      </arg>
      <doc>
       Sends a SAP virtual key combination to the window, not into an element.
If you want to send a value to a text field, use `input text` instead.
      </doc>
      <status endtime="20240502 20:14:03.944" starttime="20240502 20:14:03.652" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Doubleclick Element">
      <arg>
       wnd[0]/usr/subCONTENT:SAPLSBCS_ADM:0104/subSUB_CONTENT:SAPLSBCS_NODES:0100/cntlSMTP_NODES_COLUMN_TREE_CONT/shellcont/shell
      </arg>
      <arg>
       SMTP&amp;-&amp;INT
      </arg>
      <arg>
       Node
      </arg>
      <doc>
       Performs a double-click on a given element. Used only for shell objects.
      </doc>
      <status endtime="20240502 20:14:04.311" starttime="20240502 20:14:03.944" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:14:05.311">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:14:05.311" starttime="20240502 20:14:04.311" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       019_SMTP&amp;INT.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240502 20:14:05.378">
       &lt;a href="pabot_results%5C3%5C019_SMTP%26INT.jpg"&gt;&lt;img src="pabot_results%5C3%5C019_SMTP%26INT.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:14:05.378" starttime="20240502 20:14:05.311" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Send Vkey">
      <arg>
       0
      </arg>
      <doc>
       Sends a SAP virtual key combination to the window, not into an element.
If you want to send a value to a text field, use `input text` instead.
      </doc>
      <status endtime="20240502 20:14:05.655" starttime="20240502 20:14:05.378" status="PASS"/>
     </kw>
     <status endtime="20240502 20:14:05.655" starttime="20240502 20:14:01.345" status="PASS"/>
    </kw>
    <kw library="SCOT" name="Settings Nodes">
     <kw library="SAP_Tcode_Library" name="Scot Tree">
      <arg>
       wnd[0]/shellcont/shell/shellcont[1]/shell
      </arg>
      <status endtime="20240502 20:14:06.132" starttime="20240502 20:14:05.655" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:14:07.132">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:14:07.132" starttime="20240502 20:14:06.132" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       020_OutboundSettings.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240502 20:14:07.185">
       &lt;a href="pabot_results%5C3%5C020_OutboundSettings.jpg"&gt;&lt;img src="pabot_results%5C3%5C020_OutboundSettings.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:14:07.185" starttime="20240502 20:14:07.132" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/usr/subCONTENT:SAPLSBCS_ADM:0104/subSUB_CONTENT:SAPLSBCS_SETTINGS:0200/tabsGV_CNT_TABSTR_OUT/tabpSTATUS
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:14:07.439" starttime="20240502 20:14:07.185" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:14:08.439">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:14:08.439" starttime="20240502 20:14:07.439" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       021_Statusrequest.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240502 20:14:08.501">
       &lt;a href="pabot_results%5C3%5C021_Statusrequest.jpg"&gt;&lt;img src="pabot_results%5C3%5C021_Statusrequest.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:14:08.501" starttime="20240502 20:14:08.439" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/usr/subCONTENT:SAPLSBCS_ADM:0104/subSUB_CONTENT:SAPLSBCS_SETTINGS:0200/tabsGV_CNT_TABSTR_OUT/tabpA_OUT
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:14:08.726" starttime="20240502 20:14:08.501" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:14:09.726">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:14:09.726" starttime="20240502 20:14:08.726" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       022_Anlys.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240502 20:14:09.787">
       &lt;a href="pabot_results%5C3%5C022_Anlys.jpg"&gt;&lt;img src="pabot_results%5C3%5C022_Anlys.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:14:09.787" starttime="20240502 20:14:09.726" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/usr/subCONTENT:SAPLSBCS_ADM:0104/subSUB_CONTENT:SAPLSBCS_SETTINGS:0200/tabsGV_CNT_TABSTR_OUT/tabpSIGN_ENCRYPT
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:14:10.027" starttime="20240502 20:14:09.787" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:14:11.027">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:14:11.027" starttime="20240502 20:14:10.027" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       023_sig&amp;encry.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240502 20:14:11.096">
       &lt;a href="pabot_results%5C3%5C023_sig%26encry.jpg"&gt;&lt;img src="pabot_results%5C3%5C023_sig%26encry.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:14:11.096" starttime="20240502 20:14:11.028" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:14:12.097">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:14:12.097" starttime="20240502 20:14:11.096" status="PASS"/>
     </kw>
     <status endtime="20240502 20:14:12.097" starttime="20240502 20:14:05.655" status="PASS"/>
    </kw>
    <tag>
     Migration
    </tag>
    <status endtime="20240502 20:14:12.097" starttime="20240502 20:13:58.578" status="PASS"/>
   </test>
   <kw library="SCOT" name="System Logout" type="TEARDOWN">
    <kw library="SAP_Tcode_Library" name="Run Transaction">
     <arg>
      /nex
     </arg>
     <doc>
      Runs a Sap transaction. An error is given when an unknown transaction is specified.
     </doc>
     <status endtime="20240502 20:14:12.497" starttime="20240502 20:14:12.097" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      5
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240502 20:14:17.499">
      Slept 5 seconds
     </msg>
     <status endtime="20240502 20:14:17.499" starttime="20240502 20:14:12.497" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Take Screenshot">
     <arg>
      logoutpage.jpg
     </arg>
     <doc>
      Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
     </doc>
     <msg level="WARN" timestamp="20240502 20:14:17.499">
      Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
     </msg>
     <msg html="true" level="INFO" timestamp="20240502 20:14:17.499">
      &lt;a href="pabot_results%5C11%5Clogoutpage.jpg"&gt;&lt;img src="pabot_results%5C11%5Clogoutpage.jpg" width="800px"&gt;&lt;/a&gt;
     </msg>
     <status endtime="20240502 20:14:17.499" starttime="20240502 20:14:17.499" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      10
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240502 20:14:27.507">
      Slept 10 seconds
     </msg>
     <status endtime="20240502 20:14:27.507" starttime="20240502 20:14:17.507" status="PASS"/>
    </kw>
    <status endtime="20240502 20:14:27.507" starttime="20240502 20:14:12.097" status="PASS"/>
   </kw>
   <status endtime="20240502 20:14:27.507" starttime="20240502 20:13:45.248" status="PASS"/>
  </suite>
  <suite id="s1-s5" name="Test SHMM" source="C:\SAP_Testing\SAPtesting\Tests\Test_SHMM.robot">
   <kw library="SHMM" name="System Logon" type="SETUP">
    <kw library="Process" name="Start Process">
     <arg>
      ${symvar('SAP_SERVER')}
     </arg>
     <doc>
      Starts a new process on background.
     </doc>
     <msg level="INFO" timestamp="20240502 20:14:33.360">
      Sym.Dev.SAP_SERVER: C:\Program Files\SAP\FrontEnd\SAPGUI\saplogon.exe
     </msg>
     <msg level="INFO" timestamp="20240502 20:14:33.360">
      Starting process:
"C:\Program Files\SAP\FrontEnd\SAPGUI\saplogon.exe"
     </msg>
     <status endtime="20240502 20:14:33.360" starttime="20240502 20:14:33.350" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      10s
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240502 20:14:43.360">
      Slept 10 seconds
     </msg>
     <status endtime="20240502 20:14:43.360" starttime="20240502 20:14:33.360" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Connect To Session">
     <doc>
      Connects to an open session SAP.
     </doc>
     <status endtime="20240502 20:14:43.369" starttime="20240502 20:14:43.360" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Open Connection">
     <arg>
      ${symvar('SAP_connection')}
     </arg>
     <doc>
      Opens a connection to the given connection name. Be sure to provide the full connection name, including the bracket part.
     </doc>
     <msg level="INFO" timestamp="20240502 20:14:43.369">
      Sym.Dev.SAP_connection: BIS
     </msg>
     <status endtime="20240502 20:14:44.484" starttime="20240502 20:14:43.369" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Input Text">
     <arg>
      wnd[0]/usr/txtRSYST-MANDT
     </arg>
     <arg>
      ${symvar('Client_Id')}
     </arg>
     <doc>
      Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.
     </doc>
     <msg level="INFO" timestamp="20240502 20:14:44.484">
      Sym.Dev.Client_Id: 001
     </msg>
     <msg level="INFO" timestamp="20240502 20:14:44.507">
      Typing text '001' into text field 'wnd[0]/usr/txtRSYST-MANDT'.
     </msg>
     <status endtime="20240502 20:14:44.510" starttime="20240502 20:14:44.484" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Input Text">
     <arg>
      wnd[0]/usr/txtRSYST-BNAME
     </arg>
     <arg>
      ${symvar('User_Name')}
     </arg>
     <doc>
      Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.
     </doc>
     <msg level="INFO" timestamp="20240502 20:14:44.510">
      Sym.Dev.User_Name: SELENIUM
     </msg>
     <msg level="INFO" timestamp="20240502 20:14:44.525">
      Typing text 'SELENIUM' into text field 'wnd[0]/usr/txtRSYST-BNAME'.
     </msg>
     <status endtime="20240502 20:14:44.525" starttime="20240502 20:14:44.510" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Input Password">
     <arg>
      wnd[0]/usr/pwdRSYST-BCODE
     </arg>
     <arg>
      %{SAP_PASSWORD}
     </arg>
     <doc>
      Inserts the given password into the text field identified by locator.
The password is not recorded in the log.
     </doc>
     <msg level="INFO" timestamp="20240502 20:14:44.525">
      Typing password into text field 'wnd[0]/usr/pwdRSYST-BCODE'.
     </msg>
     <status endtime="20240502 20:14:44.525" starttime="20240502 20:14:44.525" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Send Vkey">
     <arg>
      0
     </arg>
     <doc>
      Sends a SAP virtual key combination to the window, not into an element.
If you want to send a value to a text field, use `input text` instead.
     </doc>
     <status endtime="20240502 20:14:45.034" starttime="20240502 20:14:44.525" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Take Screenshot">
     <arg>
      00a_loginpage.jpg
     </arg>
     <doc>
      Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
     </doc>
     <msg level="WARN" timestamp="20240502 20:14:45.034">
      Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
     </msg>
     <msg html="true" level="INFO" timestamp="20240502 20:14:45.034">
      &lt;a href="pabot_results%5C0%5C00a_loginpage.jpg"&gt;&lt;img src="pabot_results%5C0%5C00a_loginpage.jpg" width="800px"&gt;&lt;/a&gt;
     </msg>
     <status endtime="20240502 20:14:45.034" starttime="20240502 20:14:45.034" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Multiple Logon Handling">
     <arg>
      wnd[1]
     </arg>
     <arg>
      wnd[1]/usr/radMULTI_LOGON_OPT2
     </arg>
     <arg>
      wnd[1]/tbar[0]/btn[0]
     </arg>
     <msg level="INFO" timestamp="20240502 20:14:45.784">
      Multiple logon exists
     </msg>
     <status endtime="20240502 20:14:45.784" starttime="20240502 20:14:45.034" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      1
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240502 20:14:46.785">
      Slept 1 second
     </msg>
     <status endtime="20240502 20:14:46.785" starttime="20240502 20:14:45.784" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Take Screenshot">
     <arg>
      00_multi_logon_handling.jpg
     </arg>
     <doc>
      Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
     </doc>
     <msg level="WARN" timestamp="20240502 20:14:46.785">
      Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
     </msg>
     <msg html="true" level="INFO" timestamp="20240502 20:14:46.785">
      &lt;a href="pabot_results%5C0%5C00_multi_logon_handling.jpg"&gt;&lt;img src="pabot_results%5C0%5C00_multi_logon_handling.jpg" width="800px"&gt;&lt;/a&gt;
     </msg>
     <status endtime="20240502 20:14:46.785" starttime="20240502 20:14:46.785" status="PASS"/>
    </kw>
    <status endtime="20240502 20:14:46.785" starttime="20240502 20:14:33.350" status="PASS"/>
   </kw>
   <test id="s1-s5-t1" line="10" name="Executing SHMM">
    <kw library="SHMM" name="Transaction SHMM">
     <kw library="SAP_Tcode_Library" name="Run Transaction">
      <arg>
       /nshmm
      </arg>
      <doc>
       Runs a Sap transaction. An error is given when an unknown transaction is specified.
      </doc>
      <status endtime="20240502 20:14:47.354" starttime="20240502 20:14:46.785" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Send Vkey">
      <arg>
       0
      </arg>
      <doc>
       Sends a SAP virtual key combination to the window, not into an element.
If you want to send a value to a text field, use `input text` instead.
      </doc>
      <status endtime="20240502 20:14:47.684" starttime="20240502 20:14:47.354" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       027_shmm.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:14:47.687">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:14:47.687">
       &lt;a href="027_shmm.jpg"&gt;&lt;img src="027_shmm.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:14:47.687" starttime="20240502 20:14:47.684" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:14:48.688">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:14:48.688" starttime="20240502 20:14:47.687" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/usr/tabsTAB_0100/tabpTAB_0100_TUNE
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:14:49.002" starttime="20240502 20:14:48.688" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       028_shmm_shared_Memory.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:14:49.002">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:14:49.002">
       &lt;a href="028_shmm_shared_Memory.jpg"&gt;&lt;img src="028_shmm_shared_Memory.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:14:49.002" starttime="20240502 20:14:49.002" status="PASS"/>
     </kw>
     <status endtime="20240502 20:14:49.002" starttime="20240502 20:14:46.785" status="PASS"/>
    </kw>
    <tag>
     Migration
    </tag>
    <status endtime="20240502 20:14:49.002" starttime="20240502 20:14:46.785" status="PASS"/>
   </test>
   <kw library="SHMM" name="System Logout" type="TEARDOWN">
    <kw library="SAP_Tcode_Library" name="Run Transaction">
     <arg>
      /nex
     </arg>
     <doc>
      Runs a Sap transaction. An error is given when an unknown transaction is specified.
     </doc>
     <status endtime="20240502 20:14:49.320" starttime="20240502 20:14:49.002" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      5
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240502 20:14:54.321">
      Slept 5 seconds
     </msg>
     <status endtime="20240502 20:14:54.321" starttime="20240502 20:14:49.320" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Take Screenshot">
     <arg>
      logoutpage.jpg
     </arg>
     <doc>
      Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
     </doc>
     <msg level="WARN" timestamp="20240502 20:14:54.321">
      Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
     </msg>
     <msg html="true" level="INFO" timestamp="20240502 20:14:54.321">
      &lt;a href="pabot_results%5C11%5Clogoutpage.jpg"&gt;&lt;img src="pabot_results%5C11%5Clogoutpage.jpg" width="800px"&gt;&lt;/a&gt;
     </msg>
     <status endtime="20240502 20:14:54.321" starttime="20240502 20:14:54.321" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      10
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240502 20:15:04.327">
      Slept 10 seconds
     </msg>
     <status endtime="20240502 20:15:04.327" starttime="20240502 20:14:54.326" status="PASS"/>
    </kw>
    <status endtime="20240502 20:15:04.327" starttime="20240502 20:14:49.002" status="PASS"/>
   </kw>
   <status endtime="20240502 20:15:04.327" starttime="20240502 20:14:33.336" status="PASS"/>
  </suite>
  <suite id="s1-s6" name="Test SLDAPICUST" source="C:\SAP_Testing\SAPtesting\Tests\Test_SLDAPICUST.robot">
   <kw library="SLDAPICUST" name="System Logon" type="SETUP">
    <kw library="Process" name="Start Process">
     <arg>
      ${symvar('SAP_SERVER')}
     </arg>
     <doc>
      Starts a new process on background.
     </doc>
     <msg level="INFO" timestamp="20240502 20:15:09.263">
      Sym.Dev.SAP_SERVER: C:\Program Files\SAP\FrontEnd\SAPGUI\saplogon.exe
     </msg>
     <msg level="INFO" timestamp="20240502 20:15:09.263">
      Starting process:
"C:\Program Files\SAP\FrontEnd\SAPGUI\saplogon.exe"
     </msg>
     <status endtime="20240502 20:15:09.263" starttime="20240502 20:15:09.263" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      10s
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240502 20:15:19.263">
      Slept 10 seconds
     </msg>
     <status endtime="20240502 20:15:19.263" starttime="20240502 20:15:09.263" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Connect To Session">
     <doc>
      Connects to an open session SAP.
     </doc>
     <status endtime="20240502 20:15:19.270" starttime="20240502 20:15:19.263" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Open Connection">
     <arg>
      ${symvar('SAP_connection')}
     </arg>
     <doc>
      Opens a connection to the given connection name. Be sure to provide the full connection name, including the bracket part.
     </doc>
     <msg level="INFO" timestamp="20240502 20:15:19.270">
      Sym.Dev.SAP_connection: BIS
     </msg>
     <status endtime="20240502 20:15:20.381" starttime="20240502 20:15:19.270" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Input Text">
     <arg>
      wnd[0]/usr/txtRSYST-MANDT
     </arg>
     <arg>
      ${symvar('Client_Id')}
     </arg>
     <doc>
      Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.
     </doc>
     <msg level="INFO" timestamp="20240502 20:15:20.383">
      Sym.Dev.Client_Id: 001
     </msg>
     <msg level="INFO" timestamp="20240502 20:15:20.392">
      Typing text '001' into text field 'wnd[0]/usr/txtRSYST-MANDT'.
     </msg>
     <status endtime="20240502 20:15:20.393" starttime="20240502 20:15:20.382" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Input Text">
     <arg>
      wnd[0]/usr/txtRSYST-BNAME
     </arg>
     <arg>
      ${symvar('User_Name')}
     </arg>
     <doc>
      Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.
     </doc>
     <msg level="INFO" timestamp="20240502 20:15:20.394">
      Sym.Dev.User_Name: SELENIUM
     </msg>
     <msg level="INFO" timestamp="20240502 20:15:20.412">
      Typing text 'SELENIUM' into text field 'wnd[0]/usr/txtRSYST-BNAME'.
     </msg>
     <status endtime="20240502 20:15:20.412" starttime="20240502 20:15:20.393" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Input Password">
     <arg>
      wnd[0]/usr/pwdRSYST-BCODE
     </arg>
     <arg>
      %{SAP_PASSWORD}
     </arg>
     <doc>
      Inserts the given password into the text field identified by locator.
The password is not recorded in the log.
     </doc>
     <msg level="INFO" timestamp="20240502 20:15:20.419">
      Typing password into text field 'wnd[0]/usr/pwdRSYST-BCODE'.
     </msg>
     <status endtime="20240502 20:15:20.420" starttime="20240502 20:15:20.412" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Send Vkey">
     <arg>
      0
     </arg>
     <doc>
      Sends a SAP virtual key combination to the window, not into an element.
If you want to send a value to a text field, use `input text` instead.
     </doc>
     <status endtime="20240502 20:15:20.822" starttime="20240502 20:15:20.420" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Take Screenshot">
     <arg>
      00a_loginpage.jpg
     </arg>
     <doc>
      Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
     </doc>
     <msg html="true" level="INFO" timestamp="20240502 20:15:20.922">
      &lt;a href="pabot_results%5C0%5C00a_loginpage.jpg"&gt;&lt;img src="pabot_results%5C0%5C00a_loginpage.jpg" width="800px"&gt;&lt;/a&gt;
     </msg>
     <status endtime="20240502 20:15:20.922" starttime="20240502 20:15:20.822" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Multiple Logon Handling">
     <arg>
      wnd[1]
     </arg>
     <arg>
      wnd[1]/usr/radMULTI_LOGON_OPT2
     </arg>
     <arg>
      wnd[1]/tbar[0]/btn[0]
     </arg>
     <msg level="INFO" timestamp="20240502 20:15:21.635">
      Multiple logon exists
     </msg>
     <status endtime="20240502 20:15:21.635" starttime="20240502 20:15:20.922" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      1
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240502 20:15:22.636">
      Slept 1 second
     </msg>
     <status endtime="20240502 20:15:22.636" starttime="20240502 20:15:21.636" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Take Screenshot">
     <arg>
      00_multi_logon_handling.jpg
     </arg>
     <doc>
      Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
     </doc>
     <msg html="true" level="INFO" timestamp="20240502 20:15:22.698">
      &lt;a href="pabot_results%5C0%5C00_multi_logon_handling.jpg"&gt;&lt;img src="pabot_results%5C0%5C00_multi_logon_handling.jpg" width="800px"&gt;&lt;/a&gt;
     </msg>
     <status endtime="20240502 20:15:22.698" starttime="20240502 20:15:22.636" status="PASS"/>
    </kw>
    <status endtime="20240502 20:15:22.698" starttime="20240502 20:15:09.263" status="PASS"/>
   </kw>
   <test id="s1-s6-t1" line="9" name="Executing SLDAPICUST">
    <kw library="SLDAPICUST" name="Transaction SLDAPICUST">
     <kw library="SAP_Tcode_Library" name="Run Transaction">
      <arg>
       /nSldapicust
      </arg>
      <doc>
       Runs a Sap transaction. An error is given when an unknown transaction is specified.
      </doc>
      <status endtime="20240502 20:15:24.062" starttime="20240502 20:15:22.698" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:15:25.063">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:15:25.063" starttime="20240502 20:15:24.062" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       070_Sldapicust.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240502 20:15:25.110">
       &lt;a href="pabot_results%5C5%5C070_Sldapicust.jpg"&gt;&lt;img src="pabot_results%5C5%5C070_Sldapicust.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:15:25.110" starttime="20240502 20:15:25.063" status="PASS"/>
     </kw>
     <status endtime="20240502 20:15:25.110" starttime="20240502 20:15:22.698" status="PASS"/>
    </kw>
    <kw library="SLDAPICUST" name="Sldapicust display">
     <kw library="SAP_Tcode_Library" name="Get Cell Value From Gridtable">
      <var>
       ${destination}
      </var>
      <arg>
       wnd[0]/usr/cntlCONTAINER/shellcont/shell
      </arg>
      <msg level="INFO" timestamp="20240502 20:15:25.124">
       1 4
0
SLD_BCSCLNTPO
      </msg>
      <msg level="INFO" timestamp="20240502 20:15:25.124">
       ${destination} = SLD_BCSCLNTPO
      </msg>
      <status endtime="20240502 20:15:25.124" starttime="20240502 20:15:25.110" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Log">
      <arg>
       ${destination}
      </arg>
      <doc>
       Logs the given message with the given level.
      </doc>
      <msg level="INFO" timestamp="20240502 20:15:25.124">
       SLD_BCSCLNTPO
      </msg>
      <status endtime="20240502 20:15:25.124" starttime="20240502 20:15:25.124" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Run Transaction">
      <arg>
       /nsm59
      </arg>
      <doc>
       Runs a Sap transaction. An error is given when an unknown transaction is specified.
      </doc>
      <status endtime="20240502 20:15:25.921" starttime="20240502 20:15:25.124" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/mbar/menu[1]/menu[5]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:15:26.478" starttime="20240502 20:15:25.921" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Input Text">
      <arg>
       wnd[1]/usr/tabsG_SELONETABSTRIP/tabpTAB001/ssubSUBSCR_PRESEL:SAPLSDH4:0220/sub:SAPLSDH4:0220/txtG_SELFLD_TAB-LOW[0,24]
      </arg>
      <arg>
       SLD_BCSCLNTPO
      </arg>
      <doc>
       Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.
      </doc>
      <msg level="INFO" timestamp="20240502 20:15:26.516">
       Typing text 'SLD_BCSCLNTPO' into text field 'wnd[1]/usr/tabsG_SELONETABSTRIP/tabpTAB001/ssubSUBSCR_PRESEL:SAPLSDH4:0220/sub:SAPLSDH4:0220/txtG_SELFLD_TAB-LOW[0,24]'.
      </msg>
      <status endtime="20240502 20:15:26.516" starttime="20240502 20:15:26.478" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       5
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:15:31.517">
       Slept 5 seconds
      </msg>
      <status endtime="20240502 20:15:31.517" starttime="20240502 20:15:26.516" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[1]/tbar[0]/btn[0]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:15:31.817" starttime="20240502 20:15:31.517" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       5s
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:15:36.817">
       Slept 5 seconds
      </msg>
      <status endtime="20240502 20:15:36.817" starttime="20240502 20:15:31.817" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[1]/tbar[0]/btn[0]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:15:37.180" starttime="20240502 20:15:36.817" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       5s
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:15:42.180">
       Slept 5 seconds
      </msg>
      <status endtime="20240502 20:15:42.180" starttime="20240502 20:15:37.180" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       071_display.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:15:42.180">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:15:42.180">
       &lt;a href="071_display.jpg"&gt;&lt;img src="071_display.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:15:42.180" starttime="20240502 20:15:42.180" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       5s
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:15:47.180">
       Slept 5 seconds
      </msg>
      <status endtime="20240502 20:15:47.180" starttime="20240502 20:15:42.180" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/usr/tabsTAB_SM59/tabpSIGN
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:15:47.421" starttime="20240502 20:15:47.180" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       5s
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:15:52.421">
       Slept 5 seconds
      </msg>
      <status endtime="20240502 20:15:52.421" starttime="20240502 20:15:47.421" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       072_display.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:15:52.421">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:15:52.421">
       &lt;a href="pabot_results%5C1%5C072_display.jpg"&gt;&lt;img src="pabot_results%5C1%5C072_display.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:15:52.421" starttime="20240502 20:15:52.421" status="PASS"/>
     </kw>
     <status endtime="20240502 20:15:52.421" starttime="20240502 20:15:25.110" status="PASS"/>
    </kw>
    <tag>
     Migration
    </tag>
    <status endtime="20240502 20:15:52.421" starttime="20240502 20:15:22.698" status="PASS"/>
   </test>
   <kw library="SLDAPICUST" name="System Logout" type="TEARDOWN">
    <kw library="SAP_Tcode_Library" name="Run Transaction">
     <arg>
      /nex
     </arg>
     <doc>
      Runs a Sap transaction. An error is given when an unknown transaction is specified.
     </doc>
     <status endtime="20240502 20:15:52.659" starttime="20240502 20:15:52.421" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      5
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240502 20:15:57.666">
      Slept 5 seconds
     </msg>
     <status endtime="20240502 20:15:57.666" starttime="20240502 20:15:52.659" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Take Screenshot">
     <arg>
      logoutpage.jpg
     </arg>
     <doc>
      Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
     </doc>
     <msg level="WARN" timestamp="20240502 20:15:57.669">
      Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
     </msg>
     <msg html="true" level="INFO" timestamp="20240502 20:15:57.670">
      &lt;a href="pabot_results%5C11%5Clogoutpage.jpg"&gt;&lt;img src="pabot_results%5C11%5Clogoutpage.jpg" width="800px"&gt;&lt;/a&gt;
     </msg>
     <status endtime="20240502 20:15:57.670" starttime="20240502 20:15:57.666" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      10
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240502 20:16:07.670">
      Slept 10 seconds
     </msg>
     <status endtime="20240502 20:16:07.670" starttime="20240502 20:15:57.670" status="PASS"/>
    </kw>
    <status endtime="20240502 20:16:07.670" starttime="20240502 20:15:52.421" status="PASS"/>
   </kw>
   <status endtime="20240502 20:16:07.670" starttime="20240502 20:15:09.247" status="PASS"/>
  </suite>
  <suite id="s1-s7" name="Test SM69" source="C:\SAP_Testing\SAPtesting\Tests\Test_SM69.robot">
   <kw library="SM69" name="System Logon" type="SETUP">
    <kw library="Process" name="Start Process">
     <arg>
      ${symvar('SAP_SERVER')}
     </arg>
     <doc>
      Starts a new process on background.
     </doc>
     <msg level="INFO" timestamp="20240502 20:16:13.529">
      Sym.Dev.SAP_SERVER: C:\Program Files\SAP\FrontEnd\SAPGUI\saplogon.exe
     </msg>
     <msg level="INFO" timestamp="20240502 20:16:13.529">
      Starting process:
"C:\Program Files\SAP\FrontEnd\SAPGUI\saplogon.exe"
     </msg>
     <status endtime="20240502 20:16:13.529" starttime="20240502 20:16:13.529" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      10s
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240502 20:16:23.529">
      Slept 10 seconds
     </msg>
     <status endtime="20240502 20:16:23.529" starttime="20240502 20:16:13.529" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Connect To Session">
     <doc>
      Connects to an open session SAP.
     </doc>
     <status endtime="20240502 20:16:23.539" starttime="20240502 20:16:23.529" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Open Connection">
     <arg>
      ${symvar('SAP_connection')}
     </arg>
     <doc>
      Opens a connection to the given connection name. Be sure to provide the full connection name, including the bracket part.
     </doc>
     <msg level="INFO" timestamp="20240502 20:16:23.539">
      Sym.Dev.SAP_connection: BIS
     </msg>
     <status endtime="20240502 20:16:24.768" starttime="20240502 20:16:23.539" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Input Text">
     <arg>
      wnd[0]/usr/txtRSYST-MANDT
     </arg>
     <arg>
      ${symvar('Client_Id')}
     </arg>
     <doc>
      Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.
     </doc>
     <msg level="INFO" timestamp="20240502 20:16:24.768">
      Sym.Dev.Client_Id: 001
     </msg>
     <msg level="INFO" timestamp="20240502 20:16:24.780">
      Typing text '001' into text field 'wnd[0]/usr/txtRSYST-MANDT'.
     </msg>
     <status endtime="20240502 20:16:24.780" starttime="20240502 20:16:24.768" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Input Text">
     <arg>
      wnd[0]/usr/txtRSYST-BNAME
     </arg>
     <arg>
      ${symvar('User_Name')}
     </arg>
     <doc>
      Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.
     </doc>
     <msg level="INFO" timestamp="20240502 20:16:24.780">
      Sym.Dev.User_Name: SELENIUM
     </msg>
     <msg level="INFO" timestamp="20240502 20:16:24.800">
      Typing text 'SELENIUM' into text field 'wnd[0]/usr/txtRSYST-BNAME'.
     </msg>
     <status endtime="20240502 20:16:24.800" starttime="20240502 20:16:24.780" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Input Password">
     <arg>
      wnd[0]/usr/pwdRSYST-BCODE
     </arg>
     <arg>
      %{SAP_PASSWORD}
     </arg>
     <doc>
      Inserts the given password into the text field identified by locator.
The password is not recorded in the log.
     </doc>
     <msg level="INFO" timestamp="20240502 20:16:24.800">
      Typing password into text field 'wnd[0]/usr/pwdRSYST-BCODE'.
     </msg>
     <status endtime="20240502 20:16:24.800" starttime="20240502 20:16:24.800" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Send Vkey">
     <arg>
      0
     </arg>
     <doc>
      Sends a SAP virtual key combination to the window, not into an element.
If you want to send a value to a text field, use `input text` instead.
     </doc>
     <status endtime="20240502 20:16:25.631" starttime="20240502 20:16:24.800" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Take Screenshot">
     <arg>
      00a_loginpage.jpg
     </arg>
     <doc>
      Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
     </doc>
     <msg level="WARN" timestamp="20240502 20:16:25.639">
      Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
     </msg>
     <msg html="true" level="INFO" timestamp="20240502 20:16:25.639">
      &lt;a href="pabot_results%5C0%5C00a_loginpage.jpg"&gt;&lt;img src="pabot_results%5C0%5C00a_loginpage.jpg" width="800px"&gt;&lt;/a&gt;
     </msg>
     <status endtime="20240502 20:16:25.639" starttime="20240502 20:16:25.631" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Multiple Logon Handling">
     <arg>
      wnd[1]
     </arg>
     <arg>
      wnd[1]/usr/radMULTI_LOGON_OPT2
     </arg>
     <arg>
      wnd[1]/tbar[0]/btn[0]
     </arg>
     <status endtime="20240502 20:16:25.639" starttime="20240502 20:16:25.639" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      1
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240502 20:16:26.640">
      Slept 1 second
     </msg>
     <status endtime="20240502 20:16:26.640" starttime="20240502 20:16:25.639" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Take Screenshot">
     <arg>
      00_multi_logon_handling.jpg
     </arg>
     <doc>
      Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
     </doc>
     <msg level="WARN" timestamp="20240502 20:16:26.640">
      Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
     </msg>
     <msg html="true" level="INFO" timestamp="20240502 20:16:26.640">
      &lt;a href="pabot_results%5C0%5C00_multi_logon_handling.jpg"&gt;&lt;img src="pabot_results%5C0%5C00_multi_logon_handling.jpg" width="800px"&gt;&lt;/a&gt;
     </msg>
     <status endtime="20240502 20:16:26.640" starttime="20240502 20:16:26.640" status="PASS"/>
    </kw>
    <status endtime="20240502 20:16:26.640" starttime="20240502 20:16:13.529" status="PASS"/>
   </kw>
   <test id="s1-s7-t1" line="10" name="Executing SM69">
    <kw library="SM69" name="Transaction SM69">
     <kw library="SAP_Tcode_Library" name="Run Transaction">
      <arg>
       /nsm69
      </arg>
      <doc>
       Runs a Sap transaction. An error is given when an unknown transaction is specified.
      </doc>
      <status endtime="20240502 20:16:28.032" starttime="20240502 20:16:26.646" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Send Vkey">
      <arg>
       0
      </arg>
      <doc>
       Sends a SAP virtual key combination to the window, not into an element.
If you want to send a value to a text field, use `input text` instead.
      </doc>
      <status endtime="20240502 20:16:28.623" starttime="20240502 20:16:28.032" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:16:29.623">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:16:29.623" starttime="20240502 20:16:28.623" status="PASS"/>
     </kw>
     <status endtime="20240502 20:16:29.623" starttime="20240502 20:16:26.646" status="PASS"/>
    </kw>
    <kw library="SM69" name="External Operating System Commands">
     <kw library="SAP_Tcode_Library" name="Selected Rows">
      <arg>
       wnd[0]/usr/cntlEXT_COM/shellcont/shell
      </arg>
      <arg>
       23
      </arg>
      <status endtime="20240502 20:16:30.346" starttime="20240502 20:16:29.623" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:16:31.347">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:16:31.347" starttime="20240502 20:16:30.346" status="PASS"/>
     </kw>
     <status endtime="20240502 20:16:31.347" starttime="20240502 20:16:29.623" status="PASS"/>
    </kw>
    <kw library="SM69" name="SM69 Scroll">
     <kw library="SAP_Tcode_Library" name="Selected Rows">
      <arg>
       wnd[0]/usr/cntlEXT_COM/shellcont/shell
      </arg>
      <arg>
       46
      </arg>
      <status endtime="20240502 20:16:31.856" starttime="20240502 20:16:31.347" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:16:32.857">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:16:32.857" starttime="20240502 20:16:31.856" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Selected Rows">
      <arg>
       wnd[0]/usr/cntlEXT_COM/shellcont/shell
      </arg>
      <arg>
       69
      </arg>
      <status endtime="20240502 20:16:32.878" starttime="20240502 20:16:32.857" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:16:33.878">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:16:33.878" starttime="20240502 20:16:32.878" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Selected Rows">
      <arg>
       wnd[0]/usr/cntlEXT_COM/shellcont/shell
      </arg>
      <arg>
       92
      </arg>
      <status endtime="20240502 20:16:33.903" starttime="20240502 20:16:33.878" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:16:34.904">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:16:34.904" starttime="20240502 20:16:33.903" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Selected Rows">
      <arg>
       wnd[0]/usr/cntlEXT_COM/shellcont/shell
      </arg>
      <arg>
       103
      </arg>
      <status endtime="20240502 20:16:34.922" starttime="20240502 20:16:34.904" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:16:35.927">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:16:35.927" starttime="20240502 20:16:34.922" status="PASS"/>
     </kw>
     <status endtime="20240502 20:16:35.927" starttime="20240502 20:16:31.347" status="PASS"/>
    </kw>
    <tag>
     Migration
    </tag>
    <status endtime="20240502 20:16:35.927" starttime="20240502 20:16:26.640" status="PASS"/>
   </test>
   <kw library="SM69" name="System Logout" type="TEARDOWN">
    <kw library="SAP_Tcode_Library" name="Run Transaction">
     <arg>
      /nex
     </arg>
     <doc>
      Runs a Sap transaction. An error is given when an unknown transaction is specified.
     </doc>
     <status endtime="20240502 20:16:36.171" starttime="20240502 20:16:35.927" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      5
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240502 20:16:41.172">
      Slept 5 seconds
     </msg>
     <status endtime="20240502 20:16:41.172" starttime="20240502 20:16:36.171" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Take Screenshot">
     <arg>
      logoutpage.jpg
     </arg>
     <doc>
      Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
     </doc>
     <msg level="WARN" timestamp="20240502 20:16:41.176">
      Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
     </msg>
     <msg html="true" level="INFO" timestamp="20240502 20:16:41.176">
      &lt;a href="pabot_results%5C11%5Clogoutpage.jpg"&gt;&lt;img src="pabot_results%5C11%5Clogoutpage.jpg" width="800px"&gt;&lt;/a&gt;
     </msg>
     <status endtime="20240502 20:16:41.176" starttime="20240502 20:16:41.172" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      10
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240502 20:16:51.293">
      Slept 10 seconds
     </msg>
     <status endtime="20240502 20:16:51.293" starttime="20240502 20:16:41.176" status="PASS"/>
    </kw>
    <status endtime="20240502 20:16:51.293" starttime="20240502 20:16:35.927" status="PASS"/>
   </kw>
   <status endtime="20240502 20:16:51.293" starttime="20240502 20:16:13.513" status="PASS"/>
  </suite>
  <suite id="s1-s8" name="Test SMLG" source="C:\SAP_Testing\SAPtesting\Tests\Test_SMLG.robot">
   <kw library="SMLG" name="System Logon" type="SETUP">
    <kw library="Process" name="Start Process">
     <arg>
      ${symvar('SAP_SERVER')}
     </arg>
     <doc>
      Starts a new process on background.
     </doc>
     <msg level="INFO" timestamp="20240502 20:16:40.689">
      Sym.Dev.SAP_SERVER: C:\Program Files\SAP\FrontEnd\SAPGUI\saplogon.exe
     </msg>
     <msg level="INFO" timestamp="20240502 20:16:40.689">
      Starting process:
"C:\Program Files\SAP\FrontEnd\SAPGUI\saplogon.exe"
     </msg>
     <status endtime="20240502 20:16:40.693" starttime="20240502 20:16:40.688" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      10s
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240502 20:16:50.693">
      Slept 10 seconds
     </msg>
     <status endtime="20240502 20:16:50.693" starttime="20240502 20:16:40.693" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Connect To Session">
     <doc>
      Connects to an open session SAP.
     </doc>
     <status endtime="20240502 20:16:50.701" starttime="20240502 20:16:50.693" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Open Connection">
     <arg>
      ${symvar('SAP_connection')}
     </arg>
     <doc>
      Opens a connection to the given connection name. Be sure to provide the full connection name, including the bracket part.
     </doc>
     <msg level="INFO" timestamp="20240502 20:16:50.701">
      Sym.Dev.SAP_connection: BIS
     </msg>
     <status endtime="20240502 20:16:51.847" starttime="20240502 20:16:50.701" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Input Text">
     <arg>
      wnd[0]/usr/txtRSYST-MANDT
     </arg>
     <arg>
      ${symvar('Client_Id')}
     </arg>
     <doc>
      Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.
     </doc>
     <msg level="INFO" timestamp="20240502 20:16:51.847">
      Sym.Dev.Client_Id: 001
     </msg>
     <msg level="INFO" timestamp="20240502 20:16:51.876">
      Typing text '001' into text field 'wnd[0]/usr/txtRSYST-MANDT'.
     </msg>
     <status endtime="20240502 20:16:51.877" starttime="20240502 20:16:51.847" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Input Text">
     <arg>
      wnd[0]/usr/txtRSYST-BNAME
     </arg>
     <arg>
      ${symvar('User_Name')}
     </arg>
     <doc>
      Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.
     </doc>
     <msg level="INFO" timestamp="20240502 20:16:51.877">
      Sym.Dev.User_Name: SELENIUM
     </msg>
     <msg level="INFO" timestamp="20240502 20:16:51.970">
      Typing text 'SELENIUM' into text field 'wnd[0]/usr/txtRSYST-BNAME'.
     </msg>
     <status endtime="20240502 20:16:51.970" starttime="20240502 20:16:51.877" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Input Password">
     <arg>
      wnd[0]/usr/pwdRSYST-BCODE
     </arg>
     <arg>
      %{SAP_PASSWORD}
     </arg>
     <doc>
      Inserts the given password into the text field identified by locator.
The password is not recorded in the log.
     </doc>
     <msg level="INFO" timestamp="20240502 20:16:51.986">
      Typing password into text field 'wnd[0]/usr/pwdRSYST-BCODE'.
     </msg>
     <status endtime="20240502 20:16:51.986" starttime="20240502 20:16:51.970" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Send Vkey">
     <arg>
      0
     </arg>
     <doc>
      Sends a SAP virtual key combination to the window, not into an element.
If you want to send a value to a text field, use `input text` instead.
     </doc>
     <status endtime="20240502 20:16:52.885" starttime="20240502 20:16:51.986" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Take Screenshot">
     <arg>
      00a_loginpage.jpg
     </arg>
     <doc>
      Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
     </doc>
     <msg level="WARN" timestamp="20240502 20:16:52.885">
      Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
     </msg>
     <msg html="true" level="INFO" timestamp="20240502 20:16:52.885">
      &lt;a href="pabot_results%5C0%5C00a_loginpage.jpg"&gt;&lt;img src="pabot_results%5C0%5C00a_loginpage.jpg" width="800px"&gt;&lt;/a&gt;
     </msg>
     <status endtime="20240502 20:16:52.885" starttime="20240502 20:16:52.885" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Multiple Logon Handling">
     <arg>
      wnd[1]
     </arg>
     <arg>
      wnd[1]/usr/radMULTI_LOGON_OPT2
     </arg>
     <arg>
      wnd[1]/tbar[0]/btn[0]
     </arg>
     <status endtime="20240502 20:16:52.901" starttime="20240502 20:16:52.885" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      1
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240502 20:16:53.966">
      Slept 1 second
     </msg>
     <status endtime="20240502 20:16:53.966" starttime="20240502 20:16:52.901" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Take Screenshot">
     <arg>
      00_multi_logon_handling.jpg
     </arg>
     <doc>
      Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
     </doc>
     <msg level="WARN" timestamp="20240502 20:16:53.971">
      Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
     </msg>
     <msg html="true" level="INFO" timestamp="20240502 20:16:53.972">
      &lt;a href="pabot_results%5C0%5C00_multi_logon_handling.jpg"&gt;&lt;img src="pabot_results%5C0%5C00_multi_logon_handling.jpg" width="800px"&gt;&lt;/a&gt;
     </msg>
     <status endtime="20240502 20:16:53.972" starttime="20240502 20:16:53.966" status="PASS"/>
    </kw>
    <status endtime="20240502 20:16:53.972" starttime="20240502 20:16:40.688" status="PASS"/>
   </kw>
   <test id="s1-s8-t1" line="9" name="Executing SMLG">
    <kw library="SMLG" name="Transaction SMLG">
     <kw library="SAP_Tcode_Library" name="Run Transaction">
      <arg>
       /nSMLG
      </arg>
      <doc>
       Runs a Sap transaction. An error is given when an unknown transaction is specified.
      </doc>
      <status endtime="20240502 20:16:54.786" starttime="20240502 20:16:53.973" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:16:55.787">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:16:55.787" starttime="20240502 20:16:54.786" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       041_smlg.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:16:55.787">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:16:55.787">
       &lt;a href="pabot_results%5C1%5C041_smlg.jpg"&gt;&lt;img src="pabot_results%5C1%5C041_smlg.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:16:55.787" starttime="20240502 20:16:55.787" status="PASS"/>
     </kw>
     <status endtime="20240502 20:16:55.787" starttime="20240502 20:16:53.973" status="PASS"/>
    </kw>
    <kw library="SMLG" name="SMLG Attributes">
     <kw library="SAP_Tcode_Library" name="Select Item From Guilabel">
      <arg>
       wnd[0]/usr
      </arg>
      <arg>
       BCSIDESSYS_BIS_00
      </arg>
      <msg level="INFO" timestamp="20240502 20:16:56.269">
       Element found: BCSIDESSYS_BIS_00
      </msg>
      <status endtime="20240502 20:16:56.269" starttime="20240502 20:16:55.787" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:16:57.270">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:16:57.270" starttime="20240502 20:16:56.269" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       042_smlg.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:16:57.270">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:16:57.270">
       &lt;a href="pabot_results%5C1%5C042_smlg.jpg"&gt;&lt;img src="pabot_results%5C1%5C042_smlg.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:16:57.270" starttime="20240502 20:16:57.270" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/tbar[1]/btn[14]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:16:57.587" starttime="20240502 20:16:57.270" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:16:58.587">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:16:58.587" starttime="20240502 20:16:57.587" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       043_smlg.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:16:58.590">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:16:58.590">
       &lt;a href="pabot_results%5C1%5C043_smlg.jpg"&gt;&lt;img src="pabot_results%5C1%5C043_smlg.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:16:58.590" starttime="20240502 20:16:58.587" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[1]/usr/tabsSEL_TAB/tabpPROP
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:16:58.935" starttime="20240502 20:16:58.590" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:16:59.937">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:16:59.937" starttime="20240502 20:16:58.935" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       044_smlg.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:16:59.937">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:16:59.943">
       &lt;a href="pabot_results%5C1%5C044_smlg.jpg"&gt;&lt;img src="pabot_results%5C1%5C044_smlg.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:16:59.943" starttime="20240502 20:16:59.937" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[1]/tbar[0]/btn[12]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:17:00.244" starttime="20240502 20:16:59.943" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:17:01.244">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:17:01.244" starttime="20240502 20:17:00.244" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       045_smlg.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:17:01.248">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:17:01.249">
       &lt;a href="pabot_results%5C1%5C045_smlg.jpg"&gt;&lt;img src="pabot_results%5C1%5C045_smlg.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:17:01.249" starttime="20240502 20:17:01.244" status="PASS"/>
     </kw>
     <status endtime="20240502 20:17:01.249" starttime="20240502 20:16:55.787" status="PASS"/>
    </kw>
    <kw library="SMLG" name="SMLG Load Distributions">
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/tbar[1]/btn[5]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:17:01.559" starttime="20240502 20:17:01.250" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:17:02.560">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:17:02.560" starttime="20240502 20:17:01.559" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       046_smlg.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:17:02.561">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:17:02.561">
       &lt;a href="046_smlg.jpg"&gt;&lt;img src="046_smlg.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:17:02.561" starttime="20240502 20:17:02.561" status="PASS"/>
     </kw>
     <status endtime="20240502 20:17:02.561" starttime="20240502 20:17:01.249" status="PASS"/>
    </kw>
    <tag>
     Migration
    </tag>
    <status endtime="20240502 20:17:02.561" starttime="20240502 20:16:53.972" status="PASS"/>
   </test>
   <kw library="SMLG" name="System Logout" type="TEARDOWN">
    <kw library="SAP_Tcode_Library" name="Run Transaction">
     <arg>
      /nex
     </arg>
     <doc>
      Runs a Sap transaction. An error is given when an unknown transaction is specified.
     </doc>
     <status endtime="20240502 20:17:02.852" starttime="20240502 20:17:02.561" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      5
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240502 20:17:07.852">
      Slept 5 seconds
     </msg>
     <status endtime="20240502 20:17:07.852" starttime="20240502 20:17:02.852" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Take Screenshot">
     <arg>
      logoutpage.jpg
     </arg>
     <doc>
      Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
     </doc>
     <msg level="WARN" timestamp="20240502 20:17:07.852">
      Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
     </msg>
     <msg html="true" level="INFO" timestamp="20240502 20:17:07.852">
      &lt;a href="pabot_results%5C11%5Clogoutpage.jpg"&gt;&lt;img src="pabot_results%5C11%5Clogoutpage.jpg" width="800px"&gt;&lt;/a&gt;
     </msg>
     <status endtime="20240502 20:17:07.852" starttime="20240502 20:17:07.852" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      10
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240502 20:17:17.852">
      Slept 10 seconds
     </msg>
     <status endtime="20240502 20:17:17.852" starttime="20240502 20:17:07.852" status="PASS"/>
    </kw>
    <status endtime="20240502 20:17:17.852" starttime="20240502 20:17:02.561" status="PASS"/>
   </kw>
   <status endtime="20240502 20:17:17.852" starttime="20240502 20:16:40.667" status="PASS"/>
  </suite>
  <suite id="s1-s9" name="Test SMQR" source="C:\SAP_Testing\SAPtesting\Tests\Test_SMQR.robot">
   <kw library="SMQR" name="System Logon" type="SETUP">
    <kw library="Process" name="Start Process">
     <arg>
      ${symvar('SAP_SERVER')}
     </arg>
     <doc>
      Starts a new process on background.
     </doc>
     <msg level="INFO" timestamp="20240502 20:16:57.693">
      Sym.Dev.SAP_SERVER: C:\Program Files\SAP\FrontEnd\SAPGUI\saplogon.exe
     </msg>
     <msg level="INFO" timestamp="20240502 20:16:57.693">
      Starting process:
"C:\Program Files\SAP\FrontEnd\SAPGUI\saplogon.exe"
     </msg>
     <status endtime="20240502 20:16:57.693" starttime="20240502 20:16:57.693" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      10s
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240502 20:17:07.693">
      Slept 10 seconds
     </msg>
     <status endtime="20240502 20:17:07.693" starttime="20240502 20:16:57.693" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Connect To Session">
     <doc>
      Connects to an open session SAP.
     </doc>
     <status endtime="20240502 20:17:07.703" starttime="20240502 20:17:07.693" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Open Connection">
     <arg>
      ${symvar('SAP_connection')}
     </arg>
     <doc>
      Opens a connection to the given connection name. Be sure to provide the full connection name, including the bracket part.
     </doc>
     <msg level="INFO" timestamp="20240502 20:17:07.703">
      Sym.Dev.SAP_connection: BIS
     </msg>
     <status endtime="20240502 20:17:08.933" starttime="20240502 20:17:07.703" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Input Text">
     <arg>
      wnd[0]/usr/txtRSYST-MANDT
     </arg>
     <arg>
      ${symvar('Client_Id')}
     </arg>
     <doc>
      Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.
     </doc>
     <msg level="INFO" timestamp="20240502 20:17:08.933">
      Sym.Dev.Client_Id: 001
     </msg>
     <msg level="INFO" timestamp="20240502 20:17:08.943">
      Typing text '001' into text field 'wnd[0]/usr/txtRSYST-MANDT'.
     </msg>
     <status endtime="20240502 20:17:08.943" starttime="20240502 20:17:08.933" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Input Text">
     <arg>
      wnd[0]/usr/txtRSYST-BNAME
     </arg>
     <arg>
      ${symvar('User_Name')}
     </arg>
     <doc>
      Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.
     </doc>
     <msg level="INFO" timestamp="20240502 20:17:08.943">
      Sym.Dev.User_Name: SELENIUM
     </msg>
     <msg level="INFO" timestamp="20240502 20:17:08.954">
      Typing text 'SELENIUM' into text field 'wnd[0]/usr/txtRSYST-BNAME'.
     </msg>
     <status endtime="20240502 20:17:08.954" starttime="20240502 20:17:08.943" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Input Password">
     <arg>
      wnd[0]/usr/pwdRSYST-BCODE
     </arg>
     <arg>
      %{SAP_PASSWORD}
     </arg>
     <doc>
      Inserts the given password into the text field identified by locator.
The password is not recorded in the log.
     </doc>
     <msg level="INFO" timestamp="20240502 20:17:08.965">
      Typing password into text field 'wnd[0]/usr/pwdRSYST-BCODE'.
     </msg>
     <status endtime="20240502 20:17:08.965" starttime="20240502 20:17:08.964" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Send Vkey">
     <arg>
      0
     </arg>
     <doc>
      Sends a SAP virtual key combination to the window, not into an element.
If you want to send a value to a text field, use `input text` instead.
     </doc>
     <status endtime="20240502 20:17:09.808" starttime="20240502 20:17:08.965" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Take Screenshot">
     <arg>
      00a_loginpage.jpg
     </arg>
     <doc>
      Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
     </doc>
     <msg level="WARN" timestamp="20240502 20:17:09.824">
      Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
     </msg>
     <msg html="true" level="INFO" timestamp="20240502 20:17:09.824">
      &lt;a href="pabot_results%5C0%5C00a_loginpage.jpg"&gt;&lt;img src="pabot_results%5C0%5C00a_loginpage.jpg" width="800px"&gt;&lt;/a&gt;
     </msg>
     <status endtime="20240502 20:17:09.824" starttime="20240502 20:17:09.808" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Multiple Logon Handling">
     <arg>
      wnd[1]
     </arg>
     <arg>
      wnd[1]/usr/radMULTI_LOGON_OPT2
     </arg>
     <arg>
      wnd[1]/tbar[0]/btn[0]
     </arg>
     <status endtime="20240502 20:17:09.828" starttime="20240502 20:17:09.824" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      1
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240502 20:17:10.828">
      Slept 1 second
     </msg>
     <status endtime="20240502 20:17:10.828" starttime="20240502 20:17:09.828" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Take Screenshot">
     <arg>
      00_multi_logon_handling.jpg
     </arg>
     <doc>
      Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
     </doc>
     <msg level="WARN" timestamp="20240502 20:17:10.832">
      Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
     </msg>
     <msg html="true" level="INFO" timestamp="20240502 20:17:10.832">
      &lt;a href="pabot_results%5C0%5C00_multi_logon_handling.jpg"&gt;&lt;img src="pabot_results%5C0%5C00_multi_logon_handling.jpg" width="800px"&gt;&lt;/a&gt;
     </msg>
     <status endtime="20240502 20:17:10.832" starttime="20240502 20:17:10.830" status="PASS"/>
    </kw>
    <status endtime="20240502 20:17:10.832" starttime="20240502 20:16:57.693" status="PASS"/>
   </kw>
   <test id="s1-s9-t1" line="11" name="Executing SMQR">
    <kw library="SMQR" name="Transaction SMQR">
     <kw library="SAP_Tcode_Library" name="Run Transaction">
      <arg>
       /nsmqr
      </arg>
      <doc>
       Runs a Sap transaction. An error is given when an unknown transaction is specified.
      </doc>
      <status endtime="20240502 20:17:11.408" starttime="20240502 20:17:10.836" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Send Vkey">
      <arg>
       0
      </arg>
      <doc>
       Sends a SAP virtual key combination to the window, not into an element.
If you want to send a value to a text field, use `input text` instead.
      </doc>
      <status endtime="20240502 20:17:11.675" starttime="20240502 20:17:11.408" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       024_smqr.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:17:11.685">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:17:11.685">
       &lt;a href="024_smqr.jpg"&gt;&lt;img src="024_smqr.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:17:11.685" starttime="20240502 20:17:11.675" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:17:12.688">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:17:12.688" starttime="20240502 20:17:11.685" status="PASS"/>
     </kw>
     <status endtime="20240502 20:17:12.688" starttime="20240502 20:17:10.836" status="PASS"/>
    </kw>
    <tag>
     Migration
    </tag>
    <status endtime="20240502 20:17:12.688" starttime="20240502 20:17:10.832" status="PASS"/>
   </test>
   <kw library="SMQR" name="System Logout" type="TEARDOWN">
    <kw library="SAP_Tcode_Library" name="Run Transaction">
     <arg>
      /nex
     </arg>
     <doc>
      Runs a Sap transaction. An error is given when an unknown transaction is specified.
     </doc>
     <status endtime="20240502 20:17:12.992" starttime="20240502 20:17:12.690" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      5
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240502 20:17:17.993">
      Slept 5 seconds
     </msg>
     <status endtime="20240502 20:17:17.993" starttime="20240502 20:17:12.992" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Take Screenshot">
     <arg>
      logoutpage.jpg
     </arg>
     <doc>
      Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
     </doc>
     <msg level="WARN" timestamp="20240502 20:17:17.996">
      Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
     </msg>
     <msg html="true" level="INFO" timestamp="20240502 20:17:17.996">
      &lt;a href="pabot_results%5C11%5Clogoutpage.jpg"&gt;&lt;img src="pabot_results%5C11%5Clogoutpage.jpg" width="800px"&gt;&lt;/a&gt;
     </msg>
     <status endtime="20240502 20:17:17.996" starttime="20240502 20:17:17.993" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      10
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240502 20:17:27.996">
      Slept 10 seconds
     </msg>
     <status endtime="20240502 20:17:27.996" starttime="20240502 20:17:17.996" status="PASS"/>
    </kw>
    <status endtime="20240502 20:17:27.996" starttime="20240502 20:17:12.688" status="PASS"/>
   </kw>
   <status endtime="20240502 20:17:27.996" starttime="20240502 20:16:57.671" status="PASS"/>
  </suite>
  <suite id="s1-s10" name="Test SMQS" source="C:\SAP_Testing\SAPtesting\Tests\Test_SMQS.robot">
   <kw library="SMQS" name="System Logon" type="SETUP">
    <kw library="Process" name="Start Process">
     <arg>
      ${symvar('SAP_SERVER')}
     </arg>
     <doc>
      Starts a new process on background.
     </doc>
     <msg level="INFO" timestamp="20240502 20:17:23.757">
      Sym.Dev.SAP_SERVER: C:\Program Files\SAP\FrontEnd\SAPGUI\saplogon.exe
     </msg>
     <msg level="INFO" timestamp="20240502 20:17:23.757">
      Starting process:
"C:\Program Files\SAP\FrontEnd\SAPGUI\saplogon.exe"
     </msg>
     <status endtime="20240502 20:17:23.757" starttime="20240502 20:17:23.757" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      10s
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240502 20:17:33.758">
      Slept 10 seconds
     </msg>
     <status endtime="20240502 20:17:33.758" starttime="20240502 20:17:23.757" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Connect To Session">
     <doc>
      Connects to an open session SAP.
     </doc>
     <status endtime="20240502 20:17:33.758" starttime="20240502 20:17:33.758" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Open Connection">
     <arg>
      ${symvar('SAP_connection')}
     </arg>
     <doc>
      Opens a connection to the given connection name. Be sure to provide the full connection name, including the bracket part.
     </doc>
     <msg level="INFO" timestamp="20240502 20:17:33.758">
      Sym.Dev.SAP_connection: BIS
     </msg>
     <status endtime="20240502 20:17:35.040" starttime="20240502 20:17:33.758" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Input Text">
     <arg>
      wnd[0]/usr/txtRSYST-MANDT
     </arg>
     <arg>
      ${symvar('Client_Id')}
     </arg>
     <doc>
      Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.
     </doc>
     <msg level="INFO" timestamp="20240502 20:17:35.041">
      Sym.Dev.Client_Id: 001
     </msg>
     <msg level="INFO" timestamp="20240502 20:17:35.052">
      Typing text '001' into text field 'wnd[0]/usr/txtRSYST-MANDT'.
     </msg>
     <status endtime="20240502 20:17:35.052" starttime="20240502 20:17:35.040" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Input Text">
     <arg>
      wnd[0]/usr/txtRSYST-BNAME
     </arg>
     <arg>
      ${symvar('User_Name')}
     </arg>
     <doc>
      Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.
     </doc>
     <msg level="INFO" timestamp="20240502 20:17:35.054">
      Sym.Dev.User_Name: SELENIUM
     </msg>
     <msg level="INFO" timestamp="20240502 20:17:35.069">
      Typing text 'SELENIUM' into text field 'wnd[0]/usr/txtRSYST-BNAME'.
     </msg>
     <status endtime="20240502 20:17:35.071" starttime="20240502 20:17:35.053" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Input Password">
     <arg>
      wnd[0]/usr/pwdRSYST-BCODE
     </arg>
     <arg>
      %{SAP_PASSWORD}
     </arg>
     <doc>
      Inserts the given password into the text field identified by locator.
The password is not recorded in the log.
     </doc>
     <msg level="INFO" timestamp="20240502 20:17:35.085">
      Typing password into text field 'wnd[0]/usr/pwdRSYST-BCODE'.
     </msg>
     <status endtime="20240502 20:17:35.087" starttime="20240502 20:17:35.071" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Send Vkey">
     <arg>
      0
     </arg>
     <doc>
      Sends a SAP virtual key combination to the window, not into an element.
If you want to send a value to a text field, use `input text` instead.
     </doc>
     <status endtime="20240502 20:17:35.864" starttime="20240502 20:17:35.087" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Take Screenshot">
     <arg>
      00a_loginpage.jpg
     </arg>
     <doc>
      Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
     </doc>
     <msg level="WARN" timestamp="20240502 20:17:35.864">
      Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
     </msg>
     <msg html="true" level="INFO" timestamp="20240502 20:17:35.864">
      &lt;a href="pabot_results%5C0%5C00a_loginpage.jpg"&gt;&lt;img src="pabot_results%5C0%5C00a_loginpage.jpg" width="800px"&gt;&lt;/a&gt;
     </msg>
     <status endtime="20240502 20:17:35.864" starttime="20240502 20:17:35.864" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Multiple Logon Handling">
     <arg>
      wnd[1]
     </arg>
     <arg>
      wnd[1]/usr/radMULTI_LOGON_OPT2
     </arg>
     <arg>
      wnd[1]/tbar[0]/btn[0]
     </arg>
     <status endtime="20240502 20:17:35.875" starttime="20240502 20:17:35.874" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      1
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240502 20:17:36.875">
      Slept 1 second
     </msg>
     <status endtime="20240502 20:17:36.875" starttime="20240502 20:17:35.875" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Take Screenshot">
     <arg>
      00_multi_logon_handling.jpg
     </arg>
     <doc>
      Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
     </doc>
     <msg level="WARN" timestamp="20240502 20:17:36.875">
      Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
     </msg>
     <msg html="true" level="INFO" timestamp="20240502 20:17:36.875">
      &lt;a href="pabot_results%5C0%5C00_multi_logon_handling.jpg"&gt;&lt;img src="pabot_results%5C0%5C00_multi_logon_handling.jpg" width="800px"&gt;&lt;/a&gt;
     </msg>
     <status endtime="20240502 20:17:36.875" starttime="20240502 20:17:36.875" status="PASS"/>
    </kw>
    <status endtime="20240502 20:17:36.875" starttime="20240502 20:17:23.757" status="PASS"/>
   </kw>
   <test id="s1-s10-t1" line="9" name="Executing SMQS">
    <kw library="SMQS" name="Transaction SMQS">
     <kw library="SAP_Tcode_Library" name="Run Transaction">
      <arg>
       /nsmqs
      </arg>
      <doc>
       Runs a Sap transaction. An error is given when an unknown transaction is specified.
      </doc>
      <status endtime="20240502 20:17:37.367" starttime="20240502 20:17:36.875" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Send Vkey">
      <arg>
       0
      </arg>
      <doc>
       Sends a SAP virtual key combination to the window, not into an element.
If you want to send a value to a text field, use `input text` instead.
      </doc>
      <status endtime="20240502 20:17:37.603" starttime="20240502 20:17:37.367" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       007_smqs_QRFC Monitor.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:17:37.603">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:17:37.603">
       &lt;a href="007_smqs_QRFC%2520Monitor.jpg"&gt;&lt;img src="007_smqs_QRFC%2520Monitor.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:17:37.603" starttime="20240502 20:17:37.603" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:17:38.608">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:17:38.608" starttime="20240502 20:17:37.603" status="PASS"/>
     </kw>
     <status endtime="20240502 20:17:38.608" starttime="20240502 20:17:36.875" status="PASS"/>
    </kw>
    <kw library="SMQS" name="QRFC Administration">
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/mbar/menu[2]/menu[0]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:17:38.900" starttime="20240502 20:17:38.608" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       008_smqs_QRFC Administration1.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:17:38.900">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:17:38.900">
       &lt;a href="008_smqs_QRFC%2520Administration1.jpg"&gt;&lt;img src="008_smqs_QRFC%2520Administration1.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:17:38.900" starttime="20240502 20:17:38.900" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Send Vkey">
      <arg>
       82
      </arg>
      <doc>
       Sends a SAP virtual key combination to the window, not into an element.
If you want to send a value to a text field, use `input text` instead.
      </doc>
      <status endtime="20240502 20:17:39.165" starttime="20240502 20:17:38.900" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       009_smqs_QRFC Administration2.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:17:39.165">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:17:39.176">
       &lt;a href="009_smqs_QRFC%2520Administration2.jpg"&gt;&lt;img src="009_smqs_QRFC%2520Administration2.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:17:39.176" starttime="20240502 20:17:39.165" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Send Vkey">
      <arg>
       82
      </arg>
      <doc>
       Sends a SAP virtual key combination to the window, not into an element.
If you want to send a value to a text field, use `input text` instead.
      </doc>
      <status endtime="20240502 20:17:39.424" starttime="20240502 20:17:39.176" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       010_smqs_QRFC Administration3.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:17:39.424">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:17:39.424">
       &lt;a href="010_smqs_QRFC%2520Administration3.jpg"&gt;&lt;img src="010_smqs_QRFC%2520Administration3.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:17:39.424" starttime="20240502 20:17:39.424" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Send Vkey">
      <arg>
       82
      </arg>
      <doc>
       Sends a SAP virtual key combination to the window, not into an element.
If you want to send a value to a text field, use `input text` instead.
      </doc>
      <status endtime="20240502 20:17:39.682" starttime="20240502 20:17:39.424" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       011_smqs_QRFC Administration4.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:17:39.687">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:17:39.688">
       &lt;a href="011_smqs_QRFC%2520Administration4.jpg"&gt;&lt;img src="011_smqs_QRFC%2520Administration4.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:17:39.688" starttime="20240502 20:17:39.682" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/tbar[0]/btn[3]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:17:39.979" starttime="20240502 20:17:39.688" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:17:40.980">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:17:40.980" starttime="20240502 20:17:39.979" status="PASS"/>
     </kw>
     <status endtime="20240502 20:17:40.980" starttime="20240502 20:17:38.608" status="PASS"/>
    </kw>
    <kw library="SMQS" name="QRFC Administration INBOUND">
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/mbar/menu[2]/menu[0]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:17:41.276" starttime="20240502 20:17:40.980" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/mbar/menu[2]/menu[0]/menu[1]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:17:41.559" starttime="20240502 20:17:41.276" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:17:42.559">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:17:42.559" starttime="20240502 20:17:41.559" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       012_smqs_QRFC Administration INBOUND.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:17:42.562">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:17:42.562">
       &lt;a href="012_smqs_QRFC%2520Administration%2520INBOUND.jpg"&gt;&lt;img src="012_smqs_QRFC%2520Administration%2520INBOUND.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:17:42.562" starttime="20240502 20:17:42.559" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/tbar[0]/btn[3]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:17:42.849" starttime="20240502 20:17:42.562" status="PASS"/>
     </kw>
     <status endtime="20240502 20:17:42.849" starttime="20240502 20:17:40.980" status="PASS"/>
    </kw>
    <kw library="SMQS" name="QRFC Administration OUTBOUND">
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/mbar/menu[2]/menu[0]/menu[0]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:17:43.338" starttime="20240502 20:17:42.849" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:17:44.338">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:17:44.338" starttime="20240502 20:17:43.338" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       013_smqs_QRFC Administration OUTBOUND.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:17:44.338">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:17:44.338">
       &lt;a href="013_smqs_QRFC%2520Administration%2520OUTBOUND.jpg"&gt;&lt;img src="013_smqs_QRFC%2520Administration%2520OUTBOUND.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:17:44.338" starttime="20240502 20:17:44.338" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/tbar[0]/btn[3]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:17:44.632" starttime="20240502 20:17:44.338" status="PASS"/>
     </kw>
     <status endtime="20240502 20:17:44.632" starttime="20240502 20:17:42.849" status="PASS"/>
    </kw>
    <kw library="SMQS" name="QRFC Administration OUTBOUND SCHEDULER">
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/mbar/menu[2]/menu[0]/menu[2]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:17:45.050" starttime="20240502 20:17:44.632" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:17:46.051">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:17:46.051" starttime="20240502 20:17:45.050" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       014_smqs_QRFC Administration OUTBOUND SCHEDULER.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:17:46.051">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:17:46.051">
       &lt;a href="014_smqs_QRFC%2520Administration%2520OUTBOUND%2520SCHEDULER.jpg"&gt;&lt;img src="014_smqs_QRFC%2520Administration%2520OUTBOUND%2520SCHEDULER.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:17:46.051" starttime="20240502 20:17:46.051" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/tbar[0]/btn[3]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:17:46.385" starttime="20240502 20:17:46.051" status="PASS"/>
     </kw>
     <status endtime="20240502 20:17:46.385" starttime="20240502 20:17:44.632" status="PASS"/>
    </kw>
    <kw library="SMQS" name="QRFC Administration INBOUND SCHEDULER">
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/mbar/menu[2]/menu[0]/menu[3]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:17:46.699" starttime="20240502 20:17:46.385" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:17:47.700">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:17:47.700" starttime="20240502 20:17:46.699" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       015_smqs_QRFC Administration INBOUND SCHEDULER.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:17:47.700">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:17:47.700">
       &lt;a href="015_smqs_QRFC%2520Administration%2520INBOUND%2520SCHEDULER.jpg"&gt;&lt;img src="015_smqs_QRFC%2520Administration%2520INBOUND%2520SCHEDULER.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:17:47.700" starttime="20240502 20:17:47.700" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/tbar[0]/btn[3]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:17:48.039" starttime="20240502 20:17:47.700" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/tbar[0]/btn[3]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:17:48.554" starttime="20240502 20:17:48.055" status="PASS"/>
     </kw>
     <status endtime="20240502 20:17:48.554" starttime="20240502 20:17:46.385" status="PASS"/>
    </kw>
    <kw library="SMQS" name="Display Possible Resources">
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/mbar/menu[2]/menu[1]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:17:48.837" starttime="20240502 20:17:48.554" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:17:49.841">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:17:49.841" starttime="20240502 20:17:48.837" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       016_smqs_Display Possible Resources.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:17:49.841">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:17:49.841">
       &lt;a href="016_smqs_Display%2520Possible%2520Resources.jpg"&gt;&lt;img src="016_smqs_Display%2520Possible%2520Resources.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:17:49.841" starttime="20240502 20:17:49.841" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/tbar[0]/btn[3]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:17:50.160" starttime="20240502 20:17:49.841" status="PASS"/>
     </kw>
     <status endtime="20240502 20:17:50.160" starttime="20240502 20:17:48.554" status="PASS"/>
    </kw>
    <tag>
     Migration
    </tag>
    <status endtime="20240502 20:17:50.160" starttime="20240502 20:17:36.875" status="PASS"/>
   </test>
   <kw library="SMQS" name="System Logout" type="TEARDOWN">
    <kw library="SAP_Tcode_Library" name="Run Transaction">
     <arg>
      /nex
     </arg>
     <doc>
      Runs a Sap transaction. An error is given when an unknown transaction is specified.
     </doc>
     <status endtime="20240502 20:17:50.434" starttime="20240502 20:17:50.160" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      5
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240502 20:17:55.435">
      Slept 5 seconds
     </msg>
     <status endtime="20240502 20:17:55.435" starttime="20240502 20:17:50.434" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Take Screenshot">
     <arg>
      logoutpage.jpg
     </arg>
     <doc>
      Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
     </doc>
     <msg level="WARN" timestamp="20240502 20:17:55.435">
      Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
     </msg>
     <msg html="true" level="INFO" timestamp="20240502 20:17:55.435">
      &lt;a href="pabot_results%5C11%5Clogoutpage.jpg"&gt;&lt;img src="pabot_results%5C11%5Clogoutpage.jpg" width="800px"&gt;&lt;/a&gt;
     </msg>
     <status endtime="20240502 20:17:55.435" starttime="20240502 20:17:55.435" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      10
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240502 20:18:05.435">
      Slept 10 seconds
     </msg>
     <status endtime="20240502 20:18:05.435" starttime="20240502 20:17:55.435" status="PASS"/>
    </kw>
    <status endtime="20240502 20:18:05.435" starttime="20240502 20:17:50.160" status="PASS"/>
   </kw>
   <status endtime="20240502 20:18:05.435" starttime="20240502 20:17:23.726" status="PASS"/>
  </suite>
  <suite id="s1-s11" name="Test SPAD" source="C:\SAP_Testing\SAPtesting\Tests\Test_SPAD.robot">
   <kw library="SPAD" name="System Logon" type="SETUP">
    <kw library="Process" name="Start Process">
     <arg>
      ${symvar('SAP_SERVER')}
     </arg>
     <doc>
      Starts a new process on background.
     </doc>
     <msg level="INFO" timestamp="20240502 20:17:34.316">
      Sym.Dev.SAP_SERVER: C:\Program Files\SAP\FrontEnd\SAPGUI\saplogon.exe
     </msg>
     <msg level="INFO" timestamp="20240502 20:17:34.316">
      Starting process:
"C:\Program Files\SAP\FrontEnd\SAPGUI\saplogon.exe"
     </msg>
     <status endtime="20240502 20:17:34.331" starttime="20240502 20:17:34.316" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      10s
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240502 20:17:44.332">
      Slept 10 seconds
     </msg>
     <status endtime="20240502 20:17:44.332" starttime="20240502 20:17:34.331" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Connect To Session">
     <doc>
      Connects to an open session SAP.
     </doc>
     <status endtime="20240502 20:17:44.338" starttime="20240502 20:17:44.332" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Open Connection">
     <arg>
      ${symvar('SAP_connection')}
     </arg>
     <doc>
      Opens a connection to the given connection name. Be sure to provide the full connection name, including the bracket part.
     </doc>
     <msg level="INFO" timestamp="20240502 20:17:44.338">
      Sym.Dev.SAP_connection: BIS
     </msg>
     <status endtime="20240502 20:17:45.469" starttime="20240502 20:17:44.338" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Input Text">
     <arg>
      wnd[0]/usr/txtRSYST-MANDT
     </arg>
     <arg>
      ${symvar('Client_Id')}
     </arg>
     <doc>
      Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.
     </doc>
     <msg level="INFO" timestamp="20240502 20:17:45.469">
      Sym.Dev.Client_Id: 001
     </msg>
     <msg level="INFO" timestamp="20240502 20:17:45.488">
      Typing text '001' into text field 'wnd[0]/usr/txtRSYST-MANDT'.
     </msg>
     <status endtime="20240502 20:17:45.488" starttime="20240502 20:17:45.469" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Input Text">
     <arg>
      wnd[0]/usr/txtRSYST-BNAME
     </arg>
     <arg>
      ${symvar('User_Name')}
     </arg>
     <doc>
      Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.
     </doc>
     <msg level="INFO" timestamp="20240502 20:17:45.488">
      Sym.Dev.User_Name: SELENIUM
     </msg>
     <msg level="INFO" timestamp="20240502 20:17:45.498">
      Typing text 'SELENIUM' into text field 'wnd[0]/usr/txtRSYST-BNAME'.
     </msg>
     <status endtime="20240502 20:17:45.498" starttime="20240502 20:17:45.488" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Input Password">
     <arg>
      wnd[0]/usr/pwdRSYST-BCODE
     </arg>
     <arg>
      %{SAP_PASSWORD}
     </arg>
     <doc>
      Inserts the given password into the text field identified by locator.
The password is not recorded in the log.
     </doc>
     <msg level="INFO" timestamp="20240502 20:17:45.512">
      Typing password into text field 'wnd[0]/usr/pwdRSYST-BCODE'.
     </msg>
     <status endtime="20240502 20:17:45.512" starttime="20240502 20:17:45.498" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Send Vkey">
     <arg>
      0
     </arg>
     <doc>
      Sends a SAP virtual key combination to the window, not into an element.
If you want to send a value to a text field, use `input text` instead.
     </doc>
     <status endtime="20240502 20:17:46.016" starttime="20240502 20:17:45.512" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Take Screenshot">
     <arg>
      00a_loginpage.jpg
     </arg>
     <doc>
      Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
     </doc>
     <msg level="WARN" timestamp="20240502 20:17:46.025">
      Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
     </msg>
     <msg html="true" level="INFO" timestamp="20240502 20:17:46.025">
      &lt;a href="pabot_results%5C0%5C00a_loginpage.jpg"&gt;&lt;img src="pabot_results%5C0%5C00a_loginpage.jpg" width="800px"&gt;&lt;/a&gt;
     </msg>
     <status endtime="20240502 20:17:46.025" starttime="20240502 20:17:46.016" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Multiple Logon Handling">
     <arg>
      wnd[1]
     </arg>
     <arg>
      wnd[1]/usr/radMULTI_LOGON_OPT2
     </arg>
     <arg>
      wnd[1]/tbar[0]/btn[0]
     </arg>
     <msg level="INFO" timestamp="20240502 20:17:46.823">
      Multiple logon exists
     </msg>
     <status endtime="20240502 20:17:46.823" starttime="20240502 20:17:46.025" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      1
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240502 20:17:47.824">
      Slept 1 second
     </msg>
     <status endtime="20240502 20:17:47.824" starttime="20240502 20:17:46.823" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Take Screenshot">
     <arg>
      00_multi_logon_handling.jpg
     </arg>
     <doc>
      Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
     </doc>
     <msg level="WARN" timestamp="20240502 20:17:47.829">
      Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
     </msg>
     <msg html="true" level="INFO" timestamp="20240502 20:17:47.829">
      &lt;a href="pabot_results%5C0%5C00_multi_logon_handling.jpg"&gt;&lt;img src="pabot_results%5C0%5C00_multi_logon_handling.jpg" width="800px"&gt;&lt;/a&gt;
     </msg>
     <status endtime="20240502 20:17:47.829" starttime="20240502 20:17:47.825" status="PASS"/>
    </kw>
    <status endtime="20240502 20:17:47.830" starttime="20240502 20:17:34.316" status="PASS"/>
   </kw>
   <test id="s1-s11-t1" line="9" name="Executing SPAD">
    <kw library="SPAD" name="Transaction SPAD">
     <kw library="SAP_Tcode_Library" name="Run Transaction">
      <arg>
       /nSPAD
      </arg>
      <doc>
       Runs a Sap transaction. An error is given when an unknown transaction is specified.
      </doc>
      <status endtime="20240502 20:17:48.554" starttime="20240502 20:17:47.831" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:17:49.555">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:17:49.555" starttime="20240502 20:17:48.554" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       058_spad.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:17:49.555">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:17:49.555">
       &lt;a href="058_spad.jpg"&gt;&lt;img src="058_spad.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:17:49.555" starttime="20240502 20:17:49.555" status="PASS"/>
     </kw>
     <status endtime="20240502 20:17:49.555" starttime="20240502 20:17:47.830" status="PASS"/>
    </kw>
    <kw library="SPAD" name="ARCH Screenshot">
     <kw library="SAP_Tcode_Library" name="Input Text">
      <arg>
       wnd[0]/usr/tabsSELECTIONS/tabpSEL1/ssubPAGE:SAPMSPAD:1041/ctxtRSPOSEL-DEVICE
      </arg>
      <arg>
       ARCH
      </arg>
      <doc>
       Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.
      </doc>
      <msg level="INFO" timestamp="20240502 20:17:49.576">
       Typing text 'ARCH' into text field 'wnd[0]/usr/tabsSELECTIONS/tabpSEL1/ssubPAGE:SAPMSPAD:1041/ctxtRSPOSEL-DEVICE'.
      </msg>
      <status endtime="20240502 20:17:49.576" starttime="20240502 20:17:49.555" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       059_spad_arch.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:17:49.590">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:17:49.590">
       &lt;a href="059_spad_arch.jpg"&gt;&lt;img src="059_spad_arch.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:17:49.590" starttime="20240502 20:17:49.576" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/usr/tabsSELECTIONS/tabpSEL1/ssubPAGE:SAPMSPAD:1041/btn%#AUTOTEXT001
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:17:50.160" starttime="20240502 20:17:49.590" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:17:51.160">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:17:51.160" starttime="20240502 20:17:50.160" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       060_spad_arch.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:17:51.160">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:17:51.170">
       &lt;a href="060_spad_arch.jpg"&gt;&lt;img src="060_spad_arch.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:17:51.170" starttime="20240502 20:17:51.160" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/tbar[0]/btn[3]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:17:51.499" starttime="20240502 20:17:51.170" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:17:52.500">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:17:52.500" starttime="20240502 20:17:51.499" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       061_spad_arch.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:17:52.500">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:17:52.500">
       &lt;a href="061_spad_arch.jpg"&gt;&lt;img src="061_spad_arch.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:17:52.500" starttime="20240502 20:17:52.500" status="PASS"/>
     </kw>
     <status endtime="20240502 20:17:52.500" starttime="20240502 20:17:49.555" status="PASS"/>
    </kw>
    <kw library="SPAD" name="LOCL Screenshot">
     <kw library="SAP_Tcode_Library" name="Input Text">
      <arg>
       wnd[0]/usr/tabsSELECTIONS/tabpSEL1/ssubPAGE:SAPMSPAD:1041/ctxtRSPOSEL-DEVICE
      </arg>
      <arg>
       Ctrl+A
      </arg>
      <doc>
       Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.
      </doc>
      <msg level="INFO" timestamp="20240502 20:17:52.507">
       Typing text 'Ctrl+A' into text field 'wnd[0]/usr/tabsSELECTIONS/tabpSEL1/ssubPAGE:SAPMSPAD:1041/ctxtRSPOSEL-DEVICE'.
      </msg>
      <status endtime="20240502 20:17:52.507" starttime="20240502 20:17:52.504" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Input Text">
      <arg>
       wnd[0]/usr/tabsSELECTIONS/tabpSEL1/ssubPAGE:SAPMSPAD:1041/ctxtRSPOSEL-DEVICE
      </arg>
      <arg>
       LOCL
      </arg>
      <doc>
       Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.
      </doc>
      <msg level="INFO" timestamp="20240502 20:17:52.527">
       Typing text 'LOCL' into text field 'wnd[0]/usr/tabsSELECTIONS/tabpSEL1/ssubPAGE:SAPMSPAD:1041/ctxtRSPOSEL-DEVICE'.
      </msg>
      <status endtime="20240502 20:17:52.527" starttime="20240502 20:17:52.507" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       062_spad_locl.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:17:52.527">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:17:52.527">
       &lt;a href="062_spad_locl.jpg"&gt;&lt;img src="062_spad_locl.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:17:52.527" starttime="20240502 20:17:52.527" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/usr/tabsSELECTIONS/tabpSEL1/ssubPAGE:SAPMSPAD:1041/btn%#AUTOTEXT001
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:17:52.890" starttime="20240502 20:17:52.527" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:17:53.890">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:17:53.890" starttime="20240502 20:17:52.890" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       063_spad_locl.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:17:53.891">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:17:53.891">
       &lt;a href="063_spad_locl.jpg"&gt;&lt;img src="063_spad_locl.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:17:53.891" starttime="20240502 20:17:53.890" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/tbar[0]/btn[3]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:17:54.190" starttime="20240502 20:17:53.891" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:17:55.191">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:17:55.191" starttime="20240502 20:17:54.190" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       064_spad_locl.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:17:55.193">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:17:55.193">
       &lt;a href="064_spad_locl.jpg"&gt;&lt;img src="064_spad_locl.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:17:55.193" starttime="20240502 20:17:55.191" status="PASS"/>
     </kw>
     <status endtime="20240502 20:17:55.193" starttime="20240502 20:17:52.504" status="PASS"/>
    </kw>
    <kw library="SPAD" name="LP01 Screenshot">
     <kw library="SAP_Tcode_Library" name="Input Text">
      <arg>
       wnd[0]/usr/tabsSELECTIONS/tabpSEL1/ssubPAGE:SAPMSPAD:1041/ctxtRSPOSEL-DEVICE
      </arg>
      <arg>
       Ctrl+A
      </arg>
      <doc>
       Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.
      </doc>
      <msg level="INFO" timestamp="20240502 20:17:55.203">
       Typing text 'Ctrl+A' into text field 'wnd[0]/usr/tabsSELECTIONS/tabpSEL1/ssubPAGE:SAPMSPAD:1041/ctxtRSPOSEL-DEVICE'.
      </msg>
      <status endtime="20240502 20:17:55.203" starttime="20240502 20:17:55.193" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Input Text">
      <arg>
       wnd[0]/usr/tabsSELECTIONS/tabpSEL1/ssubPAGE:SAPMSPAD:1041/ctxtRSPOSEL-DEVICE
      </arg>
      <arg>
       LP01
      </arg>
      <doc>
       Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.
      </doc>
      <msg level="INFO" timestamp="20240502 20:17:55.216">
       Typing text 'LP01' into text field 'wnd[0]/usr/tabsSELECTIONS/tabpSEL1/ssubPAGE:SAPMSPAD:1041/ctxtRSPOSEL-DEVICE'.
      </msg>
      <status endtime="20240502 20:17:55.216" starttime="20240502 20:17:55.203" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       065_spad_lp01.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:17:55.216">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:17:55.216">
       &lt;a href="065_spad_lp01.jpg"&gt;&lt;img src="065_spad_lp01.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:17:55.216" starttime="20240502 20:17:55.216" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/usr/tabsSELECTIONS/tabpSEL1/ssubPAGE:SAPMSPAD:1041/btn%#AUTOTEXT001
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:17:55.585" starttime="20240502 20:17:55.216" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:17:56.586">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:17:56.586" starttime="20240502 20:17:55.585" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       066_spad_lp01.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:17:56.586">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:17:56.586">
       &lt;a href="066_spad_lp01.jpg"&gt;&lt;img src="066_spad_lp01.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:17:56.586" starttime="20240502 20:17:56.586" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/tbar[0]/btn[3]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:17:56.886" starttime="20240502 20:17:56.586" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:17:57.886">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:17:57.886" starttime="20240502 20:17:56.886" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       067_spad_lp01.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:17:57.886">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:17:57.886">
       &lt;a href="067_spad_lp01.jpg"&gt;&lt;img src="067_spad_lp01.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:17:57.886" starttime="20240502 20:17:57.886" status="PASS"/>
     </kw>
     <status endtime="20240502 20:17:57.886" starttime="20240502 20:17:55.193" status="PASS"/>
    </kw>
    <kw library="SPAD" name="ZPDF Screenshot">
     <kw library="SAP_Tcode_Library" name="Input Text">
      <arg>
       wnd[0]/usr/tabsSELECTIONS/tabpSEL1/ssubPAGE:SAPMSPAD:1041/ctxtRSPOSEL-DEVICE
      </arg>
      <arg>
       Ctrl+A
      </arg>
      <doc>
       Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.
      </doc>
      <msg level="INFO" timestamp="20240502 20:17:57.895">
       Typing text 'Ctrl+A' into text field 'wnd[0]/usr/tabsSELECTIONS/tabpSEL1/ssubPAGE:SAPMSPAD:1041/ctxtRSPOSEL-DEVICE'.
      </msg>
      <status endtime="20240502 20:17:57.895" starttime="20240502 20:17:57.886" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Input Text">
      <arg>
       wnd[0]/usr/tabsSELECTIONS/tabpSEL1/ssubPAGE:SAPMSPAD:1041/ctxtRSPOSEL-DEVICE
      </arg>
      <arg>
       ZPDF
      </arg>
      <doc>
       Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.
      </doc>
      <msg level="INFO" timestamp="20240502 20:17:57.906">
       Typing text 'ZPDF' into text field 'wnd[0]/usr/tabsSELECTIONS/tabpSEL1/ssubPAGE:SAPMSPAD:1041/ctxtRSPOSEL-DEVICE'.
      </msg>
      <status endtime="20240502 20:17:57.906" starttime="20240502 20:17:57.895" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       068_spad_zpdf.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:17:57.916">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:17:57.916">
       &lt;a href="068_spad_zpdf.jpg"&gt;&lt;img src="068_spad_zpdf.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:17:57.916" starttime="20240502 20:17:57.906" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/usr/tabsSELECTIONS/tabpSEL1/ssubPAGE:SAPMSPAD:1041/btn%#AUTOTEXT001
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:17:58.260" starttime="20240502 20:17:57.916" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:17:59.260">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:17:59.260" starttime="20240502 20:17:58.260" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       069_spad_zpdf.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:17:59.264">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:17:59.264">
       &lt;a href="069_spad_zpdf.jpg"&gt;&lt;img src="069_spad_zpdf.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:17:59.264" starttime="20240502 20:17:59.260" status="PASS"/>
     </kw>
     <status endtime="20240502 20:17:59.264" starttime="20240502 20:17:57.886" status="PASS"/>
    </kw>
    <tag>
     Migration
    </tag>
    <status endtime="20240502 20:17:59.264" starttime="20240502 20:17:47.830" status="PASS"/>
   </test>
   <kw library="SPAD" name="System Logout" type="TEARDOWN">
    <kw library="SAP_Tcode_Library" name="Run Transaction">
     <arg>
      /nex
     </arg>
     <doc>
      Runs a Sap transaction. An error is given when an unknown transaction is specified.
     </doc>
     <status endtime="20240502 20:17:59.511" starttime="20240502 20:17:59.264" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      5
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240502 20:18:04.511">
      Slept 5 seconds
     </msg>
     <status endtime="20240502 20:18:04.511" starttime="20240502 20:17:59.511" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Take Screenshot">
     <arg>
      logoutpage.jpg
     </arg>
     <doc>
      Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
     </doc>
     <msg level="WARN" timestamp="20240502 20:18:04.511">
      Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
     </msg>
     <msg html="true" level="INFO" timestamp="20240502 20:18:04.515">
      &lt;a href="pabot_results%5C11%5Clogoutpage.jpg"&gt;&lt;img src="pabot_results%5C11%5Clogoutpage.jpg" width="800px"&gt;&lt;/a&gt;
     </msg>
     <status endtime="20240502 20:18:04.515" starttime="20240502 20:18:04.511" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      10
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240502 20:18:14.515">
      Slept 10 seconds
     </msg>
     <status endtime="20240502 20:18:14.515" starttime="20240502 20:18:04.515" status="PASS"/>
    </kw>
    <status endtime="20240502 20:18:14.515" starttime="20240502 20:17:59.264" status="PASS"/>
   </kw>
   <status endtime="20240502 20:18:14.515" starttime="20240502 20:17:34.300" status="PASS"/>
  </suite>
  <suite id="s1-s12" name="Test STMS" source="C:\SAP_Testing\SAPtesting\Tests\Test_STMS.robot">
   <kw library="STMS" name="System Logon" type="SETUP">
    <kw library="Process" name="Start Process">
     <arg>
      ${symvar('SAP_SERVER')}
     </arg>
     <doc>
      Starts a new process on background.
     </doc>
     <msg level="INFO" timestamp="20240502 20:18:11.391">
      Sym.Dev.SAP_SERVER: C:\Program Files\SAP\FrontEnd\SAPGUI\saplogon.exe
     </msg>
     <msg level="INFO" timestamp="20240502 20:18:11.391">
      Starting process:
"C:\Program Files\SAP\FrontEnd\SAPGUI\saplogon.exe"
     </msg>
     <status endtime="20240502 20:18:11.391" starttime="20240502 20:18:11.391" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      10s
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240502 20:18:21.391">
      Slept 10 seconds
     </msg>
     <status endtime="20240502 20:18:21.391" starttime="20240502 20:18:11.391" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Connect To Session">
     <doc>
      Connects to an open session SAP.
     </doc>
     <status endtime="20240502 20:18:21.403" starttime="20240502 20:18:21.391" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Open Connection">
     <arg>
      ${symvar('SAP_connection')}
     </arg>
     <doc>
      Opens a connection to the given connection name. Be sure to provide the full connection name, including the bracket part.
     </doc>
     <msg level="INFO" timestamp="20240502 20:18:21.403">
      Sym.Dev.SAP_connection: BIS
     </msg>
     <status endtime="20240502 20:18:22.407" starttime="20240502 20:18:21.403" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Input Text">
     <arg>
      wnd[0]/usr/txtRSYST-MANDT
     </arg>
     <arg>
      ${symvar('Client_Id')}
     </arg>
     <doc>
      Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.
     </doc>
     <msg level="INFO" timestamp="20240502 20:18:22.407">
      Sym.Dev.Client_Id: 001
     </msg>
     <msg level="INFO" timestamp="20240502 20:18:22.419">
      Typing text '001' into text field 'wnd[0]/usr/txtRSYST-MANDT'.
     </msg>
     <status endtime="20240502 20:18:22.425" starttime="20240502 20:18:22.407" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Input Text">
     <arg>
      wnd[0]/usr/txtRSYST-BNAME
     </arg>
     <arg>
      ${symvar('User_Name')}
     </arg>
     <doc>
      Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.
     </doc>
     <msg level="INFO" timestamp="20240502 20:18:22.426">
      Sym.Dev.User_Name: SELENIUM
     </msg>
     <msg level="INFO" timestamp="20240502 20:18:22.438">
      Typing text 'SELENIUM' into text field 'wnd[0]/usr/txtRSYST-BNAME'.
     </msg>
     <status endtime="20240502 20:18:22.438" starttime="20240502 20:18:22.425" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Input Password">
     <arg>
      wnd[0]/usr/pwdRSYST-BCODE
     </arg>
     <arg>
      %{SAP_PASSWORD}
     </arg>
     <doc>
      Inserts the given password into the text field identified by locator.
The password is not recorded in the log.
     </doc>
     <msg level="INFO" timestamp="20240502 20:18:22.438">
      Typing password into text field 'wnd[0]/usr/pwdRSYST-BCODE'.
     </msg>
     <status endtime="20240502 20:18:22.438" starttime="20240502 20:18:22.438" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Send Vkey">
     <arg>
      0
     </arg>
     <doc>
      Sends a SAP virtual key combination to the window, not into an element.
If you want to send a value to a text field, use `input text` instead.
     </doc>
     <status endtime="20240502 20:18:23.216" starttime="20240502 20:18:22.449" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Take Screenshot">
     <arg>
      00a_loginpage.jpg
     </arg>
     <doc>
      Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
     </doc>
     <msg level="WARN" timestamp="20240502 20:18:23.216">
      Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
     </msg>
     <msg html="true" level="INFO" timestamp="20240502 20:18:23.216">
      &lt;a href="pabot_results%5C0%5C00a_loginpage.jpg"&gt;&lt;img src="pabot_results%5C0%5C00a_loginpage.jpg" width="800px"&gt;&lt;/a&gt;
     </msg>
     <status endtime="20240502 20:18:23.216" starttime="20240502 20:18:23.216" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Multiple Logon Handling">
     <arg>
      wnd[1]
     </arg>
     <arg>
      wnd[1]/usr/radMULTI_LOGON_OPT2
     </arg>
     <arg>
      wnd[1]/tbar[0]/btn[0]
     </arg>
     <status endtime="20240502 20:18:23.226" starttime="20240502 20:18:23.216" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      1
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240502 20:18:24.227">
      Slept 1 second
     </msg>
     <status endtime="20240502 20:18:24.227" starttime="20240502 20:18:23.226" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Take Screenshot">
     <arg>
      00_multi_logon_handling.jpg
     </arg>
     <doc>
      Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
     </doc>
     <msg level="WARN" timestamp="20240502 20:18:24.227">
      Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
     </msg>
     <msg html="true" level="INFO" timestamp="20240502 20:18:24.227">
      &lt;a href="pabot_results%5C0%5C00_multi_logon_handling.jpg"&gt;&lt;img src="pabot_results%5C0%5C00_multi_logon_handling.jpg" width="800px"&gt;&lt;/a&gt;
     </msg>
     <status endtime="20240502 20:18:24.227" starttime="20240502 20:18:24.227" status="PASS"/>
    </kw>
    <status endtime="20240502 20:18:24.227" starttime="20240502 20:18:11.391" status="PASS"/>
   </kw>
   <test id="s1-s12-t1" line="10" name="Executing STMS">
    <kw library="STMS" name="Transaction STMS">
     <kw library="SAP_Tcode_Library" name="Run Transaction">
      <arg>
       /nSTMS
      </arg>
      <doc>
       Runs a Sap transaction. An error is given when an unknown transaction is specified.
      </doc>
      <status endtime="20240502 20:18:25.408" starttime="20240502 20:18:24.227" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:18:26.409">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:18:26.409" starttime="20240502 20:18:25.408" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       073_stms.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:18:26.409">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:18:26.409">
       &lt;a href="pabot_results%5C1%5C073_stms.jpg"&gt;&lt;img src="pabot_results%5C1%5C073_stms.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:18:26.417" starttime="20240502 20:18:26.409" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/mbar/menu[0]/menu[4]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:18:27.437" starttime="20240502 20:18:26.417" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:18:28.438">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:18:28.438" starttime="20240502 20:18:27.437" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       074_stms.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240502 20:18:28.529">
       &lt;a href="pabot_results%5C1%5C074_stms.jpg"&gt;&lt;img src="pabot_results%5C1%5C074_stms.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:18:28.529" starttime="20240502 20:18:28.438" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Rows From Stms">
      <arg>
       wnd[0]/usr/cntlGRID1/shellcont/shell
      </arg>
      <msg level="INFO" timestamp="20240502 20:18:29.088">
       wnd[0]/usr/cntlGRID1/shellcont/shell
6
6
0
BIS
      </msg>
      <status endtime="20240502 20:18:29.088" starttime="20240502 20:18:28.529" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:18:30.089">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:18:30.089" starttime="20240502 20:18:29.088" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       075_stms.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240502 20:18:30.151">
       &lt;a href="pabot_results%5C1%5C075_stms.jpg"&gt;&lt;img src="pabot_results%5C1%5C075_stms.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:18:30.151" starttime="20240502 20:18:30.089" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/usr/tabsGN_DYN150_TAB_STRIP/tabpATTR
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:18:30.182" starttime="20240502 20:18:30.151" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:18:32.194">
       Slept 2 seconds
      </msg>
      <status endtime="20240502 20:18:32.194" starttime="20240502 20:18:30.182" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       076_stms.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240502 20:18:32.266">
       &lt;a href="pabot_results%5C1%5C076_stms.jpg"&gt;&lt;img src="pabot_results%5C1%5C076_stms.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:18:32.266" starttime="20240502 20:18:32.194" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/usr/tabsGN_DYN150_TAB_STRIP/tabpDOMA
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:18:33.070" starttime="20240502 20:18:32.266" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:18:34.071">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:18:34.071" starttime="20240502 20:18:33.070" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       077_stms.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240502 20:18:34.110">
       &lt;a href="pabot_results%5C1%5C077_stms.jpg"&gt;&lt;img src="pabot_results%5C1%5C077_stms.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:18:34.110" starttime="20240502 20:18:34.071" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/usr/tabsGN_DYN150_TAB_STRIP/tabpTPPE
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:18:34.604" starttime="20240502 20:18:34.110" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:18:35.631">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:18:35.631" starttime="20240502 20:18:34.604" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       078_stms.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240502 20:18:35.686">
       &lt;a href="pabot_results%5C1%5C078_stms.jpg"&gt;&lt;img src="pabot_results%5C1%5C078_stms.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:18:35.686" starttime="20240502 20:18:35.631" status="PASS"/>
     </kw>
     <status endtime="20240502 20:18:35.686" starttime="20240502 20:18:24.227" status="PASS"/>
    </kw>
    <kw library="STMS" name="Import Overview">
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/tbar[0]/btn[3]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:18:36.450" starttime="20240502 20:18:35.686" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:18:37.451">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:18:37.451" starttime="20240502 20:18:36.450" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       079_stms.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240502 20:18:37.539">
       &lt;a href="pabot_results%5C1%5C079_stms.jpg"&gt;&lt;img src="pabot_results%5C1%5C079_stms.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:18:37.539" starttime="20240502 20:18:37.451" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/tbar[0]/btn[3]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:18:38.123" starttime="20240502 20:18:37.539" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:18:39.124">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:18:39.124" starttime="20240502 20:18:38.123" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       080_stms.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240502 20:18:39.190">
       &lt;a href="pabot_results%5C1%5C080_stms.jpg"&gt;&lt;img src="pabot_results%5C1%5C080_stms.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:18:39.190" starttime="20240502 20:18:39.124" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/tbar[1]/btn[5]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:18:39.460" starttime="20240502 20:18:39.190" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:18:40.460">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:18:40.460" starttime="20240502 20:18:39.460" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       081_stms.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240502 20:18:40.510">
       &lt;a href="pabot_results%5C1%5C081_stms.jpg"&gt;&lt;img src="pabot_results%5C1%5C081_stms.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:18:40.510" starttime="20240502 20:18:40.460" status="PASS"/>
     </kw>
     <status endtime="20240502 20:18:40.510" starttime="20240502 20:18:35.686" status="PASS"/>
    </kw>
    <kw library="STMS" name="Transport Routes">
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/tbar[0]/btn[3]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:18:40.750" starttime="20240502 20:18:40.511" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:18:41.750">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:18:41.750" starttime="20240502 20:18:40.750" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       082a_stms.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240502 20:18:41.801">
       &lt;a href="pabot_results%5C1%5C082a_stms.jpg"&gt;&lt;img src="pabot_results%5C1%5C082a_stms.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:18:41.801" starttime="20240502 20:18:41.750" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/tbar[1]/btn[19]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:18:42.873" starttime="20240502 20:18:41.801" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:18:43.874">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:18:43.874" starttime="20240502 20:18:42.874" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       082b_stms.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240502 20:18:43.951">
       &lt;a href="pabot_results%5C1%5C082b_stms.jpg"&gt;&lt;img src="pabot_results%5C1%5C082b_stms.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:18:43.951" starttime="20240502 20:18:43.874" status="PASS"/>
     </kw>
     <status endtime="20240502 20:18:43.951" starttime="20240502 20:18:40.511" status="PASS"/>
    </kw>
    <kw library="STMS" name="Transport Layers">
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/mbar/menu[2]/menu[1]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:18:45.053" starttime="20240502 20:18:43.951" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:18:46.055">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:18:46.055" starttime="20240502 20:18:45.053" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       083_stms.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240502 20:18:46.120">
       &lt;a href="pabot_results%5C11%5C083_stms.jpg"&gt;&lt;img src="pabot_results%5C11%5C083_stms.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:18:46.120" starttime="20240502 20:18:46.055" status="PASS"/>
     </kw>
     <status endtime="20240502 20:18:46.120" starttime="20240502 20:18:43.951" status="PASS"/>
    </kw>
    <tag>
     Migration
    </tag>
    <status endtime="20240502 20:18:46.120" starttime="20240502 20:18:24.227" status="PASS"/>
   </test>
   <kw library="STMS" name="System Logout" type="TEARDOWN">
    <kw library="SAP_Tcode_Library" name="Run Transaction">
     <arg>
      /nex
     </arg>
     <doc>
      Runs a Sap transaction. An error is given when an unknown transaction is specified.
     </doc>
     <status endtime="20240502 20:18:46.387" starttime="20240502 20:18:46.120" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      5
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240502 20:18:51.387">
      Slept 5 seconds
     </msg>
     <status endtime="20240502 20:18:51.387" starttime="20240502 20:18:46.387" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Take Screenshot">
     <arg>
      logoutpage.jpg
     </arg>
     <doc>
      Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
     </doc>
     <msg html="true" level="INFO" timestamp="20240502 20:18:51.443">
      &lt;a href="pabot_results%5C11%5Clogoutpage.jpg"&gt;&lt;img src="pabot_results%5C11%5Clogoutpage.jpg" width="800px"&gt;&lt;/a&gt;
     </msg>
     <status endtime="20240502 20:18:51.443" starttime="20240502 20:18:51.387" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      10
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240502 20:19:01.444">
      Slept 10 seconds
     </msg>
     <status endtime="20240502 20:19:01.444" starttime="20240502 20:18:51.443" status="PASS"/>
    </kw>
    <status endtime="20240502 20:19:01.444" starttime="20240502 20:18:46.120" status="PASS"/>
   </kw>
   <status endtime="20240502 20:19:01.444" starttime="20240502 20:18:11.367" status="PASS"/>
  </suite>
  <suite id="s1-s13" name="Test STRUST" source="C:\SAP_Testing\SAPtesting\Tests\Test_STRUST.robot">
   <kw library="STRUST" name="System Logon" type="SETUP">
    <kw library="Process" name="Start Process">
     <arg>
      ${symvar('SAP_SERVER')}
     </arg>
     <doc>
      Starts a new process on background.
     </doc>
     <msg level="INFO" timestamp="20240502 20:18:20.669">
      Sym.Dev.SAP_SERVER: C:\Program Files\SAP\FrontEnd\SAPGUI\saplogon.exe
     </msg>
     <msg level="INFO" timestamp="20240502 20:18:20.669">
      Starting process:
"C:\Program Files\SAP\FrontEnd\SAPGUI\saplogon.exe"
     </msg>
     <status endtime="20240502 20:18:20.669" starttime="20240502 20:18:20.669" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      10s
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240502 20:18:30.669">
      Slept 10 seconds
     </msg>
     <status endtime="20240502 20:18:30.669" starttime="20240502 20:18:20.669" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Connect To Session">
     <doc>
      Connects to an open session SAP.
     </doc>
     <status endtime="20240502 20:18:30.682" starttime="20240502 20:18:30.669" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Open Connection">
     <arg>
      ${symvar('SAP_connection')}
     </arg>
     <doc>
      Opens a connection to the given connection name. Be sure to provide the full connection name, including the bracket part.
     </doc>
     <msg level="INFO" timestamp="20240502 20:18:30.682">
      Sym.Dev.SAP_connection: BIS
     </msg>
     <status endtime="20240502 20:18:31.694" starttime="20240502 20:18:30.682" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Input Text">
     <arg>
      wnd[0]/usr/txtRSYST-MANDT
     </arg>
     <arg>
      ${symvar('Client_Id')}
     </arg>
     <doc>
      Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.
     </doc>
     <msg level="INFO" timestamp="20240502 20:18:31.694">
      Sym.Dev.Client_Id: 001
     </msg>
     <msg level="INFO" timestamp="20240502 20:18:31.701">
      Typing text '001' into text field 'wnd[0]/usr/txtRSYST-MANDT'.
     </msg>
     <status endtime="20240502 20:18:31.711" starttime="20240502 20:18:31.694" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Input Text">
     <arg>
      wnd[0]/usr/txtRSYST-BNAME
     </arg>
     <arg>
      ${symvar('User_Name')}
     </arg>
     <doc>
      Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.
     </doc>
     <msg level="INFO" timestamp="20240502 20:18:31.711">
      Sym.Dev.User_Name: SELENIUM
     </msg>
     <msg level="INFO" timestamp="20240502 20:18:31.730">
      Typing text 'SELENIUM' into text field 'wnd[0]/usr/txtRSYST-BNAME'.
     </msg>
     <status endtime="20240502 20:18:31.736" starttime="20240502 20:18:31.711" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Input Password">
     <arg>
      wnd[0]/usr/pwdRSYST-BCODE
     </arg>
     <arg>
      %{SAP_PASSWORD}
     </arg>
     <doc>
      Inserts the given password into the text field identified by locator.
The password is not recorded in the log.
     </doc>
     <msg level="INFO" timestamp="20240502 20:18:31.748">
      Typing password into text field 'wnd[0]/usr/pwdRSYST-BCODE'.
     </msg>
     <status endtime="20240502 20:18:31.750" starttime="20240502 20:18:31.736" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Send Vkey">
     <arg>
      0
     </arg>
     <doc>
      Sends a SAP virtual key combination to the window, not into an element.
If you want to send a value to a text field, use `input text` instead.
     </doc>
     <status endtime="20240502 20:18:32.211" starttime="20240502 20:18:31.751" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Take Screenshot">
     <arg>
      00a_loginpage.jpg
     </arg>
     <doc>
      Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
     </doc>
     <msg html="true" level="INFO" timestamp="20240502 20:18:32.326">
      &lt;a href="pabot_results%5C0%5C00a_loginpage.jpg"&gt;&lt;img src="pabot_results%5C0%5C00a_loginpage.jpg" width="800px"&gt;&lt;/a&gt;
     </msg>
     <status endtime="20240502 20:18:32.326" starttime="20240502 20:18:32.211" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Multiple Logon Handling">
     <arg>
      wnd[1]
     </arg>
     <arg>
      wnd[1]/usr/radMULTI_LOGON_OPT2
     </arg>
     <arg>
      wnd[1]/tbar[0]/btn[0]
     </arg>
     <msg level="INFO" timestamp="20240502 20:18:33.072">
      Multiple logon exists
     </msg>
     <status endtime="20240502 20:18:33.072" starttime="20240502 20:18:32.326" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      1
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240502 20:18:34.073">
      Slept 1 second
     </msg>
     <status endtime="20240502 20:18:34.073" starttime="20240502 20:18:33.072" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Take Screenshot">
     <arg>
      00_multi_logon_handling.jpg
     </arg>
     <doc>
      Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
     </doc>
     <msg html="true" level="INFO" timestamp="20240502 20:18:34.173">
      &lt;a href="pabot_results%5C0%5C00_multi_logon_handling.jpg"&gt;&lt;img src="pabot_results%5C0%5C00_multi_logon_handling.jpg" width="800px"&gt;&lt;/a&gt;
     </msg>
     <status endtime="20240502 20:18:34.173" starttime="20240502 20:18:34.073" status="PASS"/>
    </kw>
    <status endtime="20240502 20:18:34.173" starttime="20240502 20:18:20.669" status="PASS"/>
   </kw>
   <test id="s1-s13-t1" line="9" name="Executing STRUST">
    <kw library="STRUST" name="Transaction STRUST">
     <kw library="SAP_Tcode_Library" name="Run Transaction">
      <arg>
       /nstrust
      </arg>
      <doc>
       Runs a Sap transaction. An error is given when an unknown transaction is specified.
      </doc>
      <status endtime="20240502 20:18:35.288" starttime="20240502 20:18:34.173" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Send Vkey">
      <arg>
       0
      </arg>
      <doc>
       Sends a SAP virtual key combination to the window, not into an element.
If you want to send a value to a text field, use `input text` instead.
      </doc>
      <status endtime="20240502 20:18:35.898" starttime="20240502 20:18:35.288" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       029_PSE.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240502 20:18:35.977">
       &lt;a href="pabot_results%5C12%5C029_PSE.jpg"&gt;&lt;img src="pabot_results%5C12%5C029_PSE.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:18:35.993" starttime="20240502 20:18:35.898" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:18:37.993">
       Slept 2 seconds
      </msg>
      <status endtime="20240502 20:18:37.993" starttime="20240502 20:18:35.993" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Scroll Pagedown">
      <arg>
       wnd[0]/usr/btnCERTDETAIL
      </arg>
      <status endtime="20240502 20:18:38.191" starttime="20240502 20:18:37.993" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:18:40.193">
       Slept 2 seconds
      </msg>
      <status endtime="20240502 20:18:40.193" starttime="20240502 20:18:38.191" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       030_PSE.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240502 20:18:40.230">
       &lt;a href="pabot_results%5C12%5C030_PSE.jpg"&gt;&lt;img src="pabot_results%5C12%5C030_PSE.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:18:40.230" starttime="20240502 20:18:40.193" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:18:42.230">
       Slept 2 seconds
      </msg>
      <status endtime="20240502 20:18:42.230" starttime="20240502 20:18:40.230" status="PASS"/>
     </kw>
     <status endtime="20240502 20:18:42.230" starttime="20240502 20:18:34.173" status="PASS"/>
    </kw>
    <kw library="STRUST" name="SSL server standard">
     <kw library="SAP_Tcode_Library" name="Double Click On Tree Item">
      <arg>
       wnd[0]/shellcont/shell
      </arg>
      <arg>
       SSLSDFAULT
      </arg>
      <status endtime="20240502 20:18:42.751" starttime="20240502 20:18:42.230" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:18:44.752">
       Slept 2 seconds
      </msg>
      <status endtime="20240502 20:18:44.752" starttime="20240502 20:18:42.752" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       031_SSLSDFAULT.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240502 20:18:44.799">
       &lt;a href="pabot_results%5C12%5C031_SSLSDFAULT.jpg"&gt;&lt;img src="pabot_results%5C12%5C031_SSLSDFAULT.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:18:44.799" starttime="20240502 20:18:44.752" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:18:46.800">
       Slept 2 seconds
      </msg>
      <status endtime="20240502 20:18:46.800" starttime="20240502 20:18:44.799" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Scroll Pagedown">
      <arg>
       wnd[0]/usr/btnCERTDETAIL
      </arg>
      <status endtime="20240502 20:18:46.853" starttime="20240502 20:18:46.800" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:18:48.853">
       Slept 2 seconds
      </msg>
      <status endtime="20240502 20:18:48.853" starttime="20240502 20:18:46.853" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       032_SSLSDFAULT.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240502 20:18:48.899">
       &lt;a href="pabot_results%5C12%5C032_SSLSDFAULT.jpg"&gt;&lt;img src="pabot_results%5C12%5C032_SSLSDFAULT.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:18:48.899" starttime="20240502 20:18:48.853" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:18:50.900">
       Slept 2 seconds
      </msg>
      <status endtime="20240502 20:18:50.900" starttime="20240502 20:18:48.899" status="PASS"/>
     </kw>
     <status endtime="20240502 20:18:50.900" starttime="20240502 20:18:42.230" status="PASS"/>
    </kw>
    <kw library="STRUST" name="SSL client SSL Client (Anonymous)">
     <kw library="SAP_Tcode_Library" name="Double Click On Tree Item">
      <arg>
       wnd[0]/shellcont/shell
      </arg>
      <arg>
       SSLCANONYM
      </arg>
      <status endtime="20240502 20:18:51.339" starttime="20240502 20:18:50.900" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:18:53.350">
       Slept 2 seconds
      </msg>
      <status endtime="20240502 20:18:53.350" starttime="20240502 20:18:51.339" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       033_SSLCANONYM.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240502 20:18:53.420">
       &lt;a href="pabot_results%5C12%5C033_SSLCANONYM.jpg"&gt;&lt;img src="pabot_results%5C12%5C033_SSLCANONYM.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:18:53.420" starttime="20240502 20:18:53.350" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:18:55.421">
       Slept 2 seconds
      </msg>
      <status endtime="20240502 20:18:55.421" starttime="20240502 20:18:53.420" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Scroll Pagedown">
      <arg>
       wnd[0]/usr/btnCERTDETAIL
      </arg>
      <status endtime="20240502 20:18:55.460" starttime="20240502 20:18:55.421" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:18:57.471">
       Slept 2 seconds
      </msg>
      <status endtime="20240502 20:18:57.471" starttime="20240502 20:18:55.470" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       034_SSLCANONYM.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240502 20:18:57.532">
       &lt;a href="pabot_results%5C12%5C034_SSLCANONYM.jpg"&gt;&lt;img src="pabot_results%5C12%5C034_SSLCANONYM.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:18:57.532" starttime="20240502 20:18:57.471" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:18:59.532">
       Slept 2 seconds
      </msg>
      <status endtime="20240502 20:18:59.532" starttime="20240502 20:18:57.532" status="PASS"/>
     </kw>
     <status endtime="20240502 20:18:59.532" starttime="20240502 20:18:50.900" status="PASS"/>
    </kw>
    <kw library="STRUST" name="SSL client SSL Client (Standard)">
     <kw library="SAP_Tcode_Library" name="Double Click On Tree Item">
      <arg>
       wnd[0]/shellcont/shell
      </arg>
      <arg>
       SSLCDFAULT
      </arg>
      <status endtime="20240502 20:19:00.028" starttime="20240502 20:18:59.532" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:19:02.028">
       Slept 2 seconds
      </msg>
      <status endtime="20240502 20:19:02.028" starttime="20240502 20:19:00.028" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       035_SSLCDFAULT.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240502 20:19:02.104">
       &lt;a href="pabot_results%5C12%5C035_SSLCDFAULT.jpg"&gt;&lt;img src="pabot_results%5C12%5C035_SSLCDFAULT.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:19:02.104" starttime="20240502 20:19:02.028" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:19:04.105">
       Slept 2 seconds
      </msg>
      <status endtime="20240502 20:19:04.105" starttime="20240502 20:19:02.105" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Scroll Pagedown">
      <arg>
       wnd[0]/usr/btnCERTDETAIL
      </arg>
      <status endtime="20240502 20:19:04.162" starttime="20240502 20:19:04.106" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:19:06.162">
       Slept 2 seconds
      </msg>
      <status endtime="20240502 20:19:06.162" starttime="20240502 20:19:04.162" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       036_SSLCDFAULT.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240502 20:19:06.213">
       &lt;a href="pabot_results%5C12%5C036_SSLCDFAULT.jpg"&gt;&lt;img src="pabot_results%5C12%5C036_SSLCDFAULT.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:19:06.213" starttime="20240502 20:19:06.162" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:19:08.214">
       Slept 2 seconds
      </msg>
      <status endtime="20240502 20:19:08.214" starttime="20240502 20:19:06.213" status="PASS"/>
     </kw>
     <status endtime="20240502 20:19:08.214" starttime="20240502 20:18:59.532" status="PASS"/>
    </kw>
    <kw library="STRUST" name="WS Security Other System Encryption">
     <kw library="SAP_Tcode_Library" name="Double Click On Tree Item">
      <arg>
       wnd[0]/shellcont/shell
      </arg>
      <arg>
       WSSEWSSCRT
      </arg>
      <status endtime="20240502 20:19:08.711" starttime="20240502 20:19:08.214" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:19:10.713">
       Slept 2 seconds
      </msg>
      <status endtime="20240502 20:19:10.713" starttime="20240502 20:19:08.712" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       037_WSSEWSSCRT.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240502 20:19:10.782">
       &lt;a href="pabot_results%5C12%5C037_WSSEWSSCRT.jpg"&gt;&lt;img src="pabot_results%5C12%5C037_WSSEWSSCRT.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:19:10.782" starttime="20240502 20:19:10.713" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:19:12.783">
       Slept 2 seconds
      </msg>
      <status endtime="20240502 20:19:12.783" starttime="20240502 20:19:10.782" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Scroll Pagedown">
      <arg>
       wnd[0]/usr/btnCERTDETAIL
      </arg>
      <status endtime="20240502 20:19:13.037" starttime="20240502 20:19:12.783" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:19:15.038">
       Slept 2 seconds
      </msg>
      <status endtime="20240502 20:19:15.038" starttime="20240502 20:19:13.037" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       038_WSSEWSSCRT.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:19:15.043">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:19:15.043">
       &lt;a href="038_WSSEWSSCRT.jpg"&gt;&lt;img src="038_WSSEWSSCRT.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:19:15.043" starttime="20240502 20:19:15.038" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:19:17.043">
       Slept 2 seconds
      </msg>
      <status endtime="20240502 20:19:17.043" starttime="20240502 20:19:15.043" status="PASS"/>
     </kw>
     <status endtime="20240502 20:19:17.043" starttime="20240502 20:19:08.214" status="PASS"/>
    </kw>
    <kw library="STRUST" name="SSF Logon Ticket">
     <kw library="SAP_Tcode_Library" name="Double Click On Tree Item">
      <arg>
       wnd[0]/shellcont/shell
      </arg>
      <arg>
       SSFASSO2
      </arg>
      <status endtime="20240502 20:19:17.546" starttime="20240502 20:19:17.043" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:19:19.550">
       Slept 2 seconds
      </msg>
      <status endtime="20240502 20:19:19.550" starttime="20240502 20:19:17.546" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       039_SSFASSO2.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:19:19.550">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:19:19.550">
       &lt;a href="pabot_results%5C1%5C039_SSFASSO2.jpg"&gt;&lt;img src="pabot_results%5C1%5C039_SSFASSO2.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:19:19.550" starttime="20240502 20:19:19.550" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:19:21.556">
       Slept 2 seconds
      </msg>
      <status endtime="20240502 20:19:21.556" starttime="20240502 20:19:19.550" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Scroll Pagedown">
      <arg>
       wnd[0]/usr/btnCERTDETAIL
      </arg>
      <status endtime="20240502 20:19:21.765" starttime="20240502 20:19:21.556" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:19:23.767">
       Slept 2 seconds
      </msg>
      <status endtime="20240502 20:19:23.767" starttime="20240502 20:19:21.766" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       040_SSFASSO2.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:19:23.767">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:19:23.767">
       &lt;a href="pabot_results%5C1%5C040_SSFASSO2.jpg"&gt;&lt;img src="pabot_results%5C1%5C040_SSFASSO2.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:19:23.767" starttime="20240502 20:19:23.767" status="PASS"/>
     </kw>
     <status endtime="20240502 20:19:23.767" starttime="20240502 20:19:17.043" status="PASS"/>
    </kw>
    <tag>
     Migration
    </tag>
    <status endtime="20240502 20:19:23.767" starttime="20240502 20:18:34.173" status="PASS"/>
   </test>
   <kw library="STRUST" name="System Logout" type="TEARDOWN">
    <kw library="SAP_Tcode_Library" name="Run Transaction">
     <arg>
      /nex
     </arg>
     <doc>
      Runs a Sap transaction. An error is given when an unknown transaction is specified.
     </doc>
     <status endtime="20240502 20:19:24.126" starttime="20240502 20:19:23.767" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      5
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240502 20:19:29.127">
      Slept 5 seconds
     </msg>
     <status endtime="20240502 20:19:29.127" starttime="20240502 20:19:24.126" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Take Screenshot">
     <arg>
      logoutpage.jpg
     </arg>
     <doc>
      Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
     </doc>
     <msg level="WARN" timestamp="20240502 20:19:29.127">
      Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
     </msg>
     <msg html="true" level="INFO" timestamp="20240502 20:19:29.127">
      &lt;a href="pabot_results%5C11%5Clogoutpage.jpg"&gt;&lt;img src="pabot_results%5C11%5Clogoutpage.jpg" width="800px"&gt;&lt;/a&gt;
     </msg>
     <status endtime="20240502 20:19:29.127" starttime="20240502 20:19:29.127" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      10
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240502 20:19:39.127">
      Slept 10 seconds
     </msg>
     <status endtime="20240502 20:19:39.127" starttime="20240502 20:19:29.127" status="PASS"/>
    </kw>
    <status endtime="20240502 20:19:39.127" starttime="20240502 20:19:23.767" status="PASS"/>
   </kw>
   <status endtime="20240502 20:19:39.127" starttime="20240502 20:18:20.648" status="PASS"/>
  </suite>
  <suite id="s1-s14" name="Test Uconcockpit" source="C:\SAP_Testing\SAPtesting\Tests\Test_Uconcockpit.robot">
   <kw library="Uconcockpit" name="System Logon" type="SETUP">
    <kw library="Process" name="Start Process">
     <arg>
      ${symvar('SAP_SERVER')}
     </arg>
     <doc>
      Starts a new process on background.
     </doc>
     <msg level="INFO" timestamp="20240502 20:19:07.493">
      Sym.Dev.SAP_SERVER: C:\Program Files\SAP\FrontEnd\SAPGUI\saplogon.exe
     </msg>
     <msg level="INFO" timestamp="20240502 20:19:07.493">
      Starting process:
"C:\Program Files\SAP\FrontEnd\SAPGUI\saplogon.exe"
     </msg>
     <status endtime="20240502 20:19:07.497" starttime="20240502 20:19:07.492" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      10s
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240502 20:19:17.499">
      Slept 10 seconds
     </msg>
     <status endtime="20240502 20:19:17.499" starttime="20240502 20:19:07.498" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Connect To Session">
     <doc>
      Connects to an open session SAP.
     </doc>
     <status endtime="20240502 20:19:17.564" starttime="20240502 20:19:17.499" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Open Connection">
     <arg>
      ${symvar('SAP_connection')}
     </arg>
     <doc>
      Opens a connection to the given connection name. Be sure to provide the full connection name, including the bracket part.
     </doc>
     <msg level="INFO" timestamp="20240502 20:19:17.566">
      Sym.Dev.SAP_connection: BIS
     </msg>
     <status endtime="20240502 20:19:18.678" starttime="20240502 20:19:17.565" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Input Text">
     <arg>
      wnd[0]/usr/txtRSYST-MANDT
     </arg>
     <arg>
      ${symvar('Client_Id')}
     </arg>
     <doc>
      Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.
     </doc>
     <msg level="INFO" timestamp="20240502 20:19:18.680">
      Sym.Dev.Client_Id: 001
     </msg>
     <msg level="INFO" timestamp="20240502 20:19:18.694">
      Typing text '001' into text field 'wnd[0]/usr/txtRSYST-MANDT'.
     </msg>
     <status endtime="20240502 20:19:18.694" starttime="20240502 20:19:18.678" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Input Text">
     <arg>
      wnd[0]/usr/txtRSYST-BNAME
     </arg>
     <arg>
      ${symvar('User_Name')}
     </arg>
     <doc>
      Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.
     </doc>
     <msg level="INFO" timestamp="20240502 20:19:18.694">
      Sym.Dev.User_Name: SELENIUM
     </msg>
     <msg level="INFO" timestamp="20240502 20:19:18.729">
      Typing text 'SELENIUM' into text field 'wnd[0]/usr/txtRSYST-BNAME'.
     </msg>
     <status endtime="20240502 20:19:18.729" starttime="20240502 20:19:18.694" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Input Password">
     <arg>
      wnd[0]/usr/pwdRSYST-BCODE
     </arg>
     <arg>
      %{SAP_PASSWORD}
     </arg>
     <doc>
      Inserts the given password into the text field identified by locator.
The password is not recorded in the log.
     </doc>
     <msg level="INFO" timestamp="20240502 20:19:18.736">
      Typing password into text field 'wnd[0]/usr/pwdRSYST-BCODE'.
     </msg>
     <status endtime="20240502 20:19:18.736" starttime="20240502 20:19:18.729" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Send Vkey">
     <arg>
      0
     </arg>
     <doc>
      Sends a SAP virtual key combination to the window, not into an element.
If you want to send a value to a text field, use `input text` instead.
     </doc>
     <status endtime="20240502 20:19:19.257" starttime="20240502 20:19:18.736" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Take Screenshot">
     <arg>
      00a_loginpage.jpg
     </arg>
     <doc>
      Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
     </doc>
     <msg level="WARN" timestamp="20240502 20:19:19.263">
      Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
     </msg>
     <msg html="true" level="INFO" timestamp="20240502 20:19:19.264">
      &lt;a href="pabot_results%5C0%5C00a_loginpage.jpg"&gt;&lt;img src="pabot_results%5C0%5C00a_loginpage.jpg" width="800px"&gt;&lt;/a&gt;
     </msg>
     <status endtime="20240502 20:19:19.264" starttime="20240502 20:19:19.257" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Multiple Logon Handling">
     <arg>
      wnd[1]
     </arg>
     <arg>
      wnd[1]/usr/radMULTI_LOGON_OPT2
     </arg>
     <arg>
      wnd[1]/tbar[0]/btn[0]
     </arg>
     <msg level="INFO" timestamp="20240502 20:19:19.963">
      Multiple logon exists
     </msg>
     <status endtime="20240502 20:19:19.963" starttime="20240502 20:19:19.264" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      1
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240502 20:19:20.978">
      Slept 1 second
     </msg>
     <status endtime="20240502 20:19:20.978" starttime="20240502 20:19:19.963" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Take Screenshot">
     <arg>
      00_multi_logon_handling.jpg
     </arg>
     <doc>
      Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
     </doc>
     <msg level="WARN" timestamp="20240502 20:19:20.983">
      Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
     </msg>
     <msg html="true" level="INFO" timestamp="20240502 20:19:20.983">
      &lt;a href="pabot_results%5C0%5C00_multi_logon_handling.jpg"&gt;&lt;img src="pabot_results%5C0%5C00_multi_logon_handling.jpg" width="800px"&gt;&lt;/a&gt;
     </msg>
     <status endtime="20240502 20:19:20.983" starttime="20240502 20:19:20.979" status="PASS"/>
    </kw>
    <status endtime="20240502 20:19:20.983" starttime="20240502 20:19:07.492" status="PASS"/>
   </kw>
   <test id="s1-s14-t1" line="9" name="Executing Uconcockpit">
    <kw library="Uconcockpit" name="Transaction Uconcockpit">
     <kw library="SAP_Tcode_Library" name="Run Transaction">
      <arg>
       /nUconcockpit
      </arg>
      <doc>
       Runs a Sap transaction. An error is given when an unknown transaction is specified.
      </doc>
      <status endtime="20240502 20:19:21.556" starttime="20240502 20:19:20.985" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Send Vkey">
      <arg>
       0
      </arg>
      <doc>
       Sends a SAP virtual key combination to the window, not into an element.
If you want to send a value to a text field, use `input text` instead.
      </doc>
      <status endtime="20240502 20:19:22.058" starttime="20240502 20:19:21.556" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       047_Uconcockpit.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:19:22.074">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:19:22.074">
       &lt;a href="047_Uconcockpit.jpg"&gt;&lt;img src="047_Uconcockpit.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:19:22.074" starttime="20240502 20:19:22.058" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:19:24.111">
       Slept 2 seconds
      </msg>
      <status endtime="20240502 20:19:24.111" starttime="20240502 20:19:22.074" status="PASS"/>
     </kw>
     <status endtime="20240502 20:19:24.111" starttime="20240502 20:19:20.985" status="PASS"/>
    </kw>
    <kw library="Uconcockpit" name="RFC Basic Scenario">
     <kw library="SAP_Tcode_Library" name="Select From List By Label">
      <arg>
       wnd[0]/usr/cmbP_SCEN
      </arg>
      <arg>
       RFC Basic Scenario
      </arg>
      <doc>
       Selects the specified option from the selection list.
      </doc>
      <status endtime="20240502 20:19:24.430" starttime="20240502 20:19:24.111" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:19:26.431">
       Slept 2 seconds
      </msg>
      <status endtime="20240502 20:19:26.431" starttime="20240502 20:19:24.430" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       048_Uconcockpit.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:19:26.431">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:19:26.431">
       &lt;a href="048_Uconcockpit.jpg"&gt;&lt;img src="048_Uconcockpit.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:19:26.431" starttime="20240502 20:19:26.431" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/tbar[1]/btn[8]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:19:27.764" starttime="20240502 20:19:26.431" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:19:29.766">
       Slept 2 seconds
      </msg>
      <status endtime="20240502 20:19:29.766" starttime="20240502 20:19:27.764" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       049_Uconcockpit.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:19:29.766">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:19:29.773">
       &lt;a href="049_Uconcockpit.jpg"&gt;&lt;img src="049_Uconcockpit.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:19:29.773" starttime="20240502 20:19:29.766" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/tbar[0]/btn[3]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:19:30.050" starttime="20240502 20:19:29.773" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:19:32.050">
       Slept 2 seconds
      </msg>
      <status endtime="20240502 20:19:32.050" starttime="20240502 20:19:30.050" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       050_Uconcockpit.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:19:32.050">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:19:32.050">
       &lt;a href="050_Uconcockpit.jpg"&gt;&lt;img src="050_Uconcockpit.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:19:32.050" starttime="20240502 20:19:32.050" status="PASS"/>
     </kw>
     <status endtime="20240502 20:19:32.050" starttime="20240502 20:19:24.111" status="PASS"/>
    </kw>
    <kw library="Uconcockpit" name="Role Building Scenario">
     <kw library="SAP_Tcode_Library" name="Select From List By Label">
      <arg>
       wnd[0]/usr/cmbP_SCEN
      </arg>
      <arg>
       Role Building Scenario
      </arg>
      <doc>
       Selects the specified option from the selection list.
      </doc>
      <status endtime="20240502 20:19:32.317" starttime="20240502 20:19:32.050" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:19:34.318">
       Slept 2 seconds
      </msg>
      <status endtime="20240502 20:19:34.318" starttime="20240502 20:19:32.317" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       051_Uconcockpit.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:19:34.318">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:19:34.318">
       &lt;a href="051_Uconcockpit.jpg"&gt;&lt;img src="051_Uconcockpit.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:19:34.318" starttime="20240502 20:19:34.318" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/tbar[1]/btn[8]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:19:35.210" starttime="20240502 20:19:34.318" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:19:37.210">
       Slept 2 seconds
      </msg>
      <status endtime="20240502 20:19:37.210" starttime="20240502 20:19:35.210" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       052_Uconcockpit.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:19:37.210">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:19:37.210">
       &lt;a href="052_Uconcockpit.jpg"&gt;&lt;img src="052_Uconcockpit.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:19:37.210" starttime="20240502 20:19:37.210" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/tbar[0]/btn[3]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:19:37.464" starttime="20240502 20:19:37.210" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:19:39.464">
       Slept 2 seconds
      </msg>
      <status endtime="20240502 20:19:39.464" starttime="20240502 20:19:37.464" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       053_Uconcockpit.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg level="WARN" timestamp="20240502 20:19:39.464">
       Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
      </msg>
      <msg html="true" level="INFO" timestamp="20240502 20:19:39.464">
       &lt;a href="053_Uconcockpit.jpg"&gt;&lt;img src="053_Uconcockpit.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:19:39.464" starttime="20240502 20:19:39.464" status="PASS"/>
     </kw>
     <status endtime="20240502 20:19:39.464" starttime="20240502 20:19:32.050" status="PASS"/>
    </kw>
    <tag>
     Migration
    </tag>
    <status endtime="20240502 20:19:39.464" starttime="20240502 20:19:20.983" status="PASS"/>
   </test>
   <kw library="Uconcockpit" name="System Logout" type="TEARDOWN">
    <kw library="SAP_Tcode_Library" name="Run Transaction">
     <arg>
      /nex
     </arg>
     <doc>
      Runs a Sap transaction. An error is given when an unknown transaction is specified.
     </doc>
     <status endtime="20240502 20:19:39.855" starttime="20240502 20:19:39.464" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      5
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240502 20:19:44.855">
      Slept 5 seconds
     </msg>
     <status endtime="20240502 20:19:44.855" starttime="20240502 20:19:39.855" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Take Screenshot">
     <arg>
      logoutpage.jpg
     </arg>
     <doc>
      Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
     </doc>
     <msg level="WARN" timestamp="20240502 20:19:44.860">
      Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
     </msg>
     <msg html="true" level="INFO" timestamp="20240502 20:19:44.860">
      &lt;a href="pabot_results%5C11%5Clogoutpage.jpg"&gt;&lt;img src="pabot_results%5C11%5Clogoutpage.jpg" width="800px"&gt;&lt;/a&gt;
     </msg>
     <status endtime="20240502 20:19:44.860" starttime="20240502 20:19:44.855" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      10
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240502 20:19:54.879">
      Slept 10 seconds
     </msg>
     <status endtime="20240502 20:19:54.880" starttime="20240502 20:19:44.860" status="PASS"/>
    </kw>
    <status endtime="20240502 20:19:54.894" starttime="20240502 20:19:39.464" status="PASS"/>
   </kw>
   <status endtime="20240502 20:19:54.894" starttime="20240502 20:19:07.474" status="PASS"/>
  </suite>
  <suite id="s1-s15" name="Test WE20" source="C:\SAP_Testing\SAPtesting\Tests\Test_WE20.robot">
   <kw library="WE20" name="System Logon" type="SETUP">
    <kw library="Process" name="Start Process">
     <arg>
      ${symvar('SAP_SERVER')}
     </arg>
     <doc>
      Starts a new process on background.
     </doc>
     <msg level="INFO" timestamp="20240502 20:19:43.841">
      Sym.Dev.SAP_SERVER: C:\Program Files\SAP\FrontEnd\SAPGUI\saplogon.exe
     </msg>
     <msg level="INFO" timestamp="20240502 20:19:43.841">
      Starting process:
"C:\Program Files\SAP\FrontEnd\SAPGUI\saplogon.exe"
     </msg>
     <status endtime="20240502 20:19:43.841" starttime="20240502 20:19:43.841" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      10s
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240502 20:19:53.841">
      Slept 10 seconds
     </msg>
     <status endtime="20240502 20:19:53.841" starttime="20240502 20:19:43.841" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Connect To Session">
     <doc>
      Connects to an open session SAP.
     </doc>
     <status endtime="20240502 20:19:53.853" starttime="20240502 20:19:53.841" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Open Connection">
     <arg>
      ${symvar('SAP_connection')}
     </arg>
     <doc>
      Opens a connection to the given connection name. Be sure to provide the full connection name, including the bracket part.
     </doc>
     <msg level="INFO" timestamp="20240502 20:19:53.854">
      Sym.Dev.SAP_connection: BIS
     </msg>
     <status endtime="20240502 20:19:54.904" starttime="20240502 20:19:53.853" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Input Text">
     <arg>
      wnd[0]/usr/txtRSYST-MANDT
     </arg>
     <arg>
      ${symvar('Client_Id')}
     </arg>
     <doc>
      Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.
     </doc>
     <msg level="INFO" timestamp="20240502 20:19:54.962">
      Sym.Dev.Client_Id: 001
     </msg>
     <msg level="INFO" timestamp="20240502 20:19:55.112">
      Typing text '001' into text field 'wnd[0]/usr/txtRSYST-MANDT'.
     </msg>
     <status endtime="20240502 20:19:55.138" starttime="20240502 20:19:54.904" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Input Text">
     <arg>
      wnd[0]/usr/txtRSYST-BNAME
     </arg>
     <arg>
      ${symvar('User_Name')}
     </arg>
     <doc>
      Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.
     </doc>
     <msg level="INFO" timestamp="20240502 20:19:55.139">
      Sym.Dev.User_Name: SELENIUM
     </msg>
     <msg level="INFO" timestamp="20240502 20:19:55.153">
      Typing text 'SELENIUM' into text field 'wnd[0]/usr/txtRSYST-BNAME'.
     </msg>
     <status endtime="20240502 20:19:55.291" starttime="20240502 20:19:55.138" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Input Password">
     <arg>
      wnd[0]/usr/pwdRSYST-BCODE
     </arg>
     <arg>
      %{SAP_PASSWORD}
     </arg>
     <doc>
      Inserts the given password into the text field identified by locator.
The password is not recorded in the log.
     </doc>
     <msg level="INFO" timestamp="20240502 20:19:55.309">
      Typing password into text field 'wnd[0]/usr/pwdRSYST-BCODE'.
     </msg>
     <status endtime="20240502 20:19:55.310" starttime="20240502 20:19:55.291" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Send Vkey">
     <arg>
      0
     </arg>
     <doc>
      Sends a SAP virtual key combination to the window, not into an element.
If you want to send a value to a text field, use `input text` instead.
     </doc>
     <status endtime="20240502 20:19:56.181" starttime="20240502 20:19:55.310" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Take Screenshot">
     <arg>
      00a_loginpage.jpg
     </arg>
     <doc>
      Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
     </doc>
     <msg html="true" level="INFO" timestamp="20240502 20:19:56.374">
      &lt;a href="pabot_results%5C0%5C00a_loginpage.jpg"&gt;&lt;img src="pabot_results%5C0%5C00a_loginpage.jpg" width="800px"&gt;&lt;/a&gt;
     </msg>
     <status endtime="20240502 20:19:56.374" starttime="20240502 20:19:56.181" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Multiple Logon Handling">
     <arg>
      wnd[1]
     </arg>
     <arg>
      wnd[1]/usr/radMULTI_LOGON_OPT2
     </arg>
     <arg>
      wnd[1]/tbar[0]/btn[0]
     </arg>
     <status endtime="20240502 20:19:56.374" starttime="20240502 20:19:56.374" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      1
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240502 20:19:57.374">
      Slept 1 second
     </msg>
     <status endtime="20240502 20:19:57.374" starttime="20240502 20:19:56.374" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Take Screenshot">
     <arg>
      00_multi_logon_handling.jpg
     </arg>
     <doc>
      Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
     </doc>
     <msg html="true" level="INFO" timestamp="20240502 20:19:57.412">
      &lt;a href="pabot_results%5C0%5C00_multi_logon_handling.jpg"&gt;&lt;img src="pabot_results%5C0%5C00_multi_logon_handling.jpg" width="800px"&gt;&lt;/a&gt;
     </msg>
     <status endtime="20240502 20:19:57.412" starttime="20240502 20:19:57.374" status="PASS"/>
    </kw>
    <status endtime="20240502 20:19:57.412" starttime="20240502 20:19:43.841" status="PASS"/>
   </kw>
   <test id="s1-s15-t1" line="9" name="Executing WE20">
    <kw library="WE20" name="Transaction WE20">
     <kw library="SAP_Tcode_Library" name="Run Transaction">
      <arg>
       /nwe20
      </arg>
      <doc>
       Runs a Sap transaction. An error is given when an unknown transaction is specified.
      </doc>
      <status endtime="20240502 20:19:58.353" starttime="20240502 20:19:57.428" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:19:59.427">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:19:59.427" starttime="20240502 20:19:58.353" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       084_WE20.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240502 20:19:59.489">
       &lt;a href="pabot_results%5C14%5C084_WE20.jpg"&gt;&lt;img src="pabot_results%5C14%5C084_WE20.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:19:59.489" starttime="20240502 20:19:59.427" status="PASS"/>
     </kw>
     <status endtime="20240502 20:19:59.489" starttime="20240502 20:19:57.428" status="PASS"/>
    </kw>
    <kw library="WE20" name="Partner type LS">
     <kw library="SAP_Tcode_Library" name="Select Node">
      <arg>
       wnd[0]/shellcont/shell
      </arg>
      <arg>
       LS
      </arg>
      <doc>
       Selects a node of a TableTreeControl 'tree_id' which is contained within a shell object.
      </doc>
      <status endtime="20240502 20:19:59.521" starttime="20240502 20:19:59.489" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:20:00.521">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:20:00.521" starttime="20240502 20:19:59.521" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       085_typeLS.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240502 20:20:00.587">
       &lt;a href="pabot_results%5C14%5C085_typeLS.jpg"&gt;&lt;img src="pabot_results%5C14%5C085_typeLS.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:20:00.587" starttime="20240502 20:20:00.521" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/tbar[1]/btn[46]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:20:01.053" starttime="20240502 20:20:00.587" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:20:02.071">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:20:02.071" starttime="20240502 20:20:01.053" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       086_typeLS.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240502 20:20:02.202">
       &lt;a href="pabot_results%5C14%5C086_typeLS.jpg"&gt;&lt;img src="pabot_results%5C14%5C086_typeLS.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:20:02.202" starttime="20240502 20:20:02.071" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Input Text">
      <arg>
       wnd[1]/usr/ctxtGSO_PTYP-LOW
      </arg>
      <arg>
       LS
      </arg>
      <doc>
       Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.
      </doc>
      <msg level="INFO" timestamp="20240502 20:20:02.233">
       Typing text 'LS' into text field 'wnd[1]/usr/ctxtGSO_PTYP-LOW'.
      </msg>
      <status endtime="20240502 20:20:02.254" starttime="20240502 20:20:02.202" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:20:03.256">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:20:03.256" starttime="20240502 20:20:02.255" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       087_typeLS.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240502 20:20:03.321">
       &lt;a href="pabot_results%5C14%5C087_typeLS.jpg"&gt;&lt;img src="pabot_results%5C14%5C087_typeLS.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:20:03.321" starttime="20240502 20:20:03.256" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[1]/tbar[0]/btn[8]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:20:03.986" starttime="20240502 20:20:03.321" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:20:05.997">
       Slept 2 seconds
      </msg>
      <status endtime="20240502 20:20:05.997" starttime="20240502 20:20:03.996" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       088_typeLS.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240502 20:20:06.067">
       &lt;a href="pabot_results%5C14%5C088_typeLS.jpg"&gt;&lt;img src="pabot_results%5C14%5C088_typeLS.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:20:06.067" starttime="20240502 20:20:05.997" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Get No Entries Found Text">
      <arg>
       wnd[0]/sbar/pane[0]
      </arg>
      <msg level="INFO" timestamp="20240502 20:20:06.077">
       Entries are displayed
      </msg>
      <status endtime="20240502 20:20:06.077" starttime="20240502 20:20:06.067" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:20:07.078">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:20:07.078" starttime="20240502 20:20:06.077" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       089_typeLS.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240502 20:20:07.150">
       &lt;a href="pabot_results%5C14%5C089_typeLS.jpg"&gt;&lt;img src="pabot_results%5C14%5C089_typeLS.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:20:07.150" starttime="20240502 20:20:07.078" status="PASS"/>
     </kw>
     <status endtime="20240502 20:20:07.150" starttime="20240502 20:19:59.489" status="PASS"/>
    </kw>
    <kw library="WE20" name="Partner type LI">
     <kw library="SAP_Tcode_Library" name="Select Node">
      <arg>
       wnd[0]/shellcont/shell
      </arg>
      <arg>
       LI
      </arg>
      <doc>
       Selects a node of a TableTreeControl 'tree_id' which is contained within a shell object.
      </doc>
      <status endtime="20240502 20:20:07.160" starttime="20240502 20:20:07.150" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:20:08.165">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:20:08.165" starttime="20240502 20:20:07.160" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       090_typeLI.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240502 20:20:08.238">
       &lt;a href="pabot_results%5C14%5C090_typeLI.jpg"&gt;&lt;img src="pabot_results%5C14%5C090_typeLI.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:20:08.238" starttime="20240502 20:20:08.165" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/tbar[1]/btn[46]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:20:08.705" starttime="20240502 20:20:08.238" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:20:09.706">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:20:09.706" starttime="20240502 20:20:08.705" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       091_typeLI.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240502 20:20:09.775">
       &lt;a href="pabot_results%5C14%5C091_typeLI.jpg"&gt;&lt;img src="pabot_results%5C14%5C091_typeLI.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:20:09.775" starttime="20240502 20:20:09.706" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Input Text">
      <arg>
       wnd[1]/usr/ctxtGSO_PTYP-LOW
      </arg>
      <arg>
       LI
      </arg>
      <doc>
       Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.
      </doc>
      <msg level="INFO" timestamp="20240502 20:20:09.816">
       Typing text 'LI' into text field 'wnd[1]/usr/ctxtGSO_PTYP-LOW'.
      </msg>
      <status endtime="20240502 20:20:09.816" starttime="20240502 20:20:09.775" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:20:10.816">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:20:10.816" starttime="20240502 20:20:09.816" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       092_typeLI.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240502 20:20:11.007">
       &lt;a href="pabot_results%5C14%5C092_typeLI.jpg"&gt;&lt;img src="pabot_results%5C14%5C092_typeLI.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:20:11.007" starttime="20240502 20:20:10.816" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[1]/tbar[0]/btn[8]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:20:11.447" starttime="20240502 20:20:11.007" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       2
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:20:13.451">
       Slept 2 seconds
      </msg>
      <status endtime="20240502 20:20:13.451" starttime="20240502 20:20:11.447" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       093_typeLI.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240502 20:20:13.517">
       &lt;a href="pabot_results%5C14%5C093_typeLI.jpg"&gt;&lt;img src="pabot_results%5C14%5C093_typeLI.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:20:13.517" starttime="20240502 20:20:13.451" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Get No Entries Found Text">
      <arg>
       wnd[0]/sbar/pane[0]
      </arg>
      <msg level="INFO" timestamp="20240502 20:20:13.520">
       No entries found that match selection criteria
      </msg>
      <status endtime="20240502 20:20:13.520" starttime="20240502 20:20:13.517" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:20:14.525">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:20:14.525" starttime="20240502 20:20:13.521" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       094_typeLI.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240502 20:20:14.591">
       &lt;a href="pabot_results%5C14%5C094_typeLI.jpg"&gt;&lt;img src="pabot_results%5C14%5C094_typeLI.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:20:14.591" starttime="20240502 20:20:14.525" status="PASS"/>
     </kw>
     <status endtime="20240502 20:20:14.591" starttime="20240502 20:20:07.150" status="PASS"/>
    </kw>
    <tag>
     Migration
    </tag>
    <status endtime="20240502 20:20:14.593" starttime="20240502 20:19:57.412" status="PASS"/>
   </test>
   <kw library="WE20" name="System Logout" type="TEARDOWN">
    <kw library="SAP_Tcode_Library" name="Run Transaction">
     <arg>
      /nex
     </arg>
     <doc>
      Runs a Sap transaction. An error is given when an unknown transaction is specified.
     </doc>
     <status endtime="20240502 20:20:15.293" starttime="20240502 20:20:14.593" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      5
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240502 20:20:20.296">
      Slept 5 seconds
     </msg>
     <status endtime="20240502 20:20:20.296" starttime="20240502 20:20:15.293" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Take Screenshot">
     <arg>
      logoutpage.jpg
     </arg>
     <doc>
      Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
     </doc>
     <msg html="true" level="INFO" timestamp="20240502 20:20:20.442">
      &lt;a href="pabot_results%5C11%5Clogoutpage.jpg"&gt;&lt;img src="pabot_results%5C11%5Clogoutpage.jpg" width="800px"&gt;&lt;/a&gt;
     </msg>
     <status endtime="20240502 20:20:20.442" starttime="20240502 20:20:20.296" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      10
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240502 20:20:30.442">
      Slept 10 seconds
     </msg>
     <status endtime="20240502 20:20:30.442" starttime="20240502 20:20:20.442" status="PASS"/>
    </kw>
    <status endtime="20240502 20:20:30.442" starttime="20240502 20:20:14.593" status="PASS"/>
   </kw>
   <status endtime="20240502 20:20:30.442" starttime="20240502 20:19:43.825" status="PASS"/>
  </suite>
  <suite id="s1-s16" name="Test WE21" source="C:\SAP_Testing\SAPtesting\Tests\Test_WE21.robot">
   <kw library="WE21" name="System Logon" type="SETUP">
    <kw library="Process" name="Start Process">
     <arg>
      ${symvar('SAP_SERVER')}
     </arg>
     <doc>
      Starts a new process on background.
     </doc>
     <msg level="INFO" timestamp="20240502 20:20:01.795">
      Sym.Dev.SAP_SERVER: C:\Program Files\SAP\FrontEnd\SAPGUI\saplogon.exe
     </msg>
     <msg level="INFO" timestamp="20240502 20:20:01.795">
      Starting process:
"C:\Program Files\SAP\FrontEnd\SAPGUI\saplogon.exe"
     </msg>
     <status endtime="20240502 20:20:01.795" starttime="20240502 20:20:01.795" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      10s
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240502 20:20:11.795">
      Slept 10 seconds
     </msg>
     <status endtime="20240502 20:20:11.795" starttime="20240502 20:20:01.795" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Connect To Session">
     <doc>
      Connects to an open session SAP.
     </doc>
     <status endtime="20240502 20:20:11.802" starttime="20240502 20:20:11.795" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Open Connection">
     <arg>
      ${symvar('SAP_connection')}
     </arg>
     <doc>
      Opens a connection to the given connection name. Be sure to provide the full connection name, including the bracket part.
     </doc>
     <msg level="INFO" timestamp="20240502 20:20:11.802">
      Sym.Dev.SAP_connection: BIS
     </msg>
     <status endtime="20240502 20:20:13.167" starttime="20240502 20:20:11.802" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Input Text">
     <arg>
      wnd[0]/usr/txtRSYST-MANDT
     </arg>
     <arg>
      ${symvar('Client_Id')}
     </arg>
     <doc>
      Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.
     </doc>
     <msg level="INFO" timestamp="20240502 20:20:13.168">
      Sym.Dev.Client_Id: 001
     </msg>
     <msg level="INFO" timestamp="20240502 20:20:13.181">
      Typing text '001' into text field 'wnd[0]/usr/txtRSYST-MANDT'.
     </msg>
     <status endtime="20240502 20:20:13.181" starttime="20240502 20:20:13.167" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Input Text">
     <arg>
      wnd[0]/usr/txtRSYST-BNAME
     </arg>
     <arg>
      ${symvar('User_Name')}
     </arg>
     <doc>
      Inserts the given text into the text field identified by locator.
Use keyword `input password` to insert a password in a text field.
     </doc>
     <msg level="INFO" timestamp="20240502 20:20:13.182">
      Sym.Dev.User_Name: SELENIUM
     </msg>
     <msg level="INFO" timestamp="20240502 20:20:13.201">
      Typing text 'SELENIUM' into text field 'wnd[0]/usr/txtRSYST-BNAME'.
     </msg>
     <status endtime="20240502 20:20:13.201" starttime="20240502 20:20:13.181" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Input Password">
     <arg>
      wnd[0]/usr/pwdRSYST-BCODE
     </arg>
     <arg>
      %{SAP_PASSWORD}
     </arg>
     <doc>
      Inserts the given password into the text field identified by locator.
The password is not recorded in the log.
     </doc>
     <msg level="INFO" timestamp="20240502 20:20:13.208">
      Typing password into text field 'wnd[0]/usr/pwdRSYST-BCODE'.
     </msg>
     <status endtime="20240502 20:20:13.208" starttime="20240502 20:20:13.201" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Send Vkey">
     <arg>
      0
     </arg>
     <doc>
      Sends a SAP virtual key combination to the window, not into an element.
If you want to send a value to a text field, use `input text` instead.
     </doc>
     <status endtime="20240502 20:20:13.692" starttime="20240502 20:20:13.209" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Take Screenshot">
     <arg>
      00a_loginpage.jpg
     </arg>
     <doc>
      Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
     </doc>
     <msg html="true" level="INFO" timestamp="20240502 20:20:13.808">
      &lt;a href="pabot_results%5C0%5C00a_loginpage.jpg"&gt;&lt;img src="pabot_results%5C0%5C00a_loginpage.jpg" width="800px"&gt;&lt;/a&gt;
     </msg>
     <status endtime="20240502 20:20:13.809" starttime="20240502 20:20:13.692" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Multiple Logon Handling">
     <arg>
      wnd[1]
     </arg>
     <arg>
      wnd[1]/usr/radMULTI_LOGON_OPT2
     </arg>
     <arg>
      wnd[1]/tbar[0]/btn[0]
     </arg>
     <msg level="INFO" timestamp="20240502 20:20:14.495">
      Multiple logon exists
     </msg>
     <status endtime="20240502 20:20:14.495" starttime="20240502 20:20:13.809" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      1
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240502 20:20:15.518">
      Slept 1 second
     </msg>
     <status endtime="20240502 20:20:15.518" starttime="20240502 20:20:14.495" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Take Screenshot">
     <arg>
      00_multi_logon_handling.jpg
     </arg>
     <doc>
      Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
     </doc>
     <msg html="true" level="INFO" timestamp="20240502 20:20:15.563">
      &lt;a href="pabot_results%5C0%5C00_multi_logon_handling.jpg"&gt;&lt;img src="pabot_results%5C0%5C00_multi_logon_handling.jpg" width="800px"&gt;&lt;/a&gt;
     </msg>
     <status endtime="20240502 20:20:15.563" starttime="20240502 20:20:15.518" status="PASS"/>
    </kw>
    <status endtime="20240502 20:20:15.563" starttime="20240502 20:20:01.795" status="PASS"/>
   </kw>
   <test id="s1-s16-t1" line="10" name="Executing WE21">
    <kw library="WE21" name="Transaction WE21">
     <kw library="SAP_Tcode_Library" name="Run Transaction">
      <arg>
       /nwe21
      </arg>
      <doc>
       Runs a Sap transaction. An error is given when an unknown transaction is specified.
      </doc>
      <status endtime="20240502 20:20:16.423" starttime="20240502 20:20:15.568" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:20:17.424">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:20:17.424" starttime="20240502 20:20:16.423" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       095_WE21.JPG
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240502 20:20:17.472">
       &lt;a href="pabot_results%5C15%5C095_WE21.JPG"&gt;&lt;img src="pabot_results%5C15%5C095_WE21.JPG" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:20:17.473" starttime="20240502 20:20:17.424" status="PASS"/>
     </kw>
     <status endtime="20240502 20:20:17.473" starttime="20240502 20:20:15.563" status="PASS"/>
    </kw>
    <kw library="WE21" name="Transactional RFC">
     <kw library="SAP_Tcode_Library" name="Select Node">
      <arg>
       wnd[0]/shellcont/shell
      </arg>
      <arg>
       A
      </arg>
      <doc>
       Selects a node of a TableTreeControl 'tree_id' which is contained within a shell object.
      </doc>
      <status endtime="20240502 20:20:17.489" starttime="20240502 20:20:17.473" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:20:18.489">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:20:18.489" starttime="20240502 20:20:17.489" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       096_rfc.JPG
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240502 20:20:18.531">
       &lt;a href="pabot_results%5C15%5C096_rfc.JPG"&gt;&lt;img src="pabot_results%5C15%5C096_rfc.JPG" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:20:18.531" starttime="20240502 20:20:18.489" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/mbar/menu[0]/menu[2]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:20:18.888" starttime="20240502 20:20:18.531" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:20:19.889">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:20:19.889" starttime="20240502 20:20:18.888" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       097_rfc.JPG
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240502 20:20:19.922">
       &lt;a href="pabot_results%5C15%5C097_rfc.JPG"&gt;&lt;img src="pabot_results%5C15%5C097_rfc.JPG" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:20:19.922" starttime="20240502 20:20:19.889" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[1]/tbar[0]/btn[0]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:20:20.457" starttime="20240502 20:20:19.922" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:20:21.458">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:20:21.458" starttime="20240502 20:20:20.457" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       098_rfc.JPG
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240502 20:20:21.512">
       &lt;a href="pabot_results%5C15%5C098_rfc.JPG"&gt;&lt;img src="pabot_results%5C15%5C098_rfc.JPG" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:20:21.512" starttime="20240502 20:20:21.458" status="PASS"/>
     </kw>
     <status endtime="20240502 20:20:21.512" starttime="20240502 20:20:17.473" status="PASS"/>
    </kw>
    <kw library="WE21" name="File Port">
     <kw library="SAP_Tcode_Library" name="Select Node">
      <arg>
       wnd[0]/shellcont/shell
      </arg>
      <arg>
       D
      </arg>
      <doc>
       Selects a node of a TableTreeControl 'tree_id' which is contained within a shell object.
      </doc>
      <status endtime="20240502 20:20:21.524" starttime="20240502 20:20:21.512" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:20:22.525">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:20:22.525" starttime="20240502 20:20:21.524" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       099_fileport.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240502 20:20:22.593">
       &lt;a href="pabot_results%5C15%5C099_fileport.jpg"&gt;&lt;img src="pabot_results%5C15%5C099_fileport.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:20:22.593" starttime="20240502 20:20:22.525" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/tbar[1]/btn[20]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:20:22.893" starttime="20240502 20:20:22.593" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:20:23.893">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:20:23.893" starttime="20240502 20:20:22.893" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       100_fileport.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240502 20:20:23.944">
       &lt;a href="pabot_results%5C15%5C100_fileport.jpg"&gt;&lt;img src="pabot_results%5C15%5C100_fileport.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:20:23.944" starttime="20240502 20:20:23.893" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[1]/tbar[0]/btn[0]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:20:24.434" starttime="20240502 20:20:23.944" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:20:25.434">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:20:25.434" starttime="20240502 20:20:24.434" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       101_fileport.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240502 20:20:25.493">
       &lt;a href="pabot_results%5C15%5C101_fileport.jpg"&gt;&lt;img src="pabot_results%5C15%5C101_fileport.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:20:25.493" starttime="20240502 20:20:25.434" status="PASS"/>
     </kw>
     <status endtime="20240502 20:20:25.493" starttime="20240502 20:20:21.512" status="PASS"/>
    </kw>
    <kw library="WE21" name="ABAP-PI">
     <kw library="SAP_Tcode_Library" name="Select Node">
      <arg>
       wnd[0]/shellcont/shell
      </arg>
      <arg>
       S
      </arg>
      <doc>
       Selects a node of a TableTreeControl 'tree_id' which is contained within a shell object.
      </doc>
      <status endtime="20240502 20:20:25.527" starttime="20240502 20:20:25.493" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:20:26.528">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:20:26.528" starttime="20240502 20:20:25.528" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       102_ABAP-PI.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240502 20:20:26.603">
       &lt;a href="pabot_results%5C15%5C102_ABAP-PI.jpg"&gt;&lt;img src="pabot_results%5C15%5C102_ABAP-PI.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:20:26.603" starttime="20240502 20:20:26.528" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/tbar[1]/btn[20]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:20:26.896" starttime="20240502 20:20:26.603" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:20:27.897">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:20:27.897" starttime="20240502 20:20:26.896" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       103_ABAP-PI.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240502 20:20:27.965">
       &lt;a href="pabot_results%5C15%5C103_ABAP-PI.jpg"&gt;&lt;img src="pabot_results%5C15%5C103_ABAP-PI.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:20:27.965" starttime="20240502 20:20:27.897" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[1]/tbar[0]/btn[0]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:20:28.450" starttime="20240502 20:20:27.965" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:20:29.450">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:20:29.450" starttime="20240502 20:20:28.450" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       104_ABAP-PI.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240502 20:20:29.490">
       &lt;a href="pabot_results%5C15%5C104_ABAP-PI.jpg"&gt;&lt;img src="pabot_results%5C15%5C104_ABAP-PI.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:20:29.490" starttime="20240502 20:20:29.450" status="PASS"/>
     </kw>
     <status endtime="20240502 20:20:29.490" starttime="20240502 20:20:25.493" status="PASS"/>
    </kw>
    <kw library="WE21" name="XML File">
     <kw library="SAP_Tcode_Library" name="Select Node">
      <arg>
       wnd[0]/shellcont/shell
      </arg>
      <arg>
       X
      </arg>
      <doc>
       Selects a node of a TableTreeControl 'tree_id' which is contained within a shell object.
      </doc>
      <status endtime="20240502 20:20:29.494" starttime="20240502 20:20:29.490" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:20:30.495">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:20:30.495" starttime="20240502 20:20:29.494" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       105_XML.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240502 20:20:30.810">
       &lt;a href="pabot_results%5C15%5C105_XML.jpg"&gt;&lt;img src="pabot_results%5C15%5C105_XML.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:20:30.810" starttime="20240502 20:20:30.495" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/tbar[1]/btn[20]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:20:31.085" starttime="20240502 20:20:30.810" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:20:32.085">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:20:32.085" starttime="20240502 20:20:31.085" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       106_XML.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240502 20:20:32.134">
       &lt;a href="pabot_results%5C15%5C106_XML.jpg"&gt;&lt;img src="pabot_results%5C15%5C106_XML.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:20:32.134" starttime="20240502 20:20:32.085" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[1]/tbar[0]/btn[0]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:20:32.697" starttime="20240502 20:20:32.134" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:20:33.714">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:20:33.714" starttime="20240502 20:20:32.697" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       107_XML.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240502 20:20:33.758">
       &lt;a href="pabot_results%5C15%5C107_XML.jpg"&gt;&lt;img src="pabot_results%5C15%5C107_XML.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:20:33.758" starttime="20240502 20:20:33.714" status="PASS"/>
     </kw>
     <status endtime="20240502 20:20:33.758" starttime="20240502 20:20:29.490" status="PASS"/>
    </kw>
    <kw library="WE21" name="XML HTTP">
     <kw library="SAP_Tcode_Library" name="Select Node">
      <arg>
       wnd[0]/shellcont/shell
      </arg>
      <arg>
       H
      </arg>
      <doc>
       Selects a node of a TableTreeControl 'tree_id' which is contained within a shell object.
      </doc>
      <status endtime="20240502 20:20:33.769" starttime="20240502 20:20:33.758" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:20:34.770">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:20:34.770" starttime="20240502 20:20:33.769" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       108_HTTP.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240502 20:20:34.817">
       &lt;a href="pabot_results%5C15%5C108_HTTP.jpg"&gt;&lt;img src="pabot_results%5C15%5C108_HTTP.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:20:34.817" starttime="20240502 20:20:34.770" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[0]/tbar[1]/btn[20]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:20:35.137" starttime="20240502 20:20:34.817" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:20:36.139">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:20:36.139" starttime="20240502 20:20:35.138" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       109_HTTP.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240502 20:20:36.202">
       &lt;a href="pabot_results%5C15%5C109_HTTP.jpg"&gt;&lt;img src="pabot_results%5C15%5C109_HTTP.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:20:36.202" starttime="20240502 20:20:36.139" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Click Element">
      <arg>
       wnd[1]/tbar[0]/btn[0]
      </arg>
      <doc>
       Performs a single click on a given element. Used only for buttons, tabs and menu items.
      </doc>
      <status endtime="20240502 20:20:36.704" starttime="20240502 20:20:36.202" status="PASS"/>
     </kw>
     <kw library="BuiltIn" name="Sleep">
      <arg>
       1
      </arg>
      <doc>
       Pauses the test executed for the given time.
      </doc>
      <msg level="INFO" timestamp="20240502 20:20:37.704">
       Slept 1 second
      </msg>
      <status endtime="20240502 20:20:37.704" starttime="20240502 20:20:36.704" status="PASS"/>
     </kw>
     <kw library="SAP_Tcode_Library" name="Take Screenshot">
      <arg>
       110_HTTP.jpg
      </arg>
      <doc>
       Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
      </doc>
      <msg html="true" level="INFO" timestamp="20240502 20:20:37.751">
       &lt;a href="pabot_results%5C15%5C110_HTTP.jpg"&gt;&lt;img src="pabot_results%5C15%5C110_HTTP.jpg" width="800px"&gt;&lt;/a&gt;
      </msg>
      <status endtime="20240502 20:20:37.751" starttime="20240502 20:20:37.704" status="PASS"/>
     </kw>
     <status endtime="20240502 20:20:37.751" starttime="20240502 20:20:33.758" status="PASS"/>
    </kw>
    <tag>
     Migration
    </tag>
    <status endtime="20240502 20:20:37.751" starttime="20240502 20:20:15.563" status="PASS"/>
   </test>
   <kw library="WE21" name="System Logout" type="TEARDOWN">
    <kw library="SAP_Tcode_Library" name="Run Transaction">
     <arg>
      /nex
     </arg>
     <doc>
      Runs a Sap transaction. An error is given when an unknown transaction is specified.
     </doc>
     <status endtime="20240502 20:20:37.979" starttime="20240502 20:20:37.751" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      5
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240502 20:20:42.980">
      Slept 5 seconds
     </msg>
     <status endtime="20240502 20:20:42.980" starttime="20240502 20:20:37.979" status="PASS"/>
    </kw>
    <kw library="SAP_Tcode_Library" name="Take Screenshot">
     <arg>
      logoutpage.jpg
     </arg>
     <doc>
      Takes a screenshot, only if 'screenshots on error' has been enabled,
either at import of with keyword `enable screenshots on error`.
     </doc>
     <msg html="true" level="INFO" timestamp="20240502 20:20:43.048">
      &lt;a href="pabot_results%5C11%5Clogoutpage.jpg"&gt;&lt;img src="pabot_results%5C11%5Clogoutpage.jpg" width="800px"&gt;&lt;/a&gt;
     </msg>
     <status endtime="20240502 20:20:43.048" starttime="20240502 20:20:42.980" status="PASS"/>
    </kw>
    <kw library="BuiltIn" name="Sleep">
     <arg>
      10
     </arg>
     <doc>
      Pauses the test executed for the given time.
     </doc>
     <msg level="INFO" timestamp="20240502 20:20:53.049">
      Slept 10 seconds
     </msg>
     <status endtime="20240502 20:20:53.049" starttime="20240502 20:20:43.048" status="PASS"/>
    </kw>
    <status endtime="20240502 20:20:53.049" starttime="20240502 20:20:37.751" status="PASS"/>
   </kw>
   <status endtime="20240502 20:20:53.049" starttime="20240502 20:20:01.779" status="PASS"/>
  </suite>
  <doc>
   Testing functionality through Robot Framework
  </doc>
  <meta name="environment">
   Dev
  </meta>
  <meta name="test_browser_name">
   chrome
  </meta>
  <meta name="test_browser_version">
   124.0.6367.118
  </meta>
  <meta name="test_driver_version">
   124.0.6367.91
  </meta>
  <meta name="test_environment">
   Dev
  </meta>
  <meta name="test_freeze_dependencies">
   astroid==3.1.0,attrs==23.2.0,beautifulsoup4==4.12.3,bs4==0.0.2,certifi==2024.2.2,cffi==1.16.0,chardet==5.2.0,charset-normalizer==3.3.2,click==8.1.7,colorama==0.4.6,cryptography==42.0.5,defusedxml==0.7.1,dill==0.3.8,docutils==0.20.1,exceptiongroup==1.2.0,gitdb==4.0.11,GitPython==3.1.42,h11==0.14.0,idna==3.6,isort==5.13.2,Jinja2==3.1.3,jira==3.6.0,jsonpath-ng==1.6.1,jsonschema==4.21.1,jsonschema-specifications==2023.12.1,lazy-object-proxy==1.10.0,lxml==5.1.0,markdown-it-py==3.0.0,MarkupSafe==2.1.5,mccabe==0.7.0,mdurl==0.1.2,natsort==8.4.0,oauthlib==3.2.2,outcome==1.3.0.post0,packaging==24.0,pathspec==0.11.2,pillow==10.2.0,pip==24.0,platformdirs==4.2.0,ply==3.11,pycparser==2.21,Pygments==2.17.2,pylint==3.1.0,PySocks==1.7.1,pywin32==306,PyYAML==6.0.1,referencing==0.33.0,requests==2.31.0,requests-oauthlib==1.4.0,requests-toolbelt==1.0.0,rich==13.7.1,rich-click==1.6.1,robotframework==6.0.2,robotframework-datadriver==1.9.0,robotframework-jsonlibrary==0.5,robotframework-pabot==2.16.0,robotframework-pythonlibcore==4.2.0,robotframework-requests==0.9.2,robotframework-sapguilibrary==1.1,robotframework-seleniumlibrary==5.1.3,robotframework-stacktrace==0.4.1,robotframework-tidy==4.5.0,rpds-py==0.18.0,selenium==4.9.1,setuptools==69.2.0,smmap==5.0.1,sniffio==1.3.1,sortedcontainers==2.4.0,soupsieve==2.5,tomli==2.0.1,tomlkit==0.12.4,trio==0.24.0,trio-websocket==0.11.1,typing_extensions==4.10.0,urllib3==2.2.1,wheel==0.43.0,wrapt==1.16.0,wsproto==1.2.0
  </meta>
  <status endtime="20240502 20:20:53.532" starttime="20240502 20:12:15.315" status="PASS"/>
 </suite>
 <statistics>
  <total>
   <stat fail="0" pass="30" skip="0">
    All Tests
   </stat>
  </total>
  <tag>
   <stat fail="0" pass="30" skip="0">
    Migration
   </stat>
  </tag>
  <suite>
   <stat fail="0" id="s1" name="Tests" pass="30" skip="0">
    Tests
   </stat>
   <stat fail="0" id="s1-s1" name="Test AL11" pass="1" skip="0">
    Tests.Test AL11
   </stat>
   <stat fail="0" id="s1-s2" name="Test Migration tcodes" pass="15" skip="0">
    Tests.Test Migration tcodes
   </stat>
   <stat fail="0" id="s1-s3" name="Test OAC0" pass="1" skip="0">
    Tests.Test OAC0
   </stat>
   <stat fail="0" id="s1-s4" name="Test SCOT" pass="1" skip="0">
    Tests.Test SCOT
   </stat>
   <stat fail="0" id="s1-s5" name="Test SHMM" pass="1" skip="0">
    Tests.Test SHMM
   </stat>
   <stat fail="0" id="s1-s6" name="Test SLDAPICUST" pass="1" skip="0">
    Tests.Test SLDAPICUST
   </stat>
   <stat fail="0" id="s1-s7" name="Test SM69" pass="1" skip="0">
    Tests.Test SM69
   </stat>
   <stat fail="0" id="s1-s8" name="Test SMLG" pass="1" skip="0">
    Tests.Test SMLG
   </stat>
   <stat fail="0" id="s1-s9" name="Test SMQR" pass="1" skip="0">
    Tests.Test SMQR
   </stat>
   <stat fail="0" id="s1-s10" name="Test SMQS" pass="1" skip="0">
    Tests.Test SMQS
   </stat>
   <stat fail="0" id="s1-s11" name="Test SPAD" pass="1" skip="0">
    Tests.Test SPAD
   </stat>
   <stat fail="0" id="s1-s12" name="Test STMS" pass="1" skip="0">
    Tests.Test STMS
   </stat>
   <stat fail="0" id="s1-s13" name="Test STRUST" pass="1" skip="0">
    Tests.Test STRUST
   </stat>
   <stat fail="0" id="s1-s14" name="Test Uconcockpit" pass="1" skip="0">
    Tests.Test Uconcockpit
   </stat>
   <stat fail="0" id="s1-s15" name="Test WE20" pass="1" skip="0">
    Tests.Test WE20
   </stat>
   <stat fail="0" id="s1-s16" name="Test WE21" pass="1" skip="0">
    Tests.Test WE21
   </stat>
  </suite>
 </statistics>
 <errors>
  <msg level="WARN" timestamp="20240502 20:12:47.124">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:12:46.268">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:12:47.519">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:12:47.786">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:12:48.036">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:12:48.392">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:12:51.172">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:12:52.703">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:12:54.229">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:12:55.836">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:12:57.598">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:12:59.106">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:13:00.107">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:13:02.529">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:13:04.281">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:13:06.244">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:13:07.584">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:13:08.975">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:13:10.294">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:13:11.923">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:13:14.343">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:13:18.440">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:13:19.140">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:13:20.423">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:13:21.664">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:13:25.739">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:13:30.250">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:13:34.308">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:13:38.790">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:13:43.010">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:13:47.644">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:13:51.718">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:13:56.281">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:14:00.369">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:14:17.538">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:14:18.285">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:14:22.535">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:14:25.358">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:14:27.624">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:14:29.915">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:14:32.771">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:14:35.054">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:14:36.365">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:14:37.797">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:14:39.199">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:14:40.619">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:14:42.123">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:14:43.427">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:14:43.442">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:14:45.019">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:14:46.321">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:14:46.349">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:14:47.711">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:14:48.997">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:14:49.034">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:14:50.408">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:14:51.667">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:14:51.677">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:14:53.002">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:14:54.590">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:15:11.530">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:15:42.782">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:15:44.468">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:15:45.481">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:15:46.803">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:15:47.811">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:15:50.398">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:15:51.403">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:15:52.412">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:15:53.782">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:15:54.792">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:15:57.154">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:15:58.158">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:15:59.718">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:16:00.721">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:16:02.011">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:16:03.510">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:16:04.518">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:16:05.792">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:16:07.284">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:16:08.294">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:16:09.652">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:16:11.119">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:16:12.136">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:16:13.476">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:16:15.024">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:16:16.051">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:16:17.383">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:16:18.901">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:13:15.402">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:13:17.166">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:13:18.786">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:13:20.126">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:13:21.462">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:13:22.741">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:13:24.019">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:13:29.329">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:13:56.921">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:13:58.578">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:14:00.338">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:14:01.367">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:14:17.499">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:14:45.034">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:14:46.785">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:14:47.687">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:14:49.002">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:14:54.321">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:15:42.180">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:15:52.421">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:15:57.669">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:16:25.639">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:16:26.640">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:16:41.176">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:16:52.885">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:16:53.971">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:16:55.787">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:16:57.270">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:16:58.590">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:16:59.937">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:17:01.248">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:17:02.561">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:17:07.852">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:17:09.824">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:17:10.832">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:17:11.685">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:17:17.996">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:17:35.864">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:17:36.875">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:17:37.603">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:17:38.900">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:17:39.165">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:17:39.424">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:17:39.687">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:17:42.562">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:17:44.338">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:17:46.051">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:17:47.700">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:17:49.841">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:17:55.435">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:17:46.025">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:17:47.829">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:17:49.555">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:17:49.590">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:17:51.160">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:17:52.500">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:17:52.527">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:17:53.891">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:17:55.193">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:17:55.216">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:17:56.586">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:17:57.886">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:17:57.916">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:17:59.264">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:18:04.511">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:18:23.216">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:18:24.227">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:18:26.409">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:19:15.043">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:19:19.550">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:19:23.767">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:19:29.127">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:19:19.263">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:19:20.983">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:19:22.074">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:19:26.431">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:19:29.766">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:19:32.050">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:19:34.318">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:19:37.210">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:19:39.464">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
  <msg level="WARN" timestamp="20240502 20:19:44.860">
   Taking screenshot failed: OSError: screen grab failed
Make sure tests are run with a physical or virtual display.
  </msg>
 </errors>
</robot>
